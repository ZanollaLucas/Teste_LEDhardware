
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001ca2c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003690  0801cbec  0801cbec  0002cbec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0802027c  0802027c  0003027c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08020294  08020294  00064a84  2**0
                  CONTENTS
  5 .ARM          00000008  08020294  08020294  00030294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802029c  0802029c  00064a84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802029c  0802029c  0003029c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  080202b4  080202b4  000302b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  080202bc  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a6e4  20000140  080203fc  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000a824  080203fc  0004a824  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00064a84  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00013ec0  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00000b34  90013ec0  90013ec0  00063ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000090  900149f4  900149f4  000649f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0004ad28  00000000  00000000  00064ab4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000a064b  00000000  00000000  000af7dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00013884  00000000  00000000  0014fe27  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002988  00000000  00000000  001636b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012b82e  00000000  00000000  00166038  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004558  00000000  00000000  00291868  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000271f6  00000000  00000000  00295dc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003819e  00000000  00000000  002bcfb6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  002f5154  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007da8  00000000  00000000  002f5228  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801cbd4 	.word	0x0801cbd4

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801cbd4 	.word	0x0801cbd4

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f003 fc33 	bl	8003e2c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f01b fad5 	bl	801bb74 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff81 	bl	80014d0 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	080202bc 	.word	0x080202bc
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000a824 	.word	0x2000a824

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bddf 	b.w	80011ac <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be4d 	b.w	800128c <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f002 bf81 	b.w	80034fc <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f002 bfb8 	b.w	8003570 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f01b fa1c 	bl	801ba84 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f01b f9db 	bl	801ba84 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f01b f9d3 	bl	801ba84 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f003 fae9 	bl	8003cc4 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2126      	movs	r1, #38	; 0x26
 800070a:	f01b f9e9 	bl	801bae0 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	0801cc70 	.word	0x0801cc70
 8000718:	0801cc83 	.word	0x0801cc83
 800071c:	0801ccad 	.word	0x0801ccad

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f003 fb07 	bl	8003d40 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f004 bb81 	b.w	8004e70 <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f004 bb65 	b.w	8004e70 <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f004 bb53 	b.w	8004e7a <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f004 fb33 	bl	8004e64 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd84 	bl	8001390 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa2d 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f004 f8b5 	bl	8004a42 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa20 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000a5b4 	.word	0x2000a5b4

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f009 fd84 	bl	800a3fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd44 	b.w	800138e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd5b 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd5b 	b.w	80013c4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd2d 	b.w	800136c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd33 	b.w	800137c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd57 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800091c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800091e:	4b09      	ldr	r3, [pc, #36]	; (8000944 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000920:	881b      	ldrh	r3, [r3, #0]
 8000922:	428b      	cmp	r3, r1
 8000924:	d803      	bhi.n	800092e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000926:	4b08      	ldr	r3, [pc, #32]	; (8000948 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000928:	881b      	ldrh	r3, [r3, #0]
 800092a:	4293      	cmp	r3, r2
 800092c:	d905      	bls.n	800093a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800092e:	4b07      	ldr	r3, [pc, #28]	; (800094c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000930:	4a07      	ldr	r2, [pc, #28]	; (8000950 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000932:	4808      	ldr	r0, [pc, #32]	; (8000954 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000934:	219e      	movs	r1, #158	; 0x9e
 8000936:	f01b f8d3 	bl	801bae0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800093a:	4b07      	ldr	r3, [pc, #28]	; (8000958 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800093c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800093e:	4b07      	ldr	r3, [pc, #28]	; (800095c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000940:	801a      	strh	r2, [r3, #0]
    }
 8000942:	bd08      	pop	{r3, pc}
 8000944:	2000a2ac 	.word	0x2000a2ac
 8000948:	2000a2ae 	.word	0x2000a2ae
 800094c:	0801cd14 	.word	0x0801cd14
 8000950:	0801cd77 	.word	0x0801cd77
 8000954:	0801cdba 	.word	0x0801cdba
 8000958:	2000a2b2 	.word	0x2000a2b2
 800095c:	2000a2b4 	.word	0x2000a2b4

08000960 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000960:	4b02      	ldr	r3, [pc, #8]	; (800096c <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000962:	2200      	movs	r2, #0
 8000964:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000966:	f008 bf23 	b.w	80097b0 <_ZN8touchgfx3HAL10beginFrameEv>
 800096a:	bf00      	nop
 800096c:	20000014 	.word	0x20000014

08000970 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000970:	b510      	push	{r4, lr}
 8000972:	4604      	mov	r4, r0
    HAL::endFrame();
 8000974:	f008 ff28 	bl	80097c8 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000978:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 800097c:	b113      	cbz	r3, 8000984 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800097e:	4b02      	ldr	r3, [pc, #8]	; (8000988 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000980:	2201      	movs	r2, #1
 8000982:	701a      	strb	r2, [r3, #0]
    }
}
 8000984:	bd10      	pop	{r4, pc}
 8000986:	bf00      	nop
 8000988:	20000014 	.word	0x20000014

0800098c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800098c:	f008 bed4 	b.w	8009738 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000990 <_ZN11TouchGFXHALD0Ev>:
 8000990:	b510      	push	{r4, lr}
 8000992:	217c      	movs	r1, #124	; 0x7c
 8000994:	4604      	mov	r4, r0
 8000996:	f01b f875 	bl	801ba84 <_ZdlPvj>
 800099a:	4620      	mov	r0, r4
 800099c:	bd10      	pop	{r4, pc}

0800099e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800099e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009a2:	b11b      	cbz	r3, 80009ac <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009a4:	6840      	ldr	r0, [r0, #4]
 80009a6:	6803      	ldr	r3, [r0, #0]
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	4718      	bx	r3
    }
 80009ac:	4618      	mov	r0, r3
 80009ae:	4770      	bx	lr

080009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009b0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009b2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009b6:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80009ba:	4b0c      	ldr	r3, [pc, #48]	; (80009ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 80009bc:	428c      	cmp	r4, r1
 80009be:	781a      	ldrb	r2, [r3, #0]
 80009c0:	d009      	beq.n	80009d6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009c2:	b93a      	cbnz	r2, 80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c4:	4a0a      	ldr	r2, [pc, #40]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009c6:	490b      	ldr	r1, [pc, #44]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ca:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009cc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ce:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009d0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009d2:	701a      	strb	r2, [r3, #0]
    }
 80009d4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009d6:	2a00      	cmp	r2, #0
 80009d8:	d0fc      	beq.n	80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009da:	4a05      	ldr	r2, [pc, #20]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009dc:	4905      	ldr	r1, [pc, #20]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009de:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009e0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009e2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009e6:	2200      	movs	r2, #0
 80009e8:	e7f3      	b.n	80009d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009ea:	bf00      	nop
 80009ec:	2000a2b0 	.word	0x2000a2b0
 80009f0:	2000a2ac 	.word	0x2000a2ac
 80009f4:	2000a2ae 	.word	0x2000a2ae

080009f8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009f8:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009fa:	4c0c      	ldr	r4, [pc, #48]	; (8000a2c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009fc:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009fe:	b931      	cbnz	r1, 8000a0e <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 8000a00:	4b0b      	ldr	r3, [pc, #44]	; (8000a30 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a02:	4a0c      	ldr	r2, [pc, #48]	; (8000a34 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a04:	480c      	ldr	r0, [pc, #48]	; (8000a38 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a06:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8000a0a:	f01b f869 	bl	801bae0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a0e:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a12:	3a00      	subs	r2, #0
 8000a14:	4909      	ldr	r1, [pc, #36]	; (8000a3c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000a16:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a18:	bf18      	it	ne
 8000a1a:	2201      	movne	r2, #1
 8000a1c:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000a1e:	3b00      	subs	r3, #0
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8000a22:	bf18      	it	ne
 8000a24:	2301      	movne	r3, #1
 8000a26:	7013      	strb	r3, [r2, #0]
}
 8000a28:	bd10      	pop	{r4, pc}
 8000a2a:	bf00      	nop
 8000a2c:	20000174 	.word	0x20000174
 8000a30:	0801cdff 	.word	0x0801cdff
 8000a34:	0801ce37 	.word	0x0801ce37
 8000a38:	0801cdba 	.word	0x0801cdba
 8000a3c:	2000a2b6 	.word	0x2000a2b6
 8000a40:	2000a2b7 	.word	0x2000a2b7

08000a44 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a44:	2801      	cmp	r0, #1
    {
 8000a46:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a48:	d80a      	bhi.n	8000a60 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a4a:	784b      	ldrb	r3, [r1, #1]
 8000a4c:	9300      	str	r3, [sp, #0]
 8000a4e:	780b      	ldrb	r3, [r1, #0]
 8000a50:	4808      	ldr	r0, [pc, #32]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a52:	2215      	movs	r2, #21
 8000a54:	2100      	movs	r1, #0
 8000a56:	f003 fff4 	bl	8004a42 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a5a:	b003      	add	sp, #12
 8000a5c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a60:	9101      	str	r1, [sp, #4]
 8000a62:	5c0b      	ldrb	r3, [r1, r0]
 8000a64:	9300      	str	r3, [sp, #0]
 8000a66:	2239      	movs	r2, #57	; 0x39
 8000a68:	4603      	mov	r3, r0
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a6e:	f003 fff9 	bl	8004a64 <HAL_DSI_LongWrite>
    }
 8000a72:	e7f2      	b.n	8000a5a <DSI_IO_WriteCmd+0x16>
 8000a74:	2000a5b4 	.word	0x2000a5b4

08000a78 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a78:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a7a:	4a0b      	ldr	r2, [pc, #44]	; (8000aa8 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a7c:	4c0b      	ldr	r4, [pc, #44]	; (8000aac <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a7e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a80:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a82:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a84:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a86:	9201      	str	r2, [sp, #4]
 8000a88:	2244      	movs	r2, #68	; 0x44
 8000a8a:	9200      	str	r2, [sp, #0]
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	2239      	movs	r2, #57	; 0x39
 8000a90:	4620      	mov	r0, r4
 8000a92:	f003 ffe7 	bl	8004a64 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a96:	2100      	movs	r1, #0
 8000a98:	9100      	str	r1, [sp, #0]
 8000a9a:	2335      	movs	r3, #53	; 0x35
 8000a9c:	462a      	mov	r2, r5
 8000a9e:	4620      	mov	r0, r4
 8000aa0:	f003 ffcf 	bl	8004a42 <HAL_DSI_ShortWrite>
    }
 8000aa4:	b003      	add	sp, #12
 8000aa6:	bd30      	pop	{r4, r5, pc}
 8000aa8:	2000018c 	.word	0x2000018c
 8000aac:	2000a5b4 	.word	0x2000a5b4

08000ab0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000ab0:	b507      	push	{r0, r1, r2, lr}
 8000ab2:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000ab4:	f7ff ffe0 	bl	8000a78 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ab8:	9801      	ldr	r0, [sp, #4]
}
 8000aba:	b003      	add	sp, #12
 8000abc:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ac0:	f000 bc64 	b.w	800138c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000ac4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000ac4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000ac6:	4b07      	ldr	r3, [pc, #28]	; (8000ae4 <LCD_SetUpdateRegion+0x20>)
 8000ac8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000acc:	232a      	movs	r3, #42	; 0x2a
 8000ace:	9001      	str	r0, [sp, #4]
 8000ad0:	9300      	str	r3, [sp, #0]
 8000ad2:	2239      	movs	r2, #57	; 0x39
 8000ad4:	2304      	movs	r3, #4
 8000ad6:	2100      	movs	r1, #0
 8000ad8:	4803      	ldr	r0, [pc, #12]	; (8000ae8 <LCD_SetUpdateRegion+0x24>)
 8000ada:	f003 ffc3 	bl	8004a64 <HAL_DSI_LongWrite>
    }
 8000ade:	b003      	add	sp, #12
 8000ae0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ae4:	20000004 	.word	0x20000004
 8000ae8:	2000a5b4 	.word	0x2000a5b4

08000aec <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000aec:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000aee:	4d15      	ldr	r5, [pc, #84]	; (8000b44 <HAL_DSI_TearingEffectCallback+0x58>)
 8000af0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000af2:	2000      	movs	r0, #0
 8000af4:	f7ff fe2e 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000af8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000afa:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000afe:	3301      	adds	r3, #1
 8000b00:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b04:	f000 f8fe 	bl	8000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b08:	4b0f      	ldr	r3, [pc, #60]	; (8000b48 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b0a:	6828      	ldr	r0, [r5, #0]
 8000b0c:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b0e:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b10:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b14:	b123      	cbz	r3, 8000b20 <HAL_DSI_TearingEffectCallback+0x34>
 8000b16:	4d0d      	ldr	r5, [pc, #52]	; (8000b4c <HAL_DSI_TearingEffectCallback+0x60>)
 8000b18:	782b      	ldrb	r3, [r5, #0]
 8000b1a:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b1e:	b123      	cbz	r3, 8000b2a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b24:	2000      	movs	r0, #0
 8000b26:	f7ff be31 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b2a:	f009 fc67 	bl	800a3fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b2e:	4b08      	ldr	r3, [pc, #32]	; (8000b50 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b30:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b32:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b34:	f7ff ffc6 	bl	8000ac4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b38:	4620      	mov	r0, r4
 8000b3a:	f003 ff72 	bl	8004a22 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b3e:	2301      	movs	r3, #1
 8000b40:	702b      	strb	r3, [r5, #0]
    }
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	2000a2b8 	.word	0x2000a2b8
 8000b48:	20000014 	.word	0x20000014
 8000b4c:	2000018e 	.word	0x2000018e
 8000b50:	20000178 	.word	0x20000178

08000b54 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b54:	4b30      	ldr	r3, [pc, #192]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b56:	4a31      	ldr	r2, [pc, #196]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4605      	mov	r5, r0
        updateRegion++;
 8000b5c:	6818      	ldr	r0, [r3, #0]
 8000b5e:	4c30      	ldr	r4, [pc, #192]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b60:	3001      	adds	r0, #1
 8000b62:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b64:	4b2f      	ldr	r3, [pc, #188]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b66:	2803      	cmp	r0, #3
 8000b68:	681e      	ldr	r6, [r3, #0]
 8000b6a:	dc2a      	bgt.n	8000bc2 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b6c:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b70:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b74:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b78:	f021 0108 	bic.w	r1, r1, #8
 8000b7c:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b80:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b82:	bf0c      	ite	eq
 8000b84:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b86:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b88:	3302      	adds	r3, #2
 8000b8a:	4927      	ldr	r1, [pc, #156]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b8c:	041b      	lsls	r3, r3, #16
 8000b8e:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b92:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b94:	4b25      	ldr	r3, [pc, #148]	; (8000c2c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b96:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b98:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b9c:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b9e:	4b24      	ldr	r3, [pc, #144]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000ba0:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000ba2:	2301      	movs	r3, #1
 8000ba4:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000ba6:	f7ff ff8d 	bl	8000ac4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000baa:	4a1d      	ldr	r2, [pc, #116]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000bac:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000bb0:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000bb4:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bb6:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000bbe:	f003 bf30 	b.w	8004a22 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bc6:	491b      	ldr	r1, [pc, #108]	; (8000c34 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc8:	f023 0308 	bic.w	r3, r3, #8
 8000bcc:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd0:	4b15      	ldr	r3, [pc, #84]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bd2:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd4:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bd6:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bda:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bdc:	4916      	ldr	r1, [pc, #88]	; (8000c38 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bde:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000be0:	4913      	ldr	r1, [pc, #76]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000be4:	2201      	movs	r2, #1
 8000be6:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000be8:	2000      	movs	r0, #0
 8000bea:	f7ff ff6b 	bl	8000ac4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bee:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bf2:	f043 0308 	orr.w	r3, r3, #8
 8000bf6:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	f7ff fdc6 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c00:	4b0e      	ldr	r3, [pc, #56]	; (8000c3c <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000c02:	2200      	movs	r2, #0
 8000c04:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c06:	4b0e      	ldr	r3, [pc, #56]	; (8000c40 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c08:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c0a:	b120      	cbz	r0, 8000c16 <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000c0c:	6803      	ldr	r3, [r0, #0]
    }
 8000c0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c12:	6a1b      	ldr	r3, [r3, #32]
 8000c14:	4718      	bx	r3
 8000c16:	bd70      	pop	{r4, r5, r6, pc}
 8000c18:	20000178 	.word	0x20000178
 8000c1c:	40016884 	.word	0x40016884
 8000c20:	40016c00 	.word	0x40016c00
 8000c24:	20000174 	.word	0x20000174
 8000c28:	40016800 	.word	0x40016800
 8000c2c:	00ca01e3 	.word	0x00ca01e3
 8000c30:	06800193 	.word	0x06800193
 8000c34:	00ca01e2 	.word	0x00ca01e2
 8000c38:	00ca0003 	.word	0x00ca0003
 8000c3c:	2000018e 	.word	0x2000018e
 8000c40:	2000a2b8 	.word	0x2000a2b8

08000c44 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c44:	b508      	push	{r3, lr}
 8000c46:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <IdleTaskHook+0x14>)
 8000c48:	4601      	mov	r1, r0
 8000c4a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c4c:	b101      	cbz	r1, 8000c50 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c4e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c50:	f009 fbee 	bl	800a430 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c54:	2001      	movs	r0, #1
 8000c56:	bd08      	pop	{r3, pc}
 8000c58:	2000a2b8 	.word	0x2000a2b8

08000c5c <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c5c:	4b05      	ldr	r3, [pc, #20]	; (8000c74 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c5e:	4806      	ldr	r0, [pc, #24]	; (8000c78 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	4a05      	ldr	r2, [pc, #20]	; (8000c7c <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c68:	601a      	str	r2, [r3, #0]
 8000c6a:	4b05      	ldr	r3, [pc, #20]	; (8000c80 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c6c:	6003      	str	r3, [r0, #0]
        init();
 8000c6e:	f7ff bd01 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c72:	bf00      	nop
 8000c74:	20000180 	.word	0x20000180
 8000c78:	2000017c 	.word	0x2000017c
 8000c7c:	0801cc34 	.word	0x0801cc34
 8000c80:	0801cc5c 	.word	0x0801cc5c

08000c84 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c84:	2101      	movs	r1, #1
{
 8000c86:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c88:	2200      	movs	r2, #0
 8000c8a:	4608      	mov	r0, r1
 8000c8c:	f006 f961 	bl	8006f52 <osSemaphoreNew>
 8000c90:	4b0a      	ldr	r3, [pc, #40]	; (8000cbc <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c92:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c94:	b928      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c96:	4b0a      	ldr	r3, [pc, #40]	; (8000cc0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c98:	4a0a      	ldr	r2, [pc, #40]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9a:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c9c:	480a      	ldr	r0, [pc, #40]	; (8000cc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c9e:	f01a ff1f 	bl	801bae0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	2104      	movs	r1, #4
 8000ca6:	2001      	movs	r0, #1
 8000ca8:	f006 f9f2 	bl	8007090 <osMessageQueueNew>
 8000cac:	4b07      	ldr	r3, [pc, #28]	; (8000ccc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000cae:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cb0:	b918      	cbnz	r0, 8000cba <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000cb2:	4b07      	ldr	r3, [pc, #28]	; (8000cd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000cb4:	4a03      	ldr	r2, [pc, #12]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cb6:	212d      	movs	r1, #45	; 0x2d
 8000cb8:	e7f0      	b.n	8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000cba:	bd08      	pop	{r3, pc}
 8000cbc:	20000194 	.word	0x20000194
 8000cc0:	0801cf58 	.word	0x0801cf58
 8000cc4:	0801cfa1 	.word	0x0801cfa1
 8000cc8:	0801cfd0 	.word	0x0801cfd0
 8000ccc:	20000190 	.word	0x20000190
 8000cd0:	0801d01f 	.word	0x0801d01f

08000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cd4:	4b02      	ldr	r3, [pc, #8]	; (8000ce0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cd6:	f04f 31ff 	mov.w	r1, #4294967295
 8000cda:	6818      	ldr	r0, [r3, #0]
 8000cdc:	f006 b984 	b.w	8006fe8 <osSemaphoreAcquire>
 8000ce0:	20000194 	.word	0x20000194

08000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ce4:	4b01      	ldr	r3, [pc, #4]	; (8000cec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000ce6:	6818      	ldr	r0, [r3, #0]
 8000ce8:	f006 b9aa 	b.w	8007040 <osSemaphoreRelease>
 8000cec:	20000194 	.word	0x20000194

08000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cf0:	4b02      	ldr	r3, [pc, #8]	; (8000cfc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	6818      	ldr	r0, [r3, #0]
 8000cf6:	f006 b977 	b.w	8006fe8 <osSemaphoreAcquire>
 8000cfa:	bf00      	nop
 8000cfc:	20000194 	.word	0x20000194

08000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d00:	f7ff bff0 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d04:	4803      	ldr	r0, [pc, #12]	; (8000d14 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d06:	4904      	ldr	r1, [pc, #16]	; (8000d18 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d08:	6800      	ldr	r0, [r0, #0]
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	461a      	mov	r2, r3
 8000d0e:	f006 b9fb 	b.w	8007108 <osMessageQueuePut>
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190
 8000d18:	20000018 	.word	0x20000018

08000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d1c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d1e:	4c08      	ldr	r4, [pc, #32]	; (8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d20:	2300      	movs	r3, #0
 8000d22:	461a      	mov	r2, r3
 8000d24:	a901      	add	r1, sp, #4
 8000d26:	6820      	ldr	r0, [r4, #0]
 8000d28:	f006 fa1e 	bl	8007168 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d2c:	6820      	ldr	r0, [r4, #0]
 8000d2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d32:	2200      	movs	r2, #0
 8000d34:	a901      	add	r1, sp, #4
 8000d36:	f006 fa17 	bl	8007168 <osMessageQueueGet>
}
 8000d3a:	b002      	add	sp, #8
 8000d3c:	bd10      	pop	{r4, pc}
 8000d3e:	bf00      	nop
 8000d40:	20000190 	.word	0x20000190

08000d44 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d44:	6803      	ldr	r3, [r0, #0]
 8000d46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d48:	4718      	bx	r3

08000d4a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d4a:	2001      	movs	r0, #1
 8000d4c:	4770      	bx	lr

08000d4e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d4e:	6803      	ldr	r3, [r0, #0]
 8000d50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d52:	4718      	bx	r3

08000d54 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000d54:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d56:	2300      	movs	r3, #0
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000d5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d5e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d62:	631a      	str	r2, [r3, #48]	; 0x30
 8000d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d66:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d6a:	9201      	str	r2, [sp, #4]
 8000d6c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d6e:	691a      	ldr	r2, [r3, #16]
 8000d70:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d74:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d76:	691a      	ldr	r2, [r3, #16]
 8000d78:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d7c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d7e:	4b05      	ldr	r3, [pc, #20]	; (8000d94 <_ZN8STM32DMA10initializeEv+0x40>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	; (8000d98 <_ZN8STM32DMA10initializeEv+0x44>)
 8000d82:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d84:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <_ZN8STM32DMA10initializeEv+0x48>)
 8000d86:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d8a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d8c:	b002      	add	sp, #8
 8000d8e:	4770      	bx	lr
 8000d90:	40023800 	.word	0x40023800
 8000d94:	2000a67c 	.word	0x2000a67c
 8000d98:	08000da9 	.word	0x08000da9
 8000d9c:	e000e100 	.word	0xe000e100

08000da0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000da0:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000da4:	4770      	bx	lr
	...

08000da8 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000da8:	4b02      	ldr	r3, [pc, #8]	; (8000db4 <DMA2D_XferCpltCallback+0xc>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000dae:	6803      	ldr	r3, [r0, #0]
 8000db0:	695b      	ldr	r3, [r3, #20]
 8000db2:	4718      	bx	r3
 8000db4:	2000a2b8 	.word	0x2000a2b8

08000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000db8:	b508      	push	{r3, lr}
 8000dba:	280b      	cmp	r0, #11
 8000dbc:	d80b      	bhi.n	8000dd6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000dbe:	e8df f000 	tbb	[pc, r0]
 8000dc2:	0612      	.short	0x0612
 8000dc4:	0a0a0a10 	.word	0x0a0a0a10
 8000dc8:	0808080a 	.word	0x0808080a
 8000dcc:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dce:	2001      	movs	r0, #1
}
 8000dd0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000dd2:	2005      	movs	r0, #5
        break;
 8000dd4:	e7fc      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dd6:	4b05      	ldr	r3, [pc, #20]	; (8000dec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dd8:	4a05      	ldr	r2, [pc, #20]	; (8000df0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dda:	4806      	ldr	r0, [pc, #24]	; (8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000ddc:	2167      	movs	r1, #103	; 0x67
 8000dde:	f01a fe7f 	bl	801bae0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000de2:	2000      	movs	r0, #0
 8000de4:	e7f4      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000de6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000de8:	e7f2      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dea:	bf00      	nop
 8000dec:	0801d061 	.word	0x0801d061
 8000df0:	0801d07c 	.word	0x0801d07c
 8000df4:	0801d0c6 	.word	0x0801d0c6

08000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000df8:	b508      	push	{r3, lr}
 8000dfa:	280a      	cmp	r0, #10
 8000dfc:	d809      	bhi.n	8000e12 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dfe:	e8df f000 	tbb	[pc, r0]
 8000e02:	0610      	.short	0x0610
 8000e04:	0808080e 	.word	0x0808080e
 8000e08:	06060608 	.word	0x06060608
 8000e0c:	06          	.byte	0x06
 8000e0d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e0e:	2001      	movs	r0, #1
}
 8000e10:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000e12:	4b05      	ldr	r3, [pc, #20]	; (8000e28 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000e14:	4a05      	ldr	r2, [pc, #20]	; (8000e2c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000e16:	4806      	ldr	r0, [pc, #24]	; (8000e30 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000e18:	2188      	movs	r1, #136	; 0x88
 8000e1a:	f01a fe61 	bl	801bae0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e1e:	2000      	movs	r0, #0
 8000e20:	e7f6      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000e22:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e24:	e7f4      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e26:	bf00      	nop
 8000e28:	0801d061 	.word	0x0801d061
 8000e2c:	0801d113 	.word	0x0801d113
 8000e30:	0801d0c6 	.word	0x0801d0c6

08000e34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e38:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e3c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e3e:	4640      	mov	r0, r8
 8000e40:	f7ff ffba 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e44:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e46:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e48:	4638      	mov	r0, r7
 8000e4a:	f7ff ffb5 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e4e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e50:	4638      	mov	r0, r7
 8000e52:	f7ff ffd1 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e56:	8aa1      	ldrh	r1, [r4, #20]
 8000e58:	8b62      	ldrh	r2, [r4, #26]
 8000e5a:	4b4b      	ldr	r3, [pc, #300]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000e5c:	1a52      	subs	r2, r2, r1
 8000e5e:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e60:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e62:	8b22      	ldrh	r2, [r4, #24]
 8000e64:	1a52      	subs	r2, r2, r1
 8000e66:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e68:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e6a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e6c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e70:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e72:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e74:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e76:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e78:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e7a:	f8d4 c000 	ldr.w	ip, [r4]
 8000e7e:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e82:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e86:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e8a:	469e      	mov	lr, r3
 8000e8c:	d030      	beq.n	8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000e8e:	d814      	bhi.n	8000eba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000e90:	f1bc 0f20 	cmp.w	ip, #32
 8000e94:	ea45 0002 	orr.w	r0, r5, r2
 8000e98:	d068      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000e9a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e9e:	d065      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ea0:	f1bc 0f04 	cmp.w	ip, #4
 8000ea4:	d020      	beq.n	8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea6:	4b38      	ldr	r3, [pc, #224]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ea8:	432a      	orrs	r2, r5
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eae:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb0:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eb2:	d148      	bne.n	8000f46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000eb4:	f240 2201 	movw	r2, #513	; 0x201
 8000eb8:	e014      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000eba:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000ebe:	d007      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000ec0:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000ec4:	d1ef      	bne.n	8000ea6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eca:	f042 0209 	orr.w	r2, r2, #9
 8000ece:	e003      	b.n	8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ed4:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000eda:	68e2      	ldr	r2, [r4, #12]
 8000edc:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ede:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ee0:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee2:	4a2a      	ldr	r2, [pc, #168]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee4:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ee6:	e04c      	b.n	8000f82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee8:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eec:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	e7f6      	b.n	8000ede <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ef0:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef2:	432a      	orrs	r2, r5
 8000ef4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ef8:	1d04      	adds	r4, r0, #4
 8000efa:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000efc:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000efe:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f00:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f02:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f04:	b142      	cbz	r2, 8000f18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000f06:	2a01      	cmp	r2, #1
 8000f08:	d01f      	beq.n	8000f4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000f0a:	4b21      	ldr	r3, [pc, #132]	; (8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000f0c:	4a21      	ldr	r2, [pc, #132]	; (8000f94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000f0e:	4822      	ldr	r0, [pc, #136]	; (8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000f10:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000f14:	f01a fde4 	bl	801bae0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f18:	8842      	ldrh	r2, [r0, #2]
 8000f1a:	69d9      	ldr	r1, [r3, #28]
 8000f1c:	1e50      	subs	r0, r2, #1
 8000f1e:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f22:	f022 0210 	bic.w	r2, r2, #16
 8000f26:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f2a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f2c:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f2e:	4b16      	ldr	r3, [pc, #88]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000f30:	69da      	ldr	r2, [r3, #28]
 8000f32:	f042 0220 	orr.w	r2, r2, #32
 8000f36:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f38:	69da      	ldr	r2, [r3, #28]
 8000f3a:	0692      	lsls	r2, r2, #26
 8000f3c:	d4fc      	bmi.n	8000f38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f3e:	2210      	movs	r2, #16
 8000f40:	609a      	str	r2, [r3, #8]
            if(blend)
 8000f42:	2c00      	cmp	r4, #0
 8000f44:	d1cd      	bne.n	8000ee2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f46:	4a15      	ldr	r2, [pc, #84]	; (8000f9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f48:	e7cc      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f4a:	8842      	ldrh	r2, [r0, #2]
 8000f4c:	69d9      	ldr	r1, [r3, #28]
 8000f4e:	1e50      	subs	r0, r2, #1
 8000f50:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f54:	f022 0210 	bic.w	r2, r2, #16
 8000f58:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f5c:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f60:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f64:	bf18      	it	ne
 8000f66:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f68:	61da      	str	r2, [r3, #28]
                break;
 8000f6a:	e7e0      	b.n	8000f2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6c:	4b07      	ldr	r3, [pc, #28]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f6e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f72:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f7a:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f7e:	f8ce 3000 	str.w	r3, [lr]
}
 8000f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f86:	bf00      	nop
 8000f88:	4002b000 	.word	0x4002b000
 8000f8c:	00020201 	.word	0x00020201
 8000f90:	0801d15e 	.word	0x0801d15e
 8000f94:	0801d178 	.word	0x0801d178
 8000f98:	0801d0c6 	.word	0x0801d0c6
 8000f9c:	00010201 	.word	0x00010201

08000fa0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000fa0:	b538      	push	{r3, r4, r5, lr}
 8000fa2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fa4:	7f88      	ldrb	r0, [r1, #30]
 8000fa6:	f7ff ff27 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000faa:	8aa5      	ldrh	r5, [r4, #20]
 8000fac:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	4b16      	ldr	r3, [pc, #88]	; (8001008 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb0:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fb2:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb4:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000fb8:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fbc:	6921      	ldr	r1, [r4, #16]
 8000fbe:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fc2:	6825      	ldr	r5, [r4, #0]
 8000fc4:	2d08      	cmp	r5, #8
 8000fc6:	d10e      	bne.n	8000fe6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fca:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fcc:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fce:	7f20      	ldrb	r0, [r4, #28]
 8000fd0:	4a0e      	ldr	r2, [pc, #56]	; (800100c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000fd2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000fd6:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000fd8:	68e2      	ldr	r2, [r4, #12]
 8000fda:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fdc:	4a0c      	ldr	r2, [pc, #48]	; (8001010 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fde:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fe0:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000fe2:	601a      	str	r2, [r3, #0]
    }
}
 8000fe4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fe8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000fea:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000fec:	68e1      	ldr	r1, [r4, #12]
 8000fee:	0a0a      	lsrs	r2, r1, #8
 8000ff0:	0948      	lsrs	r0, r1, #5
 8000ff2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000ffa:	4302      	orrs	r2, r0
 8000ffc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001000:	430a      	orrs	r2, r1
 8001002:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001004:	4a03      	ldr	r2, [pc, #12]	; (8001014 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001006:	e7ec      	b.n	8000fe2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001008:	4002b000 	.word	0x4002b000
 800100c:	00010009 	.word	0x00010009
 8001010:	00020201 	.word	0x00020201
 8001014:	00030201 	.word	0x00030201

08001018 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001018:	4b05      	ldr	r3, [pc, #20]	; (8001030 <_ZN8STM32DMAD1Ev+0x18>)
 800101a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800101c:	4b05      	ldr	r3, [pc, #20]	; (8001034 <_ZN8STM32DMAD1Ev+0x1c>)
 800101e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001022:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001026:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800102a:	f3bf 8f6f 	isb	sy
}
 800102e:	4770      	bx	lr
 8001030:	0801d1c0 	.word	0x0801d1c0
 8001034:	e000e100 	.word	0xe000e100

08001038 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001038:	b510      	push	{r4, lr}
 800103a:	4604      	mov	r4, r0
}
 800103c:	f7ff ffec 	bl	8001018 <_ZN8STM32DMAD1Ev>
 8001040:	4620      	mov	r0, r4
 8001042:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001046:	f01a fd1d 	bl	801ba84 <_ZdlPvj>
 800104a:	4620      	mov	r0, r4
 800104c:	bd10      	pop	{r4, pc}
	...

08001050 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001050:	b570      	push	{r4, r5, r6, lr}
 8001052:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001054:	4625      	mov	r5, r4
 8001056:	4b0a      	ldr	r3, [pc, #40]	; (8001080 <_ZN8STM32DMAC1Ev+0x30>)
 8001058:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800105a:	2600      	movs	r6, #0
 800105c:	6060      	str	r0, [r4, #4]
 800105e:	7226      	strb	r6, [r4, #8]
 8001060:	7266      	strb	r6, [r4, #9]
 8001062:	f845 3b20 	str.w	r3, [r5], #32
 8001066:	2260      	movs	r2, #96	; 0x60
 8001068:	4629      	mov	r1, r5
 800106a:	f009 fb15 	bl	800a698 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800106e:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001072:	60ee      	str	r6, [r5, #12]
 8001074:	3520      	adds	r5, #32
 8001076:	42ab      	cmp	r3, r5
 8001078:	d1fb      	bne.n	8001072 <_ZN8STM32DMAC1Ev+0x22>
}
 800107a:	4620      	mov	r0, r4
 800107c:	bd70      	pop	{r4, r5, r6, pc}
 800107e:	bf00      	nop
 8001080:	0801d1c0 	.word	0x0801d1c0

08001084 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001084:	2001      	movs	r0, #1
 8001086:	4770      	bx	lr

08001088 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001088:	200c      	movs	r0, #12
 800108a:	4770      	bx	lr

0800108c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800108c:	230c      	movs	r3, #12
 800108e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001092:	3008      	adds	r0, #8
 8001094:	4770      	bx	lr

08001096 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001096:	230c      	movs	r3, #12
 8001098:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800109c:	3008      	adds	r0, #8
 800109e:	4770      	bx	lr

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010a4:	f44f 703c 	mov.w	r0, #752	; 0x2f0
 80010a8:	4770      	bx	lr

080010aa <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010aa:	f44f 733c 	mov.w	r3, #752	; 0x2f0
 80010ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b2:	3008      	adds	r0, #8
 80010b4:	4770      	bx	lr

080010b6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010b6:	f44f 733c 	mov.w	r3, #752	; 0x2f0
 80010ba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010be:	3008      	adds	r0, #8
 80010c0:	4770      	bx	lr

080010c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010c2:	2001      	movs	r0, #1
 80010c4:	4770      	bx	lr

080010c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c6:	2010      	movs	r0, #16
 80010c8:	4770      	bx	lr

080010ca <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ca:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010ce:	3008      	adds	r0, #8
 80010d0:	4770      	bx	lr

080010d2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010d6:	3008      	adds	r0, #8
 80010d8:	4770      	bx	lr

080010da <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010da:	4608      	mov	r0, r1
 80010dc:	f001 b87a 	b.w	80021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

080010e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010e0:	b510      	push	{r4, lr}
 80010e2:	4b03      	ldr	r3, [pc, #12]	; (80010f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010e4:	6003      	str	r3, [r0, #0]
 80010e6:	4604      	mov	r4, r0
 80010e8:	f008 f856 	bl	8009198 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010ec:	4620      	mov	r0, r4
 80010ee:	bd10      	pop	{r4, pc}
 80010f0:	0801d278 	.word	0x0801d278

080010f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010f4:	b510      	push	{r4, lr}
 80010f6:	4604      	mov	r4, r0
 80010f8:	f7ff fff2 	bl	80010e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010fc:	4620      	mov	r0, r4
 80010fe:	2114      	movs	r1, #20
 8001100:	f01a fcc0 	bl	801ba84 <_ZdlPvj>
 8001104:	4620      	mov	r0, r4
 8001106:	bd10      	pop	{r4, pc}

08001108 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001108:	b510      	push	{r4, lr}
 800110a:	4b03      	ldr	r3, [pc, #12]	; (8001118 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800110c:	6003      	str	r3, [r0, #0]
 800110e:	4604      	mov	r4, r0
 8001110:	f008 f842 	bl	8009198 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001114:	4620      	mov	r0, r4
 8001116:	bd10      	pop	{r4, pc}
 8001118:	0801d244 	.word	0x0801d244

0800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800111c:	b510      	push	{r4, lr}
 800111e:	4604      	mov	r4, r0
 8001120:	f7ff fff2 	bl	8001108 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001124:	4620      	mov	r0, r4
 8001126:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800112a:	f01a fcab 	bl	801ba84 <_ZdlPvj>
 800112e:	4620      	mov	r0, r4
 8001130:	bd10      	pop	{r4, pc}
	...

08001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001134:	b510      	push	{r4, lr}
 8001136:	4b03      	ldr	r3, [pc, #12]	; (8001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001138:	6003      	str	r3, [r0, #0]
 800113a:	4604      	mov	r4, r0
 800113c:	f008 f82c 	bl	8009198 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001140:	4620      	mov	r0, r4
 8001142:	bd10      	pop	{r4, pc}
 8001144:	0801d210 	.word	0x0801d210

08001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001148:	b510      	push	{r4, lr}
 800114a:	4604      	mov	r4, r0
 800114c:	f7ff fff2 	bl	8001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001150:	4620      	mov	r0, r4
 8001152:	2118      	movs	r1, #24
 8001154:	f01a fc96 	bl	801ba84 <_ZdlPvj>
 8001158:	4620      	mov	r0, r4
 800115a:	bd10      	pop	{r4, pc}

0800115c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800115c:	b510      	push	{r4, lr}
 800115e:	4b08      	ldr	r3, [pc, #32]	; (8001180 <_ZN12FrontendHeapD1Ev+0x24>)
 8001160:	6003      	str	r3, [r0, #0]
 8001162:	4604      	mov	r4, r0
 8001164:	f500 7049 	add.w	r0, r0, #804	; 0x324
 8001168:	f7ff ffba 	bl	80010e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800116c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001170:	f7ff ffca 	bl	8001108 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001174:	f104 0014 	add.w	r0, r4, #20
 8001178:	f7ff ffdc 	bl	8001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800117c:	4620      	mov	r0, r4
 800117e:	bd10      	pop	{r4, pc}
 8001180:	0801d2ac 	.word	0x0801d2ac

08001184 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001184:	b508      	push	{r3, lr}
 8001186:	4802      	ldr	r0, [pc, #8]	; (8001190 <__tcf_0+0xc>)
 8001188:	f7ff ffe8 	bl	800115c <_ZN12FrontendHeapD1Ev>
 800118c:	bd08      	pop	{r3, pc}
 800118e:	bf00      	nop
 8001190:	2000019c 	.word	0x2000019c

08001194 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001194:	b510      	push	{r4, lr}
 8001196:	4604      	mov	r4, r0
 8001198:	f7ff ffe0 	bl	800115c <_ZN12FrontendHeapD1Ev>
 800119c:	4620      	mov	r0, r4
 800119e:	f240 4194 	movw	r1, #1172	; 0x494
 80011a2:	f01a fc6f 	bl	801ba84 <_ZdlPvj>
 80011a6:	4620      	mov	r0, r4
 80011a8:	bd10      	pop	{r4, pc}
	...

080011ac <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011b0:	f000 ff52 	bl	8002058 <_ZN14BitmapDatabase11getInstanceEv>
 80011b4:	4605      	mov	r5, r0
 80011b6:	f000 ff53 	bl	8002060 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ba:	2400      	movs	r4, #0
 80011bc:	4601      	mov	r1, r0
 80011be:	4623      	mov	r3, r4
 80011c0:	4628      	mov	r0, r5
 80011c2:	4622      	mov	r2, r4
 80011c4:	9400      	str	r4, [sp, #0]
 80011c6:	f00e fbed 	bl	800f9a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011ca:	4b25      	ldr	r3, [pc, #148]	; (8001260 <touchgfx_init+0xb4>)
 80011cc:	4a25      	ldr	r2, [pc, #148]	; (8001264 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011ce:	4d26      	ldr	r5, [pc, #152]	; (8001268 <touchgfx_init+0xbc>)
 80011d0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011d2:	4620      	mov	r0, r4
 80011d4:	f001 fd3a 	bl	8002c4c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011d8:	4824      	ldr	r0, [pc, #144]	; (800126c <touchgfx_init+0xc0>)
 80011da:	f00e fb25 	bl	800f828 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011de:	782b      	ldrb	r3, [r5, #0]
 80011e0:	f3bf 8f5b 	dmb	ish
 80011e4:	07db      	lsls	r3, r3, #31
 80011e6:	d435      	bmi.n	8001254 <touchgfx_init+0xa8>
 80011e8:	4628      	mov	r0, r5
 80011ea:	f01a fc4d 	bl	801ba88 <__cxa_guard_acquire>
 80011ee:	b388      	cbz	r0, 8001254 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80011f0:	4c1f      	ldr	r4, [pc, #124]	; (8001270 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80011f2:	4b20      	ldr	r3, [pc, #128]	; (8001274 <touchgfx_init+0xc8>)
 80011f4:	6023      	str	r3, [r4, #0]
 80011f6:	f504 764f 	add.w	r6, r4, #828	; 0x33c
 80011fa:	f104 0014 	add.w	r0, r4, #20
 80011fe:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001202:	f504 7749 	add.w	r7, r4, #804	; 0x324
 8001206:	6060      	str	r0, [r4, #4]
 8001208:	f8c4 8008 	str.w	r8, [r4, #8]
 800120c:	60e7      	str	r7, [r4, #12]
 800120e:	6126      	str	r6, [r4, #16]
 8001210:	f007 ffc4 	bl	800919c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001214:	4b18      	ldr	r3, [pc, #96]	; (8001278 <touchgfx_init+0xcc>)
 8001216:	6163      	str	r3, [r4, #20]
 8001218:	4640      	mov	r0, r8
 800121a:	f007 ffbf 	bl	800919c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800121e:	4b17      	ldr	r3, [pc, #92]	; (800127c <touchgfx_init+0xd0>)
 8001220:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001222:	4638      	mov	r0, r7
 8001224:	f007 ffba 	bl	800919c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001228:	4b15      	ldr	r3, [pc, #84]	; (8001280 <touchgfx_init+0xd4>)
 800122a:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
 800122e:	f504 704e 	add.w	r0, r4, #824	; 0x338
 8001232:	f001 fd87 	bl	8002d44 <_ZN5ModelC1Ev>
 8001236:	4622      	mov	r2, r4
 8001238:	f504 714e 	add.w	r1, r4, #824	; 0x338
 800123c:	4630      	mov	r0, r6
 800123e:	f001 fd77 	bl	8002d30 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001242:	4630      	mov	r0, r6
 8001244:	f000 ffc6 	bl	80021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001248:	4628      	mov	r0, r5
 800124a:	f01a fc29 	bl	801baa0 <__cxa_guard_release>
 800124e:	480d      	ldr	r0, [pc, #52]	; (8001284 <touchgfx_init+0xd8>)
 8001250:	f01a fc64 	bl	801bb1c <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001254:	480c      	ldr	r0, [pc, #48]	; (8001288 <touchgfx_init+0xdc>)
}
 8001256:	b002      	add	sp, #8
 8001258:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800125c:	f7ff bb0c 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001260:	2000a314 	.word	0x2000a314
 8001264:	200012d0 	.word	0x200012d0
 8001268:	20000198 	.word	0x20000198
 800126c:	2000001c 	.word	0x2000001c
 8001270:	2000019c 	.word	0x2000019c
 8001274:	0801d2ac 	.word	0x0801d2ac
 8001278:	0801d210 	.word	0x0801d210
 800127c:	0801d244 	.word	0x0801d244
 8001280:	0801d278 	.word	0x0801d278
 8001284:	08001185 	.word	0x08001185
 8001288:	20001254 	.word	0x20001254

0800128c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800128c:	4801      	ldr	r0, [pc, #4]	; (8001294 <touchgfx_taskEntry+0x8>)
 800128e:	f7ff bb0d 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 8001292:	bf00      	nop
 8001294:	20001254 	.word	0x20001254

08001298 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001298:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800129a:	4e24      	ldr	r6, [pc, #144]	; (800132c <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 800129c:	4c24      	ldr	r4, [pc, #144]	; (8001330 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 800129e:	4d25      	ldr	r5, [pc, #148]	; (8001334 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012a0:	4b25      	ldr	r3, [pc, #148]	; (8001338 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012a2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012a4:	4630      	mov	r0, r6
 80012a6:	f7ff fed3 	bl	8001050 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012aa:	4628      	mov	r0, r5
 80012ac:	f011 fc4a 	bl	8012b44 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012b0:	4b22      	ldr	r3, [pc, #136]	; (800133c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012b2:	4823      	ldr	r0, [pc, #140]	; (8001340 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80012b4:	60dc      	str	r4, [r3, #12]
 80012b6:	2200      	movs	r2, #0
 80012b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012bc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012c0:	4920      	ldr	r1, [pc, #128]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0xac>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012c2:	851a      	strh	r2, [r3, #40]	; 0x28
 80012c4:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012c8:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012cc:	6759      	str	r1, [r3, #116]	; 0x74
 80012ce:	2101      	movs	r1, #1
 80012d0:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012d4:	491c      	ldr	r1, [pc, #112]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80012d6:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80012da:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012dc:	f44f 7150 	mov.w	r1, #832	; 0x340
 80012e0:	8001      	strh	r1, [r0, #0]
 80012e2:	481a      	ldr	r0, [pc, #104]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80012e4:	62da      	str	r2, [r3, #44]	; 0x2c
          lastRenderMethod(HARDWARE)
 80012e6:	e9c3 2204 	strd	r2, r2, [r3, #16]
              inProgress(false)
 80012ea:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012ee:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012f2:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80012f6:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012fa:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 80012fe:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
        : drag(), listener(0), dragThresholdValue(0)
 8001302:	861a      	strh	r2, [r3, #48]	; 0x30
 8001304:	661a      	str	r2, [r3, #96]	; 0x60
 8001306:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800130a:	671a      	str	r2, [r3, #112]	; 0x70
 800130c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001310:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001312:	480f      	ldr	r0, [pc, #60]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001314:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001318:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800131c:	8001      	strh	r1, [r0, #0]
 800131e:	480d      	ldr	r0, [pc, #52]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001320:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001322:	490d      	ldr	r1, [pc, #52]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001324:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001326:	4a0d      	ldr	r2, [pc, #52]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001328:	601a      	str	r2, [r3, #0]
}
 800132a:	bd70      	pop	{r4, r5, r6, pc}
 800132c:	20000634 	.word	0x20000634
 8001330:	20000630 	.word	0x20000630
 8001334:	200012d4 	.word	0x200012d4
 8001338:	0801cd04 	.word	0x0801cd04
 800133c:	20001254 	.word	0x20001254
 8001340:	2000a2ac 	.word	0x2000a2ac
 8001344:	01000001 	.word	0x01000001
 8001348:	2000a2b8 	.word	0x2000a2b8
 800134c:	2000a2b2 	.word	0x2000a2b2
 8001350:	2000a2ae 	.word	0x2000a2ae
 8001354:	2000a2b4 	.word	0x2000a2b4
 8001358:	2000a2b0 	.word	0x2000a2b0
 800135c:	0801ce90 	.word	0x0801ce90

08001360 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001360:	4801      	ldr	r0, [pc, #4]	; (8001368 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001362:	f7ff be59 	b.w	8001018 <_ZN8STM32DMAD1Ev>
 8001366:	bf00      	nop
 8001368:	20000634 	.word	0x20000634

0800136c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800136c:	4b02      	ldr	r3, [pc, #8]	; (8001378 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800136e:	2290      	movs	r2, #144	; 0x90
 8001370:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001374:	4770      	bx	lr
 8001376:	bf00      	nop
 8001378:	e000e100 	.word	0xe000e100

0800137c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800137c:	4b02      	ldr	r3, [pc, #8]	; (8001388 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800137e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001382:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001384:	4770      	bx	lr
 8001386:	bf00      	nop
 8001388:	e000e100 	.word	0xe000e100

0800138c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 800138c:	4770      	bx	lr

0800138e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 800138e:	4770      	bx	lr

08001390 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001390:	b538      	push	{r3, r4, r5, lr}
 8001392:	4604      	mov	r4, r0
    HAL::initialize();
 8001394:	f008 fa25 	bl	80097e2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 800139c:	f00b fb42 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 80013a0:	4601      	mov	r1, r0
 80013a2:	4620      	mov	r0, r4
 80013a4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013a6:	6823      	ldr	r3, [r4, #0]
 80013a8:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 80013ac:	2300      	movs	r3, #0
 80013ae:	461a      	mov	r2, r3
 80013b0:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013b4:	4620      	mov	r0, r4
 80013b6:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013b8:	2301      	movs	r3, #1
 80013ba:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013be:	bd38      	pop	{r3, r4, r5, pc}

080013c0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013c0:	f008 b9c0 	b.w	8009744 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013c4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013c4:	f008 bb1b 	b.w	80099fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013c8:	4b04      	ldr	r3, [pc, #16]	; (80013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013ca:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013d6:	f3bf 8f6f 	isb	sy
}
 80013da:	4770      	bx	lr
 80013dc:	e000e100 	.word	0xe000e100

080013e0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013e0:	4901      	ldr	r1, [pc, #4]	; (80013e8 <vApplicationIdleHook+0x8>)
 80013e2:	2000      	movs	r0, #0
 80013e4:	f007 ba00 	b.w	80087e8 <vTaskSetApplicationTaskTag>
 80013e8:	08000c45 	.word	0x08000c45

080013ec <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80013ec:	b580      	push	{r7, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {

	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)==1)
 80013ee:	4e0c      	ldr	r6, [pc, #48]	; (8001420 <StartDefaultTask+0x34>)
	  {
		  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_5);
 80013f0:	4f0c      	ldr	r7, [pc, #48]	; (8001424 <StartDefaultTask+0x38>)
		 // LEDs ^= LED_red;
		  var1++;
 80013f2:	4d0d      	ldr	r5, [pc, #52]	; (8001428 <StartDefaultTask+0x3c>)
	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)==1)
 80013f4:	2101      	movs	r1, #1
 80013f6:	4630      	mov	r0, r6
 80013f8:	f003 fd34 	bl	8004e64 <HAL_GPIO_ReadPin>
 80013fc:	2801      	cmp	r0, #1
 80013fe:	4604      	mov	r4, r0
 8001400:	d108      	bne.n	8001414 <StartDefaultTask+0x28>
		  HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_5);
 8001402:	2120      	movs	r1, #32
 8001404:	4638      	mov	r0, r7
 8001406:	f003 fd38 	bl	8004e7a <HAL_GPIO_TogglePin>
		  var1++;
 800140a:	682b      	ldr	r3, [r5, #0]
 800140c:	3301      	adds	r3, #1
 800140e:	602b      	str	r3, [r5, #0]
		  LED_TFT = 0x01;
 8001410:	4b06      	ldr	r3, [pc, #24]	; (800142c <StartDefaultTask+0x40>)
 8001412:	701c      	strb	r4, [r3, #0]
	  }
	  osDelay(300);
 8001414:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001418:	f005 fd8f 	bl	8006f3a <osDelay>
	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)==1)
 800141c:	e7ea      	b.n	80013f4 <StartDefaultTask+0x8>
 800141e:	bf00      	nop
 8001420:	40020000 	.word	0x40020000
 8001424:	40020c00 	.word	0x40020c00
 8001428:	20001350 	.word	0x20001350
 800142c:	2000134c 	.word	0x2000134c

08001430 <SystemClock_Config>:
{
 8001430:	b530      	push	{r4, r5, lr}
 8001432:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001434:	2210      	movs	r2, #16
 8001436:	2100      	movs	r1, #0
 8001438:	a809      	add	r0, sp, #36	; 0x24
 800143a:	f01a fbdd 	bl	801bbf8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800143e:	2214      	movs	r2, #20
 8001440:	2100      	movs	r1, #0
 8001442:	a802      	add	r0, sp, #8
 8001444:	f01a fbd8 	bl	801bbf8 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001448:	2400      	movs	r4, #0
 800144a:	4b1f      	ldr	r3, [pc, #124]	; (80014c8 <SystemClock_Config+0x98>)
 800144c:	9400      	str	r4, [sp, #0]
 800144e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001450:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001454:	641a      	str	r2, [r3, #64]	; 0x40
 8001456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001458:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800145c:	9300      	str	r3, [sp, #0]
 800145e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001460:	4b1a      	ldr	r3, [pc, #104]	; (80014cc <SystemClock_Config+0x9c>)
 8001462:	9401      	str	r4, [sp, #4]
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800146a:	601a      	str	r2, [r3, #0]
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001472:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001474:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001476:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001478:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800147c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001480:	2502      	movs	r5, #2
 8001482:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001486:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001488:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 800148c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001490:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001494:	2004      	movs	r0, #4
 8001496:	2306      	movs	r3, #6
 8001498:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149c:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800149e:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a0:	f005 f898 	bl	80065d4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a4:	f004 fae8 	bl	8005a78 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014aa:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014ae:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b4:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b8:	2105      	movs	r1, #5
 80014ba:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014bc:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c0:	f004 fe5c 	bl	800617c <HAL_RCC_ClockConfig>
}
 80014c4:	b015      	add	sp, #84	; 0x54
 80014c6:	bd30      	pop	{r4, r5, pc}
 80014c8:	40023800 	.word	0x40023800
 80014cc:	40007000 	.word	0x40007000

080014d0 <main>:
{
 80014d0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014d4:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 80014d6:	f002 fcb7 	bl	8003e48 <HAL_Init>
  SystemClock_Config();
 80014da:	f7ff ffa9 	bl	8001430 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014de:	2214      	movs	r2, #20
 80014e0:	2100      	movs	r1, #0
 80014e2:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e6:	f01a fb87 	bl	801bbf8 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ea:	4bc7      	ldr	r3, [pc, #796]	; (8001808 <main+0x338>)
 80014ec:	9403      	str	r4, [sp, #12]
 80014ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80014f0:	48c6      	ldr	r0, [pc, #792]	; (800180c <main+0x33c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f2:	f042 0210 	orr.w	r2, r2, #16
 80014f6:	631a      	str	r2, [r3, #48]	; 0x30
 80014f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fa:	f002 0210 	and.w	r2, r2, #16
 80014fe:	9203      	str	r2, [sp, #12]
 8001500:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001502:	9404      	str	r4, [sp, #16]
 8001504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001506:	f042 0202 	orr.w	r2, r2, #2
 800150a:	631a      	str	r2, [r3, #48]	; 0x30
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f002 0202 	and.w	r2, r2, #2
 8001512:	9204      	str	r2, [sp, #16]
 8001514:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001516:	9405      	str	r4, [sp, #20]
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800151e:	631a      	str	r2, [r3, #48]	; 0x30
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001526:	9205      	str	r2, [sp, #20]
 8001528:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152a:	9406      	str	r4, [sp, #24]
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f042 0208 	orr.w	r2, r2, #8
 8001532:	631a      	str	r2, [r3, #48]	; 0x30
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f002 0208 	and.w	r2, r2, #8
 800153a:	9206      	str	r2, [sp, #24]
 800153c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800153e:	9407      	str	r4, [sp, #28]
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001546:	631a      	str	r2, [r3, #48]	; 0x30
 8001548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800154e:	9207      	str	r2, [sp, #28]
 8001550:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001552:	9408      	str	r4, [sp, #32]
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f042 0220 	orr.w	r2, r2, #32
 800155a:	631a      	str	r2, [r3, #48]	; 0x30
 800155c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155e:	f002 0220 	and.w	r2, r2, #32
 8001562:	9208      	str	r2, [sp, #32]
 8001564:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001566:	9409      	str	r4, [sp, #36]	; 0x24
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800156e:	631a      	str	r2, [r3, #48]	; 0x30
 8001570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001572:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001576:	9209      	str	r2, [sp, #36]	; 0x24
 8001578:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800157a:	940a      	str	r4, [sp, #40]	; 0x28
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001582:	631a      	str	r2, [r3, #48]	; 0x30
 8001584:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001586:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800158a:	920a      	str	r2, [sp, #40]	; 0x28
 800158c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800158e:	940b      	str	r4, [sp, #44]	; 0x2c
 8001590:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001592:	f042 0204 	orr.w	r2, r2, #4
 8001596:	631a      	str	r2, [r3, #48]	; 0x30
 8001598:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159a:	f002 0204 	and.w	r2, r2, #4
 800159e:	920b      	str	r2, [sp, #44]	; 0x2c
 80015a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a2:	940c      	str	r4, [sp, #48]	; 0x30
 80015a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a6:	f042 0201 	orr.w	r2, r2, #1
 80015aa:	631a      	str	r2, [r3, #48]	; 0x30
 80015ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ae:	f002 0201 	and.w	r2, r2, #1
 80015b2:	920c      	str	r2, [sp, #48]	; 0x30
 80015b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015b6:	940d      	str	r4, [sp, #52]	; 0x34
 80015b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015be:	631a      	str	r2, [r3, #48]	; 0x30
 80015c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015c6:	4622      	mov	r2, r4
 80015c8:	2130      	movs	r1, #48	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015ca:	930d      	str	r3, [sp, #52]	; 0x34
 80015cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ce:	f003 fc4f 	bl	8004e70 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(Led_B_GPIO_Port, Led_B_Pin, GPIO_PIN_SET);
 80015d2:	488f      	ldr	r0, [pc, #572]	; (8001810 <main+0x340>)
 80015d4:	2201      	movs	r2, #1
 80015d6:	2108      	movs	r1, #8
 80015d8:	f003 fc4a 	bl	8004e70 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015dc:	488d      	ldr	r0, [pc, #564]	; (8001814 <main+0x344>)
 80015de:	4622      	mov	r2, r4
 80015e0:	2140      	movs	r1, #64	; 0x40
 80015e2:	f003 fc45 	bl	8004e70 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015e6:	4622      	mov	r2, r4
 80015e8:	488b      	ldr	r0, [pc, #556]	; (8001818 <main+0x348>)
 80015ea:	2180      	movs	r1, #128	; 0x80
 80015ec:	f003 fc40 	bl	8004e70 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	2701      	movs	r7, #1
 80015f2:	2320      	movs	r3, #32
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015f4:	4885      	ldr	r0, [pc, #532]	; (800180c <main+0x33c>)
 80015f6:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f8:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015fc:	2511      	movs	r5, #17
 80015fe:	f04f 0b08 	mov.w	fp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001602:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001606:	f003 faa5 	bl	8004b54 <HAL_GPIO_Init>
  HAL_GPIO_Init(Led_B_GPIO_Port, &GPIO_InitStruct);
 800160a:	4881      	ldr	r0, [pc, #516]	; (8001810 <main+0x340>)
 800160c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800160e:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
 8001612:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001616:	e9cd b52d 	strd	fp, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800161a:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(Led_B_GPIO_Port, &GPIO_InitStruct);
 800161e:	f003 fa99 	bl	8004b54 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001622:	487a      	ldr	r0, [pc, #488]	; (800180c <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001624:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001628:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800162a:	e9cd a72d 	strd	sl, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800162e:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001630:	f003 fa90 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001634:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001636:	4877      	ldr	r0, [pc, #476]	; (8001814 <main+0x344>)
 8001638:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800163a:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800163e:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001642:	f003 fa87 	bl	8004b54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001646:	4875      	ldr	r0, [pc, #468]	; (800181c <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001648:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800164a:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800164c:	2680      	movs	r6, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800164e:	e9cd 742d 	strd	r7, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001652:	f003 fa7f 	bl	8004b54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001656:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001658:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800165a:	486f      	ldr	r0, [pc, #444]	; (8001818 <main+0x348>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800165c:	9330      	str	r3, [sp, #192]	; 0xc0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800165e:	e9cd 652d 	strd	r6, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001662:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001664:	f003 fa76 	bl	8004b54 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001668:	486d      	ldr	r0, [pc, #436]	; (8001820 <main+0x350>)
  hdma2d.Instance = DMA2D;
 800166a:	4d6e      	ldr	r5, [pc, #440]	; (8001824 <main+0x354>)
  hcrc.Instance = CRC;
 800166c:	4b6e      	ldr	r3, [pc, #440]	; (8001828 <main+0x358>)
 800166e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001670:	f002 fc90 	bl	8003f94 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001674:	4b6d      	ldr	r3, [pc, #436]	; (800182c <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001676:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800167a:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800167e:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001680:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001684:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001688:	f002 fd98 	bl	80041bc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800168c:	4639      	mov	r1, r7
 800168e:	4628      	mov	r0, r5
 8001690:	f002 fe4c 	bl	800432c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001694:	4631      	mov	r1, r6
 8001696:	4622      	mov	r2, r4
 8001698:	485f      	ldr	r0, [pc, #380]	; (8001818 <main+0x348>)
 800169a:	f003 fbe9 	bl	8004e70 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800169e:	2014      	movs	r0, #20
 80016a0:	f002 fbfe 	bl	8003ea0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 80016a4:	4631      	mov	r1, r6
 80016a6:	463a      	mov	r2, r7
 80016a8:	485b      	ldr	r0, [pc, #364]	; (8001818 <main+0x348>)
 80016aa:	f003 fbe1 	bl	8004e70 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 80016ae:	200a      	movs	r0, #10
 80016b0:	f002 fbf6 	bl	8003ea0 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016b4:	2224      	movs	r2, #36	; 0x24
 80016b6:	4621      	mov	r1, r4
 80016b8:	a817      	add	r0, sp, #92	; 0x5c
 80016ba:	f01a fa9d 	bl	801bbf8 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016be:	2218      	movs	r2, #24
 80016c0:	4621      	mov	r1, r4
 80016c2:	a811      	add	r0, sp, #68	; 0x44
 80016c4:	f01a fa98 	bl	801bbf8 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016c8:	2234      	movs	r2, #52	; 0x34
 80016ca:	4621      	mov	r1, r4
 80016cc:	a82d      	add	r0, sp, #180	; 0xb4
 80016ce:	f01a fa93 	bl	801bbf8 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016d2:	222c      	movs	r2, #44	; 0x2c
 80016d4:	4621      	mov	r1, r4
 80016d6:	eb0d 0006 	add.w	r0, sp, r6
 80016da:	f01a fa8d 	bl	801bbf8 <memset>
  hdsi.Instance = DSI;
 80016de:	4e54      	ldr	r6, [pc, #336]	; (8001830 <main+0x360>)
 80016e0:	4b54      	ldr	r3, [pc, #336]	; (8001834 <main+0x364>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 80016e2:	9410      	str	r4, [sp, #64]	; 0x40
  hdsi.Init.TXEscapeCkdiv = 4;
 80016e4:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016e6:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016ea:	a90e      	add	r1, sp, #56	; 0x38
  PLLInit.PLLNDIV = 125;
 80016ec:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016ee:	4630      	mov	r0, r6
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016f0:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016f4:	e9c6 5702 	strd	r5, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016f8:	f002 fee0 	bl	80044bc <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016fc:	a917      	add	r1, sp, #92	; 0x5c
 80016fe:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001700:	e9cd 7417 	strd	r7, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001704:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8001708:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 800170c:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001710:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001712:	f003 f8fd 	bl	8004910 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001716:	221c      	movs	r2, #28
 8001718:	2321      	movs	r3, #33	; 0x21
 800171a:	e9cd 2311 	strd	r2, r3, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 800171e:	210f      	movs	r1, #15
 8001720:	2319      	movs	r3, #25
 8001722:	e9cd 1313 	strd	r1, r3, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001726:	4630      	mov	r0, r6
 8001728:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800172a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800172e:	f003 f8b2 	bl	8004896 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001732:	4629      	mov	r1, r5
 8001734:	4630      	mov	r0, r6
 8001736:	f003 f89d 	bl	8004874 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800173a:	f242 7110 	movw	r1, #10000	; 0x2710
 800173e:	4630      	mov	r0, r6
 8001740:	f003 f9f1 	bl	8004b26 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001744:	4621      	mov	r1, r4
 8001746:	4630      	mov	r0, r6
 8001748:	f002 fe55 	bl	80043f6 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800174c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001750:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001754:	e9cd 032d 	strd	r0, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001758:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800175c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001760:	e9cd 932f 	strd	r9, r3, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001764:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001768:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800176c:	f44f 4c80 	mov.w	ip, #16384	; 0x4000
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001770:	e9cd 2331 	strd	r2, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001774:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001778:	f44f 3e00 	mov.w	lr, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800177c:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001780:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001784:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001788:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800178c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001790:	a92d      	add	r1, sp, #180	; 0xb4
 8001792:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001794:	e9cd 2337 	strd	r2, r3, [sp, #220]	; 0xdc
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001798:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800179c:	f003 f836 	bl	800480c <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 80017a0:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017a2:	a920      	add	r1, sp, #128	; 0x80
 80017a4:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017a6:	e9cd 3a22 	strd	r3, sl, [sp, #136]	; 0x88
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 80017aa:	e9cd 4524 	strd	r4, r5, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80017ae:	e9cd 8426 	strd	r8, r4, [sp, #152]	; 0x98
  CmdCfg.ColorCoding = DSI_RGB565;
 80017b2:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80017b6:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80017ba:	972a      	str	r7, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017bc:	f002 ffb4 	bl	8004728 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80017c0:	4621      	mov	r1, r4
 80017c2:	4630      	mov	r0, r6
 80017c4:	f002 ff9f 	bl	8004706 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017c8:	481b      	ldr	r0, [pc, #108]	; (8001838 <main+0x368>)
 80017ca:	491c      	ldr	r1, [pc, #112]	; (800183c <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 80017cc:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017d0:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017d4:	2340      	movs	r3, #64	; 0x40
 80017d6:	2120      	movs	r1, #32
 80017d8:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017dc:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017e0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017e4:	e9c0 1406 	strd	r1, r4, [r0, #24]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017e8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017ec:	2107      	movs	r1, #7
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017ee:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80017f2:	e9cd 152e 	strd	r1, r5, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 80017f6:	2303      	movs	r3, #3
  SdramTiming.RowCycleDelay = 7;
 80017f8:	9130      	str	r1, [sp, #192]	; 0xc0
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017fa:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.RPDelay = 2;
 80017fc:	e9cd 3831 	strd	r3, r8, [sp, #196]	; 0xc4
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001800:	e9c0 4502 	strd	r4, r5, [r0, #8]
 8001804:	e01c      	b.n	8001840 <main+0x370>
 8001806:	bf00      	nop
 8001808:	40023800 	.word	0x40023800
 800180c:	40020c00 	.word	0x40020c00
 8001810:	40022800 	.word	0x40022800
 8001814:	40021800 	.word	0x40021800
 8001818:	40021c00 	.word	0x40021c00
 800181c:	40020000 	.word	0x40020000
 8001820:	2000a5ac 	.word	0x2000a5ac
 8001824:	2000a67c 	.word	0x2000a67c
 8001828:	40023000 	.word	0x40023000
 800182c:	4002b000 	.word	0x4002b000
 8001830:	2000a5b4 	.word	0x2000a5b4
 8001834:	40016c00 	.word	0x40016c00
 8001838:	2000a6bc 	.word	0x2000a6bc
 800183c:	a0000140 	.word	0xa0000140
  SdramTiming.RCDDelay = 2;
 8001840:	f8cd 80cc 	str.w	r8, [sp, #204]	; 0xcc
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001844:	6204      	str	r4, [r0, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001846:	f005 f87b 	bl	8006940 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 800184a:	f002 fa25 	bl	8003c98 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 800184e:	f002 f9d5 	bl	8003bfc <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001852:	4621      	mov	r1, r4
 8001854:	2234      	movs	r2, #52	; 0x34
 8001856:	a820      	add	r0, sp, #128	; 0x80
 8001858:	f01a f9ce 	bl	801bbf8 <memset>
  hltdc.Instance = LTDC;
 800185c:	4d54      	ldr	r5, [pc, #336]	; (80019b0 <main+0x4e0>)
 800185e:	4a55      	ldr	r2, [pc, #340]	; (80019b4 <main+0x4e4>)
  hltdc.Init.Backcolor.Blue = 0;
 8001860:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001862:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001866:	20ca      	movs	r0, #202	; 0xca
 8001868:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
  hltdc.Init.TotalHeigh = 483;
 800186c:	f04f 0ccb 	mov.w	ip, #203	; 0xcb
  hltdc.Init.AccumulatedActiveH = 482;
 8001870:	e9c5 0209 	strd	r0, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001874:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001878:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 800187a:	e9c5 c20b 	strd	ip, r2, [r5, #44]	; 0x2c
  hltdc.Init.AccumulatedHBP = 2;
 800187e:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001882:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001886:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 800188a:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800188e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001892:	f003 ffbb 	bl	800580c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001896:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001898:	f04f 0e05 	mov.w	lr, #5
  pLayerCfg.WindowX1 = 200;
 800189c:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 800189e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 80018a2:	e9cd 1425 	strd	r1, r4, [sp, #148]	; 0x94
  pLayerCfg.FBStartAdress = 0xC0000000;
 80018a6:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80018aa:	e9cd e128 	strd	lr, r1, [sp, #160]	; 0xa0
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80018ae:	e9cd 2823 	strd	r2, r8, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 80018b2:	e9cd 322a 	strd	r3, r2, [sp, #168]	; 0xa8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018b6:	a920      	add	r1, sp, #128	; 0x80
 80018b8:	4622      	mov	r2, r4
 80018ba:	4628      	mov	r0, r5
  pLayerCfg.WindowY0 = 0;
 80018bc:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  pLayerCfg.WindowX0 = 0;
 80018c0:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018c2:	f8cd 909c 	str.w	r9, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 80018c6:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80018ca:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018ce:	f004 f869 	bl	80059a4 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018d2:	682a      	ldr	r2, [r5, #0]
 80018d4:	6993      	ldr	r3, [r2, #24]
 80018d6:	f023 0301 	bic.w	r3, r3, #1
 80018da:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018dc:	4630      	mov	r0, r6
 80018de:	f003 f87d 	bl	80049dc <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018e2:	4639      	mov	r1, r7
 80018e4:	4640      	mov	r0, r8
 80018e6:	f001 fb4b 	bl	8002f80 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018ea:	2328      	movs	r3, #40	; 0x28
 80018ec:	2215      	movs	r2, #21
 80018ee:	4621      	mov	r1, r4
 80018f0:	9400      	str	r4, [sp, #0]
 80018f2:	4630      	mov	r0, r6
 80018f4:	f003 f8a5 	bl	8004a42 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018f8:	a92d      	add	r1, sp, #180	; 0xb4
 80018fa:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018fc:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001900:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001904:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001908:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800190c:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001910:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001912:	f002 ff7b 	bl	800480c <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001916:	f44f 7148 	mov.w	r1, #800	; 0x320
 800191a:	4622      	mov	r2, r4
 800191c:	4628      	mov	r0, r5
 800191e:	f004 f86f 	bl	8005a00 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001922:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001924:	4824      	ldr	r0, [pc, #144]	; (80019b8 <main+0x4e8>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001926:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001928:	4d24      	ldr	r5, [pc, #144]	; (80019bc <main+0x4ec>)
  hi2c1.Init.ClockSpeed = 400000;
 800192a:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80019e4 <main+0x514>
  __HAL_LTDC_ENABLE(&hltdc);
 800192e:	433b      	orrs	r3, r7
 8001930:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8001932:	4b23      	ldr	r3, [pc, #140]	; (80019c0 <main+0x4f0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001934:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 8001936:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 800193a:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800193c:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8001940:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001944:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001948:	f004 f9ae 	bl	8005ca8 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800194c:	f002 f81c 	bl	8003988 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001950:	f001 ff50 	bl	80037f4 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001954:	f001 fec6 	bl	80036e4 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001958:	4b1a      	ldr	r3, [pc, #104]	; (80019c4 <main+0x4f4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800195a:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800195c:	e9c5 8300 	strd	r8, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001960:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001962:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001966:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 800196a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800196e:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001972:	f003 fc67 	bl	8005244 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001976:	4628      	mov	r0, r5
 8001978:	f003 fd0c 	bl	8005394 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800197c:	f7fe fe35 	bl	80005ea <MX_TouchGFX_Init>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, 0);
 8001980:	4622      	mov	r2, r4
 8001982:	4659      	mov	r1, fp
 8001984:	4810      	ldr	r0, [pc, #64]	; (80019c8 <main+0x4f8>)
 8001986:	f003 fa73 	bl	8004e70 <HAL_GPIO_WritePin>
  osKernelInitialize();
 800198a:	f005 fa61 	bl	8006e50 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800198e:	4a0f      	ldr	r2, [pc, #60]	; (80019cc <main+0x4fc>)
 8001990:	480f      	ldr	r0, [pc, #60]	; (80019d0 <main+0x500>)
 8001992:	4621      	mov	r1, r4
 8001994:	f005 fa88 	bl	8006ea8 <osThreadNew>
 8001998:	4b0e      	ldr	r3, [pc, #56]	; (80019d4 <main+0x504>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800199a:	4a0f      	ldr	r2, [pc, #60]	; (80019d8 <main+0x508>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800199c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800199e:	4621      	mov	r1, r4
 80019a0:	480e      	ldr	r0, [pc, #56]	; (80019dc <main+0x50c>)
 80019a2:	f005 fa81 	bl	8006ea8 <osThreadNew>
 80019a6:	4b0e      	ldr	r3, [pc, #56]	; (80019e0 <main+0x510>)
 80019a8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019aa:	f005 fa63 	bl	8006e74 <osKernelStart>
  while (1)
 80019ae:	e7fe      	b.n	80019ae <main+0x4de>
 80019b0:	2000a5d0 	.word	0x2000a5d0
 80019b4:	40016800 	.word	0x40016800
 80019b8:	2000a6f0 	.word	0x2000a6f0
 80019bc:	2000a558 	.word	0x2000a558
 80019c0:	a0001000 	.word	0xa0001000
 80019c4:	00061a80 	.word	0x00061a80
 80019c8:	40022800 	.word	0x40022800
 80019cc:	0801d2f8 	.word	0x0801d2f8
 80019d0:	080013ed 	.word	0x080013ed
 80019d4:	2000a554 	.word	0x2000a554
 80019d8:	0801d2d4 	.word	0x0801d2d4
 80019dc:	080005ef 	.word	0x080005ef
 80019e0:	2000a678 	.word	0x2000a678
 80019e4:	40005400 	.word	0x40005400

080019e8 <Toggle_LEDblue>:
	HAL_GPIO_TogglePin(GPIOK, GPIO_PIN_3);
 80019e8:	4801      	ldr	r0, [pc, #4]	; (80019f0 <Toggle_LEDblue+0x8>)
 80019ea:	2108      	movs	r1, #8
 80019ec:	f003 ba45 	b.w	8004e7a <HAL_GPIO_TogglePin>
 80019f0:	40022800 	.word	0x40022800

080019f4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019f4:	6802      	ldr	r2, [r0, #0]
 80019f6:	4b03      	ldr	r3, [pc, #12]	; (8001a04 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019f8:	429a      	cmp	r2, r3
 80019fa:	d101      	bne.n	8001a00 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019fc:	f002 ba3e 	b.w	8003e7c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a00:	4770      	bx	lr
 8001a02:	bf00      	nop
 8001a04:	40001000 	.word	0x40001000

08001a08 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a08:	4770      	bx	lr
	...

08001a0c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a0c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a0e:	4b0e      	ldr	r3, [pc, #56]	; (8001a48 <HAL_MspInit+0x3c>)
 8001a10:	2200      	movs	r2, #0
 8001a12:	9200      	str	r2, [sp, #0]
 8001a14:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a16:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a1a:	6459      	str	r1, [r3, #68]	; 0x44
 8001a1c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a1e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a22:	9100      	str	r1, [sp, #0]
 8001a24:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a26:	9201      	str	r2, [sp, #4]
 8001a28:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001a2a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a2e:	6419      	str	r1, [r3, #64]	; 0x40
 8001a30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a36:	9301      	str	r3, [sp, #4]
 8001a38:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a3a:	210f      	movs	r1, #15
 8001a3c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a40:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a42:	f002 ba53 	b.w	8003eec <HAL_NVIC_SetPriority>
 8001a46:	bf00      	nop
 8001a48:	40023800 	.word	0x40023800

08001a4c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a4c:	6802      	ldr	r2, [r0, #0]
 8001a4e:	4b09      	ldr	r3, [pc, #36]	; (8001a74 <HAL_CRC_MspInit+0x28>)
 8001a50:	429a      	cmp	r2, r3
{
 8001a52:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a54:	d10b      	bne.n	8001a6e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a56:	2300      	movs	r3, #0
 8001a58:	9301      	str	r3, [sp, #4]
 8001a5a:	4b07      	ldr	r3, [pc, #28]	; (8001a78 <HAL_CRC_MspInit+0x2c>)
 8001a5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a5e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a62:	631a      	str	r2, [r3, #48]	; 0x30
 8001a64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a66:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a6a:	9301      	str	r3, [sp, #4]
 8001a6c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a6e:	b002      	add	sp, #8
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	40023000 	.word	0x40023000
 8001a78:	40023800 	.word	0x40023800

08001a7c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a7c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a7e:	4b0f      	ldr	r3, [pc, #60]	; (8001abc <HAL_DMA2D_MspInit+0x40>)
 8001a80:	6802      	ldr	r2, [r0, #0]
 8001a82:	429a      	cmp	r2, r3
 8001a84:	d116      	bne.n	8001ab4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a86:	2200      	movs	r2, #0
 8001a88:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a8c:	9201      	str	r2, [sp, #4]
 8001a8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a90:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a94:	6319      	str	r1, [r3, #48]	; 0x30
 8001a96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a98:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a9c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a9e:	2105      	movs	r1, #5
 8001aa0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aa2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aa4:	f002 fa22 	bl	8003eec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001aa8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aaa:	b003      	add	sp, #12
 8001aac:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ab0:	f002 ba4e 	b.w	8003f50 <HAL_NVIC_EnableIRQ>
}
 8001ab4:	b003      	add	sp, #12
 8001ab6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aba:	bf00      	nop
 8001abc:	4002b000 	.word	0x4002b000

08001ac0 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001ac0:	b510      	push	{r4, lr}
 8001ac2:	4604      	mov	r4, r0
 8001ac4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac6:	2214      	movs	r2, #20
 8001ac8:	2100      	movs	r1, #0
 8001aca:	a803      	add	r0, sp, #12
 8001acc:	f01a f894 	bl	801bbf8 <memset>
  if(hdsi->Instance==DSI)
 8001ad0:	6822      	ldr	r2, [r4, #0]
 8001ad2:	4b18      	ldr	r3, [pc, #96]	; (8001b34 <HAL_DSI_MspInit+0x74>)
 8001ad4:	429a      	cmp	r2, r3
 8001ad6:	d12a      	bne.n	8001b2e <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad8:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001adc:	2400      	movs	r4, #0
 8001ade:	9401      	str	r4, [sp, #4]
 8001ae0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ae2:	4815      	ldr	r0, [pc, #84]	; (8001b38 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ae4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001ae8:	645a      	str	r2, [r3, #68]	; 0x44
 8001aea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001aec:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001af0:	9201      	str	r2, [sp, #4]
 8001af2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001af4:	9402      	str	r4, [sp, #8]
 8001af6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001af8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001afc:	631a      	str	r2, [r3, #48]	; 0x30
 8001afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b00:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b04:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b06:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b08:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b10:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b12:	230d      	movs	r3, #13
 8001b14:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b16:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b1a:	f003 f81b 	bl	8004b54 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b1e:	205c      	movs	r0, #92	; 0x5c
 8001b20:	4622      	mov	r2, r4
 8001b22:	2105      	movs	r1, #5
 8001b24:	f002 f9e2 	bl	8003eec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b28:	205c      	movs	r0, #92	; 0x5c
 8001b2a:	f002 fa11 	bl	8003f50 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b2e:	b008      	add	sp, #32
 8001b30:	bd10      	pop	{r4, pc}
 8001b32:	bf00      	nop
 8001b34:	40016c00 	.word	0x40016c00
 8001b38:	40022400 	.word	0x40022400

08001b3c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b3c:	b530      	push	{r4, r5, lr}
 8001b3e:	4604      	mov	r4, r0
 8001b40:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b42:	2214      	movs	r2, #20
 8001b44:	2100      	movs	r1, #0
 8001b46:	a803      	add	r0, sp, #12
 8001b48:	f01a f856 	bl	801bbf8 <memset>
  if(hi2c->Instance==I2C1)
 8001b4c:	6822      	ldr	r2, [r4, #0]
 8001b4e:	4b1a      	ldr	r3, [pc, #104]	; (8001bb8 <HAL_I2C_MspInit+0x7c>)
 8001b50:	429a      	cmp	r2, r3
 8001b52:	d12f      	bne.n	8001bb4 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b54:	4c19      	ldr	r4, [pc, #100]	; (8001bbc <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b56:	481a      	ldr	r0, [pc, #104]	; (8001bc0 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b58:	2500      	movs	r5, #0
 8001b5a:	9501      	str	r5, [sp, #4]
 8001b5c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b5e:	f043 0302 	orr.w	r3, r3, #2
 8001b62:	6323      	str	r3, [r4, #48]	; 0x30
 8001b64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b66:	f003 0302 	and.w	r3, r3, #2
 8001b6a:	9301      	str	r3, [sp, #4]
 8001b6c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b6e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b72:	2312      	movs	r3, #18
 8001b74:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b78:	2101      	movs	r1, #1
 8001b7a:	2303      	movs	r3, #3
 8001b7c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b80:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b82:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b84:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b86:	f002 ffe5 	bl	8004b54 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b8a:	9502      	str	r5, [sp, #8]
 8001b8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b8e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b92:	6423      	str	r3, [r4, #64]	; 0x40
 8001b94:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b96:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b9a:	9302      	str	r3, [sp, #8]
 8001b9c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b9e:	6a23      	ldr	r3, [r4, #32]
 8001ba0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001ba4:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001ba6:	6a23      	ldr	r3, [r4, #32]
 8001ba8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bac:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001bae:	2064      	movs	r0, #100	; 0x64
 8001bb0:	f002 f976 	bl	8003ea0 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bb4:	b009      	add	sp, #36	; 0x24
 8001bb6:	bd30      	pop	{r4, r5, pc}
 8001bb8:	40005400 	.word	0x40005400
 8001bbc:	40023800 	.word	0x40023800
 8001bc0:	40020400 	.word	0x40020400

08001bc4 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bc4:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bc6:	6802      	ldr	r2, [r0, #0]
 8001bc8:	4b0a      	ldr	r3, [pc, #40]	; (8001bf4 <HAL_I2C_MspDeInit+0x30>)
 8001bca:	429a      	cmp	r2, r3
 8001bcc:	d110      	bne.n	8001bf0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bce:	4a0a      	ldr	r2, [pc, #40]	; (8001bf8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bd0:	480a      	ldr	r0, [pc, #40]	; (8001bfc <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bd2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bd4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bd8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bda:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bde:	f003 f89f 	bl	8004d20 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001be2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001be6:	4805      	ldr	r0, [pc, #20]	; (8001bfc <HAL_I2C_MspDeInit+0x38>)
 8001be8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bec:	f003 b898 	b.w	8004d20 <HAL_GPIO_DeInit>
}
 8001bf0:	bd08      	pop	{r3, pc}
 8001bf2:	bf00      	nop
 8001bf4:	40005400 	.word	0x40005400
 8001bf8:	40023800 	.word	0x40023800
 8001bfc:	40020400 	.word	0x40020400

08001c00 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c00:	b510      	push	{r4, lr}
 8001c02:	4604      	mov	r4, r0
 8001c04:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c06:	223c      	movs	r2, #60	; 0x3c
 8001c08:	2100      	movs	r1, #0
 8001c0a:	a801      	add	r0, sp, #4
 8001c0c:	f019 fff4 	bl	801bbf8 <memset>
  if(hltdc->Instance==LTDC)
 8001c10:	6822      	ldr	r2, [r4, #0]
 8001c12:	4b13      	ldr	r3, [pc, #76]	; (8001c60 <HAL_LTDC_MspInit+0x60>)
 8001c14:	429a      	cmp	r2, r3
 8001c16:	d121      	bne.n	8001c5c <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c18:	2308      	movs	r3, #8
 8001c1a:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c1c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c20:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c22:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c24:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c26:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c28:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c2a:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c2c:	f004 fb70 	bl	8006310 <HAL_RCCEx_PeriphCLKConfig>
 8001c30:	b108      	cbz	r0, 8001c36 <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001c32:	f7ff fee9 	bl	8001a08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c36:	4b0b      	ldr	r3, [pc, #44]	; (8001c64 <HAL_LTDC_MspInit+0x64>)
 8001c38:	9400      	str	r4, [sp, #0]
 8001c3a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c3c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c40:	645a      	str	r2, [r3, #68]	; 0x44
 8001c42:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c44:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c48:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c4a:	2058      	movs	r0, #88	; 0x58
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c50:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c52:	f002 f94b 	bl	8003eec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c56:	2058      	movs	r0, #88	; 0x58
 8001c58:	f002 f97a 	bl	8003f50 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c5c:	b010      	add	sp, #64	; 0x40
 8001c5e:	bd10      	pop	{r4, pc}
 8001c60:	40016800 	.word	0x40016800
 8001c64:	40023800 	.word	0x40023800

08001c68 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c6a:	4604      	mov	r4, r0
 8001c6c:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c6e:	2214      	movs	r2, #20
 8001c70:	2100      	movs	r1, #0
 8001c72:	a803      	add	r0, sp, #12
 8001c74:	f019 ffc0 	bl	801bbf8 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c78:	6822      	ldr	r2, [r4, #0]
 8001c7a:	4b24      	ldr	r3, [pc, #144]	; (8001d0c <HAL_QSPI_MspInit+0xa4>)
 8001c7c:	429a      	cmp	r2, r3
 8001c7e:	d143      	bne.n	8001d08 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c80:	4b23      	ldr	r3, [pc, #140]	; (8001d10 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c82:	4824      	ldr	r0, [pc, #144]	; (8001d14 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c84:	2400      	movs	r4, #0
 8001c86:	9400      	str	r4, [sp, #0]
 8001c88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c8a:	f042 0202 	orr.w	r2, r2, #2
 8001c8e:	639a      	str	r2, [r3, #56]	; 0x38
 8001c90:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c92:	f002 0202 	and.w	r2, r2, #2
 8001c96:	9200      	str	r2, [sp, #0]
 8001c98:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c9a:	9401      	str	r4, [sp, #4]
 8001c9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9e:	f042 0202 	orr.w	r2, r2, #2
 8001ca2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ca4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca6:	f002 0202 	and.w	r2, r2, #2
 8001caa:	9201      	str	r2, [sp, #4]
 8001cac:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cae:	9402      	str	r4, [sp, #8]
 8001cb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cb2:	f042 0220 	orr.w	r2, r2, #32
 8001cb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001cb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cba:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cbc:	f003 0320 	and.w	r3, r3, #32
 8001cc0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc2:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc4:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cc6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc8:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cca:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ccc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cce:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cd2:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cd6:	f002 ff3d 	bl	8004b54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001cda:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cde:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce2:	480d      	ldr	r0, [pc, #52]	; (8001d18 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001ce4:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001ce8:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cea:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cee:	f002 ff31 	bl	8004b54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cf2:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cf6:	4808      	ldr	r0, [pc, #32]	; (8001d18 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cf8:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cfa:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfc:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d00:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d04:	f002 ff26 	bl	8004b54 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001d08:	b009      	add	sp, #36	; 0x24
 8001d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d0c:	a0001000 	.word	0xa0001000
 8001d10:	40023800 	.word	0x40023800
 8001d14:	40020400 	.word	0x40020400
 8001d18:	40021400 	.word	0x40021400

08001d1c <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d1c:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d1e:	6802      	ldr	r2, [r0, #0]
 8001d20:	4b09      	ldr	r3, [pc, #36]	; (8001d48 <HAL_QSPI_MspDeInit+0x2c>)
 8001d22:	429a      	cmp	r2, r3
 8001d24:	d10f      	bne.n	8001d46 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d26:	4a09      	ldr	r2, [pc, #36]	; (8001d4c <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d28:	4809      	ldr	r0, [pc, #36]	; (8001d50 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d2a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d2c:	f023 0302 	bic.w	r3, r3, #2
 8001d30:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d32:	2140      	movs	r1, #64	; 0x40
 8001d34:	f002 fff4 	bl	8004d20 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d3c:	4805      	ldr	r0, [pc, #20]	; (8001d54 <HAL_QSPI_MspDeInit+0x38>)
 8001d3e:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d42:	f002 bfed 	b.w	8004d20 <HAL_GPIO_DeInit>
}
 8001d46:	bd08      	pop	{r3, pc}
 8001d48:	a0001000 	.word	0xa0001000
 8001d4c:	40023800 	.word	0x40023800
 8001d50:	40020400 	.word	0x40020400
 8001d54:	40021400 	.word	0x40021400

08001d58 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d58:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001d5a:	4b31      	ldr	r3, [pc, #196]	; (8001e20 <HAL_SDRAM_MspInit+0xc8>)
 8001d5c:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d5e:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001d60:	2c00      	cmp	r4, #0
 8001d62:	d15b      	bne.n	8001e1c <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001d64:	2201      	movs	r2, #1
 8001d66:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d68:	4b2e      	ldr	r3, [pc, #184]	; (8001e24 <HAL_SDRAM_MspInit+0xcc>)
 8001d6a:	9400      	str	r4, [sp, #0]
 8001d6c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d6e:	482e      	ldr	r0, [pc, #184]	; (8001e28 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d70:	f042 0201 	orr.w	r2, r2, #1
 8001d74:	639a      	str	r2, [r3, #56]	; 0x38
 8001d76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d78:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d7a:	f003 0301 	and.w	r3, r3, #1
 8001d7e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d82:	2603      	movs	r6, #3
 8001d84:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d86:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d88:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8a:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d8e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d92:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d96:	f002 fedd 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d9a:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d9e:	4823      	ldr	r0, [pc, #140]	; (8001e2c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dac:	f002 fed2 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001db0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001db4:	481e      	ldr	r0, [pc, #120]	; (8001e30 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001db8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dba:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dbe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc2:	f002 fec7 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001dc6:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dca:	481a      	ldr	r0, [pc, #104]	; (8001e34 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dcc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dce:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dd4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dd8:	f002 febc 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001ddc:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de0:	4815      	ldr	r0, [pc, #84]	; (8001e38 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001de2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dea:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dee:	f002 feb1 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001df2:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001df6:	4811      	ldr	r0, [pc, #68]	; (8001e3c <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001df8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dfa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e00:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e04:	f002 fea6 	bl	8004b54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e08:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e0a:	480d      	ldr	r0, [pc, #52]	; (8001e40 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e0c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e0e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e10:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e14:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e18:	f002 fe9c 	bl	8004b54 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e1c:	b007      	add	sp, #28
 8001e1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e20:	20001358 	.word	0x20001358
 8001e24:	40023800 	.word	0x40023800
 8001e28:	40021000 	.word	0x40021000
 8001e2c:	40021800 	.word	0x40021800
 8001e30:	40020c00 	.word	0x40020c00
 8001e34:	40022000 	.word	0x40022000
 8001e38:	40021400 	.word	0x40021400
 8001e3c:	40021c00 	.word	0x40021c00
 8001e40:	40020800 	.word	0x40020800

08001e44 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e44:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e46:	4b17      	ldr	r3, [pc, #92]	; (8001ea4 <HAL_SDRAM_MspDeInit+0x60>)
 8001e48:	681a      	ldr	r2, [r3, #0]
 8001e4a:	bb52      	cbnz	r2, 8001ea2 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e4c:	2201      	movs	r2, #1
 8001e4e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e50:	4a15      	ldr	r2, [pc, #84]	; (8001ea8 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e52:	4816      	ldr	r0, [pc, #88]	; (8001eac <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e54:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e56:	f023 0301 	bic.w	r3, r3, #1
 8001e5a:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e5c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e60:	f002 ff5e 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e64:	4812      	ldr	r0, [pc, #72]	; (8001eb0 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e66:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e6a:	f002 ff59 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e6e:	4811      	ldr	r0, [pc, #68]	; (8001eb4 <HAL_SDRAM_MspDeInit+0x70>)
 8001e70:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e74:	f002 ff54 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e78:	480f      	ldr	r0, [pc, #60]	; (8001eb8 <HAL_SDRAM_MspDeInit+0x74>)
 8001e7a:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e7e:	f002 ff4f 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e82:	480e      	ldr	r0, [pc, #56]	; (8001ebc <HAL_SDRAM_MspDeInit+0x78>)
 8001e84:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e88:	f002 ff4a 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e8c:	480c      	ldr	r0, [pc, #48]	; (8001ec0 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e8e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e92:	f002 ff45 	bl	8004d20 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e9a:	480a      	ldr	r0, [pc, #40]	; (8001ec4 <HAL_SDRAM_MspDeInit+0x80>)
 8001e9c:	210d      	movs	r1, #13
 8001e9e:	f002 bf3f 	b.w	8004d20 <HAL_GPIO_DeInit>
}
 8001ea2:	bd08      	pop	{r3, pc}
 8001ea4:	20001354 	.word	0x20001354
 8001ea8:	40023800 	.word	0x40023800
 8001eac:	40021000 	.word	0x40021000
 8001eb0:	40021800 	.word	0x40021800
 8001eb4:	40020c00 	.word	0x40020c00
 8001eb8:	40022000 	.word	0x40022000
 8001ebc:	40021400 	.word	0x40021400
 8001ec0:	40021c00 	.word	0x40021c00
 8001ec4:	40020800 	.word	0x40020800

08001ec8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001ec8:	b530      	push	{r4, r5, lr}
 8001eca:	4601      	mov	r1, r0
 8001ecc:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001ece:	2200      	movs	r2, #0
 8001ed0:	2036      	movs	r0, #54	; 0x36
 8001ed2:	f002 f80b 	bl	8003eec <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ed6:	2036      	movs	r0, #54	; 0x36
 8001ed8:	f002 f83a 	bl	8003f50 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001edc:	2500      	movs	r5, #0
 8001ede:	4b15      	ldr	r3, [pc, #84]	; (8001f34 <HAL_InitTick+0x6c>)
 8001ee0:	9502      	str	r5, [sp, #8]
 8001ee2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001ee4:	4c14      	ldr	r4, [pc, #80]	; (8001f38 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ee6:	f042 0210 	orr.w	r2, r2, #16
 8001eea:	641a      	str	r2, [r3, #64]	; 0x40
 8001eec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eee:	f003 0310 	and.w	r3, r3, #16
 8001ef2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ef8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001efa:	f004 f9eb 	bl	80062d4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001efe:	f004 f9d9 	bl	80062b4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001f02:	4b0e      	ldr	r3, [pc, #56]	; (8001f3c <HAL_InitTick+0x74>)
 8001f04:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f06:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f0a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f0c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f0e:	4b0c      	ldr	r3, [pc, #48]	; (8001f40 <HAL_InitTick+0x78>)
 8001f10:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f14:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f16:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f18:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f1a:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f1c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f1e:	f004 fead 	bl	8006c7c <HAL_TIM_Base_Init>
 8001f22:	b920      	cbnz	r0, 8001f2e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f24:	4620      	mov	r0, r4
 8001f26:	f004 fd63 	bl	80069f0 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f2a:	b009      	add	sp, #36	; 0x24
 8001f2c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f2e:	2001      	movs	r0, #1
 8001f30:	e7fb      	b.n	8001f2a <HAL_InitTick+0x62>
 8001f32:	bf00      	nop
 8001f34:	40023800 	.word	0x40023800
 8001f38:	2000a73c 	.word	0x2000a73c
 8001f3c:	40001000 	.word	0x40001000
 8001f40:	000f4240 	.word	0x000f4240

08001f44 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f44:	4770      	bx	lr

08001f46 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f46:	e7fe      	b.n	8001f46 <HardFault_Handler>

08001f48 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f48:	e7fe      	b.n	8001f48 <MemManage_Handler>

08001f4a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f4a:	e7fe      	b.n	8001f4a <BusFault_Handler>

08001f4c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f4c:	e7fe      	b.n	8001f4c <UsageFault_Handler>

08001f4e <DebugMon_Handler>:
 8001f4e:	4770      	bx	lr

08001f50 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f50:	4801      	ldr	r0, [pc, #4]	; (8001f58 <TIM6_DAC_IRQHandler+0x8>)
 8001f52:	f004 bd8b 	b.w	8006a6c <HAL_TIM_IRQHandler>
 8001f56:	bf00      	nop
 8001f58:	2000a73c 	.word	0x2000a73c

08001f5c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f5c:	4801      	ldr	r0, [pc, #4]	; (8001f64 <LTDC_IRQHandler+0x8>)
 8001f5e:	f003 bcc4 	b.w	80058ea <HAL_LTDC_IRQHandler>
 8001f62:	bf00      	nop
 8001f64:	2000a5d0 	.word	0x2000a5d0

08001f68 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f68:	4801      	ldr	r0, [pc, #4]	; (8001f70 <DMA2D_IRQHandler+0x8>)
 8001f6a:	f002 b955 	b.w	8004218 <HAL_DMA2D_IRQHandler>
 8001f6e:	bf00      	nop
 8001f70:	2000a67c 	.word	0x2000a67c

08001f74 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f74:	4801      	ldr	r0, [pc, #4]	; (8001f7c <DSI_IRQHandler+0x8>)
 8001f76:	f002 bb54 	b.w	8004622 <HAL_DSI_IRQHandler>
 8001f7a:	bf00      	nop
 8001f7c:	2000a5b4 	.word	0x2000a5b4

08001f80 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f80:	2001      	movs	r0, #1
 8001f82:	4770      	bx	lr

08001f84 <_kill>:

int _kill(int pid, int sig)
{
 8001f84:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f86:	f019 fddd 	bl	801bb44 <__errno>
 8001f8a:	2316      	movs	r3, #22
 8001f8c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f8e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f92:	bd08      	pop	{r3, pc}

08001f94 <_exit>:

void _exit (int status)
{
 8001f94:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f96:	f019 fdd5 	bl	801bb44 <__errno>
 8001f9a:	2316      	movs	r3, #22
 8001f9c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f9e:	e7fe      	b.n	8001f9e <_exit+0xa>

08001fa0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fa0:	b570      	push	{r4, r5, r6, lr}
 8001fa2:	460e      	mov	r6, r1
 8001fa4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa6:	2500      	movs	r5, #0
 8001fa8:	42a5      	cmp	r5, r4
 8001faa:	db01      	blt.n	8001fb0 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001fac:	4620      	mov	r0, r4
 8001fae:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001fb0:	f3af 8000 	nop.w
 8001fb4:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fb6:	3501      	adds	r5, #1
 8001fb8:	e7f6      	b.n	8001fa8 <_read+0x8>

08001fba <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001fba:	b570      	push	{r4, r5, r6, lr}
 8001fbc:	460e      	mov	r6, r1
 8001fbe:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fc0:	2500      	movs	r5, #0
 8001fc2:	42a5      	cmp	r5, r4
 8001fc4:	db01      	blt.n	8001fca <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001fc6:	4620      	mov	r0, r4
 8001fc8:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001fca:	5d70      	ldrb	r0, [r6, r5]
 8001fcc:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fd0:	3501      	adds	r5, #1
 8001fd2:	e7f6      	b.n	8001fc2 <_write+0x8>

08001fd4 <_close>:

int _close(int file)
{
	return -1;
}
 8001fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd8:	4770      	bx	lr

08001fda <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fda:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fde:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fe0:	2000      	movs	r0, #0
 8001fe2:	4770      	bx	lr

08001fe4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fe4:	2001      	movs	r0, #1
 8001fe6:	4770      	bx	lr

08001fe8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fe8:	2000      	movs	r0, #0
 8001fea:	4770      	bx	lr

08001fec <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001fec:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fee:	4b0a      	ldr	r3, [pc, #40]	; (8002018 <_sbrk+0x2c>)
 8001ff0:	6819      	ldr	r1, [r3, #0]
{
 8001ff2:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001ff4:	b909      	cbnz	r1, 8001ffa <_sbrk+0xe>
		heap_end = &end;
 8001ff6:	4909      	ldr	r1, [pc, #36]	; (800201c <_sbrk+0x30>)
 8001ff8:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001ffa:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001ffc:	4669      	mov	r1, sp
 8001ffe:	4402      	add	r2, r0
 8002000:	428a      	cmp	r2, r1
 8002002:	d906      	bls.n	8002012 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002004:	f019 fd9e 	bl	801bb44 <__errno>
 8002008:	230c      	movs	r3, #12
 800200a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800200c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002010:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002012:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8002014:	e7fc      	b.n	8002010 <_sbrk+0x24>
 8002016:	bf00      	nop
 8002018:	2000135c 	.word	0x2000135c
 800201c:	2000a828 	.word	0x2000a828

08002020 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002020:	4770      	bx	lr

08002022 <_ZN23ApplicationFontProviderD0Ev>:
 8002022:	b510      	push	{r4, lr}
 8002024:	2104      	movs	r1, #4
 8002026:	4604      	mov	r4, r0
 8002028:	f019 fd2c 	bl	801ba84 <_ZdlPvj>
 800202c:	4620      	mov	r0, r4
 800202e:	bd10      	pop	{r4, pc}

08002030 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002030:	2901      	cmp	r1, #1
{
 8002032:	b508      	push	{r3, lr}
    switch (typography)
 8002034:	d006      	beq.n	8002044 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002036:	2902      	cmp	r1, #2
 8002038:	d008      	beq.n	800204c <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800203a:	b959      	cbnz	r1, 8002054 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800203c:	f000 fe52 	bl	8002ce4 <_ZN17TypedTextDatabase8getFontsEv>
 8002040:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002042:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002044:	f000 fe4e 	bl	8002ce4 <_ZN17TypedTextDatabase8getFontsEv>
 8002048:	6840      	ldr	r0, [r0, #4]
 800204a:	e7fa      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800204c:	f000 fe4a 	bl	8002ce4 <_ZN17TypedTextDatabase8getFontsEv>
 8002050:	6880      	ldr	r0, [r0, #8]
 8002052:	e7f6      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002054:	2000      	movs	r0, #0
 8002056:	e7f4      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002058 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002058:	4800      	ldr	r0, [pc, #0]	; (800205c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800205a:	4770      	bx	lr
 800205c:	0801d330 	.word	0x0801d330

08002060 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002060:	2002      	movs	r0, #2
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002064:	b513      	push	{r0, r1, r4, lr}
 8002066:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002068:	b151      	cbz	r1, 8002080 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800206a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800206c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800206e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002072:	aa01      	add	r2, sp, #4
 8002074:	689c      	ldr	r4, [r3, #8]
 8002076:	f10d 0303 	add.w	r3, sp, #3
 800207a:	47a0      	blx	r4
        return glyph;
    }
 800207c:	b002      	add	sp, #8
 800207e:	bd10      	pop	{r4, pc}
            return 0;
 8002080:	4608      	mov	r0, r1
 8002082:	e7fb      	b.n	800207c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002084 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002084:	8940      	ldrh	r0, [r0, #10]
 8002086:	4770      	bx	lr

08002088 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002088:	8980      	ldrh	r0, [r0, #12]
 800208a:	4770      	bx	lr

0800208c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800208c:	8880      	ldrh	r0, [r0, #4]
 800208e:	4770      	bx	lr

08002090 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002090:	7983      	ldrb	r3, [r0, #6]
 8002092:	8880      	ldrh	r0, [r0, #4]
 8002094:	4418      	add	r0, r3
    }
 8002096:	b280      	uxth	r0, r0
 8002098:	4770      	bx	lr

0800209a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800209a:	79c0      	ldrb	r0, [r0, #7]
    }
 800209c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020a0:	4770      	bx	lr

080020a2 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020a2:	79c0      	ldrb	r0, [r0, #7]
    }
 80020a4:	09c0      	lsrs	r0, r0, #7
 80020a6:	4770      	bx	lr

080020a8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80020aa:	b510      	push	{r4, lr}
    }
 80020ac:	2108      	movs	r1, #8
    virtual ~TypedText()
 80020ae:	4604      	mov	r4, r0
    }
 80020b0:	f019 fce8 	bl	801ba84 <_ZdlPvj>
 80020b4:	4620      	mov	r0, r4
 80020b6:	bd10      	pop	{r4, pc}

080020b8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80020ba:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80020be:	6808      	ldr	r0, [r1, #0]
 80020c0:	6849      	ldr	r1, [r1, #4]
 80020c2:	c303      	stmia	r3!, {r0, r1}
    }
 80020c4:	4770      	bx	lr

080020c6 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020c6:	4770      	bx	lr

080020c8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020c8:	4770      	bx	lr

080020ca <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020ca:	6041      	str	r1, [r0, #4]
    }
 80020cc:	4770      	bx	lr

080020ce <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020ce:	4770      	bx	lr

080020d0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020d0:	2301      	movs	r3, #1
 80020d2:	7203      	strb	r3, [r0, #8]
    }
 80020d4:	4770      	bx	lr

080020d6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020d6:	4770      	bx	lr

080020d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020d8:	4770      	bx	lr

080020da <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020da:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020dc:	68c2      	ldr	r2, [r0, #12]
 80020de:	6841      	ldr	r1, [r0, #4]
 80020e0:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80020e2:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020e4:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020e8:	07d2      	lsls	r2, r2, #31
 80020ea:	bf48      	it	mi
 80020ec:	590a      	ldrmi	r2, [r1, r4]
 80020ee:	689b      	ldr	r3, [r3, #8]
    }
 80020f0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020f4:	bf48      	it	mi
 80020f6:	58d3      	ldrmi	r3, [r2, r3]
 80020f8:	4718      	bx	r3

080020fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020fa:	6843      	ldr	r3, [r0, #4]
 80020fc:	b12b      	cbz	r3, 800210a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020fe:	6883      	ldr	r3, [r0, #8]
 8002100:	b92b      	cbnz	r3, 800210e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002102:	68c0      	ldr	r0, [r0, #12]
 8002104:	f000 0001 	and.w	r0, r0, #1
 8002108:	4770      	bx	lr
 800210a:	4618      	mov	r0, r3
 800210c:	4770      	bx	lr
 800210e:	2001      	movs	r0, #1
    }
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002112:	b510      	push	{r4, lr}
 8002114:	210c      	movs	r1, #12
 8002116:	4604      	mov	r4, r0
 8002118:	f019 fcb4 	bl	801ba84 <_ZdlPvj>
 800211c:	4620      	mov	r0, r4
 800211e:	bd10      	pop	{r4, pc}

08002120 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002120:	b510      	push	{r4, lr}
 8002122:	2110      	movs	r1, #16
 8002124:	4604      	mov	r4, r0
 8002126:	f019 fcad 	bl	801ba84 <_ZdlPvj>
 800212a:	4620      	mov	r0, r4
 800212c:	bd10      	pop	{r4, pc}

0800212e <_ZN23FrontendApplicationBaseD0Ev>:
 800212e:	b510      	push	{r4, lr}
 8002130:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002134:	4604      	mov	r4, r0
 8002136:	f019 fca5 	bl	801ba84 <_ZdlPvj>
 800213a:	4620      	mov	r0, r4
 800213c:	bd10      	pop	{r4, pc}

0800213e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800213e:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002140:	f00a fc70 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 8002144:	6803      	ldr	r3, [r0, #0]
    }
 8002146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 800214a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800214c:	4718      	bx	r3

0800214e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800214e:	b510      	push	{r4, lr}
 8002150:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002152:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002156:	b158      	cbz	r0, 8002170 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002158:	6803      	ldr	r3, [r0, #0]
 800215a:	68db      	ldr	r3, [r3, #12]
 800215c:	4798      	blx	r3
 800215e:	b138      	cbz	r0, 8002170 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002160:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002164:	6803      	ldr	r3, [r0, #0]
 8002166:	689b      	ldr	r3, [r3, #8]
 8002168:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800216a:	2300      	movs	r3, #0
 800216c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002170:	bd10      	pop	{r4, pc}
	...

08002174 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002176:	4604      	mov	r4, r0
 8002178:	4617      	mov	r7, r2
 800217a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800217c:	f00a fc72 	bl	800ca64 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002180:	4b10      	ldr	r3, [pc, #64]	; (80021c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002182:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002184:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002188:	4e0f      	ldr	r6, [pc, #60]	; (80021c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800218a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 800218c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002190:	4b0e      	ldr	r3, [pc, #56]	; (80021cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002192:	6830      	ldr	r0, [r6, #0]
 8002194:	6023      	str	r3, [r4, #0]
 8002196:	4b0e      	ldr	r3, [pc, #56]	; (80021d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002198:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800219c:	6803      	ldr	r3, [r0, #0]
 800219e:	4629      	mov	r1, r5
 80021a0:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80021a2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80021a6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80021a8:	4628      	mov	r0, r5
 80021aa:	f000 fd4f 	bl	8002c4c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80021ae:	6833      	ldr	r3, [r6, #0]
 80021b0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80021b4:	b10a      	cbz	r2, 80021ba <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80021b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80021b8:	b900      	cbnz	r0, 80021bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 80021ba:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80021bc:	f012 fb0d 	bl	80147da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80021c0:	4620      	mov	r0, r4
 80021c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021c4:	2000a304 	.word	0x2000a304
 80021c8:	2000a2b8 	.word	0x2000a2b8
 80021cc:	0801d6a8 	.word	0x0801d6a8
 80021d0:	0801d690 	.word	0x0801d690

080021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021d4:	4b06      	ldr	r3, [pc, #24]	; (80021f0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80021d6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80021da:	2300      	movs	r3, #0
 80021dc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021e0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80021e4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80021e8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80021ec:	4770      	bx	lr
 80021ee:	bf00      	nop
 80021f0:	08002335 	.word	0x08002335

080021f4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021f8:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021fa:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021fc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002200:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002202:	6803      	ldr	r3, [r0, #0]
 8002204:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002206:	4688      	mov	r8, r1
 8002208:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800220a:	4798      	blx	r3
 800220c:	f5b0 7f3c 	cmp.w	r0, #752	; 0x2f0
 8002210:	d205      	bcs.n	800221e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8002212:	4b42      	ldr	r3, [pc, #264]	; (800231c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002214:	4a42      	ldr	r2, [pc, #264]	; (8002320 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002216:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002218:	4842      	ldr	r0, [pc, #264]	; (8002324 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800221a:	f019 fc61 	bl	801bae0 <__assert_func>
 800221e:	6860      	ldr	r0, [r4, #4]
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	6a1b      	ldr	r3, [r3, #32]
 8002224:	4798      	blx	r3
 8002226:	280f      	cmp	r0, #15
 8002228:	d803      	bhi.n	8002232 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 800222a:	4b3f      	ldr	r3, [pc, #252]	; (8002328 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800222c:	4a3c      	ldr	r2, [pc, #240]	; (8002320 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800222e:	21a4      	movs	r1, #164	; 0xa4
 8002230:	e7f2      	b.n	8002218 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002232:	68e0      	ldr	r0, [r4, #12]
 8002234:	6803      	ldr	r3, [r0, #0]
 8002236:	6a1b      	ldr	r3, [r3, #32]
 8002238:	4798      	blx	r3
 800223a:	280b      	cmp	r0, #11
 800223c:	d803      	bhi.n	8002246 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 800223e:	4b3b      	ldr	r3, [pc, #236]	; (800232c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002240:	4a37      	ldr	r2, [pc, #220]	; (8002320 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002242:	21a5      	movs	r1, #165	; 0xa5
 8002244:	e7e8      	b.n	8002218 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8002246:	f00a fbed 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 800224a:	f00a fbf1 	bl	800ca30 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800224e:	f8d9 0000 	ldr.w	r0, [r9]
 8002252:	b110      	cbz	r0, 800225a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8002254:	6803      	ldr	r3, [r0, #0]
 8002256:	68db      	ldr	r3, [r3, #12]
 8002258:	4798      	blx	r3
    if (*currentTrans)
 800225a:	f8d9 0000 	ldr.w	r0, [r9]
 800225e:	b110      	cbz	r0, 8002266 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8002260:	6803      	ldr	r3, [r0, #0]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4798      	blx	r3
    if (*currentScreen)
 8002266:	6838      	ldr	r0, [r7, #0]
 8002268:	b110      	cbz	r0, 8002270 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 800226a:	6803      	ldr	r3, [r0, #0]
 800226c:	695b      	ldr	r3, [r3, #20]
 800226e:	4798      	blx	r3
    if (*currentPresenter)
 8002270:	f8d8 0000 	ldr.w	r0, [r8]
 8002274:	b110      	cbz	r0, 800227c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	685b      	ldr	r3, [r3, #4]
 800227a:	4798      	blx	r3
    if (*currentScreen)
 800227c:	6838      	ldr	r0, [r7, #0]
 800227e:	b110      	cbz	r0, 8002286 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8002280:	6803      	ldr	r3, [r0, #0]
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	4798      	blx	r3
    if (*currentPresenter)
 8002286:	f8d8 0000 	ldr.w	r0, [r8]
 800228a:	b110      	cbz	r0, 8002292 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 800228c:	6803      	ldr	r3, [r0, #0]
 800228e:	689b      	ldr	r3, [r3, #8]
 8002290:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002292:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002294:	6803      	ldr	r3, [r0, #0]
 8002296:	2100      	movs	r1, #0
 8002298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800229a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800229c:	f04f 0b00 	mov.w	fp, #0
 80022a0:	4b23      	ldr	r3, [pc, #140]	; (8002330 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80022a2:	6003      	str	r3, [r0, #0]
 80022a4:	4605      	mov	r5, r0
 80022a6:	f8c0 b004 	str.w	fp, [r0, #4]
 80022aa:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022ae:	68a0      	ldr	r0, [r4, #8]
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	4659      	mov	r1, fp
 80022b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022b6:	4798      	blx	r3
 80022b8:	4606      	mov	r6, r0
 80022ba:	f000 fdd1 	bl	8002e60 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022be:	6860      	ldr	r0, [r4, #4]
 80022c0:	6803      	ldr	r3, [r0, #0]
 80022c2:	4659      	mov	r1, fp
 80022c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022c6:	4798      	blx	r3
 80022c8:	4631      	mov	r1, r6
 80022ca:	4604      	mov	r4, r0
 80022cc:	f000 fd6c 	bl	8002da8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022d0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80022d4:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80022d8:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80022da:	b1e4      	cbz	r4, 8002316 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 80022dc:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80022e2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80022e8:	4630      	mov	r0, r6
 80022ea:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80022ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80022ee:	4798      	blx	r3
    newPresenter->activate();
 80022f0:	6823      	ldr	r3, [r4, #0]
 80022f2:	4620      	mov	r0, r4
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80022f8:	4629      	mov	r1, r5
 80022fa:	4630      	mov	r0, r6
 80022fc:	f00b ff5e 	bl	800e1bc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002300:	682b      	ldr	r3, [r5, #0]
 8002302:	4628      	mov	r0, r5
 8002304:	691b      	ldr	r3, [r3, #16]
 8002306:	4798      	blx	r3
    newTransition->invalidate();
 8002308:	682b      	ldr	r3, [r5, #0]
 800230a:	4628      	mov	r0, r5
 800230c:	695b      	ldr	r3, [r3, #20]
 800230e:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002310:	4620      	mov	r0, r4
 8002312:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002316:	4623      	mov	r3, r4
 8002318:	e7e1      	b.n	80022de <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 800231a:	bf00      	nop
 800231c:	0801d368 	.word	0x0801d368
 8002320:	0801d3f6 	.word	0x0801d3f6
 8002324:	0801d4fa 	.word	0x0801d4fa
 8002328:	0801d541 	.word	0x0801d541
 800232c:	0801d5e4 	.word	0x0801d5e4
 8002330:	0801d6ec 	.word	0x0801d6ec

08002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002334:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002336:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800233a:	9300      	str	r3, [sp, #0]
 800233c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002340:	4b04      	ldr	r3, [pc, #16]	; (8002354 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8002342:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002346:	4804      	ldr	r0, [pc, #16]	; (8002358 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8002348:	f7ff ff54 	bl	80021f4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800234c:	b003      	add	sp, #12
 800234e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002352:	bf00      	nop
 8002354:	2000a2f8 	.word	0x2000a2f8
 8002358:	2000a2f4 	.word	0x2000a2f4

0800235c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800235c:	6a00      	ldr	r0, [r0, #32]
 800235e:	4770      	bx	lr

08002360 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002360:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002362:	4770      	bx	lr

08002364 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002364:	4770      	bx	lr

08002366 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002366:	888b      	ldrh	r3, [r1, #4]
 8002368:	6980      	ldr	r0, [r0, #24]
 800236a:	680a      	ldr	r2, [r1, #0]
 800236c:	0adb      	lsrs	r3, r3, #11
 800236e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002372:	4410      	add	r0, r2
 8002374:	4770      	bx	lr

08002376 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002376:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002378:	b1c2      	cbz	r2, 80023ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800237a:	7b13      	ldrb	r3, [r2, #12]
 800237c:	b1b3      	cbz	r3, 80023ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800237e:	7b54      	ldrb	r4, [r2, #13]
 8002380:	7ad2      	ldrb	r2, [r2, #11]
 8002382:	0224      	lsls	r4, r4, #8
 8002384:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002388:	4314      	orrs	r4, r2
 800238a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800238c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800238e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002392:	8813      	ldrh	r3, [r2, #0]
 8002394:	428b      	cmp	r3, r1
 8002396:	d102      	bne.n	800239e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002398:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800239c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800239e:	d805      	bhi.n	80023ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80023a0:	3801      	subs	r0, #1
 80023a2:	b280      	uxth	r0, r0
 80023a4:	3204      	adds	r2, #4
 80023a6:	2800      	cmp	r0, #0
 80023a8:	d1f3      	bne.n	8002392 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80023aa:	e7f7      	b.n	800239c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80023ac:	2000      	movs	r0, #0
 80023ae:	e7f5      	b.n	800239c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080023b0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80023b0:	b510      	push	{r4, lr}
 80023b2:	2128      	movs	r1, #40	; 0x28
 80023b4:	4604      	mov	r4, r0
 80023b6:	f019 fb65 	bl	801ba84 <_ZdlPvj>
 80023ba:	4620      	mov	r0, r4
 80023bc:	bd10      	pop	{r4, pc}
	...

080023c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80023c0:	b530      	push	{r4, r5, lr}
 80023c2:	b089      	sub	sp, #36	; 0x24
 80023c4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80023c6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80023ca:	9506      	str	r5, [sp, #24]
 80023cc:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80023d0:	9505      	str	r5, [sp, #20]
 80023d2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80023d6:	9504      	str	r5, [sp, #16]
 80023d8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80023dc:	9503      	str	r5, [sp, #12]
 80023de:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80023e2:	9502      	str	r5, [sp, #8]
 80023e4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80023e8:	9501      	str	r5, [sp, #4]
 80023ea:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80023ee:	9500      	str	r5, [sp, #0]
 80023f0:	f00b fb44 	bl	800da7c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023f4:	4b06      	ldr	r3, [pc, #24]	; (8002410 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023f6:	6023      	str	r3, [r4, #0]
 80023f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023fa:	61a3      	str	r3, [r4, #24]
 80023fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023fe:	61e3      	str	r3, [r4, #28]
 8002400:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002402:	6223      	str	r3, [r4, #32]
 8002404:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002406:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002408:	4620      	mov	r0, r4
 800240a:	b009      	add	sp, #36	; 0x24
 800240c:	bd30      	pop	{r4, r5, pc}
 800240e:	bf00      	nop
 8002410:	0801d710 	.word	0x0801d710

08002414 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002414:	2000      	movs	r0, #0
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002418:	8081      	strh	r1, [r0, #4]
    }
 800241a:	4770      	bx	lr

0800241c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800241c:	80c1      	strh	r1, [r0, #6]
    }
 800241e:	4770      	bx	lr

08002420 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002420:	8101      	strh	r1, [r0, #8]
    }
 8002422:	4770      	bx	lr

08002424 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002424:	8141      	strh	r1, [r0, #10]
    }
 8002426:	4770      	bx	lr

08002428 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002428:	4770      	bx	lr

0800242a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800242a:	4770      	bx	lr

0800242c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800242c:	4770      	bx	lr

0800242e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800242e:	4770      	bx	lr

08002430 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002430:	4770      	bx	lr

08002432 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002432:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002434:	88c4      	ldrh	r4, [r0, #6]
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	1b12      	subs	r2, r2, r4
 800243a:	8884      	ldrh	r4, [r0, #4]
 800243c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800243e:	1b09      	subs	r1, r1, r4
 8002440:	b212      	sxth	r2, r2
    }
 8002442:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002446:	b209      	sxth	r1, r1
 8002448:	4718      	bx	r3

0800244a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800244a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800244e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002450:	f04f 33ff 	mov.w	r3, #4294967295
 8002454:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002456:	6813      	ldr	r3, [r2, #0]
 8002458:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800245a:	6010      	str	r0, [r2, #0]
    }
 800245c:	4770      	bx	lr

0800245e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800245e:	4770      	bx	lr

08002460 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002460:	4770      	bx	lr

08002462 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002462:	4770      	bx	lr

08002464 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002464:	4770      	bx	lr

08002466 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002466:	4770      	bx	lr

08002468 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002468:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800246c:	b11a      	cbz	r2, 8002476 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800246e:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002472:	b102      	cbz	r2, 8002476 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002474:	6018      	str	r0, [r3, #0]
        }
    }
 8002476:	4770      	bx	lr

08002478 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002478:	4770      	bx	lr

0800247a <_ZN15Screen1ViewBase9BoxCollorEv>:
     * Virtual Action Handlers
     */
    virtual void BoxCollor()
    {
        // Override and implement this function in Screen1
    }
 800247a:	4770      	bx	lr

0800247c <_ZN15Screen1ViewBase9LEDScreenEv>:

    virtual void LEDScreen()
    {
        // Override and implement this function in Screen1
    }
 800247c:	4770      	bx	lr

0800247e <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800247e:	4770      	bx	lr

08002480 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002480:	4770      	bx	lr

08002482 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002482:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002484:	68c2      	ldr	r2, [r0, #12]
 8002486:	6844      	ldr	r4, [r0, #4]
 8002488:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800248a:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800248c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002490:	07d2      	lsls	r2, r2, #31
 8002492:	bf48      	it	mi
 8002494:	5962      	ldrmi	r2, [r4, r5]
 8002496:	689b      	ldr	r3, [r3, #8]
    }
 8002498:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800249a:	bf48      	it	mi
 800249c:	58d3      	ldrmi	r3, [r2, r3]
 800249e:	4718      	bx	r3

080024a0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80024a0:	6843      	ldr	r3, [r0, #4]
 80024a2:	b12b      	cbz	r3, 80024b0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80024a4:	6883      	ldr	r3, [r0, #8]
 80024a6:	b92b      	cbnz	r3, 80024b4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80024a8:	68c0      	ldr	r0, [r0, #12]
 80024aa:	f000 0001 	and.w	r0, r0, #1
 80024ae:	4770      	bx	lr
 80024b0:	4618      	mov	r0, r3
 80024b2:	4770      	bx	lr
 80024b4:	2001      	movs	r0, #1
    }
 80024b6:	4770      	bx	lr

080024b8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80024b8:	b510      	push	{r4, lr}
 80024ba:	2110      	movs	r1, #16
 80024bc:	4604      	mov	r4, r0
 80024be:	f019 fae1 	bl	801ba84 <_ZdlPvj>
 80024c2:	4620      	mov	r0, r4
 80024c4:	bd10      	pop	{r4, pc}

080024c6 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 80024c6:	b510      	push	{r4, lr}
 80024c8:	f44f 713b 	mov.w	r1, #748	; 0x2ec
 80024cc:	4604      	mov	r4, r0
 80024ce:	f019 fad9 	bl	801ba84 <_ZdlPvj>
 80024d2:	4620      	mov	r0, r4
 80024d4:	bd10      	pop	{r4, pc}

080024d6 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonColor)
 80024d6:	f100 0298 	add.w	r2, r0, #152	; 0x98
 80024da:	4291      	cmp	r1, r2
 80024dc:	d102      	bne.n	80024e4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When buttonColor clicked call virtual function
        //Call BoxCollor
        BoxCollor();
 80024de:	6803      	ldr	r3, [r0, #0]
 80024e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &buttonLED)
    {
        //Interaction2
        //When buttonLED clicked call virtual function
        //Call LEDScreen
        LEDScreen();
 80024e2:	4718      	bx	r3
    else if (&src == &buttonLED)
 80024e4:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 80024e8:	4291      	cmp	r1, r2
 80024ea:	d102      	bne.n	80024f2 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
        LEDScreen();
 80024ec:	6803      	ldr	r3, [r0, #0]
 80024ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f0:	e7f7      	b.n	80024e2 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    }
}
 80024f2:	4770      	bx	lr

080024f4 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80024f4:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024f6:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024f8:	4604      	mov	r4, r0
        setX(x);
 80024fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 80024fc:	4615      	mov	r5, r2
        setX(x);
 80024fe:	4798      	blx	r3
        setY(y);
 8002500:	6823      	ldr	r3, [r4, #0]
 8002502:	4629      	mov	r1, r5
 8002504:	4620      	mov	r0, r4
 8002506:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800250c:	4718      	bx	r3

0800250e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800250e:	b570      	push	{r4, r5, r6, lr}
 8002510:	4604      	mov	r4, r0
 8002512:	461d      	mov	r5, r3
 8002514:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002518:	f7ff ffec 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800251c:	6823      	ldr	r3, [r4, #0]
 800251e:	4629      	mov	r1, r5
 8002520:	4620      	mov	r0, r4
 8002522:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002524:	4798      	blx	r3
        setHeight(height);
 8002526:	6823      	ldr	r3, [r4, #0]
 8002528:	4631      	mov	r1, r6
 800252a:	4620      	mov	r0, r4
 800252c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800252e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002532:	4718      	bx	r3

08002534 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002534:	4a09      	ldr	r2, [pc, #36]	; (800255c <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002536:	6002      	str	r2, [r0, #0]
          visible(true)
 8002538:	f44f 7180 	mov.w	r1, #256	; 0x100
 800253c:	2200      	movs	r2, #0
 800253e:	8481      	strh	r1, [r0, #36]	; 0x24
 8002540:	21ff      	movs	r1, #255	; 0xff
 8002542:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002546:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800254a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800254e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002552:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 8002556:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 8002558:	4770      	bx	lr
 800255a:	bf00      	nop
 800255c:	0801e908 	.word	0x0801e908

08002560 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002560:	b573      	push	{r0, r1, r4, r5, r6, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 8002562:	8f01      	ldrh	r1, [r0, #56]	; 0x38
    {
        if (typedText.hasValidId())
 8002564:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002568:	4299      	cmp	r1, r3
    void updateTextPosition()
 800256a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800256c:	d033      	beq.n	80025d6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x76>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800256e:	4b1c      	ldr	r3, [pc, #112]	; (80025e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	b92b      	cbnz	r3, 8002580 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002574:	4b1b      	ldr	r3, [pc, #108]	; (80025e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002576:	4a1c      	ldr	r2, [pc, #112]	; (80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002578:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800257a:	481c      	ldr	r0, [pc, #112]	; (80025ec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x8c>)
 800257c:	f019 fab0 	bl	801bae0 <__assert_func>
 8002580:	4a1b      	ldr	r2, [pc, #108]	; (80025f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x90>)
 8002582:	8812      	ldrh	r2, [r2, #0]
 8002584:	428a      	cmp	r2, r1
 8002586:	d803      	bhi.n	8002590 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x30>
 8002588:	4b1a      	ldr	r3, [pc, #104]	; (80025f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x94>)
 800258a:	4a17      	ldr	r2, [pc, #92]	; (80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 800258c:	21af      	movs	r1, #175	; 0xaf
 800258e:	e7f4      	b.n	800257a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002590:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002594:	4b18      	ldr	r3, [pc, #96]	; (80025f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>)
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800259c:	4b17      	ldr	r3, [pc, #92]	; (80025fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x9c>)
 800259e:	6818      	ldr	r0, [r3, #0]
 80025a0:	f000 fb90 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80025a4:	682b      	ldr	r3, [r5, #0]
 80025a6:	9001      	str	r0, [sp, #4]
 80025a8:	4601      	mov	r1, r0
 80025aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025ac:	4628      	mov	r0, r5
 80025ae:	4798      	blx	r3
 80025b0:	682b      	ldr	r3, [r5, #0]
 80025b2:	9901      	ldr	r1, [sp, #4]
 80025b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025b6:	4604      	mov	r4, r0
 80025b8:	4628      	mov	r0, r5
 80025ba:	4798      	blx	r3
 80025bc:	682b      	ldr	r3, [r5, #0]
 80025be:	9901      	ldr	r1, [sp, #4]
 80025c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025c2:	fb14 f400 	smulbb	r4, r4, r0
 80025c6:	4628      	mov	r0, r5
 80025c8:	4798      	blx	r3
 80025ca:	b2e4      	uxtb	r4, r4
 80025cc:	4404      	add	r4, r0
 80025ce:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80025d2:	b002      	add	sp, #8
 80025d4:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 80025d6:	2300      	movs	r3, #0
 80025d8:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 80025dc:	e7f9      	b.n	80025d2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x72>
 80025de:	bf00      	nop
 80025e0:	2000a308 	.word	0x2000a308
 80025e4:	0801d760 	.word	0x0801d760
 80025e8:	0801d7a2 	.word	0x0801d7a2
 80025ec:	0801d7d0 	.word	0x0801d7d0
 80025f0:	2000a30c 	.word	0x2000a30c
 80025f4:	0801d817 	.word	0x0801d817
 80025f8:	2000a310 	.word	0x2000a310
 80025fc:	2000a314 	.word	0x2000a314

08002600 <_ZN8touchgfx8TextAreaC1Ev>:
 8002600:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002604:	8481      	strh	r1, [r0, #36]	; 0x24
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002606:	490b      	ldr	r1, [pc, #44]	; (8002634 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 8002608:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 800260a:	490b      	ldr	r1, [pc, #44]	; (8002638 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 800260c:	6281      	str	r1, [r0, #40]	; 0x28
 800260e:	f64f 71ff 	movw	r1, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
 8002612:	2200      	movs	r2, #0
 8002614:	8581      	strh	r1, [r0, #44]	; 0x2c
 8002616:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 800261a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800261e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002622:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002626:	e9c0 2207 	strd	r2, r2, [r0, #28]
        : color(col)
 800262a:	6302      	str	r2, [r0, #48]	; 0x30
 800262c:	6341      	str	r1, [r0, #52]	; 0x34
 800262e:	8702      	strh	r2, [r0, #56]	; 0x38
    {
    }
 8002630:	4770      	bx	lr
 8002632:	bf00      	nop
 8002634:	0801e860 	.word	0x0801e860
 8002638:	0801d360 	.word	0x0801d360

0800263c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800263c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002640:	ed2d 8b08 	vpush	{d8-d11}
 8002644:	4604      	mov	r4, r0
 8002646:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002648:	46a2      	mov	sl, r4
        : presenter(0)
 800264a:	2500      	movs	r5, #0
 800264c:	f00b fc0a 	bl	800de64 <_ZN8touchgfx6ScreenC1Ev>
 8002650:	4bdd      	ldr	r3, [pc, #884]	; (80029c8 <_ZN15Screen1ViewBaseC1Ev+0x38c>)
 8002652:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002654:	f84a 3b40 	str.w	r3, [sl], #64
 8002658:	4650      	mov	r0, sl
 800265a:	f7ff ff6b 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 800265e:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002662:	4618      	mov	r0, r3
 8002664:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8002668:	ee09 3a90 	vmov	s19, r3
 800266c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8002670:	f7ff ff60 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 8002674:	4648      	mov	r0, r9
 8002676:	f008 fcfd 	bl	800b074 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800267a:	4640      	mov	r0, r8
 800267c:	f008 fcfa 	bl	800b074 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002680:	f504 7394 	add.w	r3, r4, #296	; 0x128
 8002684:	4618      	mov	r0, r3
 8002686:	ee0a 3a10 	vmov	s20, r3
 800268a:	f7ff ff53 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 800268e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
 8002692:	4618      	mov	r0, r3
 8002694:	ee0a 3a90 	vmov	s21, r3
 8002698:	f7ff ff4c 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 800269c:	f504 73c0 	add.w	r3, r4, #384	; 0x180
 80026a0:	4618      	mov	r0, r3
 80026a2:	ee08 3a10 	vmov	s16, r3
 80026a6:	f7ff ffab 	bl	8002600 <_ZN8touchgfx8TextAreaC1Ev>
 80026aa:	f504 73de 	add.w	r3, r4, #444	; 0x1bc
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 80026ae:	4618      	mov	r0, r3
 80026b0:	ee08 3a90 	vmov	s17, r3
 80026b4:	4ec5      	ldr	r6, [pc, #788]	; (80029cc <_ZN15Screen1ViewBaseC1Ev+0x390>)
 80026b6:	f7ff ffa3 	bl	8002600 <_ZN8touchgfx8TextAreaC1Ev>
 80026ba:	f504 73fe 	add.w	r3, r4, #508	; 0x1fc
 80026be:	f8c4 61bc 	str.w	r6, [r4, #444]	; 0x1bc
 80026c2:	4618      	mov	r0, r3
 80026c4:	f8c4 51f8 	str.w	r5, [r4, #504]	; 0x1f8
 80026c8:	ee0b 3a10 	vmov	s22, r3
 80026cc:	f7ff ff32 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 80026d0:	f504 730a 	add.w	r3, r4, #552	; 0x228
 80026d4:	4618      	mov	r0, r3
 80026d6:	ee0b 3a90 	vmov	s23, r3
 80026da:	f7ff ff2b 	bl	8002534 <_ZN8touchgfx3BoxC1Ev>
 80026de:	f504 7315 	add.w	r3, r4, #596	; 0x254
 80026e2:	4618      	mov	r0, r3
 80026e4:	f504 7b24 	add.w	fp, r4, #656	; 0x290
 80026e8:	ee09 3a10 	vmov	s18, r3
 80026ec:	f7ff ff88 	bl	8002600 <_ZN8touchgfx8TextAreaC1Ev>
 80026f0:	4658      	mov	r0, fp
 80026f2:	f7ff ff85 	bl	8002600 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80026f6:	4bb6      	ldr	r3, [pc, #728]	; (80029d0 <_ZN15Screen1ViewBaseC1Ev+0x394>)
 80026f8:	f8c4 6290 	str.w	r6, [r4, #656]	; 0x290
 80026fc:	e9c4 34b7 	strd	r3, r4, [r4, #732]	; 0x2dc
 8002700:	4bb4      	ldr	r3, [pc, #720]	; (80029d4 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 8002702:	f8c4 52cc 	str.w	r5, [r4, #716]	; 0x2cc
 8002706:	e9c4 35b9 	strd	r3, r5, [r4, #740]	; 0x2e4
    __background.setPosition(0, 0, 800, 480);
 800270a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800270e:	9300      	str	r3, [sp, #0]
 8002710:	462a      	mov	r2, r5
 8002712:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002716:	4629      	mov	r1, r5
 8002718:	4650      	mov	r0, sl
 800271a:	f7ff fef8 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800271e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002722:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(-20, -13, 828, 506);
 8002724:	f44f 73fd 	mov.w	r3, #506	; 0x1fa
 8002728:	ee19 0a90 	vmov	r0, s19
 800272c:	9300      	str	r3, [sp, #0]
 800272e:	f06f 020c 	mvn.w	r2, #12
 8002732:	f44f 734f 	mov.w	r3, #828	; 0x33c
 8002736:	f06f 0113 	mvn.w	r1, #19
 800273a:	f7ff fee8 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
 800273e:	4ba6      	ldr	r3, [pc, #664]	; (80029d8 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 8002740:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    buttonColor.setXY(315, 210);
 8002744:	22d2      	movs	r2, #210	; 0xd2
 8002746:	f240 113b 	movw	r1, #315	; 0x13b
 800274a:	4648      	mov	r0, r9
 800274c:	f7ff fed2 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002750:	2701      	movs	r7, #1
    buttonColor.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8002752:	aa06      	add	r2, sp, #24
 8002754:	a905      	add	r1, sp, #20
 8002756:	4648      	mov	r0, r9
 8002758:	f8ad 7018 	strh.w	r7, [sp, #24]
 800275c:	f8ad 5014 	strh.w	r5, [sp, #20]
 8002760:	f008 f9e7 	bl	800ab32 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002764:	4648      	mov	r0, r9
class TypedText
 8002766:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 800276a:	f7ff fef9 	bl	8002560 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800276e:	f04f 36ff 	mov.w	r6, #4294967295
    buttonColor.setAction(buttonCallback);
 8002772:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002776:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    buttonLED.setXY(139, 369);
 800277a:	f240 1271 	movw	r2, #369	; 0x171
 800277e:	218b      	movs	r1, #139	; 0x8b
 8002780:	4640      	mov	r0, r8
        colorPressed = col;
 8002782:	e9c4 6635 	strd	r6, r6, [r4, #212]	; 0xd4
 8002786:	9303      	str	r3, [sp, #12]
 8002788:	f7ff feb4 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonLED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800278c:	aa06      	add	r2, sp, #24
 800278e:	a905      	add	r1, sp, #20
 8002790:	4640      	mov	r0, r8
 8002792:	f8ad 7018 	strh.w	r7, [sp, #24]
 8002796:	f8ad 5014 	strh.w	r5, [sp, #20]
 800279a:	f008 f9ca 	bl	800ab32 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800279e:	f8a4 7118 	strh.w	r7, [r4, #280]	; 0x118
        updateTextPosition();
 80027a2:	4640      	mov	r0, r8
 80027a4:	f7ff fedc 	bl	8002560 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    box2.setPosition(603, 374, 50, 50);
 80027a8:	2732      	movs	r7, #50	; 0x32
 80027aa:	9b03      	ldr	r3, [sp, #12]
 80027ac:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80027b0:	ee1a 0a10 	vmov	r0, s20
 80027b4:	463b      	mov	r3, r7
 80027b6:	f44f 72bb 	mov.w	r2, #374	; 0x176
 80027ba:	f240 215b 	movw	r1, #603	; 0x25b
        colorPressed = col;
 80027be:	e9c4 6647 	strd	r6, r6, [r4, #284]	; 0x11c
 80027c2:	9700      	str	r7, [sp, #0]
 80027c4:	f7ff fea3 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
    box4_1.setPosition(481, 374, 122, 50);
 80027c8:	ee1a 0a90 	vmov	r0, s21
 80027cc:	237a      	movs	r3, #122	; 0x7a
 80027ce:	f44f 72bb 	mov.w	r2, #374	; 0x176
 80027d2:	f240 11e1 	movw	r1, #481	; 0x1e1
 80027d6:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
 80027da:	9700      	str	r7, [sp, #0]
 80027dc:	f7ff fe97 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
 80027e0:	4b7e      	ldr	r3, [pc, #504]	; (80029dc <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 80027e2:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
    textArea1_1.setXY(498, 387);
 80027e6:	f240 1283 	movw	r2, #387	; 0x183
 80027ea:	ee18 0a10 	vmov	r0, s16
 80027ee:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 80027f2:	f7ff fe7f 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80027f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80027fa:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        : typedTextId(id)
 80027fe:	4b78      	ldr	r3, [pc, #480]	; (80029e0 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8002800:	9306      	str	r3, [sp, #24]
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QYVC));
 8002802:	ee18 0a10 	vmov	r0, s16
 8002806:	2302      	movs	r3, #2
 8002808:	a906      	add	r1, sp, #24
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 800280a:	f8a4 51b4 	strh.w	r5, [r4, #436]	; 0x1b4
 800280e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002812:	f008 f94b 	bl	800aaac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    countB.setPosition(609, 387, 38, 25);
 8002816:	2319      	movs	r3, #25
 8002818:	9300      	str	r3, [sp, #0]
 800281a:	ee18 0a90 	vmov	r0, s17
 800281e:	2326      	movs	r3, #38	; 0x26
 8002820:	f240 1283 	movw	r2, #387	; 0x183
 8002824:	f240 2161 	movw	r1, #609	; 0x261
 8002828:	f7ff fe71 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800282c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002830:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
    Unicode::snprintf(countBBuffer, COUNTB_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JR7C).getText());
 8002834:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002838:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800283a:	4b6a      	ldr	r3, [pc, #424]	; (80029e4 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
        linespace = space;
 800283c:	f8a4 51f0 	strh.w	r5, [r4, #496]	; 0x1f0
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	b92b      	cbnz	r3, 8002850 <_ZN15Screen1ViewBaseC1Ev+0x214>
 8002844:	4b68      	ldr	r3, [pc, #416]	; (80029e8 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002846:	4a69      	ldr	r2, [pc, #420]	; (80029ec <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 8002848:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800284a:	4869      	ldr	r0, [pc, #420]	; (80029f0 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 800284c:	f019 f948 	bl	801bae0 <__assert_func>
 8002850:	4b68      	ldr	r3, [pc, #416]	; (80029f4 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002852:	881b      	ldrh	r3, [r3, #0]
 8002854:	2b03      	cmp	r3, #3
 8002856:	d803      	bhi.n	8002860 <_ZN15Screen1ViewBaseC1Ev+0x224>
 8002858:	4b67      	ldr	r3, [pc, #412]	; (80029f8 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 800285a:	4a64      	ldr	r2, [pc, #400]	; (80029ec <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 800285c:	21af      	movs	r1, #175	; 0xaf
 800285e:	e7f4      	b.n	800284a <_ZN15Screen1ViewBaseC1Ev+0x20e>
        return texts->getText(typedTextId);
 8002860:	4b66      	ldr	r3, [pc, #408]	; (80029fc <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002862:	2103      	movs	r1, #3
 8002864:	6818      	ldr	r0, [r3, #0]
 8002866:	f000 fa2d 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800286a:	4a65      	ldr	r2, [pc, #404]	; (8002a00 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 800286c:	4603      	mov	r3, r0
 800286e:	2103      	movs	r1, #3
 8002870:	9803      	ldr	r0, [sp, #12]
 8002872:	f00c ffcb 	bl	800f80c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002876:	9a03      	ldr	r2, [sp, #12]
        : typedTextId(id)
 8002878:	4b59      	ldr	r3, [pc, #356]	; (80029e0 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 800287a:	f8c4 21f8 	str.w	r2, [r4, #504]	; 0x1f8
    countB.setTypedText(touchgfx::TypedText(T_COUNTER));
 800287e:	ee18 0a90 	vmov	r0, s17
 8002882:	9306      	str	r3, [sp, #24]
 8002884:	a906      	add	r1, sp, #24
 8002886:	2304      	movs	r3, #4
 8002888:	f8ad 301c 	strh.w	r3, [sp, #28]
 800288c:	f008 f90e 	bl	800aaac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    box4_1_1.setPosition(481, 71, 122, 50);
 8002890:	ee1b 0a10 	vmov	r0, s22
 8002894:	237a      	movs	r3, #122	; 0x7a
 8002896:	2247      	movs	r2, #71	; 0x47
 8002898:	f240 11e1 	movw	r1, #481	; 0x1e1
 800289c:	9700      	str	r7, [sp, #0]
 800289e:	f7ff fe36 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
 80028a2:	4a4e      	ldr	r2, [pc, #312]	; (80029dc <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 80028a4:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
    box2_1.setPosition(603, 71, 50, 50);
 80028a8:	463b      	mov	r3, r7
 80028aa:	ee1b 0a90 	vmov	r0, s23
 80028ae:	2247      	movs	r2, #71	; 0x47
 80028b0:	f240 215b 	movw	r1, #603	; 0x25b
 80028b4:	9700      	str	r7, [sp, #0]
 80028b6:	f7ff fe2a 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1_1_1.setXY(498, 84);
 80028ba:	ee19 0a10 	vmov	r0, s18
 80028be:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80028c2:	2254      	movs	r2, #84	; 0x54
 80028c4:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 80028c8:	f7ff fe14 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80028cc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80028d0:	2305      	movs	r3, #5
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E6FP));
 80028d2:	ee19 0a10 	vmov	r0, s18
 80028d6:	f8c4 2284 	str.w	r2, [r4, #644]	; 0x284
        linespace = space;
 80028da:	f8a4 5288 	strh.w	r5, [r4, #648]	; 0x288
 80028de:	a906      	add	r1, sp, #24
 80028e0:	4e3f      	ldr	r6, [pc, #252]	; (80029e0 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 80028e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80028e6:	9606      	str	r6, [sp, #24]
 80028e8:	f008 f8e0 	bl	800aaac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    countR.setPosition(609, 84, 38, 25);
 80028ec:	2219      	movs	r2, #25
 80028ee:	9200      	str	r2, [sp, #0]
 80028f0:	2326      	movs	r3, #38	; 0x26
 80028f2:	2254      	movs	r2, #84	; 0x54
 80028f4:	f240 2161 	movw	r1, #609	; 0x261
 80028f8:	4658      	mov	r0, fp
 80028fa:	f7ff fe08 	bl	800250e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80028fe:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002902:	f8c4 22c0 	str.w	r2, [r4, #704]	; 0x2c0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002906:	4a37      	ldr	r2, [pc, #220]	; (80029e4 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
        linespace = space;
 8002908:	f8a4 52c4 	strh.w	r5, [r4, #708]	; 0x2c4
 800290c:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(countRBuffer, COUNTR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7MQO).getText());
 800290e:	f204 25d6 	addw	r5, r4, #726	; 0x2d6
 8002912:	2b00      	cmp	r3, #0
 8002914:	d096      	beq.n	8002844 <_ZN15Screen1ViewBaseC1Ev+0x208>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002916:	4a37      	ldr	r2, [pc, #220]	; (80029f4 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002918:	8813      	ldrh	r3, [r2, #0]
 800291a:	2b06      	cmp	r3, #6
 800291c:	d99c      	bls.n	8002858 <_ZN15Screen1ViewBaseC1Ev+0x21c>
        return texts->getText(typedTextId);
 800291e:	4b37      	ldr	r3, [pc, #220]	; (80029fc <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002920:	2106      	movs	r1, #6
 8002922:	6818      	ldr	r0, [r3, #0]
 8002924:	f000 f9ce 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 8002928:	4a35      	ldr	r2, [pc, #212]	; (8002a00 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 800292a:	4603      	mov	r3, r0
 800292c:	2103      	movs	r1, #3
 800292e:	4628      	mov	r0, r5
 8002930:	f00c ff6c 	bl	800f80c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002934:	2307      	movs	r3, #7
 8002936:	f8c4 52cc 	str.w	r5, [r4, #716]	; 0x2cc
    countR.setTypedText(touchgfx::TypedText(T_COUNTERR));
 800293a:	a906      	add	r1, sp, #24
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800293c:	1d25      	adds	r5, r4, #4
 800293e:	4658      	mov	r0, fp
 8002940:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002944:	9606      	str	r6, [sp, #24]
 8002946:	f008 f8b1 	bl	800aaac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800294a:	4651      	mov	r1, sl
 800294c:	4628      	mov	r0, r5
 800294e:	f006 fc9f 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002952:	ee19 1a90 	vmov	r1, s19
 8002956:	4628      	mov	r0, r5
 8002958:	f006 fc9a 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800295c:	4649      	mov	r1, r9
 800295e:	4628      	mov	r0, r5
 8002960:	f006 fc96 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002964:	4641      	mov	r1, r8
 8002966:	4628      	mov	r0, r5
 8002968:	f006 fc92 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800296c:	ee1a 1a10 	vmov	r1, s20
 8002970:	4628      	mov	r0, r5
 8002972:	f006 fc8d 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002976:	ee1a 1a90 	vmov	r1, s21
 800297a:	4628      	mov	r0, r5
 800297c:	f006 fc88 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002980:	ee18 1a10 	vmov	r1, s16
 8002984:	4628      	mov	r0, r5
 8002986:	f006 fc83 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800298a:	ee18 1a90 	vmov	r1, s17
 800298e:	4628      	mov	r0, r5
 8002990:	f006 fc7e 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002994:	ee1b 1a10 	vmov	r1, s22
 8002998:	4628      	mov	r0, r5
 800299a:	f006 fc79 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800299e:	ee1b 1a90 	vmov	r1, s23
 80029a2:	4628      	mov	r0, r5
 80029a4:	f006 fc74 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029a8:	ee19 1a10 	vmov	r1, s18
 80029ac:	4628      	mov	r0, r5
 80029ae:	f006 fc6f 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029b2:	4628      	mov	r0, r5
 80029b4:	4659      	mov	r1, fp
 80029b6:	f006 fc6b 	bl	8009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029ba:	4620      	mov	r0, r4
 80029bc:	b009      	add	sp, #36	; 0x24
 80029be:	ecbd 8b08 	vpop	{d8-d11}
 80029c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029c6:	bf00      	nop
 80029c8:	0801d88c 	.word	0x0801d88c
 80029cc:	0801ea04 	.word	0x0801ea04
 80029d0:	0801d874 	.word	0x0801d874
 80029d4:	080024d7 	.word	0x080024d7
 80029d8:	ff058518 	.word	0xff058518
 80029dc:	ff999999 	.word	0xff999999
 80029e0:	0801d360 	.word	0x0801d360
 80029e4:	2000a308 	.word	0x2000a308
 80029e8:	0801d760 	.word	0x0801d760
 80029ec:	0801d7a2 	.word	0x0801d7a2
 80029f0:	0801d7d0 	.word	0x0801d7d0
 80029f4:	2000a30c 	.word	0x2000a30c
 80029f8:	0801d817 	.word	0x0801d817
 80029fc:	2000a314 	.word	0x2000a314
 8002a00:	0801d869 	.word	0x0801d869

08002a04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a04:	4770      	bx	lr
	...

08002a08 <_Z23getFont_verdana_10_4bppv>:
{
 8002a08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a0a:	4d15      	ldr	r5, [pc, #84]	; (8002a60 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002a0c:	782c      	ldrb	r4, [r5, #0]
 8002a0e:	f3bf 8f5b 	dmb	ish
 8002a12:	f014 0401 	ands.w	r4, r4, #1
{
 8002a16:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a18:	d11e      	bne.n	8002a58 <_Z23getFont_verdana_10_4bppv+0x50>
 8002a1a:	4628      	mov	r0, r5
 8002a1c:	f019 f834 	bl	801ba88 <__cxa_guard_acquire>
 8002a20:	b1d0      	cbz	r0, 8002a58 <_Z23getFont_verdana_10_4bppv+0x50>
 8002a22:	233f      	movs	r3, #63	; 0x3f
 8002a24:	9307      	str	r3, [sp, #28]
 8002a26:	4b0f      	ldr	r3, [pc, #60]	; (8002a64 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002a28:	9306      	str	r3, [sp, #24]
 8002a2a:	4b0f      	ldr	r3, [pc, #60]	; (8002a68 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002a2c:	490f      	ldr	r1, [pc, #60]	; (8002a6c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002a2e:	4810      	ldr	r0, [pc, #64]	; (8002a70 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a30:	9408      	str	r4, [sp, #32]
 8002a32:	2201      	movs	r2, #1
 8002a34:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002a38:	2304      	movs	r3, #4
 8002a3a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002a3e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002a42:	230a      	movs	r3, #10
 8002a44:	9403      	str	r4, [sp, #12]
 8002a46:	9400      	str	r4, [sp, #0]
 8002a48:	f7ff fcba 	bl	80023c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a4c:	4628      	mov	r0, r5
 8002a4e:	f019 f827 	bl	801baa0 <__cxa_guard_release>
 8002a52:	4808      	ldr	r0, [pc, #32]	; (8002a74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a54:	f019 f862 	bl	801bb1c <atexit>
    return verdana_10_4bpp;
}
 8002a58:	4805      	ldr	r0, [pc, #20]	; (8002a70 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a5a:	b00d      	add	sp, #52	; 0x34
 8002a5c:	bd30      	pop	{r4, r5, pc}
 8002a5e:	bf00      	nop
 8002a60:	20001360 	.word	0x20001360
 8002a64:	0802027c 	.word	0x0802027c
 8002a68:	08020288 	.word	0x08020288
 8002a6c:	90014830 	.word	0x90014830
 8002a70:	20001364 	.word	0x20001364
 8002a74:	08002a05 	.word	0x08002a05

08002a78 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8002a78:	4770      	bx	lr
	...

08002a7c <_Z23getFont_verdana_20_4bppv>:
{
 8002a7c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8002a7e:	4d15      	ldr	r5, [pc, #84]	; (8002ad4 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002a80:	782c      	ldrb	r4, [r5, #0]
 8002a82:	f3bf 8f5b 	dmb	ish
 8002a86:	f014 0401 	ands.w	r4, r4, #1
{
 8002a8a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8002a8c:	d11e      	bne.n	8002acc <_Z23getFont_verdana_20_4bppv+0x50>
 8002a8e:	4628      	mov	r0, r5
 8002a90:	f018 fffa 	bl	801ba88 <__cxa_guard_acquire>
 8002a94:	b1d0      	cbz	r0, 8002acc <_Z23getFont_verdana_20_4bppv+0x50>
 8002a96:	4b10      	ldr	r3, [pc, #64]	; (8002ad8 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002a98:	9306      	str	r3, [sp, #24]
 8002a9a:	4b10      	ldr	r3, [pc, #64]	; (8002adc <_Z23getFont_verdana_20_4bppv+0x60>)
 8002a9c:	9305      	str	r3, [sp, #20]
 8002a9e:	2301      	movs	r3, #1
 8002aa0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002aa4:	9302      	str	r3, [sp, #8]
 8002aa6:	2304      	movs	r3, #4
 8002aa8:	e9cd 3300 	strd	r3, r3, [sp]
 8002aac:	490c      	ldr	r1, [pc, #48]	; (8002ae0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002aae:	480d      	ldr	r0, [pc, #52]	; (8002ae4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002ab0:	2314      	movs	r3, #20
 8002ab2:	221e      	movs	r2, #30
 8002ab4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002ab8:	e9cd 4407 	strd	r4, r4, [sp, #28]
 8002abc:	f7ff fc80 	bl	80023c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002ac0:	4628      	mov	r0, r5
 8002ac2:	f018 ffed 	bl	801baa0 <__cxa_guard_release>
 8002ac6:	4808      	ldr	r0, [pc, #32]	; (8002ae8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002ac8:	f019 f828 	bl	801bb1c <atexit>
    return verdana_20_4bpp;
}
 8002acc:	4805      	ldr	r0, [pc, #20]	; (8002ae4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002ace:	b00d      	add	sp, #52	; 0x34
 8002ad0:	bd30      	pop	{r4, r5, pc}
 8002ad2:	bf00      	nop
 8002ad4:	2000138c 	.word	0x2000138c
 8002ad8:	08020280 	.word	0x08020280
 8002adc:	0802028c 	.word	0x0802028c
 8002ae0:	90014840 	.word	0x90014840
 8002ae4:	20001390 	.word	0x20001390
 8002ae8:	08002a79 	.word	0x08002a79

08002aec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002aec:	4770      	bx	lr
	...

08002af0 <_Z23getFont_verdana_40_4bppv>:
{
 8002af0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002af2:	4d15      	ldr	r5, [pc, #84]	; (8002b48 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002af4:	782c      	ldrb	r4, [r5, #0]
 8002af6:	f3bf 8f5b 	dmb	ish
 8002afa:	f014 0401 	ands.w	r4, r4, #1
{
 8002afe:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b00:	d11e      	bne.n	8002b40 <_Z23getFont_verdana_40_4bppv+0x50>
 8002b02:	4628      	mov	r0, r5
 8002b04:	f018 ffc0 	bl	801ba88 <__cxa_guard_acquire>
 8002b08:	b1d0      	cbz	r0, 8002b40 <_Z23getFont_verdana_40_4bppv+0x50>
 8002b0a:	233f      	movs	r3, #63	; 0x3f
 8002b0c:	9307      	str	r3, [sp, #28]
 8002b0e:	4b0f      	ldr	r3, [pc, #60]	; (8002b4c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002b10:	9306      	str	r3, [sp, #24]
 8002b12:	4b0f      	ldr	r3, [pc, #60]	; (8002b50 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002b14:	490f      	ldr	r1, [pc, #60]	; (8002b54 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002b16:	4810      	ldr	r0, [pc, #64]	; (8002b58 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b18:	9408      	str	r4, [sp, #32]
 8002b1a:	2201      	movs	r2, #1
 8002b1c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002b20:	2304      	movs	r3, #4
 8002b22:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002b26:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002b2a:	2328      	movs	r3, #40	; 0x28
 8002b2c:	9403      	str	r4, [sp, #12]
 8002b2e:	9400      	str	r4, [sp, #0]
 8002b30:	f7ff fc46 	bl	80023c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002b34:	4628      	mov	r0, r5
 8002b36:	f018 ffb3 	bl	801baa0 <__cxa_guard_release>
 8002b3a:	4808      	ldr	r0, [pc, #32]	; (8002b5c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002b3c:	f018 ffee 	bl	801bb1c <atexit>
    return verdana_40_4bpp;
}
 8002b40:	4805      	ldr	r0, [pc, #20]	; (8002b58 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b42:	b00d      	add	sp, #52	; 0x34
 8002b44:	bd30      	pop	{r4, r5, pc}
 8002b46:	bf00      	nop
 8002b48:	200013b8 	.word	0x200013b8
 8002b4c:	08020284 	.word	0x08020284
 8002b50:	08020290 	.word	0x08020290
 8002b54:	900149e4 	.word	0x900149e4
 8002b58:	200013bc 	.word	0x200013bc
 8002b5c:	08002aed 	.word	0x08002aed

08002b60 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002b60:	2000      	movs	r0, #0
 8002b62:	4770      	bx	lr

08002b64 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002b64:	2000      	movs	r0, #0
 8002b66:	4770      	bx	lr

08002b68 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b68:	b40e      	push	{r1, r2, r3}
 8002b6a:	b503      	push	{r0, r1, lr}
 8002b6c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b6e:	2100      	movs	r1, #0
{
 8002b70:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002b74:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b76:	f00a fdb7 	bl	800d6e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b7a:	b002      	add	sp, #8
 8002b7c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b80:	b003      	add	sp, #12
 8002b82:	4770      	bx	lr

08002b84 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b84:	b40c      	push	{r2, r3}
 8002b86:	b507      	push	{r0, r1, r2, lr}
 8002b88:	ab04      	add	r3, sp, #16
 8002b8a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002b8e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002b90:	f00a fdaa 	bl	800d6e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b94:	b003      	add	sp, #12
 8002b96:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b9a:	b002      	add	sp, #8
 8002b9c:	4770      	bx	lr
	...

08002ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002ba0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002ba2:	b510      	push	{r4, lr}
 8002ba4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002ba6:	b373      	cbz	r3, 8002c06 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002ba8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002baa:	b92b      	cbnz	r3, 8002bb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002bac:	4b18      	ldr	r3, [pc, #96]	; (8002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002bae:	4a19      	ldr	r2, [pc, #100]	; (8002c14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002bb0:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002bb2:	4819      	ldr	r0, [pc, #100]	; (8002c18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002bb4:	f018 ff94 	bl	801bae0 <__assert_func>
            return buffer[pos];
 8002bb8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002bba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002bbe:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002bc0:	b30b      	cbz	r3, 8002c06 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002bc2:	f00c f869 	bl	800ec98 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002bc6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002bc8:	2b01      	cmp	r3, #1
 8002bca:	d803      	bhi.n	8002bd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002bcc:	4b13      	ldr	r3, [pc, #76]	; (8002c1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002bce:	4a14      	ldr	r2, [pc, #80]	; (8002c20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002bd0:	21c5      	movs	r1, #197	; 0xc5
 8002bd2:	e7ee      	b.n	8002bb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002bd4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002bd6:	1c53      	adds	r3, r2, #1
 8002bd8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002bda:	2b09      	cmp	r3, #9
 8002bdc:	4619      	mov	r1, r3
 8002bde:	bf88      	it	hi
 8002be0:	f1a3 010a 	subhi.w	r1, r3, #10
 8002be4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002be8:	f640 103f 	movw	r0, #2367	; 0x93f
 8002bec:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002bee:	4281      	cmp	r1, r0
 8002bf0:	d109      	bne.n	8002c06 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002bf2:	2b0a      	cmp	r3, #10
 8002bf4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002bf8:	bf28      	it	cs
 8002bfa:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002bfc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002c00:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002c02:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002c04:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002c06:	4620      	mov	r0, r4
}
 8002c08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002c0c:	f00b bf28 	b.w	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002c10:	0801d8c0 	.word	0x0801d8c0
 8002c14:	0801d8c9 	.word	0x0801d8c9
 8002c18:	0801d974 	.word	0x0801d974
 8002c1c:	0801d9be 	.word	0x0801d9be
 8002c20:	0801d9cc 	.word	0x0801d9cc

08002c24 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002c24:	f00b bed4 	b.w	800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002c28 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002c28:	b510      	push	{r4, lr}
 8002c2a:	b086      	sub	sp, #24
 8002c2c:	ac02      	add	r4, sp, #8
 8002c2e:	e884 0006 	stmia.w	r4, {r1, r2}
 8002c32:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002c34:	ab0a      	add	r3, sp, #40	; 0x28
 8002c36:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002c38:	9301      	str	r3, [sp, #4]
 8002c3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c3c:	9300      	str	r3, [sp, #0]
 8002c3e:	4621      	mov	r1, r4
 8002c40:	9b08      	ldr	r3, [sp, #32]
 8002c42:	f009 fa66 	bl	800c112 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002c46:	b006      	add	sp, #24
 8002c48:	bd10      	pop	{r4, pc}
	...

08002c4c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002c4c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002c4e:	bb18      	cbnz	r0, 8002c98 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002c50:	4b12      	ldr	r3, [pc, #72]	; (8002c9c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002c52:	4813      	ldr	r0, [pc, #76]	; (8002ca0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	4913      	ldr	r1, [pc, #76]	; (8002ca4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002c58:	b1b3      	cbz	r3, 8002c88 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c5a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c5c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c5e:	441a      	add	r2, r3
 8002c60:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002c62:	685a      	ldr	r2, [r3, #4]
 8002c64:	441a      	add	r2, r3
 8002c66:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c68:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002c6a:	4b0f      	ldr	r3, [pc, #60]	; (8002ca8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002c6c:	2200      	movs	r2, #0
 8002c6e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002c70:	f000 f838 	bl	8002ce4 <_ZN17TypedTextDatabase8getFontsEv>
 8002c74:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002c76:	f000 f833 	bl	8002ce0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002c7a:	4b0c      	ldr	r3, [pc, #48]	; (8002cac <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002c7c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002c7e:	4b0c      	ldr	r3, [pc, #48]	; (8002cb0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002c80:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002c82:	4b0c      	ldr	r3, [pc, #48]	; (8002cb4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002c84:	8018      	strh	r0, [r3, #0]
    }
}
 8002c86:	e007      	b.n	8002c98 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002c88:	4b0b      	ldr	r3, [pc, #44]	; (8002cb8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002c8a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002c8c:	4b0b      	ldr	r3, [pc, #44]	; (8002cbc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002c8e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002c90:	4b0b      	ldr	r3, [pc, #44]	; (8002cc0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002c92:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002c94:	2c00      	cmp	r4, #0
 8002c96:	d1e8      	bne.n	8002c6a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002c98:	bd38      	pop	{r3, r4, r5, pc}
 8002c9a:	bf00      	nop
 8002c9c:	200013e4 	.word	0x200013e4
 8002ca0:	200013e8 	.word	0x200013e8
 8002ca4:	200013ec 	.word	0x200013ec
 8002ca8:	200013f0 	.word	0x200013f0
 8002cac:	2000a308 	.word	0x2000a308
 8002cb0:	2000a310 	.word	0x2000a310
 8002cb4:	2000a30c 	.word	0x2000a30c
 8002cb8:	90014a14 	.word	0x90014a14
 8002cbc:	900149f4 	.word	0x900149f4
 8002cc0:	90014a80 	.word	0x90014a80

08002cc4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002cc4:	4b04      	ldr	r3, [pc, #16]	; (8002cd8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002ccc:	4b03      	ldr	r3, [pc, #12]	; (8002cdc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002cce:	681b      	ldr	r3, [r3, #0]
}
 8002cd0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002cd4:	4770      	bx	lr
 8002cd6:	bf00      	nop
 8002cd8:	200013ec 	.word	0x200013ec
 8002cdc:	200013e8 	.word	0x200013e8

08002ce0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002ce0:	2008      	movs	r0, #8
 8002ce2:	4770      	bx	lr

08002ce4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002ce4:	4800      	ldr	r0, [pc, #0]	; (8002ce8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002ce6:	4770      	bx	lr
 8002ce8:	200013f4 	.word	0x200013f4

08002cec <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002cec:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002cee:	f7ff fec5 	bl	8002a7c <_Z23getFont_verdana_20_4bppv>
};
 8002cf2:	4c04      	ldr	r4, [pc, #16]	; (8002d04 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002cf4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002cf6:	f7ff fefb 	bl	8002af0 <_Z23getFont_verdana_40_4bppv>
};
 8002cfa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002cfc:	f7ff fe84 	bl	8002a08 <_Z23getFont_verdana_10_4bppv>
};
 8002d00:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002d02:	bd10      	pop	{r4, pc}
 8002d04:	200013f4 	.word	0x200013f4

08002d08 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002d08:	4770      	bx	lr

08002d0a <_ZN19FrontendApplicationD0Ev>:
 8002d0a:	b510      	push	{r4, lr}
 8002d0c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002d10:	4604      	mov	r4, r0
 8002d12:	f018 feb7 	bl	801ba84 <_ZdlPvj>
 8002d16:	4620      	mov	r0, r4
 8002d18:	bd10      	pop	{r4, pc}

08002d1a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002d1a:	b510      	push	{r4, lr}
 8002d1c:	4604      	mov	r4, r0
    {
        model.tick();
 8002d1e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002d22:	f000 f813 	bl	8002d4c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002d26:	4620      	mov	r0, r4
    }
 8002d28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002d2c:	f009 bd4e 	b.w	800c7cc <_ZN8touchgfx11Application15handleTickEventEv>

08002d30 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002d30:	b510      	push	{r4, lr}
 8002d32:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002d34:	f7ff fa1e 	bl	8002174 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002d38:	4b01      	ldr	r3, [pc, #4]	; (8002d40 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002d3a:	6023      	str	r3, [r4, #0]
{

}
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	bd10      	pop	{r4, pc}
 8002d40:	0801daa8 	.word	0x0801daa8

08002d44 <_ZN5ModelC1Ev>:
	extern int var1;
	extern void Toggle_LEDblue(void);
}


Model::Model() : modelListener(0)
 8002d44:	2200      	movs	r2, #0
 8002d46:	6002      	str	r2, [r0, #0]
{

}
 8002d48:	4770      	bx	lr
	...

08002d4c <_ZN5Model4tickEv>:

void Model::tick()
{
 8002d4c:	b510      	push	{r4, lr}
#ifndef SIMULATOR
	if((LED_TFT)==1)
 8002d4e:	4c06      	ldr	r4, [pc, #24]	; (8002d68 <_ZN5Model4tickEv+0x1c>)
 8002d50:	6823      	ldr	r3, [r4, #0]
 8002d52:	2b01      	cmp	r3, #1
 8002d54:	d107      	bne.n	8002d66 <_ZN5Model4tickEv+0x1a>
	{
		modelListener->userButton(var1);
 8002d56:	6800      	ldr	r0, [r0, #0]
 8002d58:	4a04      	ldr	r2, [pc, #16]	; (8002d6c <_ZN5Model4tickEv+0x20>)
 8002d5a:	6803      	ldr	r3, [r0, #0]
 8002d5c:	6811      	ldr	r1, [r2, #0]
 8002d5e:	689b      	ldr	r3, [r3, #8]
 8002d60:	4798      	blx	r3
		LED_TFT = 0;
 8002d62:	2300      	movs	r3, #0
 8002d64:	6023      	str	r3, [r4, #0]
	}
#endif
}
 8002d66:	bd10      	pop	{r4, pc}
 8002d68:	2000134c 	.word	0x2000134c
 8002d6c:	20001350 	.word	0x20001350

08002d70 <_ZN5Model11HW_LED_blueEv>:

void Model::HW_LED_blue()
{
	Toggle_LEDblue();
 8002d70:	f7fe be3a 	b.w	80019e8 <Toggle_LEDblue>

08002d74 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002d74:	4770      	bx	lr

08002d76 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002d76:	3804      	subs	r0, #4
 8002d78:	4770      	bx	lr

08002d7a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002d7a:	4770      	bx	lr

08002d7c <_ZN16Screen1Presenter10userButtonEi>:
void Screen1Presenter::SwB_LED_blue(){
	model->HW_LED_blue();
}

void Screen1Presenter::userButton(int var1){
	view.ColorBack(var1);
 8002d7c:	68c0      	ldr	r0, [r0, #12]
 8002d7e:	6803      	ldr	r3, [r0, #0]
 8002d80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002d82:	4718      	bx	r3

08002d84 <_ZThn4_N16Screen1Presenter10userButtonEi>:

    virtual void SwB_LED_blue();

    virtual void userButton(int var1);
 8002d84:	f1a0 0004 	sub.w	r0, r0, #4
 8002d88:	f7ff bff8 	b.w	8002d7c <_ZN16Screen1Presenter10userButtonEi>

08002d8c <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8002d8c:	b510      	push	{r4, lr}
 8002d8e:	2110      	movs	r1, #16
 8002d90:	4604      	mov	r4, r0
 8002d92:	f018 fe77 	bl	801ba84 <_ZdlPvj>
 8002d96:	4620      	mov	r0, r4
 8002d98:	bd10      	pop	{r4, pc}

08002d9a <_ZThn4_N16Screen1PresenterD0Ev>:
 8002d9a:	f1a0 0004 	sub.w	r0, r0, #4
 8002d9e:	e7f5      	b.n	8002d8c <_ZN16Screen1PresenterD0Ev>

08002da0 <_ZN16Screen1Presenter12SwB_LED_blueEv>:
	model->HW_LED_blue();
 8002da0:	6880      	ldr	r0, [r0, #8]
 8002da2:	f7ff bfe5 	b.w	8002d70 <_ZN5Model11HW_LED_blueEv>
	...

08002da8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002da8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002daa:	2200      	movs	r2, #0
 8002dac:	6082      	str	r2, [r0, #8]
    : view(v)
 8002dae:	4a04      	ldr	r2, [pc, #16]	; (8002dc0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002db0:	60c1      	str	r1, [r0, #12]
 8002db2:	f102 0408 	add.w	r4, r2, #8
 8002db6:	3228      	adds	r2, #40	; 0x28
 8002db8:	6004      	str	r4, [r0, #0]
 8002dba:	6042      	str	r2, [r0, #4]
}
 8002dbc:	bd10      	pop	{r4, pc}
 8002dbe:	bf00      	nop
 8002dc0:	0801dae4 	.word	0x0801dae4

08002dc4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002dc4:	4770      	bx	lr

08002dc6 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002dc6:	4770      	bx	lr

08002dc8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002dc8:	f7ff bb59 	b.w	800247e <_ZN15Screen1ViewBase11setupScreenEv>

08002dcc <_ZN11Screen1View9LEDScreenEv>:

void Screen1View::LEDScreen()
{
 8002dcc:	b510      	push	{r4, lr}
 8002dce:	4604      	mov	r4, r0
    presenter -> SwB_LED_blue();
 8002dd0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002dd2:	6803      	ldr	r3, [r0, #0]
 8002dd4:	691b      	ldr	r3, [r3, #16]
 8002dd6:	4798      	blx	r3
    counterB ++;
 8002dd8:	f894 32ec 	ldrb.w	r3, [r4, #748]	; 0x2ec
    Unicode::snprintf(countBBuffer, 3, "%d", counterB);
 8002ddc:	4a07      	ldr	r2, [pc, #28]	; (8002dfc <_ZN11Screen1View9LEDScreenEv+0x30>)
    counterB ++;
 8002dde:	3301      	adds	r3, #1
 8002de0:	b2db      	uxtb	r3, r3
 8002de2:	f884 32ec 	strb.w	r3, [r4, #748]	; 0x2ec
    Unicode::snprintf(countBBuffer, 3, "%d", counterB);
 8002de6:	f504 7034 	add.w	r0, r4, #720	; 0x2d0
 8002dea:	2103      	movs	r1, #3
 8002dec:	f00c fd0e 	bl	800f80c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    countB.invalidate();
 8002df0:	f504 70de 	add.w	r0, r4, #444	; 0x1bc

}
 8002df4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    countB.invalidate();
 8002df8:	f00a bd97 	b.w	800d92a <_ZNK8touchgfx8Drawable10invalidateEv>
 8002dfc:	0801db18 	.word	0x0801db18

08002e00 <_ZN11Screen1View9ColorBackEi>:

void Screen1View::ColorBack(int var1)
{
 8002e00:	b510      	push	{r4, lr}
   	box1.setColor(box1.getColor() + 1234); //pega a cor e modifica diminuindo o 1234
 8002e02:	f8d0 3094 	ldr.w	r3, [r0, #148]	; 0x94
    //counterR ++;
   	counterR = var1;
 8002e06:	f880 12ed 	strb.w	r1, [r0, #749]	; 0x2ed
   	box1.setColor(box1.getColor() + 1234); //pega a cor e modifica diminuindo o 1234
 8002e0a:	f203 43d2 	addw	r3, r3, #1234	; 0x4d2
{
 8002e0e:	4604      	mov	r4, r0
 8002e10:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
   	Unicode::snprintf(countRBuffer, 3, "%d", counterR);
 8002e14:	4a08      	ldr	r2, [pc, #32]	; (8002e38 <_ZN11Screen1View9ColorBackEi+0x38>)
 8002e16:	b2cb      	uxtb	r3, r1
 8002e18:	f200 20d6 	addw	r0, r0, #726	; 0x2d6
 8002e1c:	2103      	movs	r1, #3
 8002e1e:	f00c fcf5 	bl	800f80c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    countR.invalidate();
 8002e22:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8002e26:	f00a fd80 	bl	800d92a <_ZNK8touchgfx8Drawable10invalidateEv>
    box1.invalidate(); //usar o invalidate pra for�ar a mudan�a na tela
 8002e2a:	f104 006c 	add.w	r0, r4, #108	; 0x6c

   // Unicode::snprintf(touchgfx::TypedText(T___SINGLEUSE_1T40).getText(), 3, "%d", countR);
   // textValueR.invalidate();
}
 8002e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    box1.invalidate(); //usar o invalidate pra for�ar a mudan�a na tela
 8002e32:	f00a bd7a 	b.w	800d92a <_ZNK8touchgfx8Drawable10invalidateEv>
 8002e36:	bf00      	nop
 8002e38:	0801db18 	.word	0x0801db18

08002e3c <_ZN11Screen1View9BoxCollorEv>:
    virtual void tearDownScreen();
    virtual void LEDScreen();
    virtual void ColorBack(int var1);
    virtual void BoxCollor()
    {
        box1.setColor(box1.getColor() + 1234); //pega a cor e modifica somando o 1234
 8002e3c:	f8d0 3094 	ldr.w	r3, [r0, #148]	; 0x94
 8002e40:	f203 43d2 	addw	r3, r3, #1234	; 0x4d2
 8002e44:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
        box1.invalidate(); //usar o invalidate pra for�ar a mudan�a na tela
 8002e48:	306c      	adds	r0, #108	; 0x6c
 8002e4a:	f00a bd6e 	b.w	800d92a <_ZNK8touchgfx8Drawable10invalidateEv>

08002e4e <_ZN11Screen1ViewD0Ev>:
    virtual ~Screen1View() {}
 8002e4e:	b510      	push	{r4, lr}
 8002e50:	f44f 713c 	mov.w	r1, #752	; 0x2f0
 8002e54:	4604      	mov	r4, r0
 8002e56:	f018 fe15 	bl	801ba84 <_ZdlPvj>
 8002e5a:	4620      	mov	r0, r4
 8002e5c:	bd10      	pop	{r4, pc}
	...

08002e60 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002e60:	b510      	push	{r4, lr}
 8002e62:	4604      	mov	r4, r0
 8002e64:	f7ff fbea 	bl	800263c <_ZN15Screen1ViewBaseC1Ev>
 8002e68:	4b03      	ldr	r3, [pc, #12]	; (8002e78 <_ZN11Screen1ViewC1Ev+0x18>)
 8002e6a:	6023      	str	r3, [r4, #0]
 8002e6c:	2300      	movs	r3, #0
 8002e6e:	f8a4 32ec 	strh.w	r3, [r4, #748]	; 0x2ec
}
 8002e72:	4620      	mov	r0, r4
 8002e74:	bd10      	pop	{r4, pc}
 8002e76:	bf00      	nop
 8002e78:	0801db24 	.word	0x0801db24

08002e7c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002e7c:	4770      	bx	lr

08002e7e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002e7e:	2000      	movs	r0, #0
 8002e80:	4770      	bx	lr

08002e82 <ft6x06_ReadID>:
{
 8002e82:	b510      	push	{r4, lr}
 8002e84:	4604      	mov	r4, r0
  TS_IO_Init();
 8002e86:	f000 fb7d 	bl	8003584 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002e8a:	21a8      	movs	r1, #168	; 0xa8
 8002e8c:	b2e0      	uxtb	r0, r4
 8002e8e:	f000 fb93 	bl	80035b8 <TS_IO_Read>
}
 8002e92:	b280      	uxth	r0, r0
 8002e94:	bd10      	pop	{r4, pc}
	...

08002e98 <ft6x06_TS_DetectTouch>:
{
 8002e98:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002e9a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002e9c:	2102      	movs	r1, #2
 8002e9e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002ea0:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002ea4:	f000 fb88 	bl	80035b8 <TS_IO_Read>
 8002ea8:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002eac:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002eb0:	f003 030f 	and.w	r3, r3, #15
 8002eb4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002eb8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002ebc:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002ebe:	bf88      	it	hi
 8002ec0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002ec4:	4b04      	ldr	r3, [pc, #16]	; (8002ed8 <ft6x06_TS_DetectTouch+0x40>)
 8002ec6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002eca:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002ece:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002ed0:	2200      	movs	r2, #0
 8002ed2:	709a      	strb	r2, [r3, #2]
}
 8002ed4:	b002      	add	sp, #8
 8002ed6:	bd10      	pop	{r4, pc}
 8002ed8:	20001402 	.word	0x20001402

08002edc <ft6x06_TS_GetXY>:
{
 8002edc:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002ede:	4c15      	ldr	r4, [pc, #84]	; (8002f34 <ft6x06_TS_GetXY+0x58>)
{
 8002ee0:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002ee2:	78a3      	ldrb	r3, [r4, #2]
 8002ee4:	7862      	ldrb	r2, [r4, #1]
 8002ee6:	429a      	cmp	r2, r3
{
 8002ee8:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002eea:	d91f      	bls.n	8002f2c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002eec:	b303      	cbz	r3, 8002f30 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002eee:	2b01      	cmp	r3, #1
 8002ef0:	bf14      	ite	ne
 8002ef2:	2100      	movne	r1, #0
 8002ef4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002ef6:	2304      	movs	r3, #4
 8002ef8:	eb0d 0203 	add.w	r2, sp, r3
 8002efc:	b2c0      	uxtb	r0, r0
 8002efe:	f000 fb77 	bl	80035f0 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002f02:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002f06:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002f0a:	021b      	lsls	r3, r3, #8
 8002f0c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002f10:	4313      	orrs	r3, r2
 8002f12:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002f14:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002f18:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002f1c:	021b      	lsls	r3, r3, #8
 8002f1e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002f22:	4313      	orrs	r3, r2
 8002f24:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002f26:	78a3      	ldrb	r3, [r4, #2]
 8002f28:	3301      	adds	r3, #1
 8002f2a:	70a3      	strb	r3, [r4, #2]
}
 8002f2c:	b002      	add	sp, #8
 8002f2e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002f30:	2103      	movs	r1, #3
 8002f32:	e7e0      	b.n	8002ef6 <ft6x06_TS_GetXY+0x1a>
 8002f34:	20001402 	.word	0x20001402

08002f38 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002f38:	2201      	movs	r2, #1
 8002f3a:	21a4      	movs	r1, #164	; 0xa4
 8002f3c:	b2c0      	uxtb	r0, r0
 8002f3e:	f000 bb23 	b.w	8003588 <TS_IO_Write>

08002f42 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002f42:	2200      	movs	r2, #0
 8002f44:	21a4      	movs	r1, #164	; 0xa4
 8002f46:	b2c0      	uxtb	r0, r0
 8002f48:	f000 bb1e 	b.w	8003588 <TS_IO_Write>

08002f4c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002f4c:	f7ff bff9 	b.w	8002f42 <ft6x06_TS_DisableIT>

08002f50 <ft6x06_TS_ClearIT>:
 8002f50:	4770      	bx	lr
	...

08002f54 <ft6x06_Init>:
{  
 8002f54:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002f56:	4b09      	ldr	r3, [pc, #36]	; (8002f7c <ft6x06_Init+0x28>)
 8002f58:	781a      	ldrb	r2, [r3, #0]
 8002f5a:	4290      	cmp	r0, r2
 8002f5c:	d00a      	beq.n	8002f74 <ft6x06_Init+0x20>
 8002f5e:	7859      	ldrb	r1, [r3, #1]
 8002f60:	4288      	cmp	r0, r1
 8002f62:	d007      	beq.n	8002f74 <ft6x06_Init+0x20>
 8002f64:	b10a      	cbz	r2, 8002f6a <ft6x06_Init+0x16>
 8002f66:	b929      	cbnz	r1, 8002f74 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002f68:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002f6a:	5498      	strb	r0, [r3, r2]
}
 8002f6c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002f70:	f000 bb08 	b.w	8003584 <TS_IO_Init>
}
 8002f74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002f78:	4770      	bx	lr
 8002f7a:	bf00      	nop
 8002f7c:	20001400 	.word	0x20001400

08002f80 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002f80:	b538      	push	{r3, r4, r5, lr}
 8002f82:	4604      	mov	r4, r0
 8002f84:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f86:	2000      	movs	r0, #0
 8002f88:	49cb      	ldr	r1, [pc, #812]	; (80032b8 <OTM8009A_Init+0x338>)
 8002f8a:	f7fd fd5b 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002f8e:	49cb      	ldr	r1, [pc, #812]	; (80032bc <OTM8009A_Init+0x33c>)
 8002f90:	2003      	movs	r0, #3
 8002f92:	f7fd fd57 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002f96:	49ca      	ldr	r1, [pc, #808]	; (80032c0 <OTM8009A_Init+0x340>)
 8002f98:	2000      	movs	r0, #0
 8002f9a:	f7fd fd53 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002f9e:	49c9      	ldr	r1, [pc, #804]	; (80032c4 <OTM8009A_Init+0x344>)
 8002fa0:	2002      	movs	r0, #2
 8002fa2:	f7fd fd4f 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002fa6:	49c6      	ldr	r1, [pc, #792]	; (80032c0 <OTM8009A_Init+0x340>)
 8002fa8:	2000      	movs	r0, #0
 8002faa:	f7fd fd4b 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002fae:	49c6      	ldr	r1, [pc, #792]	; (80032c8 <OTM8009A_Init+0x348>)
 8002fb0:	2000      	movs	r0, #0
 8002fb2:	f7fd fd47 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002fb6:	200a      	movs	r0, #10
 8002fb8:	f000 fb30 	bl	800361c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002fbc:	49c3      	ldr	r1, [pc, #780]	; (80032cc <OTM8009A_Init+0x34c>)
 8002fbe:	2000      	movs	r0, #0
 8002fc0:	f7fd fd40 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002fc4:	49c2      	ldr	r1, [pc, #776]	; (80032d0 <OTM8009A_Init+0x350>)
 8002fc6:	2000      	movs	r0, #0
 8002fc8:	f7fd fd3c 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002fcc:	200a      	movs	r0, #10
 8002fce:	f000 fb25 	bl	800361c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002fd2:	49c0      	ldr	r1, [pc, #768]	; (80032d4 <OTM8009A_Init+0x354>)
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	f7fd fd35 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002fda:	49bf      	ldr	r1, [pc, #764]	; (80032d8 <OTM8009A_Init+0x358>)
 8002fdc:	2000      	movs	r0, #0
 8002fde:	f7fd fd31 	bl	8000a44 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002fe2:	49be      	ldr	r1, [pc, #760]	; (80032dc <OTM8009A_Init+0x35c>)
 8002fe4:	2000      	movs	r0, #0
 8002fe6:	f7fd fd2d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002fea:	49bd      	ldr	r1, [pc, #756]	; (80032e0 <OTM8009A_Init+0x360>)
 8002fec:	2000      	movs	r0, #0
 8002fee:	f7fd fd29 	bl	8000a44 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002ff2:	49bc      	ldr	r1, [pc, #752]	; (80032e4 <OTM8009A_Init+0x364>)
 8002ff4:	2000      	movs	r0, #0
 8002ff6:	f7fd fd25 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002ffa:	49bb      	ldr	r1, [pc, #748]	; (80032e8 <OTM8009A_Init+0x368>)
 8002ffc:	2000      	movs	r0, #0
 8002ffe:	f7fd fd21 	bl	8000a44 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003002:	49ad      	ldr	r1, [pc, #692]	; (80032b8 <OTM8009A_Init+0x338>)
 8003004:	2000      	movs	r0, #0
 8003006:	f7fd fd1d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800300a:	49b8      	ldr	r1, [pc, #736]	; (80032ec <OTM8009A_Init+0x36c>)
 800300c:	2000      	movs	r0, #0
 800300e:	f7fd fd19 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003012:	49b7      	ldr	r1, [pc, #732]	; (80032f0 <OTM8009A_Init+0x370>)
 8003014:	2000      	movs	r0, #0
 8003016:	f7fd fd15 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800301a:	49b6      	ldr	r1, [pc, #728]	; (80032f4 <OTM8009A_Init+0x374>)
 800301c:	2000      	movs	r0, #0
 800301e:	f7fd fd11 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003022:	49b5      	ldr	r1, [pc, #724]	; (80032f8 <OTM8009A_Init+0x378>)
 8003024:	2000      	movs	r0, #0
 8003026:	f7fd fd0d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800302a:	49b4      	ldr	r1, [pc, #720]	; (80032fc <OTM8009A_Init+0x37c>)
 800302c:	2000      	movs	r0, #0
 800302e:	f7fd fd09 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8003032:	49b3      	ldr	r1, [pc, #716]	; (8003300 <OTM8009A_Init+0x380>)
 8003034:	2000      	movs	r0, #0
 8003036:	f7fd fd05 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800303a:	49b2      	ldr	r1, [pc, #712]	; (8003304 <OTM8009A_Init+0x384>)
 800303c:	2000      	movs	r0, #0
 800303e:	f7fd fd01 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8003042:	49b1      	ldr	r1, [pc, #708]	; (8003308 <OTM8009A_Init+0x388>)
 8003044:	2000      	movs	r0, #0
 8003046:	f7fd fcfd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800304a:	49a5      	ldr	r1, [pc, #660]	; (80032e0 <OTM8009A_Init+0x360>)
 800304c:	2000      	movs	r0, #0
 800304e:	f7fd fcf9 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003052:	4999      	ldr	r1, [pc, #612]	; (80032b8 <OTM8009A_Init+0x338>)
 8003054:	2000      	movs	r0, #0
 8003056:	f7fd fcf5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800305a:	49ac      	ldr	r1, [pc, #688]	; (800330c <OTM8009A_Init+0x38c>)
 800305c:	2002      	movs	r0, #2
 800305e:	f7fd fcf1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8003062:	49ab      	ldr	r1, [pc, #684]	; (8003310 <OTM8009A_Init+0x390>)
 8003064:	2000      	movs	r0, #0
 8003066:	f7fd fced 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800306a:	49aa      	ldr	r1, [pc, #680]	; (8003314 <OTM8009A_Init+0x394>)
 800306c:	2000      	movs	r0, #0
 800306e:	f7fd fce9 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8003072:	49a9      	ldr	r1, [pc, #676]	; (8003318 <OTM8009A_Init+0x398>)
 8003074:	2000      	movs	r0, #0
 8003076:	f7fd fce5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800307a:	49a8      	ldr	r1, [pc, #672]	; (800331c <OTM8009A_Init+0x39c>)
 800307c:	2000      	movs	r0, #0
 800307e:	f7fd fce1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8003082:	49a7      	ldr	r1, [pc, #668]	; (8003320 <OTM8009A_Init+0x3a0>)
 8003084:	2000      	movs	r0, #0
 8003086:	f7fd fcdd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 800308a:	49a6      	ldr	r1, [pc, #664]	; (8003324 <OTM8009A_Init+0x3a4>)
 800308c:	2000      	movs	r0, #0
 800308e:	f7fd fcd9 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003092:	4997      	ldr	r1, [pc, #604]	; (80032f0 <OTM8009A_Init+0x370>)
 8003094:	2000      	movs	r0, #0
 8003096:	f7fd fcd5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 800309a:	49a3      	ldr	r1, [pc, #652]	; (8003328 <OTM8009A_Init+0x3a8>)
 800309c:	2000      	movs	r0, #0
 800309e:	f7fd fcd1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80030a2:	4995      	ldr	r1, [pc, #596]	; (80032f8 <OTM8009A_Init+0x378>)
 80030a4:	2000      	movs	r0, #0
 80030a6:	f7fd fccd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 80030aa:	49a0      	ldr	r1, [pc, #640]	; (800332c <OTM8009A_Init+0x3ac>)
 80030ac:	2000      	movs	r0, #0
 80030ae:	f7fd fcc9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80030b2:	499f      	ldr	r1, [pc, #636]	; (8003330 <OTM8009A_Init+0x3b0>)
 80030b4:	2000      	movs	r0, #0
 80030b6:	f7fd fcc5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80030ba:	499e      	ldr	r1, [pc, #632]	; (8003334 <OTM8009A_Init+0x3b4>)
 80030bc:	2002      	movs	r0, #2
 80030be:	f7fd fcc1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80030c2:	497f      	ldr	r1, [pc, #508]	; (80032c0 <OTM8009A_Init+0x340>)
 80030c4:	2000      	movs	r0, #0
 80030c6:	f7fd fcbd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80030ca:	499b      	ldr	r1, [pc, #620]	; (8003338 <OTM8009A_Init+0x3b8>)
 80030cc:	2006      	movs	r0, #6
 80030ce:	f7fd fcb9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80030d2:	499a      	ldr	r1, [pc, #616]	; (800333c <OTM8009A_Init+0x3bc>)
 80030d4:	2000      	movs	r0, #0
 80030d6:	f7fd fcb5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80030da:	4999      	ldr	r1, [pc, #612]	; (8003340 <OTM8009A_Init+0x3c0>)
 80030dc:	200e      	movs	r0, #14
 80030de:	f7fd fcb1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80030e2:	4998      	ldr	r1, [pc, #608]	; (8003344 <OTM8009A_Init+0x3c4>)
 80030e4:	2000      	movs	r0, #0
 80030e6:	f7fd fcad 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 80030ea:	4997      	ldr	r1, [pc, #604]	; (8003348 <OTM8009A_Init+0x3c8>)
 80030ec:	200e      	movs	r0, #14
 80030ee:	f7fd fca9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80030f2:	4996      	ldr	r1, [pc, #600]	; (800334c <OTM8009A_Init+0x3cc>)
 80030f4:	2000      	movs	r0, #0
 80030f6:	f7fd fca5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 80030fa:	4995      	ldr	r1, [pc, #596]	; (8003350 <OTM8009A_Init+0x3d0>)
 80030fc:	200a      	movs	r0, #10
 80030fe:	f7fd fca1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003102:	4994      	ldr	r1, [pc, #592]	; (8003354 <OTM8009A_Init+0x3d4>)
 8003104:	2000      	movs	r0, #0
 8003106:	f7fd fc9d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800310a:	4993      	ldr	r1, [pc, #588]	; (8003358 <OTM8009A_Init+0x3d8>)
 800310c:	2000      	movs	r0, #0
 800310e:	f7fd fc99 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003112:	496b      	ldr	r1, [pc, #428]	; (80032c0 <OTM8009A_Init+0x340>)
 8003114:	2000      	movs	r0, #0
 8003116:	f7fd fc95 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800311a:	4990      	ldr	r1, [pc, #576]	; (800335c <OTM8009A_Init+0x3dc>)
 800311c:	200a      	movs	r0, #10
 800311e:	f7fd fc91 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8003122:	498f      	ldr	r1, [pc, #572]	; (8003360 <OTM8009A_Init+0x3e0>)
 8003124:	2000      	movs	r0, #0
 8003126:	f7fd fc8d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800312a:	498e      	ldr	r1, [pc, #568]	; (8003364 <OTM8009A_Init+0x3e4>)
 800312c:	200f      	movs	r0, #15
 800312e:	f7fd fc89 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003132:	4982      	ldr	r1, [pc, #520]	; (800333c <OTM8009A_Init+0x3bc>)
 8003134:	2000      	movs	r0, #0
 8003136:	f7fd fc85 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800313a:	498b      	ldr	r1, [pc, #556]	; (8003368 <OTM8009A_Init+0x3e8>)
 800313c:	200f      	movs	r0, #15
 800313e:	f7fd fc81 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003142:	4980      	ldr	r1, [pc, #512]	; (8003344 <OTM8009A_Init+0x3c4>)
 8003144:	2000      	movs	r0, #0
 8003146:	f7fd fc7d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800314a:	4988      	ldr	r1, [pc, #544]	; (800336c <OTM8009A_Init+0x3ec>)
 800314c:	200a      	movs	r0, #10
 800314e:	f7fd fc79 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003152:	497e      	ldr	r1, [pc, #504]	; (800334c <OTM8009A_Init+0x3cc>)
 8003154:	2000      	movs	r0, #0
 8003156:	f7fd fc75 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800315a:	4985      	ldr	r1, [pc, #532]	; (8003370 <OTM8009A_Init+0x3f0>)
 800315c:	200f      	movs	r0, #15
 800315e:	f7fd fc71 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003162:	497c      	ldr	r1, [pc, #496]	; (8003354 <OTM8009A_Init+0x3d4>)
 8003164:	2000      	movs	r0, #0
 8003166:	f7fd fc6d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800316a:	4982      	ldr	r1, [pc, #520]	; (8003374 <OTM8009A_Init+0x3f4>)
 800316c:	200f      	movs	r0, #15
 800316e:	f7fd fc69 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8003172:	4981      	ldr	r1, [pc, #516]	; (8003378 <OTM8009A_Init+0x3f8>)
 8003174:	2000      	movs	r0, #0
 8003176:	f7fd fc65 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800317a:	4980      	ldr	r1, [pc, #512]	; (800337c <OTM8009A_Init+0x3fc>)
 800317c:	200a      	movs	r0, #10
 800317e:	f7fd fc61 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8003182:	497f      	ldr	r1, [pc, #508]	; (8003380 <OTM8009A_Init+0x400>)
 8003184:	2000      	movs	r0, #0
 8003186:	f7fd fc5d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800318a:	497e      	ldr	r1, [pc, #504]	; (8003384 <OTM8009A_Init+0x404>)
 800318c:	200a      	movs	r0, #10
 800318e:	f7fd fc59 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003192:	494b      	ldr	r1, [pc, #300]	; (80032c0 <OTM8009A_Init+0x340>)
 8003194:	2000      	movs	r0, #0
 8003196:	f7fd fc55 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800319a:	497b      	ldr	r1, [pc, #492]	; (8003388 <OTM8009A_Init+0x408>)
 800319c:	200a      	movs	r0, #10
 800319e:	f7fd fc51 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80031a2:	496f      	ldr	r1, [pc, #444]	; (8003360 <OTM8009A_Init+0x3e0>)
 80031a4:	2000      	movs	r0, #0
 80031a6:	f7fd fc4d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 80031aa:	4978      	ldr	r1, [pc, #480]	; (800338c <OTM8009A_Init+0x40c>)
 80031ac:	200f      	movs	r0, #15
 80031ae:	f7fd fc49 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80031b2:	4962      	ldr	r1, [pc, #392]	; (800333c <OTM8009A_Init+0x3bc>)
 80031b4:	2000      	movs	r0, #0
 80031b6:	f7fd fc45 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 80031ba:	4975      	ldr	r1, [pc, #468]	; (8003390 <OTM8009A_Init+0x410>)
 80031bc:	200f      	movs	r0, #15
 80031be:	f7fd fc41 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80031c2:	4960      	ldr	r1, [pc, #384]	; (8003344 <OTM8009A_Init+0x3c4>)
 80031c4:	2000      	movs	r0, #0
 80031c6:	f7fd fc3d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80031ca:	4972      	ldr	r1, [pc, #456]	; (8003394 <OTM8009A_Init+0x414>)
 80031cc:	200a      	movs	r0, #10
 80031ce:	f7fd fc39 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80031d2:	495e      	ldr	r1, [pc, #376]	; (800334c <OTM8009A_Init+0x3cc>)
 80031d4:	2000      	movs	r0, #0
 80031d6:	f7fd fc35 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80031da:	496f      	ldr	r1, [pc, #444]	; (8003398 <OTM8009A_Init+0x418>)
 80031dc:	200f      	movs	r0, #15
 80031de:	f7fd fc31 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80031e2:	495c      	ldr	r1, [pc, #368]	; (8003354 <OTM8009A_Init+0x3d4>)
 80031e4:	2000      	movs	r0, #0
 80031e6:	f7fd fc2d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 80031ea:	496c      	ldr	r1, [pc, #432]	; (800339c <OTM8009A_Init+0x41c>)
 80031ec:	200f      	movs	r0, #15
 80031ee:	f7fd fc29 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80031f2:	493f      	ldr	r1, [pc, #252]	; (80032f0 <OTM8009A_Init+0x370>)
 80031f4:	2000      	movs	r0, #0
 80031f6:	f7fd fc25 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 80031fa:	4969      	ldr	r1, [pc, #420]	; (80033a0 <OTM8009A_Init+0x420>)
 80031fc:	2000      	movs	r0, #0
 80031fe:	f7fd fc21 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8003202:	4968      	ldr	r1, [pc, #416]	; (80033a4 <OTM8009A_Init+0x424>)
 8003204:	2000      	movs	r0, #0
 8003206:	f7fd fc1d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800320a:	4967      	ldr	r1, [pc, #412]	; (80033a8 <OTM8009A_Init+0x428>)
 800320c:	2000      	movs	r0, #0
 800320e:	f7fd fc19 	bl	8000a44 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8003212:	4966      	ldr	r1, [pc, #408]	; (80033ac <OTM8009A_Init+0x42c>)
 8003214:	2000      	movs	r0, #0
 8003216:	f7fd fc15 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800321a:	4965      	ldr	r1, [pc, #404]	; (80033b0 <OTM8009A_Init+0x430>)
 800321c:	2000      	movs	r0, #0
 800321e:	f7fd fc11 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003222:	4925      	ldr	r1, [pc, #148]	; (80032b8 <OTM8009A_Init+0x338>)
 8003224:	2000      	movs	r0, #0
 8003226:	f7fd fc0d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800322a:	4962      	ldr	r1, [pc, #392]	; (80033b4 <OTM8009A_Init+0x434>)
 800322c:	2003      	movs	r0, #3
 800322e:	f7fd fc09 	bl	8000a44 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003232:	4921      	ldr	r1, [pc, #132]	; (80032b8 <OTM8009A_Init+0x338>)
 8003234:	2000      	movs	r0, #0
 8003236:	f7fd fc05 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800323a:	491f      	ldr	r1, [pc, #124]	; (80032b8 <OTM8009A_Init+0x338>)
 800323c:	2000      	movs	r0, #0
 800323e:	f7fd fc01 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8003242:	495d      	ldr	r1, [pc, #372]	; (80033b8 <OTM8009A_Init+0x438>)
 8003244:	2010      	movs	r0, #16
 8003246:	f7fd fbfd 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800324a:	491b      	ldr	r1, [pc, #108]	; (80032b8 <OTM8009A_Init+0x338>)
 800324c:	2000      	movs	r0, #0
 800324e:	f7fd fbf9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8003252:	495a      	ldr	r1, [pc, #360]	; (80033bc <OTM8009A_Init+0x43c>)
 8003254:	2010      	movs	r0, #16
 8003256:	f7fd fbf5 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800325a:	2000      	movs	r0, #0
 800325c:	4958      	ldr	r1, [pc, #352]	; (80033c0 <OTM8009A_Init+0x440>)
 800325e:	f7fd fbf1 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8003262:	2078      	movs	r0, #120	; 0x78
 8003264:	f000 f9da 	bl	800361c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8003268:	2c00      	cmp	r4, #0
 800326a:	f000 80c9 	beq.w	8003400 <OTM8009A_Init+0x480>
 800326e:	2c02      	cmp	r4, #2
 8003270:	d103      	bne.n	800327a <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8003272:	4954      	ldr	r1, [pc, #336]	; (80033c4 <OTM8009A_Init+0x444>)
 8003274:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003276:	f7fd fbe5 	bl	8000a44 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800327a:	2d01      	cmp	r5, #1
 800327c:	d10b      	bne.n	8003296 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800327e:	4952      	ldr	r1, [pc, #328]	; (80033c8 <OTM8009A_Init+0x448>)
 8003280:	2000      	movs	r0, #0
 8003282:	f7fd fbdf 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8003286:	4951      	ldr	r1, [pc, #324]	; (80033cc <OTM8009A_Init+0x44c>)
 8003288:	2004      	movs	r0, #4
 800328a:	f7fd fbdb 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800328e:	4950      	ldr	r1, [pc, #320]	; (80033d0 <OTM8009A_Init+0x450>)
 8003290:	2004      	movs	r0, #4
 8003292:	f7fd fbd7 	bl	8000a44 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8003296:	494f      	ldr	r1, [pc, #316]	; (80033d4 <OTM8009A_Init+0x454>)
 8003298:	2000      	movs	r0, #0
 800329a:	f7fd fbd3 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800329e:	494e      	ldr	r1, [pc, #312]	; (80033d8 <OTM8009A_Init+0x458>)
 80032a0:	2000      	movs	r0, #0
 80032a2:	f7fd fbcf 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 80032a6:	494d      	ldr	r1, [pc, #308]	; (80033dc <OTM8009A_Init+0x45c>)
 80032a8:	2000      	movs	r0, #0
 80032aa:	f7fd fbcb 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80032ae:	494c      	ldr	r1, [pc, #304]	; (80033e0 <OTM8009A_Init+0x460>)
 80032b0:	2000      	movs	r0, #0
 80032b2:	f7fd fbc7 	bl	8000a44 <DSI_IO_WriteCmd>
 80032b6:	e095      	b.n	80033e4 <OTM8009A_Init+0x464>
 80032b8:	0801db5c 	.word	0x0801db5c
 80032bc:	0801dbc2 	.word	0x0801dbc2
 80032c0:	0801db72 	.word	0x0801db72
 80032c4:	0801dc48 	.word	0x0801dc48
 80032c8:	0801db88 	.word	0x0801db88
 80032cc:	0801db9e 	.word	0x0801db9e
 80032d0:	0801dbb4 	.word	0x0801dbb4
 80032d4:	0801dbba 	.word	0x0801dbba
 80032d8:	0801dbbc 	.word	0x0801dbbc
 80032dc:	0801dbbe 	.word	0x0801dbbe
 80032e0:	0801dbc0 	.word	0x0801dbc0
 80032e4:	0801db5e 	.word	0x0801db5e
 80032e8:	0801db60 	.word	0x0801db60
 80032ec:	0801db62 	.word	0x0801db62
 80032f0:	0801db64 	.word	0x0801db64
 80032f4:	0801db66 	.word	0x0801db66
 80032f8:	0801db68 	.word	0x0801db68
 80032fc:	0801db6a 	.word	0x0801db6a
 8003300:	0801db6c 	.word	0x0801db6c
 8003304:	0801db6e 	.word	0x0801db6e
 8003308:	0801db70 	.word	0x0801db70
 800330c:	0801dcc6 	.word	0x0801dcc6
 8003310:	0801db74 	.word	0x0801db74
 8003314:	0801db76 	.word	0x0801db76
 8003318:	0801db78 	.word	0x0801db78
 800331c:	0801db7a 	.word	0x0801db7a
 8003320:	0801db7c 	.word	0x0801db7c
 8003324:	0801db7e 	.word	0x0801db7e
 8003328:	0801db80 	.word	0x0801db80
 800332c:	0801db82 	.word	0x0801db82
 8003330:	0801db84 	.word	0x0801db84
 8003334:	0801dcc9 	.word	0x0801dcc9
 8003338:	0801dccc 	.word	0x0801dccc
 800333c:	0801db86 	.word	0x0801db86
 8003340:	0801dcd3 	.word	0x0801dcd3
 8003344:	0801db8a 	.word	0x0801db8a
 8003348:	0801dce2 	.word	0x0801dce2
 800334c:	0801db8c 	.word	0x0801db8c
 8003350:	0801dbc6 	.word	0x0801dbc6
 8003354:	0801db8e 	.word	0x0801db8e
 8003358:	0801dbac 	.word	0x0801dbac
 800335c:	0801dbd1 	.word	0x0801dbd1
 8003360:	0801db90 	.word	0x0801db90
 8003364:	0801dbdc 	.word	0x0801dbdc
 8003368:	0801dbec 	.word	0x0801dbec
 800336c:	0801dbfc 	.word	0x0801dbfc
 8003370:	0801dc07 	.word	0x0801dc07
 8003374:	0801dc17 	.word	0x0801dc17
 8003378:	0801db92 	.word	0x0801db92
 800337c:	0801dc27 	.word	0x0801dc27
 8003380:	0801db94 	.word	0x0801db94
 8003384:	0801dc32 	.word	0x0801dc32
 8003388:	0801dc3d 	.word	0x0801dc3d
 800338c:	0801dc4b 	.word	0x0801dc4b
 8003390:	0801dc5b 	.word	0x0801dc5b
 8003394:	0801dc6b 	.word	0x0801dc6b
 8003398:	0801dc76 	.word	0x0801dc76
 800339c:	0801dc86 	.word	0x0801dc86
 80033a0:	0801dbae 	.word	0x0801dbae
 80033a4:	0801dbb0 	.word	0x0801dbb0
 80033a8:	0801dbb2 	.word	0x0801dbb2
 80033ac:	0801dbb6 	.word	0x0801dbb6
 80033b0:	0801dbb8 	.word	0x0801dbb8
 80033b4:	0801dc96 	.word	0x0801dc96
 80033b8:	0801dca4 	.word	0x0801dca4
 80033bc:	0801dcb5 	.word	0x0801dcb5
 80033c0:	0801db96 	.word	0x0801db96
 80033c4:	0801db98 	.word	0x0801db98
 80033c8:	0801db9c 	.word	0x0801db9c
 80033cc:	0801dc9a 	.word	0x0801dc9a
 80033d0:	0801dc9f 	.word	0x0801dc9f
 80033d4:	0801dba0 	.word	0x0801dba0
 80033d8:	0801dba2 	.word	0x0801dba2
 80033dc:	0801dba4 	.word	0x0801dba4
 80033e0:	0801dba6 	.word	0x0801dba6

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80033e4:	4908      	ldr	r1, [pc, #32]	; (8003408 <OTM8009A_Init+0x488>)
 80033e6:	2000      	movs	r0, #0
 80033e8:	f7fd fb2c 	bl	8000a44 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80033ec:	4907      	ldr	r1, [pc, #28]	; (800340c <OTM8009A_Init+0x48c>)
 80033ee:	2000      	movs	r0, #0
 80033f0:	f7fd fb28 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80033f4:	4906      	ldr	r1, [pc, #24]	; (8003410 <OTM8009A_Init+0x490>)
 80033f6:	2000      	movs	r0, #0
 80033f8:	f7fd fb24 	bl	8000a44 <DSI_IO_WriteCmd>

  return 0;
}
 80033fc:	2000      	movs	r0, #0
 80033fe:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003400:	4904      	ldr	r1, [pc, #16]	; (8003414 <OTM8009A_Init+0x494>)
 8003402:	4620      	mov	r0, r4
 8003404:	e737      	b.n	8003276 <OTM8009A_Init+0x2f6>
 8003406:	bf00      	nop
 8003408:	0801dba8 	.word	0x0801dba8
 800340c:	0801db5c 	.word	0x0801db5c
 8003410:	0801dbaa 	.word	0x0801dbaa
 8003414:	0801db9a 	.word	0x0801db9a

08003418 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8003418:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800341a:	4d2e      	ldr	r5, [pc, #184]	; (80034d4 <I2C1_Init+0xbc>)
{
 800341c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800341e:	4628      	mov	r0, r5
 8003420:	f002 f96a 	bl	80056f8 <HAL_I2C_GetState>
 8003424:	4604      	mov	r4, r0
 8003426:	2800      	cmp	r0, #0
 8003428:	d151      	bne.n	80034ce <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800342a:	4a2b      	ldr	r2, [pc, #172]	; (80034d8 <I2C1_Init+0xc0>)
 800342c:	4b2b      	ldr	r3, [pc, #172]	; (80034dc <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800342e:	4e2c      	ldr	r6, [pc, #176]	; (80034e0 <I2C1_Init+0xc8>)
 8003430:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003432:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003436:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800343a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800343e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003442:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003446:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003448:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800344a:	f043 0302 	orr.w	r3, r3, #2
 800344e:	6333      	str	r3, [r6, #48]	; 0x30
 8003450:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8003452:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003454:	f003 0302 	and.w	r3, r3, #2
 8003458:	9301      	str	r3, [sp, #4]
 800345a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800345c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003460:	2312      	movs	r3, #18
 8003462:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003466:	2002      	movs	r0, #2
 8003468:	2304      	movs	r3, #4
 800346a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800346e:	a903      	add	r1, sp, #12
 8003470:	481c      	ldr	r0, [pc, #112]	; (80034e4 <I2C1_Init+0xcc>)
 8003472:	f001 fb6f 	bl	8004b54 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003476:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800347a:	481a      	ldr	r0, [pc, #104]	; (80034e4 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800347c:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800347e:	a903      	add	r1, sp, #12
 8003480:	f001 fb68 	bl	8004b54 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003484:	9402      	str	r4, [sp, #8]
 8003486:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003488:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800348c:	6433      	str	r3, [r6, #64]	; 0x40
 800348e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003490:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003494:	9302      	str	r3, [sp, #8]
 8003496:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003498:	6a33      	ldr	r3, [r6, #32]
 800349a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800349e:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 80034a0:	6a33      	ldr	r3, [r6, #32]
 80034a2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80034a6:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80034a8:	4622      	mov	r2, r4
 80034aa:	2105      	movs	r1, #5
 80034ac:	201f      	movs	r0, #31
 80034ae:	f000 fd1d 	bl	8003eec <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80034b2:	201f      	movs	r0, #31
 80034b4:	f000 fd4c 	bl	8003f50 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80034b8:	4622      	mov	r2, r4
 80034ba:	2105      	movs	r1, #5
 80034bc:	2020      	movs	r0, #32
 80034be:	f000 fd15 	bl	8003eec <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80034c2:	2020      	movs	r0, #32
 80034c4:	f000 fd44 	bl	8003f50 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80034c8:	4628      	mov	r0, r5
 80034ca:	f001 febb 	bl	8005244 <HAL_I2C_Init>
  }
}
 80034ce:	b008      	add	sp, #32
 80034d0:	bd70      	pop	{r4, r5, r6, pc}
 80034d2:	bf00      	nop
 80034d4:	20001408 	.word	0x20001408
 80034d8:	40005400 	.word	0x40005400
 80034dc:	00061a80 	.word	0x00061a80
 80034e0:	40023800 	.word	0x40023800
 80034e4:	40020400 	.word	0x40020400

080034e8 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 80034e8:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 80034ea:	4803      	ldr	r0, [pc, #12]	; (80034f8 <I2C1_Error.isra.0+0x10>)
 80034ec:	f001 ff52 	bl	8005394 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 80034f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 80034f4:	f7ff bf90 	b.w	8003418 <I2C1_Init>
 80034f8:	20001408 	.word	0x20001408

080034fc <BSP_PB_Init>:
{
 80034fc:	b510      	push	{r4, lr}
 80034fe:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8003500:	4b19      	ldr	r3, [pc, #100]	; (8003568 <BSP_PB_Init+0x6c>)
 8003502:	2400      	movs	r4, #0
 8003504:	9400      	str	r4, [sp, #0]
 8003506:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003508:	f042 0201 	orr.w	r2, r2, #1
 800350c:	631a      	str	r2, [r3, #48]	; 0x30
 800350e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003510:	f003 0301 	and.w	r3, r3, #1
 8003514:	9300      	str	r3, [sp, #0]
 8003516:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003518:	b969      	cbnz	r1, 8003536 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800351a:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800351c:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003520:	2302      	movs	r3, #2
 8003522:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003524:	4b11      	ldr	r3, [pc, #68]	; (800356c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003526:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003528:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800352c:	a901      	add	r1, sp, #4
 800352e:	f001 fb11 	bl	8004b54 <HAL_GPIO_Init>
}
 8003532:	b006      	add	sp, #24
 8003534:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003536:	2901      	cmp	r1, #1
 8003538:	d1fb      	bne.n	8003532 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800353a:	2302      	movs	r3, #2
 800353c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800353e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8003542:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003544:	4b09      	ldr	r3, [pc, #36]	; (800356c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003546:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003548:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800354c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800354e:	a901      	add	r1, sp, #4
 8003550:	f001 fb00 	bl	8004b54 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003554:	4622      	mov	r2, r4
 8003556:	210f      	movs	r1, #15
 8003558:	2006      	movs	r0, #6
 800355a:	f000 fcc7 	bl	8003eec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800355e:	2006      	movs	r0, #6
 8003560:	f000 fcf6 	bl	8003f50 <HAL_NVIC_EnableIRQ>
}
 8003564:	e7e5      	b.n	8003532 <BSP_PB_Init+0x36>
 8003566:	bf00      	nop
 8003568:	40023800 	.word	0x40023800
 800356c:	20000048 	.word	0x20000048

08003570 <BSP_PB_GetState>:
{
 8003570:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8003572:	4b03      	ldr	r3, [pc, #12]	; (8003580 <BSP_PB_GetState+0x10>)
 8003574:	2101      	movs	r1, #1
 8003576:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800357a:	f001 fc73 	bl	8004e64 <HAL_GPIO_ReadPin>
}
 800357e:	bd08      	pop	{r3, pc}
 8003580:	20000048 	.word	0x20000048

08003584 <TS_IO_Init>:
 8003584:	f7ff bf48 	b.w	8003418 <I2C1_Init>

08003588 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003588:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800358a:	2301      	movs	r3, #1
 800358c:	f88d 2017 	strb.w	r2, [sp, #23]
 8003590:	2264      	movs	r2, #100	; 0x64
 8003592:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003596:	f10d 0217 	add.w	r2, sp, #23
 800359a:	9200      	str	r2, [sp, #0]
 800359c:	460a      	mov	r2, r1
 800359e:	4601      	mov	r1, r0
 80035a0:	4804      	ldr	r0, [pc, #16]	; (80035b4 <TS_IO_Write+0x2c>)
 80035a2:	f001 ff11 	bl	80053c8 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80035a6:	b108      	cbz	r0, 80035ac <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 80035a8:	f7ff ff9e 	bl	80034e8 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 80035ac:	b007      	add	sp, #28
 80035ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80035b2:	bf00      	nop
 80035b4:	20001408 	.word	0x20001408

080035b8 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80035b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80035ba:	2300      	movs	r3, #0
{
 80035bc:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80035be:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80035c2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80035c6:	2301      	movs	r3, #1
 80035c8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80035cc:	f10d 0117 	add.w	r1, sp, #23
 80035d0:	9100      	str	r1, [sp, #0]
 80035d2:	4601      	mov	r1, r0
 80035d4:	4805      	ldr	r0, [pc, #20]	; (80035ec <TS_IO_Read+0x34>)
 80035d6:	f001 ff87 	bl	80054e8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80035da:	b108      	cbz	r0, 80035e0 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 80035dc:	f7ff ff84 	bl	80034e8 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 80035e0:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80035e4:	b007      	add	sp, #28
 80035e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80035ea:	bf00      	nop
 80035ec:	20001408 	.word	0x20001408

080035f0 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80035f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80035f2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80035f6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80035fa:	9200      	str	r2, [sp, #0]
 80035fc:	2301      	movs	r3, #1
 80035fe:	460a      	mov	r2, r1
 8003600:	4601      	mov	r1, r0
 8003602:	4805      	ldr	r0, [pc, #20]	; (8003618 <TS_IO_ReadMultiple+0x28>)
 8003604:	f001 ff70 	bl	80054e8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003608:	4604      	mov	r4, r0
 800360a:	b108      	cbz	r0, 8003610 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 800360c:	f7ff ff6c 	bl	80034e8 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8003610:	b2a0      	uxth	r0, r4
 8003612:	b004      	add	sp, #16
 8003614:	bd10      	pop	{r4, pc}
 8003616:	bf00      	nop
 8003618:	20001408 	.word	0x20001408

0800361c <OTM8009A_IO_Delay>:
 800361c:	f000 bc40 	b.w	8003ea0 <HAL_Delay>

08003620 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003620:	b500      	push	{lr}
 8003622:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003624:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003628:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800362a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800362e:	2205      	movs	r2, #5
 8003630:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003632:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003634:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003636:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003638:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800363c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003640:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003644:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003646:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003648:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800364a:	2210      	movs	r2, #16
 800364c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800364e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003652:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003654:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003656:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003658:	a906      	add	r1, sp, #24
 800365a:	466a      	mov	r2, sp
 800365c:	4804      	ldr	r0, [pc, #16]	; (8003670 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800365e:	f002 fbce 	bl	8005dfe <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003662:	3800      	subs	r0, #0
 8003664:	bf18      	it	ne
 8003666:	2001      	movne	r0, #1
 8003668:	b015      	add	sp, #84	; 0x54
 800366a:	f85d fb04 	ldr.w	pc, [sp], #4
 800366e:	bf00      	nop
 8003670:	2000a784 	.word	0x2000a784

08003674 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003674:	b500      	push	{lr}
 8003676:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003678:	f44f 7380 	mov.w	r3, #256	; 0x100
 800367c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800367e:	2306      	movs	r3, #6
 8003680:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003682:	4817      	ldr	r0, [pc, #92]	; (80036e0 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003684:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003686:	f241 3288 	movw	r2, #5000	; 0x1388
 800368a:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800368c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003690:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003694:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003696:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003698:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800369a:	f002 fb6c 	bl	8005d76 <HAL_QSPI_Command>
 800369e:	b9e0      	cbnz	r0, 80036da <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80036a0:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80036a2:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80036a6:	2201      	movs	r2, #1
 80036a8:	2310      	movs	r3, #16
 80036aa:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80036ae:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80036b2:	2305      	movs	r3, #5
 80036b4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80036b8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80036bc:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80036be:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036c0:	4807      	ldr	r0, [pc, #28]	; (80036e0 <QSPI_WriteEnable.constprop.0+0x6c>)
 80036c2:	f241 3388 	movw	r3, #5000	; 0x1388
 80036c6:	466a      	mov	r2, sp
 80036c8:	a906      	add	r1, sp, #24
 80036ca:	f002 fb98 	bl	8005dfe <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80036ce:	3800      	subs	r0, #0
 80036d0:	bf18      	it	ne
 80036d2:	2001      	movne	r0, #1
}
 80036d4:	b015      	add	sp, #84	; 0x54
 80036d6:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80036da:	2001      	movs	r0, #1
 80036dc:	e7fa      	b.n	80036d4 <QSPI_WriteEnable.constprop.0+0x60>
 80036de:	bf00      	nop
 80036e0:	2000a784 	.word	0x2000a784

080036e4 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80036e4:	b500      	push	{lr}
 80036e6:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80036e8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80036ec:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80036ee:	23eb      	movs	r3, #235	; 0xeb
 80036f0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80036f2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80036f6:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80036f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80036fc:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80036fe:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003702:	2300      	movs	r3, #0
 8003704:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003708:	220a      	movs	r2, #10
 800370a:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800370c:	a902      	add	r1, sp, #8
 800370e:	466a      	mov	r2, sp
 8003710:	4806      	ldr	r0, [pc, #24]	; (800372c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003712:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003714:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003718:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800371a:	f002 fbc0 	bl	8005e9e <HAL_QSPI_MemoryMapped>
}
 800371e:	3800      	subs	r0, #0
 8003720:	bf18      	it	ne
 8003722:	2001      	movne	r0, #1
 8003724:	b011      	add	sp, #68	; 0x44
 8003726:	f85d fb04 	ldr.w	pc, [sp], #4
 800372a:	bf00      	nop
 800372c:	2000a784 	.word	0x2000a784

08003730 <BSP_QSPI_MspInit>:
{
 8003730:	b570      	push	{r4, r5, r6, lr}
 8003732:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003734:	4b2c      	ldr	r3, [pc, #176]	; (80037e8 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003736:	482d      	ldr	r0, [pc, #180]	; (80037ec <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003738:	2400      	movs	r4, #0
 800373a:	9400      	str	r4, [sp, #0]
 800373c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800373e:	f042 0202 	orr.w	r2, r2, #2
 8003742:	639a      	str	r2, [r3, #56]	; 0x38
 8003744:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003746:	f002 0202 	and.w	r2, r2, #2
 800374a:	9200      	str	r2, [sp, #0]
 800374c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800374e:	699a      	ldr	r2, [r3, #24]
 8003750:	f042 0202 	orr.w	r2, r2, #2
 8003754:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003756:	699a      	ldr	r2, [r3, #24]
 8003758:	f022 0202 	bic.w	r2, r2, #2
 800375c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800375e:	9401      	str	r4, [sp, #4]
 8003760:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003762:	f042 0202 	orr.w	r2, r2, #2
 8003766:	631a      	str	r2, [r3, #48]	; 0x30
 8003768:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800376a:	f002 0202 	and.w	r2, r2, #2
 800376e:	9201      	str	r2, [sp, #4]
 8003770:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003772:	9402      	str	r4, [sp, #8]
 8003774:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003776:	f042 0220 	orr.w	r2, r2, #32
 800377a:	631a      	str	r2, [r3, #48]	; 0x30
 800377c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800377e:	f003 0320 	and.w	r3, r3, #32
 8003782:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003784:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003786:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003788:	2302      	movs	r3, #2
 800378a:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800378e:	2101      	movs	r1, #1
 8003790:	2303      	movs	r3, #3
 8003792:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003796:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003798:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800379a:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800379c:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800379e:	f001 f9d9 	bl	8004b54 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80037a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80037a6:	a903      	add	r1, sp, #12
 80037a8:	4811      	ldr	r0, [pc, #68]	; (80037f0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80037aa:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80037ac:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80037ae:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80037b0:	f001 f9d0 	bl	8004b54 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80037b4:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80037b8:	a903      	add	r1, sp, #12
 80037ba:	480d      	ldr	r0, [pc, #52]	; (80037f0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80037bc:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80037be:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80037c0:	f001 f9c8 	bl	8004b54 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80037c4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80037c6:	a903      	add	r1, sp, #12
 80037c8:	4809      	ldr	r0, [pc, #36]	; (80037f0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80037ca:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80037cc:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80037ce:	f001 f9c1 	bl	8004b54 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80037d2:	4622      	mov	r2, r4
 80037d4:	210f      	movs	r1, #15
 80037d6:	205b      	movs	r0, #91	; 0x5b
 80037d8:	f000 fb88 	bl	8003eec <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80037dc:	205b      	movs	r0, #91	; 0x5b
 80037de:	f000 fbb7 	bl	8003f50 <HAL_NVIC_EnableIRQ>
}
 80037e2:	b008      	add	sp, #32
 80037e4:	bd70      	pop	{r4, r5, r6, pc}
 80037e6:	bf00      	nop
 80037e8:	40023800 	.word	0x40023800
 80037ec:	40020400 	.word	0x40020400
 80037f0:	40021400 	.word	0x40021400

080037f4 <BSP_QSPI_Init>:
{
 80037f4:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80037f6:	4c48      	ldr	r4, [pc, #288]	; (8003918 <BSP_QSPI_Init+0x124>)
 80037f8:	4b48      	ldr	r3, [pc, #288]	; (800391c <BSP_QSPI_Init+0x128>)
 80037fa:	6023      	str	r3, [r4, #0]
{
 80037fc:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80037fe:	4620      	mov	r0, r4
 8003800:	f002 faa6 	bl	8005d50 <HAL_QSPI_DeInit>
 8003804:	4605      	mov	r5, r0
 8003806:	b110      	cbz	r0, 800380e <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003808:	2001      	movs	r0, #1
}
 800380a:	b011      	add	sp, #68	; 0x44
 800380c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800380e:	4601      	mov	r1, r0
 8003810:	4620      	mov	r0, r4
 8003812:	f7ff ff8d 	bl	8003730 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003816:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003818:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800381a:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800381e:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003820:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003824:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003828:	fab3 f383 	clz	r3, r3
 800382c:	3b01      	subs	r3, #1
 800382e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003830:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003832:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003836:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800383a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800383e:	f002 fa33 	bl	8005ca8 <HAL_QSPI_Init>
 8003842:	2800      	cmp	r0, #0
 8003844:	d1e0      	bne.n	8003808 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003846:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800384a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800384e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003852:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003854:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003856:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003858:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800385a:	f241 3288 	movw	r2, #5000	; 0x1388
 800385e:	a902      	add	r1, sp, #8
 8003860:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003862:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003864:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003866:	f002 fa86 	bl	8005d76 <HAL_QSPI_Command>
 800386a:	b108      	cbz	r0, 8003870 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800386c:	2004      	movs	r0, #4
 800386e:	e7cc      	b.n	800380a <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003870:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003872:	f241 3288 	movw	r2, #5000	; 0x1388
 8003876:	a902      	add	r1, sp, #8
 8003878:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800387a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800387c:	f002 fa7b 	bl	8005d76 <HAL_QSPI_Command>
 8003880:	2800      	cmp	r0, #0
 8003882:	d1f3      	bne.n	800386c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003884:	f241 3088 	movw	r0, #5000	; 0x1388
 8003888:	f7ff feca 	bl	8003620 <QSPI_AutoPollingMemReady.constprop.0>
 800388c:	2800      	cmp	r0, #0
 800388e:	d1ed      	bne.n	800386c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003890:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003894:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003898:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800389c:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800389e:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80038a4:	a902      	add	r1, sp, #8
 80038a6:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80038a8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80038aa:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80038ac:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038ae:	f002 fa62 	bl	8005d76 <HAL_QSPI_Command>
 80038b2:	2800      	cmp	r0, #0
 80038b4:	d1da      	bne.n	800386c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80038ba:	f10d 0107 	add.w	r1, sp, #7
 80038be:	4620      	mov	r0, r4
 80038c0:	f002 fbcc 	bl	800605c <HAL_QSPI_Receive>
 80038c4:	2800      	cmp	r0, #0
 80038c6:	d1d1      	bne.n	800386c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80038c8:	f7ff fed4 	bl	8003674 <QSPI_WriteEnable.constprop.0>
 80038cc:	2800      	cmp	r0, #0
 80038ce:	d1cd      	bne.n	800386c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80038d0:	2381      	movs	r3, #129	; 0x81
 80038d2:	9302      	str	r3, [sp, #8]
 80038d4:	22f0      	movs	r2, #240	; 0xf0
 80038d6:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80038da:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80038de:	210a      	movs	r1, #10
 80038e0:	fab2 f282 	clz	r2, r2
 80038e4:	fa01 f202 	lsl.w	r2, r1, r2
 80038e8:	f003 030f 	and.w	r3, r3, #15
 80038ec:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038ee:	a902      	add	r1, sp, #8
 80038f0:	f241 3288 	movw	r2, #5000	; 0x1388
 80038f4:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80038f6:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80038fa:	f002 fa3c 	bl	8005d76 <HAL_QSPI_Command>
 80038fe:	2800      	cmp	r0, #0
 8003900:	d1b4      	bne.n	800386c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003902:	f241 3288 	movw	r2, #5000	; 0x1388
 8003906:	f10d 0107 	add.w	r1, sp, #7
 800390a:	4620      	mov	r0, r4
 800390c:	f002 fb4a 	bl	8005fa4 <HAL_QSPI_Transmit>
 8003910:	2800      	cmp	r0, #0
 8003912:	f43f af7a 	beq.w	800380a <BSP_QSPI_Init+0x16>
 8003916:	e7a9      	b.n	800386c <BSP_QSPI_Init+0x78>
 8003918:	2000a784 	.word	0x2000a784
 800391c:	a0001000 	.word	0xa0001000

08003920 <BSP_QSPI_MspDeInit>:
{
 8003920:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8003922:	205b      	movs	r0, #91	; 0x5b
 8003924:	f000 fb22 	bl	8003f6c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003928:	4814      	ldr	r0, [pc, #80]	; (800397c <BSP_QSPI_MspDeInit+0x5c>)
 800392a:	2140      	movs	r1, #64	; 0x40
 800392c:	f001 f9f8 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8003930:	4813      	ldr	r0, [pc, #76]	; (8003980 <BSP_QSPI_MspDeInit+0x60>)
 8003932:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003936:	f001 f9f3 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800393a:	4811      	ldr	r0, [pc, #68]	; (8003980 <BSP_QSPI_MspDeInit+0x60>)
 800393c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003940:	f001 f9ee 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003944:	480e      	ldr	r0, [pc, #56]	; (8003980 <BSP_QSPI_MspDeInit+0x60>)
 8003946:	f44f 7100 	mov.w	r1, #512	; 0x200
 800394a:	f001 f9e9 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800394e:	480c      	ldr	r0, [pc, #48]	; (8003980 <BSP_QSPI_MspDeInit+0x60>)
 8003950:	2180      	movs	r1, #128	; 0x80
 8003952:	f001 f9e5 	bl	8004d20 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003956:	480a      	ldr	r0, [pc, #40]	; (8003980 <BSP_QSPI_MspDeInit+0x60>)
 8003958:	2140      	movs	r1, #64	; 0x40
 800395a:	f001 f9e1 	bl	8004d20 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800395e:	4b09      	ldr	r3, [pc, #36]	; (8003984 <BSP_QSPI_MspDeInit+0x64>)
 8003960:	699a      	ldr	r2, [r3, #24]
 8003962:	f042 0202 	orr.w	r2, r2, #2
 8003966:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003968:	699a      	ldr	r2, [r3, #24]
 800396a:	f022 0202 	bic.w	r2, r2, #2
 800396e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8003970:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003972:	f022 0202 	bic.w	r2, r2, #2
 8003976:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003978:	bd08      	pop	{r3, pc}
 800397a:	bf00      	nop
 800397c:	40020400 	.word	0x40020400
 8003980:	40021400 	.word	0x40021400
 8003984:	40023800 	.word	0x40023800

08003988 <BSP_QSPI_DeInit>:
{
 8003988:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800398a:	4d08      	ldr	r5, [pc, #32]	; (80039ac <BSP_QSPI_DeInit+0x24>)
 800398c:	4b08      	ldr	r3, [pc, #32]	; (80039b0 <BSP_QSPI_DeInit+0x28>)
 800398e:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003990:	4628      	mov	r0, r5
 8003992:	f002 f9dd 	bl	8005d50 <HAL_QSPI_DeInit>
 8003996:	4604      	mov	r4, r0
 8003998:	b928      	cbnz	r0, 80039a6 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800399a:	4601      	mov	r1, r0
 800399c:	4628      	mov	r0, r5
 800399e:	f7ff ffbf 	bl	8003920 <BSP_QSPI_MspDeInit>
}
 80039a2:	4620      	mov	r0, r4
 80039a4:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80039a6:	2401      	movs	r4, #1
 80039a8:	e7fb      	b.n	80039a2 <BSP_QSPI_DeInit+0x1a>
 80039aa:	bf00      	nop
 80039ac:	2000a784 	.word	0x2000a784
 80039b0:	a0001000 	.word	0xa0001000

080039b4 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80039b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80039b8:	4c21      	ldr	r4, [pc, #132]	; (8003a40 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039ba:	4d22      	ldr	r5, [pc, #136]	; (8003a44 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80039bc:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80039be:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80039c2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039c4:	4621      	mov	r1, r4
{
 80039c6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80039cc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80039ce:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80039d2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80039d6:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039da:	f002 ffdf 	bl	800699c <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80039de:	4630      	mov	r0, r6
 80039e0:	f000 fa5e 	bl	8003ea0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80039e4:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039e6:	4621      	mov	r1, r4
 80039e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80039ec:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80039ee:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80039f2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039f6:	f002 ffd1 	bl	800699c <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80039fa:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80039fc:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a00:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8003a02:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003a08:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003a0a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a0e:	f002 ffc5 	bl	800699c <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8003a12:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003a16:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003a18:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003a1a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a1e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8003a20:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8003a22:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003a28:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003a2a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003a2c:	f002 ffb6 	bl	800699c <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003a30:	4649      	mov	r1, r9
 8003a32:	4628      	mov	r0, r5
}
 8003a34:	b003      	add	sp, #12
 8003a36:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003a3a:	f002 bfc6 	b.w	80069ca <HAL_SDRAM_ProgramRefreshRate>
 8003a3e:	bf00      	nop
 8003a40:	2000145c 	.word	0x2000145c
 8003a44:	20001548 	.word	0x20001548

08003a48 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003a48:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003a4a:	4606      	mov	r6, r0
{
 8003a4c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003a4e:	2800      	cmp	r0, #0
 8003a50:	f000 80bd 	beq.w	8003bce <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003a54:	4b5f      	ldr	r3, [pc, #380]	; (8003bd4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003a56:	4860      	ldr	r0, [pc, #384]	; (8003bd8 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003a58:	4c60      	ldr	r4, [pc, #384]	; (8003bdc <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8003a5a:	2500      	movs	r5, #0
 8003a5c:	9500      	str	r5, [sp, #0]
 8003a5e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a60:	f042 0201 	orr.w	r2, r2, #1
 8003a64:	639a      	str	r2, [r3, #56]	; 0x38
 8003a66:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a68:	f002 0201 	and.w	r2, r2, #1
 8003a6c:	9200      	str	r2, [sp, #0]
 8003a6e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8003a70:	9501      	str	r5, [sp, #4]
 8003a72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a74:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003a78:	631a      	str	r2, [r3, #48]	; 0x30
 8003a7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a7c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8003a80:	9201      	str	r2, [sp, #4]
 8003a82:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003a84:	9502      	str	r5, [sp, #8]
 8003a86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a88:	f042 0204 	orr.w	r2, r2, #4
 8003a8c:	631a      	str	r2, [r3, #48]	; 0x30
 8003a8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a90:	f002 0204 	and.w	r2, r2, #4
 8003a94:	9202      	str	r2, [sp, #8]
 8003a96:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003a98:	9503      	str	r5, [sp, #12]
 8003a9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a9c:	f042 0208 	orr.w	r2, r2, #8
 8003aa0:	631a      	str	r2, [r3, #48]	; 0x30
 8003aa2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003aa4:	f002 0208 	and.w	r2, r2, #8
 8003aa8:	9203      	str	r2, [sp, #12]
 8003aaa:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003aac:	9504      	str	r5, [sp, #16]
 8003aae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ab0:	f042 0210 	orr.w	r2, r2, #16
 8003ab4:	631a      	str	r2, [r3, #48]	; 0x30
 8003ab6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ab8:	f002 0210 	and.w	r2, r2, #16
 8003abc:	9204      	str	r2, [sp, #16]
 8003abe:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003ac0:	9505      	str	r5, [sp, #20]
 8003ac2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ac4:	f042 0220 	orr.w	r2, r2, #32
 8003ac8:	631a      	str	r2, [r3, #48]	; 0x30
 8003aca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003acc:	f002 0220 	and.w	r2, r2, #32
 8003ad0:	9205      	str	r2, [sp, #20]
 8003ad2:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003ad4:	9506      	str	r5, [sp, #24]
 8003ad6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ad8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003adc:	631a      	str	r2, [r3, #48]	; 0x30
 8003ade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ae0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003ae4:	9206      	str	r2, [sp, #24]
 8003ae6:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003ae8:	9507      	str	r5, [sp, #28]
 8003aea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003aec:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003af0:	631a      	str	r2, [r3, #48]	; 0x30
 8003af2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003af4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003af8:	9207      	str	r2, [sp, #28]
 8003afa:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003afc:	9508      	str	r5, [sp, #32]
 8003afe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003b00:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003b04:	631a      	str	r2, [r3, #48]	; 0x30
 8003b06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b0c:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003b0e:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003b10:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8003b12:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003b14:	2301      	movs	r3, #1
 8003b16:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003b1a:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003b1c:	220c      	movs	r2, #12
 8003b1e:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8003b20:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003b22:	f001 f817 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003b26:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003b2a:	482d      	ldr	r0, [pc, #180]	; (8003be0 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003b2c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003b2e:	a909      	add	r1, sp, #36	; 0x24
 8003b30:	f001 f810 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003b34:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003b38:	482a      	ldr	r0, [pc, #168]	; (8003be4 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003b3a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003b3c:	a909      	add	r1, sp, #36	; 0x24
 8003b3e:	f001 f809 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003b42:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003b46:	4828      	ldr	r0, [pc, #160]	; (8003be8 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003b48:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003b4a:	a909      	add	r1, sp, #36	; 0x24
 8003b4c:	f001 f802 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003b50:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003b54:	4825      	ldr	r0, [pc, #148]	; (8003bec <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003b56:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003b58:	a909      	add	r1, sp, #36	; 0x24
 8003b5a:	f000 fffb 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003b5e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003b62:	4823      	ldr	r0, [pc, #140]	; (8003bf0 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003b64:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003b66:	a909      	add	r1, sp, #36	; 0x24
 8003b68:	f000 fff4 	bl	8004b54 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003b6c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003b70:	4820      	ldr	r0, [pc, #128]	; (8003bf4 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003b72:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003b74:	a909      	add	r1, sp, #36	; 0x24
 8003b76:	f000 ffed 	bl	8004b54 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003b7a:	2280      	movs	r2, #128	; 0x80
 8003b7c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003b80:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003b84:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003b88:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003b8c:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003b90:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003b94:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003b98:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003b9c:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003ba0:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8003ba2:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003ba6:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003ba8:	4b13      	ldr	r3, [pc, #76]	; (8003bf8 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003baa:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003bac:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003bae:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003bb0:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003bb2:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003bb4:	f000 fa94 	bl	80040e0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003bb8:	4620      	mov	r0, r4
 8003bba:	f000 fa11 	bl	8003fe0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8003bbe:	2038      	movs	r0, #56	; 0x38
 8003bc0:	462a      	mov	r2, r5
 8003bc2:	2105      	movs	r1, #5
 8003bc4:	f000 f992 	bl	8003eec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003bc8:	2038      	movs	r0, #56	; 0x38
 8003bca:	f000 f9c1 	bl	8003f50 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003bce:	b00e      	add	sp, #56	; 0x38
 8003bd0:	bd70      	pop	{r4, r5, r6, pc}
 8003bd2:	bf00      	nop
 8003bd4:	40023800 	.word	0x40023800
 8003bd8:	40020800 	.word	0x40020800
 8003bdc:	20001488 	.word	0x20001488
 8003be0:	40020c00 	.word	0x40020c00
 8003be4:	40021000 	.word	0x40021000
 8003be8:	40021400 	.word	0x40021400
 8003bec:	40021800 	.word	0x40021800
 8003bf0:	40021c00 	.word	0x40021c00
 8003bf4:	40022000 	.word	0x40022000
 8003bf8:	40026410 	.word	0x40026410

08003bfc <BSP_SDRAM_Init>:
{
 8003bfc:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003bfe:	4c19      	ldr	r4, [pc, #100]	; (8003c64 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8003c00:	4d19      	ldr	r5, [pc, #100]	; (8003c68 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003c02:	4b1a      	ldr	r3, [pc, #104]	; (8003c6c <BSP_SDRAM_Init+0x70>)
 8003c04:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003c06:	2107      	movs	r1, #7
 8003c08:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003c0a:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003c0c:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8003c10:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003c14:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003c18:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003c1a:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003c1c:	2340      	movs	r3, #64	; 0x40
 8003c1e:	2220      	movs	r2, #32
 8003c20:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003c24:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003c26:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003c2a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8003c2e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003c32:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003c36:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003c3a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003c3c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003c40:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003c42:	f7ff ff01 	bl	8003a48 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003c46:	4629      	mov	r1, r5
 8003c48:	4620      	mov	r0, r4
 8003c4a:	f002 fe79 	bl	8006940 <HAL_SDRAM_Init>
 8003c4e:	4c08      	ldr	r4, [pc, #32]	; (8003c70 <BSP_SDRAM_Init+0x74>)
 8003c50:	3800      	subs	r0, #0
 8003c52:	bf18      	it	ne
 8003c54:	2001      	movne	r0, #1
 8003c56:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003c58:	f240 5069 	movw	r0, #1385	; 0x569
 8003c5c:	f7ff feaa 	bl	80039b4 <BSP_SDRAM_Initialization_sequence>
}
 8003c60:	7820      	ldrb	r0, [r4, #0]
 8003c62:	bd38      	pop	{r3, r4, r5, pc}
 8003c64:	20001548 	.word	0x20001548
 8003c68:	2000146c 	.word	0x2000146c
 8003c6c:	a0000140 	.word	0xa0000140
 8003c70:	2000004c 	.word	0x2000004c

08003c74 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003c74:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003c76:	b148      	cbz	r0, 8003c8c <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003c78:	2038      	movs	r0, #56	; 0x38
 8003c7a:	f000 f977 	bl	8003f6c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003c7e:	4804      	ldr	r0, [pc, #16]	; (8003c90 <BSP_SDRAM_MspDeInit+0x1c>)
 8003c80:	4b04      	ldr	r3, [pc, #16]	; (8003c94 <BSP_SDRAM_MspDeInit+0x20>)
 8003c82:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003c84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003c88:	f000 ba2a 	b.w	80040e0 <HAL_DMA_DeInit>
}
 8003c8c:	bd08      	pop	{r3, pc}
 8003c8e:	bf00      	nop
 8003c90:	200014e8 	.word	0x200014e8
 8003c94:	40026410 	.word	0x40026410

08003c98 <BSP_SDRAM_DeInit>:
{
 8003c98:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003c9a:	4c07      	ldr	r4, [pc, #28]	; (8003cb8 <BSP_SDRAM_DeInit+0x20>)
 8003c9c:	4b07      	ldr	r3, [pc, #28]	; (8003cbc <BSP_SDRAM_DeInit+0x24>)
 8003c9e:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003ca0:	4620      	mov	r0, r4
 8003ca2:	f002 fe6d 	bl	8006980 <HAL_SDRAM_DeInit>
 8003ca6:	4d06      	ldr	r5, [pc, #24]	; (8003cc0 <BSP_SDRAM_DeInit+0x28>)
 8003ca8:	4601      	mov	r1, r0
 8003caa:	b918      	cbnz	r0, 8003cb4 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003cac:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003cae:	4620      	mov	r0, r4
 8003cb0:	f7ff ffe0 	bl	8003c74 <BSP_SDRAM_MspDeInit>
}
 8003cb4:	7828      	ldrb	r0, [r5, #0]
 8003cb6:	bd38      	pop	{r3, r4, r5, pc}
 8003cb8:	20001548 	.word	0x20001548
 8003cbc:	a0000140 	.word	0xa0000140
 8003cc0:	2000004d 	.word	0x2000004d

08003cc4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003cc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003cc8:	4d19      	ldr	r5, [pc, #100]	; (8003d30 <BSP_TS_Init+0x6c>)
 8003cca:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8003d3c <BSP_TS_Init+0x78>
 8003cce:	682b      	ldr	r3, [r5, #0]
{
 8003cd0:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003cd2:	f898 0000 	ldrb.w	r0, [r8]
{
 8003cd6:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003cd8:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003cda:	686b      	ldr	r3, [r5, #4]
 8003cdc:	2054      	movs	r0, #84	; 0x54
 8003cde:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003ce0:	b2c0      	uxtb	r0, r0
 8003ce2:	2811      	cmp	r0, #17
 8003ce4:	4646      	mov	r6, r8
 8003ce6:	46a9      	mov	r9, r5
 8003ce8:	d00b      	beq.n	8003d02 <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003cea:	686b      	ldr	r3, [r5, #4]
 8003cec:	2070      	movs	r0, #112	; 0x70
 8003cee:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003cf0:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003cf2:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003cf4:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003cf6:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003cfa:	d005      	beq.n	8003d08 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003cfc:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003cfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003d02:	2354      	movs	r3, #84	; 0x54
 8003d04:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8003d08:	4b0a      	ldr	r3, [pc, #40]	; (8003d34 <BSP_TS_Init+0x70>)
 8003d0a:	4d0b      	ldr	r5, [pc, #44]	; (8003d38 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8003d0c:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 8003d0e:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003d12:	42bc      	cmp	r4, r7
 8003d14:	bf34      	ite	cc
 8003d16:	2101      	movcc	r1, #1
 8003d18:	210c      	movcs	r1, #12
 8003d1a:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003d1c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8003d20:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003d22:	682b      	ldr	r3, [r5, #0]
 8003d24:	7830      	ldrb	r0, [r6, #0]
 8003d26:	68db      	ldr	r3, [r3, #12]
 8003d28:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003d2a:	2000      	movs	r0, #0
 8003d2c:	e7e7      	b.n	8003cfe <BSP_TS_Init+0x3a>
 8003d2e:	bf00      	nop
 8003d30:	20000020 	.word	0x20000020
 8003d34:	20001594 	.word	0x20001594
 8003d38:	20001590 	.word	0x20001590
 8003d3c:	2000157c 	.word	0x2000157c

08003d40 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003d44:	4c34      	ldr	r4, [pc, #208]	; (8003e18 <BSP_TS_GetState+0xd8>)
 8003d46:	4d35      	ldr	r5, [pc, #212]	; (8003e1c <BSP_TS_GetState+0xdc>)
 8003d48:	6823      	ldr	r3, [r4, #0]
{
 8003d4a:	b085      	sub	sp, #20
 8003d4c:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003d4e:	691b      	ldr	r3, [r3, #16]
 8003d50:	7828      	ldrb	r0, [r5, #0]
 8003d52:	4798      	blx	r3
 8003d54:	46a1      	mov	r9, r4
 8003d56:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003d58:	9501      	str	r5, [sp, #4]
 8003d5a:	b158      	cbz	r0, 8003d74 <BSP_TS_GetState+0x34>
 8003d5c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e28 <BSP_TS_GetState+0xe8>
 8003d60:	4f2f      	ldr	r7, [pc, #188]	; (8003e20 <BSP_TS_GetState+0xe0>)
 8003d62:	f106 0b02 	add.w	fp, r6, #2
 8003d66:	ad03      	add	r5, sp, #12
 8003d68:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003d6a:	f04f 0a00 	mov.w	sl, #0
 8003d6e:	7833      	ldrb	r3, [r6, #0]
 8003d70:	4553      	cmp	r3, sl
 8003d72:	d803      	bhi.n	8003d7c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003d74:	2000      	movs	r0, #0
 8003d76:	b005      	add	sp, #20
 8003d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003d7c:	f8d9 3000 	ldr.w	r3, [r9]
 8003d80:	9801      	ldr	r0, [sp, #4]
 8003d82:	695b      	ldr	r3, [r3, #20]
 8003d84:	7800      	ldrb	r0, [r0, #0]
 8003d86:	9100      	str	r1, [sp, #0]
 8003d88:	462a      	mov	r2, r5
 8003d8a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003d8c:	4b25      	ldr	r3, [pc, #148]	; (8003e24 <BSP_TS_GetState+0xe4>)
 8003d8e:	9900      	ldr	r1, [sp, #0]
 8003d90:	781b      	ldrb	r3, [r3, #0]
 8003d92:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003d96:	bf1f      	itttt	ne
 8003d98:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003d9a:	8828      	ldrhne	r0, [r5, #0]
 8003d9c:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8003d9e:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8003da0:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8003da2:	bf41      	itttt	mi
 8003da4:	880a      	ldrhmi	r2, [r1, #0]
 8003da6:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003daa:	3203      	addmi	r2, #3
 8003dac:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8003dae:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003db0:	bf48      	it	mi
 8003db2:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003db4:	f8d8 2000 	ldr.w	r2, [r8]
 8003db8:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003dbc:	bf42      	ittt	mi
 8003dbe:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8003dc2:	3301      	addmi	r3, #1
 8003dc4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003dc6:	b293      	uxth	r3, r2
 8003dc8:	4290      	cmp	r0, r2
 8003dca:	bf8c      	ite	hi
 8003dcc:	1ac3      	subhi	r3, r0, r3
 8003dce:	1a1b      	subls	r3, r3, r0
 8003dd0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003dd2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003dd6:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003dd8:	683b      	ldr	r3, [r7, #0]
 8003dda:	b29c      	uxth	r4, r3
 8003ddc:	429a      	cmp	r2, r3
 8003dde:	bf88      	it	hi
 8003de0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003de2:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003de4:	bf98      	it	ls
 8003de6:	1aa4      	subls	r4, r4, r2
 8003de8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003dea:	441c      	add	r4, r3
 8003dec:	46c4      	mov	ip, r8
 8003dee:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003df0:	bfc8      	it	gt
 8003df2:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003df6:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003dfa:	bfc8      	it	gt
 8003dfc:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003dfe:	46be      	mov	lr, r7
 8003e00:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8003e04:	f8de 3000 	ldr.w	r3, [lr]
 8003e08:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003e0c:	f108 0804 	add.w	r8, r8, #4
 8003e10:	3704      	adds	r7, #4
 8003e12:	f10a 0a01 	add.w	sl, sl, #1
 8003e16:	e7aa      	b.n	8003d6e <BSP_TS_GetState+0x2e>
 8003e18:	20001590 	.word	0x20001590
 8003e1c:	2000157c 	.word	0x2000157c
 8003e20:	20001588 	.word	0x20001588
 8003e24:	20001594 	.word	0x20001594
 8003e28:	20001580 	.word	0x20001580

08003e2c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003e2c:	4b05      	ldr	r3, [pc, #20]	; (8003e44 <SystemInit+0x18>)
 8003e2e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003e32:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003e36:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003e3a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003e3e:	609a      	str	r2, [r3, #8]
#endif
}
 8003e40:	4770      	bx	lr
 8003e42:	bf00      	nop
 8003e44:	e000ed00 	.word	0xe000ed00

08003e48 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003e48:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003e4a:	4b0b      	ldr	r3, [pc, #44]	; (8003e78 <HAL_Init+0x30>)
 8003e4c:	681a      	ldr	r2, [r3, #0]
 8003e4e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e52:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003e54:	681a      	ldr	r2, [r3, #0]
 8003e56:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003e5a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003e5c:	681a      	ldr	r2, [r3, #0]
 8003e5e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003e62:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003e64:	2003      	movs	r0, #3
 8003e66:	f000 f82f 	bl	8003ec8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003e6a:	2000      	movs	r0, #0
 8003e6c:	f7fe f82c 	bl	8001ec8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003e70:	f7fd fdcc 	bl	8001a0c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003e74:	2000      	movs	r0, #0
 8003e76:	bd08      	pop	{r3, pc}
 8003e78:	40023c00 	.word	0x40023c00

08003e7c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003e7c:	4a03      	ldr	r2, [pc, #12]	; (8003e8c <HAL_IncTick+0x10>)
 8003e7e:	4b04      	ldr	r3, [pc, #16]	; (8003e90 <HAL_IncTick+0x14>)
 8003e80:	6811      	ldr	r1, [r2, #0]
 8003e82:	781b      	ldrb	r3, [r3, #0]
 8003e84:	440b      	add	r3, r1
 8003e86:	6013      	str	r3, [r2, #0]
}
 8003e88:	4770      	bx	lr
 8003e8a:	bf00      	nop
 8003e8c:	2000a7d0 	.word	0x2000a7d0
 8003e90:	20000054 	.word	0x20000054

08003e94 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003e94:	4b01      	ldr	r3, [pc, #4]	; (8003e9c <HAL_GetTick+0x8>)
 8003e96:	6818      	ldr	r0, [r3, #0]
}
 8003e98:	4770      	bx	lr
 8003e9a:	bf00      	nop
 8003e9c:	2000a7d0 	.word	0x2000a7d0

08003ea0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003ea0:	b538      	push	{r3, r4, r5, lr}
 8003ea2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003ea4:	f7ff fff6 	bl	8003e94 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003ea8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003eaa:	bf1c      	itt	ne
 8003eac:	4b05      	ldrne	r3, [pc, #20]	; (8003ec4 <HAL_Delay+0x24>)
 8003eae:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003eb0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003eb2:	bf18      	it	ne
 8003eb4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003eb6:	f7ff ffed 	bl	8003e94 <HAL_GetTick>
 8003eba:	1b43      	subs	r3, r0, r5
 8003ebc:	42a3      	cmp	r3, r4
 8003ebe:	d3fa      	bcc.n	8003eb6 <HAL_Delay+0x16>
  {
  }
}
 8003ec0:	bd38      	pop	{r3, r4, r5, pc}
 8003ec2:	bf00      	nop
 8003ec4:	20000054 	.word	0x20000054

08003ec8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003ec8:	4907      	ldr	r1, [pc, #28]	; (8003ee8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003eca:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003ecc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003ed0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003ed2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003ed4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003ed8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003eda:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003edc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003ee0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003ee4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003ee6:	4770      	bx	lr
 8003ee8:	e000ed00 	.word	0xe000ed00

08003eec <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003eec:	4b16      	ldr	r3, [pc, #88]	; (8003f48 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003eee:	b530      	push	{r4, r5, lr}
 8003ef0:	68dc      	ldr	r4, [r3, #12]
 8003ef2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ef6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003efa:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003efc:	2d04      	cmp	r5, #4
 8003efe:	bf28      	it	cs
 8003f00:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003f02:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003f04:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003f08:	bf8c      	ite	hi
 8003f0a:	3c03      	subhi	r4, #3
 8003f0c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003f0e:	fa03 f505 	lsl.w	r5, r3, r5
 8003f12:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003f16:	40a3      	lsls	r3, r4
 8003f18:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003f1c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003f1e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003f20:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f24:	bfac      	ite	ge
 8003f26:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f2a:	4a08      	ldrlt	r2, [pc, #32]	; (8003f4c <HAL_NVIC_SetPriority+0x60>)
 8003f2c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003f30:	bfb8      	it	lt
 8003f32:	f000 000f 	andlt.w	r0, r0, #15
 8003f36:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f38:	bfaa      	itet	ge
 8003f3a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f3e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f40:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003f44:	bd30      	pop	{r4, r5, pc}
 8003f46:	bf00      	nop
 8003f48:	e000ed00 	.word	0xe000ed00
 8003f4c:	e000ed14 	.word	0xe000ed14

08003f50 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003f50:	2800      	cmp	r0, #0
 8003f52:	db08      	blt.n	8003f66 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003f54:	0942      	lsrs	r2, r0, #5
 8003f56:	2301      	movs	r3, #1
 8003f58:	f000 001f 	and.w	r0, r0, #31
 8003f5c:	fa03 f000 	lsl.w	r0, r3, r0
 8003f60:	4b01      	ldr	r3, [pc, #4]	; (8003f68 <HAL_NVIC_EnableIRQ+0x18>)
 8003f62:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003f66:	4770      	bx	lr
 8003f68:	e000e100 	.word	0xe000e100

08003f6c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003f6c:	2800      	cmp	r0, #0
 8003f6e:	db0d      	blt.n	8003f8c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003f70:	0943      	lsrs	r3, r0, #5
 8003f72:	2201      	movs	r2, #1
 8003f74:	f000 001f 	and.w	r0, r0, #31
 8003f78:	fa02 f000 	lsl.w	r0, r2, r0
 8003f7c:	3320      	adds	r3, #32
 8003f7e:	4a04      	ldr	r2, [pc, #16]	; (8003f90 <HAL_NVIC_DisableIRQ+0x24>)
 8003f80:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003f84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003f88:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003f8c:	4770      	bx	lr
 8003f8e:	bf00      	nop
 8003f90:	e000e100 	.word	0xe000e100

08003f94 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003f94:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003f96:	4604      	mov	r4, r0
 8003f98:	b150      	cbz	r0, 8003fb0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003f9a:	7943      	ldrb	r3, [r0, #5]
 8003f9c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003fa0:	b913      	cbnz	r3, 8003fa8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003fa2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003fa4:	f7fd fd52 	bl	8001a4c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003fa8:	2301      	movs	r3, #1
 8003faa:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003fac:	2000      	movs	r0, #0
}
 8003fae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003fb0:	2001      	movs	r0, #1
 8003fb2:	e7fc      	b.n	8003fae <HAL_CRC_Init+0x1a>

08003fb4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003fb4:	6803      	ldr	r3, [r0, #0]
{
 8003fb6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003fb8:	4c08      	ldr	r4, [pc, #32]	; (8003fdc <DMA_CalcBaseAndBitshift+0x28>)
{
 8003fba:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003fbc:	b2d9      	uxtb	r1, r3
 8003fbe:	3910      	subs	r1, #16
 8003fc0:	2018      	movs	r0, #24
 8003fc2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003fc6:	5c20      	ldrb	r0, [r4, r0]
 8003fc8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8003fca:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003fce:	f020 0003 	bic.w	r0, r0, #3
 8003fd2:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003fd4:	bf88      	it	hi
 8003fd6:	3004      	addhi	r0, #4
 8003fd8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003fda:	bd10      	pop	{r4, pc}
 8003fdc:	0801dd09 	.word	0x0801dd09

08003fe0 <HAL_DMA_Init>:
{
 8003fe0:	b570      	push	{r4, r5, r6, lr}
 8003fe2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003fe4:	f7ff ff56 	bl	8003e94 <HAL_GetTick>
 8003fe8:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003fea:	2c00      	cmp	r4, #0
 8003fec:	d073      	beq.n	80040d6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003fee:	2302      	movs	r3, #2
 8003ff0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003ff4:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003ff6:	2300      	movs	r3, #0
 8003ff8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003ffc:	6813      	ldr	r3, [r2, #0]
 8003ffe:	f023 0301 	bic.w	r3, r3, #1
 8004002:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004004:	6821      	ldr	r1, [r4, #0]
 8004006:	680b      	ldr	r3, [r1, #0]
 8004008:	07d8      	lsls	r0, r3, #31
 800400a:	d42f      	bmi.n	800406c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800400c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800400e:	4d33      	ldr	r5, [pc, #204]	; (80040dc <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004010:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004012:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004014:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8004018:	4313      	orrs	r3, r2
 800401a:	68e2      	ldr	r2, [r4, #12]
 800401c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800401e:	6922      	ldr	r2, [r4, #16]
 8004020:	4313      	orrs	r3, r2
 8004022:	6962      	ldr	r2, [r4, #20]
 8004024:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004026:	69e2      	ldr	r2, [r4, #28]
 8004028:	4303      	orrs	r3, r0
 800402a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800402c:	6a22      	ldr	r2, [r4, #32]
 800402e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004030:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004032:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004034:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004038:	bf02      	ittt	eq
 800403a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800403e:	4335      	orreq	r5, r6
 8004040:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8004042:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004044:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004046:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004048:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800404c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004050:	d133      	bne.n	80040ba <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8004052:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004054:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8004056:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004058:	b37d      	cbz	r5, 80040ba <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800405a:	b990      	cbnz	r0, 8004082 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800405c:	2a01      	cmp	r2, #1
 800405e:	d021      	beq.n	80040a4 <HAL_DMA_Init+0xc4>
 8004060:	f032 0202 	bics.w	r2, r2, #2
 8004064:	d129      	bne.n	80040ba <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004066:	01ea      	lsls	r2, r5, #7
 8004068:	d527      	bpl.n	80040ba <HAL_DMA_Init+0xda>
 800406a:	e01e      	b.n	80040aa <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800406c:	f7ff ff12 	bl	8003e94 <HAL_GetTick>
 8004070:	1b40      	subs	r0, r0, r5
 8004072:	2805      	cmp	r0, #5
 8004074:	d9c6      	bls.n	8004004 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004076:	2320      	movs	r3, #32
 8004078:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800407a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800407c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8004080:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004082:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004086:	d114      	bne.n	80040b2 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8004088:	2a03      	cmp	r2, #3
 800408a:	d816      	bhi.n	80040ba <HAL_DMA_Init+0xda>
 800408c:	a001      	add	r0, pc, #4	; (adr r0, 8004094 <HAL_DMA_Init+0xb4>)
 800408e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8004092:	bf00      	nop
 8004094:	080040ab 	.word	0x080040ab
 8004098:	08004067 	.word	0x08004067
 800409c:	080040ab 	.word	0x080040ab
 80040a0:	080040a5 	.word	0x080040a5
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80040a4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80040a8:	d107      	bne.n	80040ba <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80040aa:	2340      	movs	r3, #64	; 0x40
 80040ac:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80040ae:	2001      	movs	r0, #1
 80040b0:	e7e4      	b.n	800407c <HAL_DMA_Init+0x9c>
    switch (tmp)
 80040b2:	2a02      	cmp	r2, #2
 80040b4:	d9f9      	bls.n	80040aa <HAL_DMA_Init+0xca>
 80040b6:	2a03      	cmp	r2, #3
 80040b8:	d0d5      	beq.n	8004066 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 80040ba:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80040bc:	4620      	mov	r0, r4
 80040be:	f7ff ff79 	bl	8003fb4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80040c2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80040c4:	233f      	movs	r3, #63	; 0x3f
 80040c6:	4093      	lsls	r3, r2
 80040c8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80040ca:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80040cc:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80040ce:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80040d0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80040d4:	e7d4      	b.n	8004080 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80040d6:	2001      	movs	r0, #1
 80040d8:	e7d2      	b.n	8004080 <HAL_DMA_Init+0xa0>
 80040da:	bf00      	nop
 80040dc:	f010803f 	.word	0xf010803f

080040e0 <HAL_DMA_DeInit>:
{
 80040e0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80040e2:	4605      	mov	r5, r0
 80040e4:	b320      	cbz	r0, 8004130 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80040e6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80040ea:	2b02      	cmp	r3, #2
 80040ec:	b2dc      	uxtb	r4, r3
 80040ee:	d01d      	beq.n	800412c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80040f0:	6803      	ldr	r3, [r0, #0]
 80040f2:	681a      	ldr	r2, [r3, #0]
 80040f4:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80040f8:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80040fa:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 80040fc:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 80040fe:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8004100:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8004102:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8004104:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8004106:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8004108:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800410a:	f7ff ff53 	bl	8003fb4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800410e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004110:	233f      	movs	r3, #63	; 0x3f
 8004112:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8004114:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004118:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800411c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004120:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004122:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004124:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004128:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800412c:	4620      	mov	r0, r4
 800412e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004130:	2401      	movs	r4, #1
 8004132:	e7fb      	b.n	800412c <HAL_DMA_DeInit+0x4c>

08004134 <HAL_DMA_Abort>:
{
 8004134:	b570      	push	{r4, r5, r6, lr}
 8004136:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004138:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800413a:	f7ff feab 	bl	8003e94 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800413e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8004142:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004144:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004146:	d006      	beq.n	8004156 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004148:	2380      	movs	r3, #128	; 0x80
 800414a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800414c:	2300      	movs	r3, #0
 800414e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8004152:	2001      	movs	r0, #1
}
 8004154:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004156:	6823      	ldr	r3, [r4, #0]
 8004158:	681a      	ldr	r2, [r3, #0]
 800415a:	f022 0216 	bic.w	r2, r2, #22
 800415e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004160:	695a      	ldr	r2, [r3, #20]
 8004162:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004166:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004168:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800416a:	b90a      	cbnz	r2, 8004170 <HAL_DMA_Abort+0x3c>
 800416c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800416e:	b11a      	cbz	r2, 8004178 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004170:	681a      	ldr	r2, [r3, #0]
 8004172:	f022 0208 	bic.w	r2, r2, #8
 8004176:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004178:	681a      	ldr	r2, [r3, #0]
 800417a:	f022 0201 	bic.w	r2, r2, #1
 800417e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004180:	6823      	ldr	r3, [r4, #0]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	f013 0301 	ands.w	r3, r3, #1
 8004188:	d10a      	bne.n	80041a0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800418a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800418c:	223f      	movs	r2, #63	; 0x3f
 800418e:	408a      	lsls	r2, r1
 8004190:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004192:	2201      	movs	r2, #1
 8004194:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8004198:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800419c:	4618      	mov	r0, r3
 800419e:	e7d9      	b.n	8004154 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80041a0:	f7ff fe78 	bl	8003e94 <HAL_GetTick>
 80041a4:	1b40      	subs	r0, r0, r5
 80041a6:	2805      	cmp	r0, #5
 80041a8:	d9ea      	bls.n	8004180 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80041aa:	2320      	movs	r3, #32
 80041ac:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80041ae:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 80041b0:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80041b2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80041b6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 80041ba:	e7cb      	b.n	8004154 <HAL_DMA_Abort+0x20>

080041bc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80041bc:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80041be:	4604      	mov	r4, r0
 80041c0:	b330      	cbz	r0, 8004210 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80041c2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80041c6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80041ca:	b91b      	cbnz	r3, 80041d4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80041cc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80041d0:	f7fd fc54 	bl	8001a7c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041d4:	6822      	ldr	r2, [r4, #0]
 80041d6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041d8:	2302      	movs	r3, #2
 80041da:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041de:	6813      	ldr	r3, [r2, #0]
 80041e0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80041e4:	430b      	orrs	r3, r1
 80041e6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80041e8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80041ea:	68a1      	ldr	r1, [r4, #8]
 80041ec:	f023 0307 	bic.w	r3, r3, #7
 80041f0:	430b      	orrs	r3, r1
 80041f2:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80041f4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80041f6:	68e1      	ldr	r1, [r4, #12]
 80041f8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80041fc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004200:	430b      	orrs	r3, r1
 8004202:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004204:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004206:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004208:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800420a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800420e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004210:	2001      	movs	r0, #1
 8004212:	e7fc      	b.n	800420e <HAL_DMA2D_Init+0x52>

08004214 <HAL_DMA2D_LineEventCallback>:
 8004214:	4770      	bx	lr

08004216 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004216:	4770      	bx	lr

08004218 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004218:	6803      	ldr	r3, [r0, #0]
{
 800421a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800421c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800421e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004220:	07f2      	lsls	r2, r6, #31
{
 8004222:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004224:	d514      	bpl.n	8004250 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004226:	05e9      	lsls	r1, r5, #23
 8004228:	d512      	bpl.n	8004250 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800422a:	681a      	ldr	r2, [r3, #0]
 800422c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004230:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004232:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004234:	f042 0201 	orr.w	r2, r2, #1
 8004238:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800423a:	2201      	movs	r2, #1
 800423c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800423e:	2304      	movs	r3, #4
 8004240:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004244:	2300      	movs	r3, #0
 8004246:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800424a:	6943      	ldr	r3, [r0, #20]
 800424c:	b103      	cbz	r3, 8004250 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800424e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004250:	06b2      	lsls	r2, r6, #26
 8004252:	d516      	bpl.n	8004282 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004254:	04ab      	lsls	r3, r5, #18
 8004256:	d514      	bpl.n	8004282 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004258:	6823      	ldr	r3, [r4, #0]
 800425a:	681a      	ldr	r2, [r3, #0]
 800425c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004260:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004262:	2220      	movs	r2, #32
 8004264:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004266:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004268:	f043 0302 	orr.w	r3, r3, #2
 800426c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800426e:	2304      	movs	r3, #4
 8004270:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004274:	2300      	movs	r3, #0
 8004276:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800427a:	6963      	ldr	r3, [r4, #20]
 800427c:	b10b      	cbz	r3, 8004282 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800427e:	4620      	mov	r0, r4
 8004280:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004282:	0730      	lsls	r0, r6, #28
 8004284:	d516      	bpl.n	80042b4 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004286:	0529      	lsls	r1, r5, #20
 8004288:	d514      	bpl.n	80042b4 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800428a:	6823      	ldr	r3, [r4, #0]
 800428c:	681a      	ldr	r2, [r3, #0]
 800428e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004292:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004294:	2208      	movs	r2, #8
 8004296:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004298:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800429a:	f043 0304 	orr.w	r3, r3, #4
 800429e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80042a0:	2304      	movs	r3, #4
 80042a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80042a6:	2300      	movs	r3, #0
 80042a8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80042ac:	6963      	ldr	r3, [r4, #20]
 80042ae:	b10b      	cbz	r3, 80042b4 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80042b0:	4620      	mov	r0, r4
 80042b2:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80042b4:	0772      	lsls	r2, r6, #29
 80042b6:	d50b      	bpl.n	80042d0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80042b8:	056b      	lsls	r3, r5, #21
 80042ba:	d509      	bpl.n	80042d0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80042bc:	6823      	ldr	r3, [r4, #0]
 80042be:	681a      	ldr	r2, [r3, #0]
 80042c0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80042c4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80042c6:	2204      	movs	r2, #4
 80042c8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80042ca:	4620      	mov	r0, r4
 80042cc:	f7ff ffa2 	bl	8004214 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80042d0:	07b0      	lsls	r0, r6, #30
 80042d2:	d514      	bpl.n	80042fe <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80042d4:	05a9      	lsls	r1, r5, #22
 80042d6:	d512      	bpl.n	80042fe <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80042d8:	6823      	ldr	r3, [r4, #0]
 80042da:	681a      	ldr	r2, [r3, #0]
 80042dc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80042e0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80042e2:	2202      	movs	r2, #2
 80042e4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80042e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80042e8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80042ea:	2301      	movs	r3, #1
 80042ec:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80042f0:	2300      	movs	r3, #0
 80042f2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80042f6:	6923      	ldr	r3, [r4, #16]
 80042f8:	b10b      	cbz	r3, 80042fe <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80042fa:	4620      	mov	r0, r4
 80042fc:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80042fe:	06f2      	lsls	r2, r6, #27
 8004300:	d513      	bpl.n	800432a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004302:	04eb      	lsls	r3, r5, #19
 8004304:	d511      	bpl.n	800432a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004306:	6823      	ldr	r3, [r4, #0]
 8004308:	681a      	ldr	r2, [r3, #0]
 800430a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800430e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004310:	2210      	movs	r2, #16
 8004312:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004314:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004316:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004318:	2301      	movs	r3, #1
 800431a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800431e:	2300      	movs	r3, #0
 8004320:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004324:	4620      	mov	r0, r4
 8004326:	f7ff ff76 	bl	8004216 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800432a:	bd70      	pop	{r4, r5, r6, pc}

0800432c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800432c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800432e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004332:	2b01      	cmp	r3, #1
 8004334:	f04f 0302 	mov.w	r3, #2
 8004338:	d02b      	beq.n	8004392 <HAL_DMA2D_ConfigLayer+0x66>
 800433a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800433c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004340:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004344:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004348:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800434c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800434e:	4f18      	ldr	r7, [pc, #96]	; (80043b0 <HAL_DMA2D_ConfigLayer+0x84>)
 8004350:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004354:	3c09      	subs	r4, #9
 8004356:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004358:	bf9c      	itt	ls
 800435a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800435e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004360:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8004364:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004366:	bf88      	it	hi
 8004368:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800436c:	b999      	cbnz	r1, 8004396 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800436e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004370:	4039      	ands	r1, r7
 8004372:	430a      	orrs	r2, r1
 8004374:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004376:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004378:	6982      	ldr	r2, [r0, #24]
 800437a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800437c:	d803      	bhi.n	8004386 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800437e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004380:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004384:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004386:	2301      	movs	r3, #1
 8004388:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800438c:	2300      	movs	r3, #0
 800438e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004392:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004394:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004396:	69d9      	ldr	r1, [r3, #28]
 8004398:	4039      	ands	r1, r7
 800439a:	430a      	orrs	r2, r1
 800439c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800439e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80043a0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80043a2:	6992      	ldr	r2, [r2, #24]
 80043a4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80043a6:	bf9c      	itt	ls
 80043a8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 80043ac:	621d      	strls	r5, [r3, #32]
 80043ae:	e7ea      	b.n	8004386 <HAL_DMA2D_ConfigLayer+0x5a>
 80043b0:	00fcfff0 	.word	0x00fcfff0

080043b4 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 80043b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043b8:	4607      	mov	r7, r0
 80043ba:	460d      	mov	r5, r1
 80043bc:	4614      	mov	r4, r2
 80043be:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80043c0:	f7ff fd68 	bl	8003e94 <HAL_GetTick>
 80043c4:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80043c6:	683a      	ldr	r2, [r7, #0]
 80043c8:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80043ca:	07db      	lsls	r3, r3, #31
 80043cc:	d50a      	bpl.n	80043e4 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80043ce:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 80043d2:	9c06      	ldr	r4, [sp, #24]
 80043d4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80043d8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80043dc:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 80043de:	2000      	movs	r0, #0
}
 80043e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 80043e4:	f7ff fd56 	bl	8003e94 <HAL_GetTick>
 80043e8:	eba0 0008 	sub.w	r0, r0, r8
 80043ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80043f0:	d9e9      	bls.n	80043c6 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 80043f2:	2003      	movs	r0, #3
 80043f4:	e7f4      	b.n	80043e0 <DSI_ShortWrite+0x2c>

080043f6 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80043f6:	7c03      	ldrb	r3, [r0, #16]
 80043f8:	2b01      	cmp	r3, #1
 80043fa:	d05d      	beq.n	80044b8 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 80043fc:	6803      	ldr	r3, [r0, #0]
 80043fe:	2200      	movs	r2, #0
 8004400:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004404:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004408:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800440a:	bf48      	it	mi
 800440c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004410:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004412:	bf42      	ittt	mi
 8004414:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004418:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800441c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004420:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8004422:	bf42      	ittt	mi
 8004424:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004428:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800442c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004430:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8004432:	bf42      	ittt	mi
 8004434:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004438:	f042 0201 	orrmi.w	r2, r2, #1
 800443c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8004440:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8004442:	bf42      	ittt	mi
 8004444:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004448:	f042 0202 	orrmi.w	r2, r2, #2
 800444c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004450:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004452:	bf42      	ittt	mi
 8004454:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004458:	f042 020c 	orrmi.w	r2, r2, #12
 800445c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004460:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004462:	bf42      	ittt	mi
 8004464:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004468:	f042 0210 	orrmi.w	r2, r2, #16
 800446c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004470:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004472:	bf42      	ittt	mi
 8004474:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004478:	f042 0220 	orrmi.w	r2, r2, #32
 800447c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004480:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004482:	bf42      	ittt	mi
 8004484:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004488:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800448c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004490:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004492:	bf42      	ittt	mi
 8004494:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004498:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800449c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 80044a0:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 80044a2:	bf42      	ittt	mi
 80044a4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80044a8:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 80044ac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 80044b0:	2300      	movs	r3, #0
 80044b2:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80044b4:	4618      	mov	r0, r3
 80044b6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80044b8:	2002      	movs	r0, #2
}
 80044ba:	4770      	bx	lr

080044bc <HAL_DSI_Init>:
{
 80044bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80044be:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80044c0:	4604      	mov	r4, r0
 80044c2:	2800      	cmp	r0, #0
 80044c4:	f000 80a7 	beq.w	8004616 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 80044c8:	7c43      	ldrb	r3, [r0, #17]
 80044ca:	b90b      	cbnz	r3, 80044d0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 80044cc:	f7fd faf8 	bl	8001ac0 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 80044d0:	2303      	movs	r3, #3
 80044d2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80044d4:	2300      	movs	r3, #0
 80044d6:	9300      	str	r3, [sp, #0]
 80044d8:	6823      	ldr	r3, [r4, #0]
 80044da:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80044de:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80044e2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80044e6:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80044ea:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80044ee:	9300      	str	r3, [sp, #0]
 80044f0:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80044f2:	f7ff fccf 	bl	8003e94 <HAL_GetTick>
 80044f6:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80044f8:	6822      	ldr	r2, [r4, #0]
 80044fa:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80044fe:	04d9      	lsls	r1, r3, #19
 8004500:	d578      	bpl.n	80045f4 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8004502:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004506:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800450a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800450e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8004512:	e9d5 0300 	ldrd	r0, r3, [r5]
 8004516:	02db      	lsls	r3, r3, #11
 8004518:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800451c:	68a8      	ldr	r0, [r5, #8]
 800451e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8004522:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004526:	430b      	orrs	r3, r1
 8004528:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800452c:	2300      	movs	r3, #0
 800452e:	9301      	str	r3, [sp, #4]
 8004530:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004534:	f043 0301 	orr.w	r3, r3, #1
 8004538:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800453c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004540:	f003 0301 	and.w	r3, r3, #1
 8004544:	9301      	str	r3, [sp, #4]
 8004546:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8004548:	f7ff fca4 	bl	8003e94 <HAL_GetTick>
 800454c:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800454e:	6823      	ldr	r3, [r4, #0]
 8004550:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004554:	05d2      	lsls	r2, r2, #23
 8004556:	d557      	bpl.n	8004608 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004558:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800455c:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800455e:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004560:	f042 0206 	orr.w	r2, r2, #6
 8004564:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004568:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800456c:	f022 0203 	bic.w	r2, r2, #3
 8004570:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004574:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004578:	430a      	orrs	r2, r1
 800457a:	f042 0201 	orr.w	r2, r2, #1
 800457e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004582:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004586:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004588:	f022 0203 	bic.w	r2, r2, #3
 800458c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004590:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004594:	430a      	orrs	r2, r1
 8004596:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800459a:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800459c:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800459e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80045a2:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80045a4:	689a      	ldr	r2, [r3, #8]
 80045a6:	430a      	orrs	r2, r1
 80045a8:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80045aa:	686a      	ldr	r2, [r5, #4]
 80045ac:	2a01      	cmp	r2, #1
 80045ae:	bf38      	it	cc
 80045b0:	2201      	movcc	r2, #1
 80045b2:	4611      	mov	r1, r2
 80045b4:	4a19      	ldr	r2, [pc, #100]	; (800461c <HAL_DSI_Init+0x160>)
 80045b6:	434a      	muls	r2, r1
 80045b8:	68a9      	ldr	r1, [r5, #8]
 80045ba:	f001 0103 	and.w	r1, r1, #3
 80045be:	408a      	lsls	r2, r1
 80045c0:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 80045c4:	4341      	muls	r1, r0
 80045c6:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 80045ca:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80045ce:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80045d2:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80045d6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80045da:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80045dc:	430a      	orrs	r2, r1
 80045de:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80045e2:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80045e6:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80045ea:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80045ec:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80045ee:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 80045f0:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 80045f2:	e007      	b.n	8004604 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80045f4:	f7ff fc4e 	bl	8003e94 <HAL_GetTick>
 80045f8:	1b80      	subs	r0, r0, r6
 80045fa:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80045fe:	f67f af7b 	bls.w	80044f8 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8004602:	2003      	movs	r0, #3
}
 8004604:	b002      	add	sp, #8
 8004606:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004608:	f7ff fc44 	bl	8003e94 <HAL_GetTick>
 800460c:	1b80      	subs	r0, r0, r6
 800460e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004612:	d99c      	bls.n	800454e <HAL_DSI_Init+0x92>
 8004614:	e7f5      	b.n	8004602 <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8004616:	2001      	movs	r0, #1
 8004618:	e7f4      	b.n	8004604 <HAL_DSI_Init+0x148>
 800461a:	bf00      	nop
 800461c:	003d0900 	.word	0x003d0900

08004620 <HAL_DSI_ErrorCallback>:
 8004620:	4770      	bx	lr

08004622 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004622:	6803      	ldr	r3, [r0, #0]
 8004624:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004628:	07d1      	lsls	r1, r2, #31
{
 800462a:	b510      	push	{r4, lr}
 800462c:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800462e:	d508      	bpl.n	8004642 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004630:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004634:	07d2      	lsls	r2, r2, #31
 8004636:	d504      	bpl.n	8004642 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004638:	2201      	movs	r2, #1
 800463a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800463e:	f7fc fa55 	bl	8000aec <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8004642:	6823      	ldr	r3, [r4, #0]
 8004644:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004648:	0791      	lsls	r1, r2, #30
 800464a:	d509      	bpl.n	8004660 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800464c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004650:	0792      	lsls	r2, r2, #30
 8004652:	d505      	bpl.n	8004660 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004654:	2202      	movs	r2, #2
 8004656:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800465a:	4620      	mov	r0, r4
 800465c:	f7fc fa7a 	bl	8000b54 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004660:	69a3      	ldr	r3, [r4, #24]
 8004662:	2b00      	cmp	r3, #0
 8004664:	d04e      	beq.n	8004704 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004666:	6821      	ldr	r1, [r4, #0]
 8004668:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800466c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004670:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004674:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004676:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800467a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800467c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800467e:	b119      	cbz	r1, 8004688 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004680:	6961      	ldr	r1, [r4, #20]
 8004682:	f041 0101 	orr.w	r1, r1, #1
 8004686:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004688:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800468c:	bf1e      	ittt	ne
 800468e:	6962      	ldrne	r2, [r4, #20]
 8004690:	f042 0202 	orrne.w	r2, r2, #2
 8004694:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004696:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004698:	bf42      	ittt	mi
 800469a:	6962      	ldrmi	r2, [r4, #20]
 800469c:	f042 0204 	orrmi.w	r2, r2, #4
 80046a0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 80046a2:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80046a4:	bf42      	ittt	mi
 80046a6:	6962      	ldrmi	r2, [r4, #20]
 80046a8:	f042 0208 	orrmi.w	r2, r2, #8
 80046ac:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80046ae:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80046b2:	bf1e      	ittt	ne
 80046b4:	6962      	ldrne	r2, [r4, #20]
 80046b6:	f042 0210 	orrne.w	r2, r2, #16
 80046ba:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80046bc:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80046be:	bf42      	ittt	mi
 80046c0:	6962      	ldrmi	r2, [r4, #20]
 80046c2:	f042 0220 	orrmi.w	r2, r2, #32
 80046c6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80046c8:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 80046ca:	bf42      	ittt	mi
 80046cc:	6962      	ldrmi	r2, [r4, #20]
 80046ce:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80046d2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80046d4:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80046d6:	bf42      	ittt	mi
 80046d8:	6962      	ldrmi	r2, [r4, #20]
 80046da:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 80046de:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 80046e0:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 80046e2:	bf42      	ittt	mi
 80046e4:	6962      	ldrmi	r2, [r4, #20]
 80046e6:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 80046ea:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80046ec:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 80046f0:	bf1e      	ittt	ne
 80046f2:	6963      	ldrne	r3, [r4, #20]
 80046f4:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 80046f8:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 80046fa:	6963      	ldr	r3, [r4, #20]
 80046fc:	b113      	cbz	r3, 8004704 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 80046fe:	4620      	mov	r0, r4
 8004700:	f7ff ff8e 	bl	8004620 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004704:	bd10      	pop	{r4, pc}

08004706 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004706:	7c03      	ldrb	r3, [r0, #16]
 8004708:	2b01      	cmp	r3, #1
 800470a:	d00b      	beq.n	8004724 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800470c:	6803      	ldr	r3, [r0, #0]
 800470e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004710:	f022 0203 	bic.w	r2, r2, #3
 8004714:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004716:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004718:	4311      	orrs	r1, r2
 800471a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800471c:	2300      	movs	r3, #0
 800471e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004720:	4618      	mov	r0, r3
 8004722:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004724:	2002      	movs	r0, #2
}
 8004726:	4770      	bx	lr

08004728 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004728:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800472a:	7c03      	ldrb	r3, [r0, #16]
 800472c:	2b01      	cmp	r3, #1
 800472e:	d06a      	beq.n	8004806 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004730:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004732:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004734:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004736:	f042 0201 	orr.w	r2, r2, #1
 800473a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800473c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004740:	f022 0201 	bic.w	r2, r2, #1
 8004744:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004748:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800474c:	f042 0201 	orr.w	r2, r2, #1
 8004750:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004754:	68da      	ldr	r2, [r3, #12]
 8004756:	f022 0203 	bic.w	r2, r2, #3
 800475a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800475c:	68da      	ldr	r2, [r3, #12]
 800475e:	4322      	orrs	r2, r4
 8004760:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8004762:	695a      	ldr	r2, [r3, #20]
 8004764:	f022 0207 	bic.w	r2, r2, #7
 8004768:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800476a:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800476e:	432a      	orrs	r2, r5
 8004770:	694d      	ldr	r5, [r1, #20]
 8004772:	695c      	ldr	r4, [r3, #20]
 8004774:	432a      	orrs	r2, r5
 8004776:	4322      	orrs	r2, r4
 8004778:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800477a:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800477c:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800477e:	f022 020f 	bic.w	r2, r2, #15
 8004782:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004784:	691c      	ldr	r4, [r3, #16]
 8004786:	432c      	orrs	r4, r5
 8004788:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800478a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800478e:	f024 040e 	bic.w	r4, r4, #14
 8004792:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004796:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800479a:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800479c:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80047a0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80047a4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80047a6:	0c12      	lsrs	r2, r2, #16
 80047a8:	0412      	lsls	r2, r2, #16
 80047aa:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80047ac:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80047ae:	4322      	orrs	r2, r4
 80047b0:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80047b2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80047b6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80047ba:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80047be:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80047c2:	432a      	orrs	r2, r5
 80047c4:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80047c6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80047ca:	432a      	orrs	r2, r5
 80047cc:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80047ce:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80047d0:	432a      	orrs	r2, r5
 80047d2:	4322      	orrs	r2, r4
 80047d4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80047d8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80047da:	f022 0201 	bic.w	r2, r2, #1
 80047de:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80047e0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80047e2:	430a      	orrs	r2, r1
 80047e4:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80047e6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80047ea:	f042 0201 	orr.w	r2, r2, #1
 80047ee:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80047f2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80047f6:	f042 0202 	orr.w	r2, r2, #2
 80047fa:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047fe:	2300      	movs	r3, #0
 8004800:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004802:	4618      	mov	r0, r3
}
 8004804:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004806:	2002      	movs	r0, #2
 8004808:	e7fc      	b.n	8004804 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800480c <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800480c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800480e:	7c03      	ldrb	r3, [r0, #16]
 8004810:	2b01      	cmp	r3, #1
 8004812:	d02a      	beq.n	800486a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004814:	6802      	ldr	r2, [r0, #0]
 8004816:	4b16      	ldr	r3, [pc, #88]	; (8004870 <HAL_DSI_ConfigCommand+0x64>)
 8004818:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800481a:	4023      	ands	r3, r4
 800481c:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800481e:	e9d1 3500 	ldrd	r3, r5, [r1]
 8004822:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004824:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004826:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004828:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800482a:	68cd      	ldr	r5, [r1, #12]
 800482c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800482e:	690d      	ldr	r5, [r1, #16]
 8004830:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004832:	694d      	ldr	r5, [r1, #20]
 8004834:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8004836:	698d      	ldr	r5, [r1, #24]
 8004838:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800483a:	69cd      	ldr	r5, [r1, #28]
 800483c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800483e:	6a0d      	ldr	r5, [r1, #32]
 8004840:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8004842:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004844:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8004846:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004848:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800484a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800484c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800484e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004850:	4323      	orrs	r3, r4
 8004852:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004854:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004856:	f023 0302 	bic.w	r3, r3, #2
 800485a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800485c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800485e:	430b      	orrs	r3, r1
 8004860:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004862:	2300      	movs	r3, #0
 8004864:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004866:	4618      	mov	r0, r3
}
 8004868:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800486a:	2002      	movs	r0, #2
 800486c:	e7fc      	b.n	8004868 <HAL_DSI_ConfigCommand+0x5c>
 800486e:	bf00      	nop
 8004870:	fef080ff 	.word	0xfef080ff

08004874 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004874:	7c03      	ldrb	r3, [r0, #16]
 8004876:	2b01      	cmp	r3, #1
 8004878:	d00b      	beq.n	8004892 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800487a:	6803      	ldr	r3, [r0, #0]
 800487c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800487e:	f022 021f 	bic.w	r2, r2, #31
 8004882:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004884:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004886:	4311      	orrs	r1, r2
 8004888:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800488a:	2300      	movs	r3, #0
 800488c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800488e:	4618      	mov	r0, r3
 8004890:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004892:	2002      	movs	r0, #2
}
 8004894:	4770      	bx	lr

08004896 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004896:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004898:	7c03      	ldrb	r3, [r0, #16]
 800489a:	2b01      	cmp	r3, #1
 800489c:	d035      	beq.n	800490a <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800489e:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80048a2:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80048a4:	4294      	cmp	r4, r2
 80048a6:	bf38      	it	cc
 80048a8:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80048aa:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80048ae:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80048b2:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80048b6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80048ba:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80048be:	4322      	orrs	r2, r4
 80048c0:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80048c4:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80048c8:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 80048cc:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80048d0:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80048d4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80048d6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80048da:	690d      	ldr	r5, [r1, #16]
 80048dc:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80048e0:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80048e2:	432a      	orrs	r2, r5
 80048e4:	4322      	orrs	r2, r4
 80048e6:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80048ea:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80048ee:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80048f2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80048f6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80048fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80048fe:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004902:	2300      	movs	r3, #0
 8004904:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004906:	4618      	mov	r0, r3
}
 8004908:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800490a:	2002      	movs	r0, #2
 800490c:	e7fc      	b.n	8004908 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004910 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004910:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004912:	7c03      	ldrb	r3, [r0, #16]
 8004914:	2b01      	cmp	r3, #1
 8004916:	d05c      	beq.n	80049d2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004918:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800491a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800491c:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800491e:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004920:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004924:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004926:	689a      	ldr	r2, [r3, #8]
 8004928:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800492c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800492e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004930:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004932:	b292      	uxth	r2, r2
 8004934:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004936:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004938:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800493c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800493e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004940:	4a25      	ldr	r2, [pc, #148]	; (80049d8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8004942:	4014      	ands	r4, r2
 8004944:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004946:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004948:	432c      	orrs	r4, r5
 800494a:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800494c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800494e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004950:	4014      	ands	r4, r2
 8004952:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004954:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8004956:	432c      	orrs	r4, r5
 8004958:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800495a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800495e:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004960:	4014      	ands	r4, r2
 8004962:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004966:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800496a:	432c      	orrs	r4, r5
 800496c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004970:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004974:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004976:	4014      	ands	r4, r2
 8004978:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800497c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004980:	432c      	orrs	r4, r5
 8004982:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004986:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800498a:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800498e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8004992:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004996:	698d      	ldr	r5, [r1, #24]
 8004998:	432c      	orrs	r4, r5
 800499a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800499e:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80049a2:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80049a4:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80049a6:	4014      	ands	r4, r2
 80049a8:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80049ac:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80049b0:	432c      	orrs	r4, r5
 80049b2:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80049b6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80049ba:	4022      	ands	r2, r4
 80049bc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80049c0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80049c4:	430a      	orrs	r2, r1
 80049c6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80049ca:	2300      	movs	r3, #0
 80049cc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80049ce:	4618      	mov	r0, r3
}
 80049d0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80049d2:	2002      	movs	r0, #2
 80049d4:	e7fc      	b.n	80049d0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80049d6:	bf00      	nop
 80049d8:	ffff0000 	.word	0xffff0000

080049dc <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80049dc:	7c03      	ldrb	r3, [r0, #16]
 80049de:	2b01      	cmp	r3, #1
{
 80049e0:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80049e2:	d01c      	beq.n	8004a1e <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80049e4:	6802      	ldr	r2, [r0, #0]
 80049e6:	2300      	movs	r3, #0
 80049e8:	9300      	str	r3, [sp, #0]
 80049ea:	6851      	ldr	r1, [r2, #4]
 80049ec:	f041 0101 	orr.w	r1, r1, #1
 80049f0:	6051      	str	r1, [r2, #4]
 80049f2:	6851      	ldr	r1, [r2, #4]
 80049f4:	f001 0101 	and.w	r1, r1, #1
 80049f8:	9100      	str	r1, [sp, #0]
 80049fa:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80049fc:	9301      	str	r3, [sp, #4]
 80049fe:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8004a02:	f041 0108 	orr.w	r1, r1, #8
 8004a06:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004a0a:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004a0e:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004a10:	f002 0208 	and.w	r2, r2, #8
 8004a14:	9201      	str	r2, [sp, #4]
 8004a16:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004a18:	4618      	mov	r0, r3
}
 8004a1a:	b002      	add	sp, #8
 8004a1c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004a1e:	2002      	movs	r0, #2
 8004a20:	e7fb      	b.n	8004a1a <HAL_DSI_Start+0x3e>

08004a22 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a22:	7c03      	ldrb	r3, [r0, #16]
 8004a24:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8004a26:	bf1f      	itttt	ne
 8004a28:	6802      	ldrne	r2, [r0, #0]
 8004a2a:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004a2e:	f043 0304 	orrne.w	r3, r3, #4
 8004a32:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004a36:	bf1d      	ittte	ne
 8004a38:	2300      	movne	r3, #0
 8004a3a:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004a3c:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8004a3e:	2002      	moveq	r0, #2
}
 8004a40:	4770      	bx	lr

08004a42 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8004a42:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a44:	7c05      	ldrb	r5, [r0, #16]
 8004a46:	2d01      	cmp	r5, #1
{
 8004a48:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004a4a:	d009      	beq.n	8004a60 <HAL_DSI_ShortWrite+0x1e>
 8004a4c:	2501      	movs	r5, #1
 8004a4e:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004a50:	9d06      	ldr	r5, [sp, #24]
 8004a52:	9500      	str	r5, [sp, #0]
 8004a54:	f7ff fcae 	bl	80043b4 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004a58:	2300      	movs	r3, #0
 8004a5a:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004a5c:	b003      	add	sp, #12
 8004a5e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004a60:	2002      	movs	r0, #2
 8004a62:	e7fb      	b.n	8004a5c <HAL_DSI_ShortWrite+0x1a>

08004a64 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004a64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a68:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a6a:	7c03      	ldrb	r3, [r0, #16]
 8004a6c:	2b01      	cmp	r3, #1
{
 8004a6e:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8004a72:	4606      	mov	r6, r0
 8004a74:	460f      	mov	r7, r1
 8004a76:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004a78:	d053      	beq.n	8004b22 <HAL_DSI_LongWrite+0xbe>
 8004a7a:	2301      	movs	r3, #1
 8004a7c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8004a7e:	f7ff fa09 	bl	8003e94 <HAL_GetTick>
 8004a82:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004a84:	6832      	ldr	r2, [r6, #0]
 8004a86:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8004a88:	f013 0a01 	ands.w	sl, r3, #1
 8004a8c:	d01a      	beq.n	8004ac4 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004a8e:	2c03      	cmp	r4, #3
 8004a90:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 8004a92:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004a96:	bf28      	it	cs
 8004a98:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 8004a9a:	4288      	cmp	r0, r1
 8004a9c:	d11e      	bne.n	8004adc <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004a9e:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 8004aa0:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 8004aa4:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004aa6:	bb1b      	cbnz	r3, 8004af0 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004aa8:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004aaa:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 8004aae:	0225      	lsls	r5, r4, #8
 8004ab0:	b2ad      	uxth	r5, r5
 8004ab2:	0224      	lsls	r4, r4, #8
 8004ab4:	430d      	orrs	r5, r1
 8004ab6:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004aba:	432c      	orrs	r4, r5
 8004abc:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004abe:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004ac0:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004ac2:	e009      	b.n	8004ad8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004ac4:	f7ff f9e6 	bl	8003e94 <HAL_GetTick>
 8004ac8:	eba0 000b 	sub.w	r0, r0, fp
 8004acc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004ad0:	d9d8      	bls.n	8004a84 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8004ad2:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004ad6:	2003      	movs	r0, #3
}
 8004ad8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004adc:	f818 3000 	ldrb.w	r3, [r8, r0]
 8004ae0:	3001      	adds	r0, #1
 8004ae2:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 8004ae6:	fa03 f30c 	lsl.w	r3, r3, ip
 8004aea:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004aee:	e7d4      	b.n	8004a9a <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004af0:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8004af2:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004af6:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004af8:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004afa:	bf28      	it	cs
 8004afc:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004b00:	f810 8001 	ldrb.w	r8, [r0, r1]
 8004b04:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004b08:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004b0a:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004b0e:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004b10:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004b14:	d1f4      	bne.n	8004b00 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004b16:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8004b1a:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004b1e:	4470      	add	r0, lr
 8004b20:	e7c1      	b.n	8004aa6 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8004b22:	2002      	movs	r0, #2
 8004b24:	e7d8      	b.n	8004ad8 <HAL_DSI_LongWrite+0x74>

08004b26 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004b26:	7c03      	ldrb	r3, [r0, #16]
 8004b28:	2b01      	cmp	r3, #1
 8004b2a:	d010      	beq.n	8004b4e <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004b2c:	6803      	ldr	r3, [r0, #0]
 8004b2e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004b32:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004b36:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004b3a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004b3e:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004b42:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004b46:	2300      	movs	r3, #0
 8004b48:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004b4a:	4618      	mov	r0, r3
 8004b4c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004b4e:	2002      	movs	r0, #2
}
 8004b50:	4770      	bx	lr
	...

08004b54 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004b54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b58:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004d1c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004b5c:	4a6d      	ldr	r2, [pc, #436]	; (8004d14 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004b5e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004b60:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004b62:	2401      	movs	r4, #1
 8004b64:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004b66:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004b6a:	43ac      	bics	r4, r5
 8004b6c:	f040 80b9 	bne.w	8004ce2 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004b70:	684d      	ldr	r5, [r1, #4]
 8004b72:	f005 0403 	and.w	r4, r5, #3
 8004b76:	ea4f 0843 	mov.w	r8, r3, lsl #1
 8004b7a:	2603      	movs	r6, #3
 8004b7c:	1e67      	subs	r7, r4, #1
 8004b7e:	fa06 f608 	lsl.w	r6, r6, r8
 8004b82:	2f01      	cmp	r7, #1
 8004b84:	ea6f 0606 	mvn.w	r6, r6
 8004b88:	d834      	bhi.n	8004bf4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004b8a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004b8c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004b90:	68cf      	ldr	r7, [r1, #12]
 8004b92:	fa07 f708 	lsl.w	r7, r7, r8
 8004b96:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004b9a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004b9c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004b9e:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004ba2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004ba6:	409f      	lsls	r7, r3
 8004ba8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004bac:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004bae:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004bb0:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004bb4:	688f      	ldr	r7, [r1, #8]
 8004bb6:	fa07 f708 	lsl.w	r7, r7, r8
 8004bba:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004bbe:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004bc0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004bc2:	d119      	bne.n	8004bf8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004bc4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004bc8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004bcc:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004bd0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004bd4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004bd8:	f04f 0e0f 	mov.w	lr, #15
 8004bdc:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004be0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004be4:	690f      	ldr	r7, [r1, #16]
 8004be6:	fa07 f70b 	lsl.w	r7, r7, fp
 8004bea:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004bee:	f8ca 7020 	str.w	r7, [sl, #32]
 8004bf2:	e001      	b.n	8004bf8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004bf4:	2c03      	cmp	r4, #3
 8004bf6:	d1da      	bne.n	8004bae <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004bf8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004bfa:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004bfe:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004c00:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004c02:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8004c06:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004c08:	d06b      	beq.n	8004ce2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c0a:	f04f 0a00 	mov.w	sl, #0
 8004c0e:	f8cd a004 	str.w	sl, [sp, #4]
 8004c12:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c16:	4c40      	ldr	r4, [pc, #256]	; (8004d18 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c18:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004c1c:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8004c20:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8004c24:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8004c28:	9601      	str	r6, [sp, #4]
 8004c2a:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004c2c:	f023 0603 	bic.w	r6, r3, #3
 8004c30:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004c34:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004c38:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004c3c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004c40:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004c44:	270f      	movs	r7, #15
 8004c46:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c4a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004c4c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c50:	d04e      	beq.n	8004cf0 <HAL_GPIO_Init+0x19c>
 8004c52:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c56:	42a0      	cmp	r0, r4
 8004c58:	d04c      	beq.n	8004cf4 <HAL_GPIO_Init+0x1a0>
 8004c5a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c5e:	42a0      	cmp	r0, r4
 8004c60:	d04a      	beq.n	8004cf8 <HAL_GPIO_Init+0x1a4>
 8004c62:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c66:	42a0      	cmp	r0, r4
 8004c68:	d048      	beq.n	8004cfc <HAL_GPIO_Init+0x1a8>
 8004c6a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c6e:	42a0      	cmp	r0, r4
 8004c70:	d046      	beq.n	8004d00 <HAL_GPIO_Init+0x1ac>
 8004c72:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c76:	42a0      	cmp	r0, r4
 8004c78:	d044      	beq.n	8004d04 <HAL_GPIO_Init+0x1b0>
 8004c7a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c7e:	42a0      	cmp	r0, r4
 8004c80:	d042      	beq.n	8004d08 <HAL_GPIO_Init+0x1b4>
 8004c82:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c86:	42a0      	cmp	r0, r4
 8004c88:	d040      	beq.n	8004d0c <HAL_GPIO_Init+0x1b8>
 8004c8a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c8e:	42a0      	cmp	r0, r4
 8004c90:	d03e      	beq.n	8004d10 <HAL_GPIO_Init+0x1bc>
 8004c92:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c96:	42a0      	cmp	r0, r4
 8004c98:	bf0c      	ite	eq
 8004c9a:	2409      	moveq	r4, #9
 8004c9c:	240a      	movne	r4, #10
 8004c9e:	fa04 f40e 	lsl.w	r4, r4, lr
 8004ca2:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004ca4:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 8004ca6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004ca8:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004cac:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004cae:	bf54      	ite	pl
 8004cb0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004cb2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004cb6:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 8004cb8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004cba:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8004cbc:	bf54      	ite	pl
 8004cbe:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004cc0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8004cc4:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004cc6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004cc8:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8004cca:	bf54      	ite	pl
 8004ccc:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004cce:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8004cd2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004cd4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004cd6:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8004cd8:	bf54      	ite	pl
 8004cda:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004cdc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8004ce0:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004ce2:	3301      	adds	r3, #1
 8004ce4:	2b10      	cmp	r3, #16
 8004ce6:	f47f af3b 	bne.w	8004b60 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004cea:	b003      	add	sp, #12
 8004cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004cf0:	4654      	mov	r4, sl
 8004cf2:	e7d4      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004cf4:	2401      	movs	r4, #1
 8004cf6:	e7d2      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004cf8:	2402      	movs	r4, #2
 8004cfa:	e7d0      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004cfc:	2403      	movs	r4, #3
 8004cfe:	e7ce      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d00:	2404      	movs	r4, #4
 8004d02:	e7cc      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d04:	2405      	movs	r4, #5
 8004d06:	e7ca      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d08:	2406      	movs	r4, #6
 8004d0a:	e7c8      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d0c:	2407      	movs	r4, #7
 8004d0e:	e7c6      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d10:	2408      	movs	r4, #8
 8004d12:	e7c4      	b.n	8004c9e <HAL_GPIO_Init+0x14a>
 8004d14:	40013c00 	.word	0x40013c00
 8004d18:	40020000 	.word	0x40020000
 8004d1c:	40023800 	.word	0x40023800

08004d20 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004d24:	4c4a      	ldr	r4, [pc, #296]	; (8004e50 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d26:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004e58 <HAL_GPIO_DeInit+0x138>
 8004d2a:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004e5c <HAL_GPIO_DeInit+0x13c>
 8004d2e:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004e60 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004d32:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004d34:	2301      	movs	r3, #1
 8004d36:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004d3a:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004d3e:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004d42:	d16e      	bne.n	8004e22 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004d44:	f022 0503 	bic.w	r5, r2, #3
 8004d48:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004d4c:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d50:	4b40      	ldr	r3, [pc, #256]	; (8004e54 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004d52:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004d56:	f002 0c03 	and.w	ip, r2, #3
 8004d5a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004d5e:	260f      	movs	r6, #15
 8004d60:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d64:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004d66:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d6a:	d05f      	beq.n	8004e2c <HAL_GPIO_DeInit+0x10c>
 8004d6c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d70:	4298      	cmp	r0, r3
 8004d72:	d05d      	beq.n	8004e30 <HAL_GPIO_DeInit+0x110>
 8004d74:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d78:	4298      	cmp	r0, r3
 8004d7a:	d05b      	beq.n	8004e34 <HAL_GPIO_DeInit+0x114>
 8004d7c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d80:	4298      	cmp	r0, r3
 8004d82:	d059      	beq.n	8004e38 <HAL_GPIO_DeInit+0x118>
 8004d84:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d88:	4298      	cmp	r0, r3
 8004d8a:	d057      	beq.n	8004e3c <HAL_GPIO_DeInit+0x11c>
 8004d8c:	4548      	cmp	r0, r9
 8004d8e:	d057      	beq.n	8004e40 <HAL_GPIO_DeInit+0x120>
 8004d90:	4550      	cmp	r0, sl
 8004d92:	d057      	beq.n	8004e44 <HAL_GPIO_DeInit+0x124>
 8004d94:	4558      	cmp	r0, fp
 8004d96:	d057      	beq.n	8004e48 <HAL_GPIO_DeInit+0x128>
 8004d98:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004d9c:	4298      	cmp	r0, r3
 8004d9e:	d055      	beq.n	8004e4c <HAL_GPIO_DeInit+0x12c>
 8004da0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004da4:	4298      	cmp	r0, r3
 8004da6:	bf0c      	ite	eq
 8004da8:	2309      	moveq	r3, #9
 8004daa:	230a      	movne	r3, #10
 8004dac:	fa03 f30c 	lsl.w	r3, r3, ip
 8004db0:	4543      	cmp	r3, r8
 8004db2:	d113      	bne.n	8004ddc <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004db4:	6823      	ldr	r3, [r4, #0]
 8004db6:	ea23 0307 	bic.w	r3, r3, r7
 8004dba:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004dbc:	6863      	ldr	r3, [r4, #4]
 8004dbe:	ea23 0307 	bic.w	r3, r3, r7
 8004dc2:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004dc4:	68a3      	ldr	r3, [r4, #8]
 8004dc6:	ea23 0307 	bic.w	r3, r3, r7
 8004dca:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004dcc:	68e3      	ldr	r3, [r4, #12]
 8004dce:	ea23 0707 	bic.w	r7, r3, r7
 8004dd2:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004dd4:	68ab      	ldr	r3, [r5, #8]
 8004dd6:	ea23 0606 	bic.w	r6, r3, r6
 8004dda:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004ddc:	6805      	ldr	r5, [r0, #0]
 8004dde:	2603      	movs	r6, #3
 8004de0:	0053      	lsls	r3, r2, #1
 8004de2:	fa06 f303 	lsl.w	r3, r6, r3
 8004de6:	ea25 0503 	bic.w	r5, r5, r3
 8004dea:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004dec:	fa22 f506 	lsr.w	r5, r2, r6
 8004df0:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004df4:	f002 0c07 	and.w	ip, r2, #7
 8004df8:	6a2e      	ldr	r6, [r5, #32]
 8004dfa:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004dfe:	270f      	movs	r7, #15
 8004e00:	fa07 f70c 	lsl.w	r7, r7, ip
 8004e04:	ea26 0707 	bic.w	r7, r6, r7
 8004e08:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004e0a:	68c5      	ldr	r5, [r0, #12]
 8004e0c:	ea25 0503 	bic.w	r5, r5, r3
 8004e10:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004e12:	6845      	ldr	r5, [r0, #4]
 8004e14:	ea25 050e 	bic.w	r5, r5, lr
 8004e18:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004e1a:	6885      	ldr	r5, [r0, #8]
 8004e1c:	ea25 0303 	bic.w	r3, r5, r3
 8004e20:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004e22:	3201      	adds	r2, #1
 8004e24:	2a10      	cmp	r2, #16
 8004e26:	d185      	bne.n	8004d34 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	e7bd      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e30:	2301      	movs	r3, #1
 8004e32:	e7bb      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e34:	2302      	movs	r3, #2
 8004e36:	e7b9      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e38:	2303      	movs	r3, #3
 8004e3a:	e7b7      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e3c:	2304      	movs	r3, #4
 8004e3e:	e7b5      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e40:	2305      	movs	r3, #5
 8004e42:	e7b3      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e44:	2306      	movs	r3, #6
 8004e46:	e7b1      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e48:	2307      	movs	r3, #7
 8004e4a:	e7af      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e4c:	2308      	movs	r3, #8
 8004e4e:	e7ad      	b.n	8004dac <HAL_GPIO_DeInit+0x8c>
 8004e50:	40013c00 	.word	0x40013c00
 8004e54:	40020000 	.word	0x40020000
 8004e58:	40021400 	.word	0x40021400
 8004e5c:	40021800 	.word	0x40021800
 8004e60:	40021c00 	.word	0x40021c00

08004e64 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004e64:	6903      	ldr	r3, [r0, #16]
 8004e66:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004e68:	bf14      	ite	ne
 8004e6a:	2001      	movne	r0, #1
 8004e6c:	2000      	moveq	r0, #0
 8004e6e:	4770      	bx	lr

08004e70 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004e70:	b10a      	cbz	r2, 8004e76 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e72:	6181      	str	r1, [r0, #24]
  }
}
 8004e74:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e76:	0409      	lsls	r1, r1, #16
 8004e78:	e7fb      	b.n	8004e72 <HAL_GPIO_WritePin+0x2>

08004e7a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8004e7a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004e7c:	ea01 0203 	and.w	r2, r1, r3
 8004e80:	ea21 0103 	bic.w	r1, r1, r3
 8004e84:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004e88:	6181      	str	r1, [r0, #24]
}
 8004e8a:	4770      	bx	lr

08004e8c <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e8c:	6801      	ldr	r1, [r0, #0]
 8004e8e:	694b      	ldr	r3, [r1, #20]
 8004e90:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004e94:	f04f 0200 	mov.w	r2, #0
 8004e98:	d010      	beq.n	8004ebc <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e9a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004e9e:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004ea0:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004ea2:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004ea4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ea8:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eac:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004eae:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eb2:	f043 0304 	orr.w	r3, r3, #4
 8004eb6:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004eb8:	2001      	movs	r0, #1
 8004eba:	4770      	bx	lr
  }
  return HAL_OK;
 8004ebc:	4618      	mov	r0, r3
}
 8004ebe:	4770      	bx	lr

08004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004ec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ec4:	4604      	mov	r4, r0
 8004ec6:	460f      	mov	r7, r1
 8004ec8:	4616      	mov	r6, r2
 8004eca:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004ecc:	6825      	ldr	r5, [r4, #0]
 8004ece:	6968      	ldr	r0, [r5, #20]
 8004ed0:	ea27 0000 	bic.w	r0, r7, r0
 8004ed4:	b280      	uxth	r0, r0
 8004ed6:	b1b8      	cbz	r0, 8004f08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004ed8:	696b      	ldr	r3, [r5, #20]
 8004eda:	055a      	lsls	r2, r3, #21
 8004edc:	d516      	bpl.n	8004f0c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ede:	682b      	ldr	r3, [r5, #0]
 8004ee0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004ee4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ee6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004eea:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004eec:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004eee:	2300      	movs	r3, #0
 8004ef0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ef2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ef6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004efa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004efc:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f00:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f02:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004f06:	2001      	movs	r0, #1
}
 8004f08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004f0c:	1c73      	adds	r3, r6, #1
 8004f0e:	d0de      	beq.n	8004ece <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f10:	f7fe ffc0 	bl	8003e94 <HAL_GetTick>
 8004f14:	eba0 0008 	sub.w	r0, r0, r8
 8004f18:	42b0      	cmp	r0, r6
 8004f1a:	d801      	bhi.n	8004f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004f1c:	2e00      	cmp	r6, #0
 8004f1e:	d1d5      	bne.n	8004ecc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f20:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f22:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f24:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f26:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f2a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f30:	f042 0220 	orr.w	r2, r2, #32
 8004f34:	e7e4      	b.n	8004f00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004f36 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004f36:	b570      	push	{r4, r5, r6, lr}
 8004f38:	4604      	mov	r4, r0
 8004f3a:	460d      	mov	r5, r1
 8004f3c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f3e:	6823      	ldr	r3, [r4, #0]
 8004f40:	695b      	ldr	r3, [r3, #20]
 8004f42:	075b      	lsls	r3, r3, #29
 8004f44:	d501      	bpl.n	8004f4a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f46:	2000      	movs	r0, #0
}
 8004f48:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f4a:	4620      	mov	r0, r4
 8004f4c:	f7ff ff9e 	bl	8004e8c <I2C_IsAcknowledgeFailed>
 8004f50:	b9a8      	cbnz	r0, 8004f7e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004f52:	1c6a      	adds	r2, r5, #1
 8004f54:	d0f3      	beq.n	8004f3e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f56:	f7fe ff9d 	bl	8003e94 <HAL_GetTick>
 8004f5a:	1b80      	subs	r0, r0, r6
 8004f5c:	42a8      	cmp	r0, r5
 8004f5e:	d801      	bhi.n	8004f64 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f60:	2d00      	cmp	r5, #0
 8004f62:	d1ec      	bne.n	8004f3e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f64:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f66:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f68:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f6a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f72:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f74:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f78:	f042 0220 	orr.w	r2, r2, #32
 8004f7c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004f7e:	2001      	movs	r0, #1
 8004f80:	e7e2      	b.n	8004f48 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004f82 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004f82:	b570      	push	{r4, r5, r6, lr}
 8004f84:	4604      	mov	r4, r0
 8004f86:	460d      	mov	r5, r1
 8004f88:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f8a:	6821      	ldr	r1, [r4, #0]
 8004f8c:	694b      	ldr	r3, [r1, #20]
 8004f8e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004f92:	d001      	beq.n	8004f98 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004f94:	2000      	movs	r0, #0
 8004f96:	e010      	b.n	8004fba <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f98:	694a      	ldr	r2, [r1, #20]
 8004f9a:	06d2      	lsls	r2, r2, #27
 8004f9c:	d50e      	bpl.n	8004fbc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f9e:	f06f 0210 	mvn.w	r2, #16
 8004fa2:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fa4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004fa6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fa8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004fb0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004fb2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fb4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004fb8:	2001      	movs	r0, #1
}
 8004fba:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fbc:	f7fe ff6a 	bl	8003e94 <HAL_GetTick>
 8004fc0:	1b80      	subs	r0, r0, r6
 8004fc2:	42a8      	cmp	r0, r5
 8004fc4:	d801      	bhi.n	8004fca <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004fc6:	2d00      	cmp	r5, #0
 8004fc8:	d1df      	bne.n	8004f8a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fca:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fcc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fce:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fd0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004fd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004fd8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004fda:	f042 0220 	orr.w	r2, r2, #32
 8004fde:	e7e8      	b.n	8004fb2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004fe0 <I2C_WaitOnFlagUntilTimeout>:
{
 8004fe0:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004fe4:	4606      	mov	r6, r0
 8004fe6:	460f      	mov	r7, r1
 8004fe8:	4691      	mov	r9, r2
 8004fea:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004fec:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004ff0:	6833      	ldr	r3, [r6, #0]
 8004ff2:	f1ba 0f01 	cmp.w	sl, #1
 8004ff6:	bf0c      	ite	eq
 8004ff8:	695c      	ldreq	r4, [r3, #20]
 8004ffa:	699c      	ldrne	r4, [r3, #24]
 8004ffc:	ea27 0404 	bic.w	r4, r7, r4
 8005000:	b2a4      	uxth	r4, r4
 8005002:	fab4 f484 	clz	r4, r4
 8005006:	0964      	lsrs	r4, r4, #5
 8005008:	45a1      	cmp	r9, r4
 800500a:	d001      	beq.n	8005010 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800500c:	2000      	movs	r0, #0
 800500e:	e017      	b.n	8005040 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005010:	1c6a      	adds	r2, r5, #1
 8005012:	d0ee      	beq.n	8004ff2 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005014:	f7fe ff3e 	bl	8003e94 <HAL_GetTick>
 8005018:	9b08      	ldr	r3, [sp, #32]
 800501a:	1ac0      	subs	r0, r0, r3
 800501c:	42a8      	cmp	r0, r5
 800501e:	d801      	bhi.n	8005024 <I2C_WaitOnFlagUntilTimeout+0x44>
 8005020:	2d00      	cmp	r5, #0
 8005022:	d1e5      	bne.n	8004ff0 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005024:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005026:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005028:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800502a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800502e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005032:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005034:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005038:	f042 0220 	orr.w	r2, r2, #32
 800503c:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800503e:	2001      	movs	r0, #1
}
 8005040:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005044 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005044:	b570      	push	{r4, r5, r6, lr}
 8005046:	4604      	mov	r4, r0
 8005048:	460d      	mov	r5, r1
 800504a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800504c:	6823      	ldr	r3, [r4, #0]
 800504e:	695b      	ldr	r3, [r3, #20]
 8005050:	061b      	lsls	r3, r3, #24
 8005052:	d501      	bpl.n	8005058 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005054:	2000      	movs	r0, #0
}
 8005056:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005058:	4620      	mov	r0, r4
 800505a:	f7ff ff17 	bl	8004e8c <I2C_IsAcknowledgeFailed>
 800505e:	b9a8      	cbnz	r0, 800508c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005060:	1c6a      	adds	r2, r5, #1
 8005062:	d0f3      	beq.n	800504c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005064:	f7fe ff16 	bl	8003e94 <HAL_GetTick>
 8005068:	1b80      	subs	r0, r0, r6
 800506a:	42a8      	cmp	r0, r5
 800506c:	d801      	bhi.n	8005072 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800506e:	2d00      	cmp	r5, #0
 8005070:	d1ec      	bne.n	800504c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005072:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005074:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005076:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005078:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800507c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005080:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005082:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005086:	f042 0220 	orr.w	r2, r2, #32
 800508a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800508c:	2001      	movs	r0, #1
 800508e:	e7e2      	b.n	8005056 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08005090 <I2C_RequestMemoryWrite>:
{
 8005090:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005094:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005096:	6802      	ldr	r2, [r0, #0]
{
 8005098:	b085      	sub	sp, #20
 800509a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800509e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80050a0:	6813      	ldr	r3, [r2, #0]
 80050a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80050a6:	6013      	str	r3, [r2, #0]
{
 80050a8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050aa:	463b      	mov	r3, r7
 80050ac:	f8cd 8000 	str.w	r8, [sp]
 80050b0:	2200      	movs	r2, #0
 80050b2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80050b6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050b8:	f7ff ff92 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 80050bc:	6823      	ldr	r3, [r4, #0]
 80050be:	b138      	cbz	r0, 80050d0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	05db      	lsls	r3, r3, #23
 80050c4:	d502      	bpl.n	80050cc <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80050c6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80050ca:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80050cc:	2003      	movs	r0, #3
 80050ce:	e00a      	b.n	80050e6 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80050d0:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80050d4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80050d6:	4919      	ldr	r1, [pc, #100]	; (800513c <I2C_RequestMemoryWrite+0xac>)
 80050d8:	4643      	mov	r3, r8
 80050da:	463a      	mov	r2, r7
 80050dc:	4620      	mov	r0, r4
 80050de:	f7ff feef 	bl	8004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80050e2:	b118      	cbz	r0, 80050ec <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80050e4:	2001      	movs	r0, #1
}
 80050e6:	b005      	add	sp, #20
 80050e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050ec:	6823      	ldr	r3, [r4, #0]
 80050ee:	9003      	str	r0, [sp, #12]
 80050f0:	695a      	ldr	r2, [r3, #20]
 80050f2:	9203      	str	r2, [sp, #12]
 80050f4:	699b      	ldr	r3, [r3, #24]
 80050f6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050f8:	4642      	mov	r2, r8
 80050fa:	4639      	mov	r1, r7
 80050fc:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050fe:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005100:	f7ff ffa0 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 8005104:	b140      	cbz	r0, 8005118 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005106:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005108:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800510a:	bf01      	itttt	eq
 800510c:	6822      	ldreq	r2, [r4, #0]
 800510e:	6813      	ldreq	r3, [r2, #0]
 8005110:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005114:	6013      	streq	r3, [r2, #0]
 8005116:	e7e5      	b.n	80050e4 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005118:	f1b9 0f01 	cmp.w	r9, #1
 800511c:	6823      	ldr	r3, [r4, #0]
 800511e:	d102      	bne.n	8005126 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005120:	b2ed      	uxtb	r5, r5
 8005122:	611d      	str	r5, [r3, #16]
 8005124:	e7df      	b.n	80050e6 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005126:	0a2a      	lsrs	r2, r5, #8
 8005128:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800512a:	4639      	mov	r1, r7
 800512c:	4642      	mov	r2, r8
 800512e:	4620      	mov	r0, r4
 8005130:	f7ff ff88 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 8005134:	2800      	cmp	r0, #0
 8005136:	d1e6      	bne.n	8005106 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005138:	6823      	ldr	r3, [r4, #0]
 800513a:	e7f1      	b.n	8005120 <I2C_RequestMemoryWrite+0x90>
 800513c:	00010002 	.word	0x00010002

08005140 <I2C_RequestMemoryRead>:
{
 8005140:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005144:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005146:	6803      	ldr	r3, [r0, #0]
{
 8005148:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800514a:	681a      	ldr	r2, [r3, #0]
 800514c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005150:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005152:	681a      	ldr	r2, [r3, #0]
{
 8005154:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005158:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800515c:	601a      	str	r2, [r3, #0]
{
 800515e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005160:	463b      	mov	r3, r7
 8005162:	f8cd 8000 	str.w	r8, [sp]
 8005166:	2200      	movs	r2, #0
 8005168:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800516c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800516e:	f7ff ff37 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 8005172:	6823      	ldr	r3, [r4, #0]
 8005174:	b148      	cbz	r0, 800518a <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005176:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005178:	05db      	lsls	r3, r3, #23
 800517a:	d502      	bpl.n	8005182 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800517c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005180:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005182:	2003      	movs	r0, #3
}
 8005184:	b004      	add	sp, #16
 8005186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800518a:	fa5f f986 	uxtb.w	r9, r6
 800518e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005192:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005194:	492a      	ldr	r1, [pc, #168]	; (8005240 <I2C_RequestMemoryRead+0x100>)
 8005196:	4643      	mov	r3, r8
 8005198:	463a      	mov	r2, r7
 800519a:	4620      	mov	r0, r4
 800519c:	f7ff fe90 	bl	8004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80051a0:	b108      	cbz	r0, 80051a6 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80051a2:	2001      	movs	r0, #1
 80051a4:	e7ee      	b.n	8005184 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051a6:	6823      	ldr	r3, [r4, #0]
 80051a8:	9003      	str	r0, [sp, #12]
 80051aa:	695a      	ldr	r2, [r3, #20]
 80051ac:	9203      	str	r2, [sp, #12]
 80051ae:	699b      	ldr	r3, [r3, #24]
 80051b0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051b2:	4642      	mov	r2, r8
 80051b4:	4639      	mov	r1, r7
 80051b6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051b8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051ba:	f7ff ff43 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 80051be:	b140      	cbz	r0, 80051d2 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80051c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80051c2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051c4:	bf01      	itttt	eq
 80051c6:	6822      	ldreq	r2, [r4, #0]
 80051c8:	6813      	ldreq	r3, [r2, #0]
 80051ca:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80051ce:	6013      	streq	r3, [r2, #0]
 80051d0:	e7e7      	b.n	80051a2 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80051d2:	f1ba 0f01 	cmp.w	sl, #1
 80051d6:	6823      	ldr	r3, [r4, #0]
 80051d8:	d11a      	bne.n	8005210 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80051da:	b2ed      	uxtb	r5, r5
 80051dc:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051de:	4642      	mov	r2, r8
 80051e0:	4639      	mov	r1, r7
 80051e2:	4620      	mov	r0, r4
 80051e4:	f7ff ff2e 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 80051e8:	2800      	cmp	r0, #0
 80051ea:	d1e9      	bne.n	80051c0 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80051ec:	6822      	ldr	r2, [r4, #0]
 80051ee:	6813      	ldr	r3, [r2, #0]
 80051f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80051f4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80051f6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80051fa:	4602      	mov	r2, r0
 80051fc:	f8cd 8000 	str.w	r8, [sp]
 8005200:	463b      	mov	r3, r7
 8005202:	4620      	mov	r0, r4
 8005204:	f7ff feec 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 8005208:	6822      	ldr	r2, [r4, #0]
 800520a:	b160      	cbz	r0, 8005226 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800520c:	6813      	ldr	r3, [r2, #0]
 800520e:	e7b3      	b.n	8005178 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005210:	0a2a      	lsrs	r2, r5, #8
 8005212:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005214:	4639      	mov	r1, r7
 8005216:	4642      	mov	r2, r8
 8005218:	4620      	mov	r0, r4
 800521a:	f7ff ff13 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 800521e:	2800      	cmp	r0, #0
 8005220:	d1ce      	bne.n	80051c0 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005222:	6823      	ldr	r3, [r4, #0]
 8005224:	e7d9      	b.n	80051da <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005226:	f049 0301 	orr.w	r3, r9, #1
 800522a:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800522c:	4904      	ldr	r1, [pc, #16]	; (8005240 <I2C_RequestMemoryRead+0x100>)
 800522e:	4643      	mov	r3, r8
 8005230:	463a      	mov	r2, r7
 8005232:	4620      	mov	r0, r4
 8005234:	f7ff fe44 	bl	8004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005238:	3800      	subs	r0, #0
 800523a:	bf18      	it	ne
 800523c:	2001      	movne	r0, #1
 800523e:	e7a1      	b.n	8005184 <I2C_RequestMemoryRead+0x44>
 8005240:	00010002 	.word	0x00010002

08005244 <HAL_I2C_Init>:
{
 8005244:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005246:	4604      	mov	r4, r0
 8005248:	b908      	cbnz	r0, 800524e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800524a:	2001      	movs	r0, #1
}
 800524c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800524e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005252:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005256:	b91b      	cbnz	r3, 8005260 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005258:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800525c:	f7fc fc6e 	bl	8001b3c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005260:	2324      	movs	r3, #36	; 0x24
 8005262:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005266:	6823      	ldr	r3, [r4, #0]
 8005268:	681a      	ldr	r2, [r3, #0]
 800526a:	f022 0201 	bic.w	r2, r2, #1
 800526e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005270:	681a      	ldr	r2, [r3, #0]
 8005272:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005276:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005278:	681a      	ldr	r2, [r3, #0]
 800527a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800527e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005280:	f001 f818 	bl	80062b4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005284:	4a3f      	ldr	r2, [pc, #252]	; (8005384 <HAL_I2C_Init+0x140>)
 8005286:	6863      	ldr	r3, [r4, #4]
 8005288:	4293      	cmp	r3, r2
 800528a:	bf94      	ite	ls
 800528c:	4a3e      	ldrls	r2, [pc, #248]	; (8005388 <HAL_I2C_Init+0x144>)
 800528e:	4a3f      	ldrhi	r2, [pc, #252]	; (800538c <HAL_I2C_Init+0x148>)
 8005290:	4290      	cmp	r0, r2
 8005292:	bf8c      	ite	hi
 8005294:	2200      	movhi	r2, #0
 8005296:	2201      	movls	r2, #1
 8005298:	2a00      	cmp	r2, #0
 800529a:	d1d6      	bne.n	800524a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800529c:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800529e:	4e3c      	ldr	r6, [pc, #240]	; (8005390 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80052a0:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80052a2:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80052a6:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80052aa:	4332      	orrs	r2, r6
 80052ac:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80052ae:	4a35      	ldr	r2, [pc, #212]	; (8005384 <HAL_I2C_Init+0x140>)
 80052b0:	6a0d      	ldr	r5, [r1, #32]
 80052b2:	4293      	cmp	r3, r2
 80052b4:	bf84      	itt	hi
 80052b6:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 80052ba:	4372      	mulhi	r2, r6
 80052bc:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80052c0:	bf91      	iteee	ls
 80052c2:	1c72      	addls	r2, r6, #1
 80052c4:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80052c8:	fbb2 f2f6 	udivhi	r2, r2, r6
 80052cc:	3201      	addhi	r2, #1
 80052ce:	432a      	orrs	r2, r5
 80052d0:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80052d2:	69cd      	ldr	r5, [r1, #28]
 80052d4:	1e42      	subs	r2, r0, #1
 80052d6:	482b      	ldr	r0, [pc, #172]	; (8005384 <HAL_I2C_Init+0x140>)
 80052d8:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 80052dc:	4283      	cmp	r3, r0
 80052de:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80052e2:	d832      	bhi.n	800534a <HAL_I2C_Init+0x106>
 80052e4:	005b      	lsls	r3, r3, #1
 80052e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80052ea:	f640 72fc 	movw	r2, #4092	; 0xffc
 80052ee:	3301      	adds	r3, #1
 80052f0:	4213      	tst	r3, r2
 80052f2:	d042      	beq.n	800537a <HAL_I2C_Init+0x136>
 80052f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052f8:	432b      	orrs	r3, r5
 80052fa:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80052fc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005300:	680a      	ldr	r2, [r1, #0]
 8005302:	4303      	orrs	r3, r0
 8005304:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8005308:	4313      	orrs	r3, r2
 800530a:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800530c:	688a      	ldr	r2, [r1, #8]
 800530e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005312:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8005316:	4303      	orrs	r3, r0
 8005318:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800531c:	4313      	orrs	r3, r2
 800531e:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005320:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005324:	68ca      	ldr	r2, [r1, #12]
 8005326:	4303      	orrs	r3, r0
 8005328:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800532c:	4313      	orrs	r3, r2
 800532e:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005330:	680b      	ldr	r3, [r1, #0]
 8005332:	f043 0301 	orr.w	r3, r3, #1
 8005336:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005338:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800533a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800533c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800533e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005342:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005344:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005348:	e780      	b.n	800524c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800534a:	68a0      	ldr	r0, [r4, #8]
 800534c:	b950      	cbnz	r0, 8005364 <HAL_I2C_Init+0x120>
 800534e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005352:	fbb2 f3f3 	udiv	r3, r2, r3
 8005356:	3301      	adds	r3, #1
 8005358:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800535c:	b17b      	cbz	r3, 800537e <HAL_I2C_Init+0x13a>
 800535e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005362:	e7c9      	b.n	80052f8 <HAL_I2C_Init+0xb4>
 8005364:	2019      	movs	r0, #25
 8005366:	4343      	muls	r3, r0
 8005368:	fbb2 f3f3 	udiv	r3, r2, r3
 800536c:	3301      	adds	r3, #1
 800536e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005372:	b123      	cbz	r3, 800537e <HAL_I2C_Init+0x13a>
 8005374:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005378:	e7be      	b.n	80052f8 <HAL_I2C_Init+0xb4>
 800537a:	2304      	movs	r3, #4
 800537c:	e7bc      	b.n	80052f8 <HAL_I2C_Init+0xb4>
 800537e:	2301      	movs	r3, #1
 8005380:	e7ba      	b.n	80052f8 <HAL_I2C_Init+0xb4>
 8005382:	bf00      	nop
 8005384:	000186a0 	.word	0x000186a0
 8005388:	001e847f 	.word	0x001e847f
 800538c:	003d08ff 	.word	0x003d08ff
 8005390:	000f4240 	.word	0x000f4240

08005394 <HAL_I2C_DeInit>:
{
 8005394:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005396:	4604      	mov	r4, r0
 8005398:	b198      	cbz	r0, 80053c2 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800539a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800539c:	2324      	movs	r3, #36	; 0x24
 800539e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80053a2:	6813      	ldr	r3, [r2, #0]
 80053a4:	f023 0301 	bic.w	r3, r3, #1
 80053a8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 80053aa:	f7fc fc0b 	bl	8001bc4 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 80053ae:	2000      	movs	r0, #0
 80053b0:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 80053b2:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 80053b6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80053ba:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 80053bc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 80053c0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80053c2:	2001      	movs	r0, #1
 80053c4:	e7fc      	b.n	80053c0 <HAL_I2C_DeInit+0x2c>
	...

080053c8 <HAL_I2C_Mem_Write>:
{
 80053c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80053cc:	4604      	mov	r4, r0
 80053ce:	4699      	mov	r9, r3
 80053d0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80053d2:	460f      	mov	r7, r1
 80053d4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80053d6:	f7fe fd5d 	bl	8003e94 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053da:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80053de:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80053e0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053e2:	d003      	beq.n	80053ec <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80053e4:	2002      	movs	r0, #2
}
 80053e6:	b003      	add	sp, #12
 80053e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80053ec:	9000      	str	r0, [sp, #0]
 80053ee:	493c      	ldr	r1, [pc, #240]	; (80054e0 <HAL_I2C_Mem_Write+0x118>)
 80053f0:	2319      	movs	r3, #25
 80053f2:	2201      	movs	r2, #1
 80053f4:	4620      	mov	r0, r4
 80053f6:	f7ff fdf3 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 80053fa:	2800      	cmp	r0, #0
 80053fc:	d1f2      	bne.n	80053e4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80053fe:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005402:	2b01      	cmp	r3, #1
 8005404:	d0ee      	beq.n	80053e4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005406:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005408:	2301      	movs	r3, #1
 800540a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800540e:	6803      	ldr	r3, [r0, #0]
 8005410:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005412:	bf5e      	ittt	pl
 8005414:	6803      	ldrpl	r3, [r0, #0]
 8005416:	f043 0301 	orrpl.w	r3, r3, #1
 800541a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005422:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005424:	2321      	movs	r3, #33	; 0x21
 8005426:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800542a:	2340      	movs	r3, #64	; 0x40
 800542c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005430:	2300      	movs	r3, #0
 8005432:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005434:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005436:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005438:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800543c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800543e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005440:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005442:	4b28      	ldr	r3, [pc, #160]	; (80054e4 <HAL_I2C_Mem_Write+0x11c>)
 8005444:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005446:	e9cd 6500 	strd	r6, r5, [sp]
 800544a:	464b      	mov	r3, r9
 800544c:	4642      	mov	r2, r8
 800544e:	4639      	mov	r1, r7
 8005450:	4620      	mov	r0, r4
 8005452:	f7ff fe1d 	bl	8005090 <I2C_RequestMemoryWrite>
 8005456:	2800      	cmp	r0, #0
 8005458:	d02a      	beq.n	80054b0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800545a:	2001      	movs	r0, #1
 800545c:	e7c3      	b.n	80053e6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800545e:	f7ff fdf1 	bl	8005044 <I2C_WaitOnTXEFlagUntilTimeout>
 8005462:	b140      	cbz	r0, 8005476 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005464:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005466:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005468:	bf01      	itttt	eq
 800546a:	6822      	ldreq	r2, [r4, #0]
 800546c:	6813      	ldreq	r3, [r2, #0]
 800546e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005472:	6013      	streq	r3, [r2, #0]
 8005474:	e7f1      	b.n	800545a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005476:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005478:	6827      	ldr	r7, [r4, #0]
 800547a:	461a      	mov	r2, r3
 800547c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005480:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005482:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005484:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005486:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005488:	3a01      	subs	r2, #1
 800548a:	b292      	uxth	r2, r2
 800548c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800548e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005490:	1e48      	subs	r0, r1, #1
 8005492:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005494:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005496:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005498:	d50a      	bpl.n	80054b0 <HAL_I2C_Mem_Write+0xe8>
 800549a:	b148      	cbz	r0, 80054b0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800549c:	785a      	ldrb	r2, [r3, #1]
 800549e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80054a0:	3302      	adds	r3, #2
 80054a2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80054a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80054a6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80054a8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80054aa:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80054ac:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80054ae:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80054b0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80054b2:	462a      	mov	r2, r5
 80054b4:	4631      	mov	r1, r6
 80054b6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d1d0      	bne.n	800545e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80054bc:	f7ff fd3b 	bl	8004f36 <I2C_WaitOnBTFFlagUntilTimeout>
 80054c0:	2800      	cmp	r0, #0
 80054c2:	d1cf      	bne.n	8005464 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054c4:	6822      	ldr	r2, [r4, #0]
 80054c6:	6813      	ldr	r3, [r2, #0]
 80054c8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80054cc:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80054ce:	2320      	movs	r3, #32
 80054d0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80054d4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80054d8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80054dc:	e783      	b.n	80053e6 <HAL_I2C_Mem_Write+0x1e>
 80054de:	bf00      	nop
 80054e0:	00100002 	.word	0x00100002
 80054e4:	ffff0000 	.word	0xffff0000

080054e8 <HAL_I2C_Mem_Read>:
{
 80054e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80054ec:	4604      	mov	r4, r0
 80054ee:	b087      	sub	sp, #28
 80054f0:	4699      	mov	r9, r3
 80054f2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80054f4:	460d      	mov	r5, r1
 80054f6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80054f8:	f7fe fccc 	bl	8003e94 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80054fc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005500:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005502:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005504:	d004      	beq.n	8005510 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005506:	2502      	movs	r5, #2
}
 8005508:	4628      	mov	r0, r5
 800550a:	b007      	add	sp, #28
 800550c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005510:	9000      	str	r0, [sp, #0]
 8005512:	4976      	ldr	r1, [pc, #472]	; (80056ec <HAL_I2C_Mem_Read+0x204>)
 8005514:	2319      	movs	r3, #25
 8005516:	2201      	movs	r2, #1
 8005518:	4620      	mov	r0, r4
 800551a:	f7ff fd61 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 800551e:	2800      	cmp	r0, #0
 8005520:	d1f1      	bne.n	8005506 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005522:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005526:	2b01      	cmp	r3, #1
 8005528:	d0ed      	beq.n	8005506 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800552a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800552c:	2301      	movs	r3, #1
 800552e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005532:	6803      	ldr	r3, [r0, #0]
 8005534:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005536:	bf5e      	ittt	pl
 8005538:	6803      	ldrpl	r3, [r0, #0]
 800553a:	f043 0301 	orrpl.w	r3, r3, #1
 800553e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005546:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005548:	2322      	movs	r3, #34	; 0x22
 800554a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800554e:	2340      	movs	r3, #64	; 0x40
 8005550:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005554:	2300      	movs	r3, #0
 8005556:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005558:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800555a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800555c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005560:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005562:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005564:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005566:	4b62      	ldr	r3, [pc, #392]	; (80056f0 <HAL_I2C_Mem_Read+0x208>)
 8005568:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800556a:	4629      	mov	r1, r5
 800556c:	e9cd 7600 	strd	r7, r6, [sp]
 8005570:	464b      	mov	r3, r9
 8005572:	4642      	mov	r2, r8
 8005574:	4620      	mov	r0, r4
 8005576:	f7ff fde3 	bl	8005140 <I2C_RequestMemoryRead>
 800557a:	4605      	mov	r5, r0
 800557c:	b108      	cbz	r0, 8005582 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800557e:	2501      	movs	r5, #1
 8005580:	e7c2      	b.n	8005508 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005582:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8005584:	6823      	ldr	r3, [r4, #0]
 8005586:	b9b2      	cbnz	r2, 80055b6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005588:	9002      	str	r0, [sp, #8]
 800558a:	695a      	ldr	r2, [r3, #20]
 800558c:	9202      	str	r2, [sp, #8]
 800558e:	699a      	ldr	r2, [r3, #24]
 8005590:	9202      	str	r2, [sp, #8]
 8005592:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005594:	681a      	ldr	r2, [r3, #0]
 8005596:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800559a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800559c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80056f4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80055a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d12c      	bne.n	8005600 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80055a6:	2220      	movs	r2, #32
 80055a8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80055ac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80055b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80055b4:	e7a8      	b.n	8005508 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80055b6:	2a01      	cmp	r2, #1
 80055b8:	d10a      	bne.n	80055d0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80055ba:	681a      	ldr	r2, [r3, #0]
 80055bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055c0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055c2:	9003      	str	r0, [sp, #12]
 80055c4:	695a      	ldr	r2, [r3, #20]
 80055c6:	9203      	str	r2, [sp, #12]
 80055c8:	699a      	ldr	r2, [r3, #24]
 80055ca:	9203      	str	r2, [sp, #12]
 80055cc:	9a03      	ldr	r2, [sp, #12]
 80055ce:	e7e1      	b.n	8005594 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80055d0:	2a02      	cmp	r2, #2
 80055d2:	d10e      	bne.n	80055f2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80055d4:	681a      	ldr	r2, [r3, #0]
 80055d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055da:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80055dc:	681a      	ldr	r2, [r3, #0]
 80055de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80055e2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055e4:	9004      	str	r0, [sp, #16]
 80055e6:	695a      	ldr	r2, [r3, #20]
 80055e8:	9204      	str	r2, [sp, #16]
 80055ea:	699b      	ldr	r3, [r3, #24]
 80055ec:	9304      	str	r3, [sp, #16]
 80055ee:	9b04      	ldr	r3, [sp, #16]
 80055f0:	e7d4      	b.n	800559c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055f2:	9005      	str	r0, [sp, #20]
 80055f4:	695a      	ldr	r2, [r3, #20]
 80055f6:	9205      	str	r2, [sp, #20]
 80055f8:	699b      	ldr	r3, [r3, #24]
 80055fa:	9305      	str	r3, [sp, #20]
 80055fc:	9b05      	ldr	r3, [sp, #20]
 80055fe:	e7cd      	b.n	800559c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005600:	2b03      	cmp	r3, #3
 8005602:	d856      	bhi.n	80056b2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005604:	2b01      	cmp	r3, #1
 8005606:	d115      	bne.n	8005634 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005608:	4632      	mov	r2, r6
 800560a:	4639      	mov	r1, r7
 800560c:	4620      	mov	r0, r4
 800560e:	f7ff fcb8 	bl	8004f82 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005612:	2800      	cmp	r0, #0
 8005614:	d1b3      	bne.n	800557e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005616:	6823      	ldr	r3, [r4, #0]
 8005618:	691a      	ldr	r2, [r3, #16]
 800561a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800561c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800561e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005620:	3301      	adds	r3, #1
 8005622:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005624:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005626:	3b01      	subs	r3, #1
 8005628:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800562a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800562c:	3b01      	subs	r3, #1
 800562e:	b29b      	uxth	r3, r3
 8005630:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005632:	e7b5      	b.n	80055a0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005634:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005636:	9600      	str	r6, [sp, #0]
 8005638:	463b      	mov	r3, r7
 800563a:	f04f 0200 	mov.w	r2, #0
 800563e:	4641      	mov	r1, r8
 8005640:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005642:	d119      	bne.n	8005678 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005644:	f7ff fccc 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 8005648:	2800      	cmp	r0, #0
 800564a:	d198      	bne.n	800557e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800564c:	6823      	ldr	r3, [r4, #0]
 800564e:	681a      	ldr	r2, [r3, #0]
 8005650:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005654:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005656:	691a      	ldr	r2, [r3, #16]
 8005658:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800565a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800565c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800565e:	1c53      	adds	r3, r2, #1
 8005660:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005662:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005664:	3b01      	subs	r3, #1
 8005666:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005668:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800566a:	3b01      	subs	r3, #1
 800566c:	b29b      	uxth	r3, r3
 800566e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005670:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005672:	691b      	ldr	r3, [r3, #16]
 8005674:	7053      	strb	r3, [r2, #1]
 8005676:	e7d2      	b.n	800561e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005678:	f7ff fcb2 	bl	8004fe0 <I2C_WaitOnFlagUntilTimeout>
 800567c:	2800      	cmp	r0, #0
 800567e:	f47f af7e 	bne.w	800557e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005682:	6823      	ldr	r3, [r4, #0]
 8005684:	681a      	ldr	r2, [r3, #0]
 8005686:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800568a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800568c:	691a      	ldr	r2, [r3, #16]
 800568e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005690:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005692:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005694:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005696:	3301      	adds	r3, #1
 8005698:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800569a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800569c:	3b01      	subs	r3, #1
 800569e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80056a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056a2:	3b01      	subs	r3, #1
 80056a4:	b29b      	uxth	r3, r3
 80056a6:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80056a8:	4602      	mov	r2, r0
 80056aa:	463b      	mov	r3, r7
 80056ac:	4641      	mov	r1, r8
 80056ae:	4620      	mov	r0, r4
 80056b0:	e7c8      	b.n	8005644 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80056b2:	4632      	mov	r2, r6
 80056b4:	4639      	mov	r1, r7
 80056b6:	4620      	mov	r0, r4
 80056b8:	f7ff fc63 	bl	8004f82 <I2C_WaitOnRXNEFlagUntilTimeout>
 80056bc:	2800      	cmp	r0, #0
 80056be:	f47f af5e 	bne.w	800557e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80056c2:	6823      	ldr	r3, [r4, #0]
 80056c4:	691a      	ldr	r2, [r3, #16]
 80056c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80056c8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80056ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80056cc:	1c53      	adds	r3, r2, #1
 80056ce:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80056d0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80056d2:	3b01      	subs	r3, #1
 80056d4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80056d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056d8:	3b01      	subs	r3, #1
 80056da:	b29b      	uxth	r3, r3
 80056dc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80056de:	6823      	ldr	r3, [r4, #0]
 80056e0:	6959      	ldr	r1, [r3, #20]
 80056e2:	0749      	lsls	r1, r1, #29
 80056e4:	f57f af5c 	bpl.w	80055a0 <HAL_I2C_Mem_Read+0xb8>
 80056e8:	e7c3      	b.n	8005672 <HAL_I2C_Mem_Read+0x18a>
 80056ea:	bf00      	nop
 80056ec:	00100002 	.word	0x00100002
 80056f0:	ffff0000 	.word	0xffff0000
 80056f4:	00010004 	.word	0x00010004

080056f8 <HAL_I2C_GetState>:
  return hi2c->State;
 80056f8:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 80056fc:	4770      	bx	lr

080056fe <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80056fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005702:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005704:	6804      	ldr	r4, [r0, #0]
 8005706:	684f      	ldr	r7, [r1, #4]
 8005708:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800570a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800570e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005712:	3284      	adds	r2, #132	; 0x84
 8005714:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005716:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800571a:	6858      	ldr	r0, [r3, #4]
 800571c:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005720:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005722:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005724:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005728:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800572c:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800572e:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005730:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005734:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005736:	68e0      	ldr	r0, [r4, #12]
 8005738:	68cd      	ldr	r5, [r1, #12]
 800573a:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800573e:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005740:	6898      	ldr	r0, [r3, #8]
 8005742:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005746:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005748:	68e6      	ldr	r6, [r4, #12]
 800574a:	6888      	ldr	r0, [r1, #8]
 800574c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005750:	3001      	adds	r0, #1
 8005752:	4430      	add	r0, r6
 8005754:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005758:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800575a:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800575c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800575e:	f020 0007 	bic.w	r0, r0, #7
 8005762:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005764:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005768:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800576a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800576c:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005770:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005774:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005778:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800577c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005780:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005784:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005788:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800578a:	6958      	ldr	r0, [r3, #20]
 800578c:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005790:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005792:	6948      	ldr	r0, [r1, #20]
 8005794:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005796:	69d8      	ldr	r0, [r3, #28]
 8005798:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800579c:	f020 0007 	bic.w	r0, r0, #7
 80057a0:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80057a2:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80057a6:	4305      	orrs	r5, r0
 80057a8:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057aa:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057ac:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057ae:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057b2:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80057b4:	b31e      	cbz	r6, 80057fe <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80057b6:	2e01      	cmp	r6, #1
 80057b8:	d023      	beq.n	8005802 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80057ba:	1eb0      	subs	r0, r6, #2
 80057bc:	2802      	cmp	r0, #2
 80057be:	d922      	bls.n	8005806 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80057c0:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80057c2:	bf0c      	ite	eq
 80057c4:	2002      	moveq	r0, #2
 80057c6:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80057c8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80057ca:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80057ce:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80057d0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80057d2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80057d4:	eba7 070c 	sub.w	r7, r7, ip
 80057d8:	4345      	muls	r5, r0
 80057da:	4378      	muls	r0, r7
 80057dc:	3003      	adds	r0, #3
 80057de:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80057e2:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80057e4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80057e6:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80057ea:	f020 0007 	bic.w	r0, r0, #7
 80057ee:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80057f0:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80057f2:	58a3      	ldr	r3, [r4, r2]
 80057f4:	f043 0301 	orr.w	r3, r3, #1
 80057f8:	50a3      	str	r3, [r4, r2]
}
 80057fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80057fe:	2004      	movs	r0, #4
 8005800:	e7e2      	b.n	80057c8 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005802:	2003      	movs	r0, #3
 8005804:	e7e0      	b.n	80057c8 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005806:	2002      	movs	r0, #2
 8005808:	e7de      	b.n	80057c8 <LTDC_SetConfig+0xca>
	...

0800580c <HAL_LTDC_Init>:
{
 800580c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800580e:	4604      	mov	r4, r0
 8005810:	2800      	cmp	r0, #0
 8005812:	d063      	beq.n	80058dc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005814:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005818:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800581c:	b91b      	cbnz	r3, 8005826 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800581e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005822:	f7fc f9ed 	bl	8001c00 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005826:	2302      	movs	r3, #2
 8005828:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800582c:	6823      	ldr	r3, [r4, #0]
 800582e:	699a      	ldr	r2, [r3, #24]
 8005830:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005834:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005836:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800583a:	4302      	orrs	r2, r0
 800583c:	68e0      	ldr	r0, [r4, #12]
 800583e:	6999      	ldr	r1, [r3, #24]
 8005840:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005842:	6920      	ldr	r0, [r4, #16]
 8005844:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005846:	430a      	orrs	r2, r1
 8005848:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800584a:	689a      	ldr	r2, [r3, #8]
 800584c:	4924      	ldr	r1, [pc, #144]	; (80058e0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800584e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005850:	400a      	ands	r2, r1
 8005852:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005854:	689a      	ldr	r2, [r3, #8]
 8005856:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800585a:	69a0      	ldr	r0, [r4, #24]
 800585c:	4302      	orrs	r2, r0
 800585e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005860:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005862:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005864:	400a      	ands	r2, r1
 8005866:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005868:	68da      	ldr	r2, [r3, #12]
 800586a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800586e:	6a20      	ldr	r0, [r4, #32]
 8005870:	4302      	orrs	r2, r0
 8005872:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005874:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005876:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005878:	400a      	ands	r2, r1
 800587a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800587c:	691a      	ldr	r2, [r3, #16]
 800587e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005882:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005884:	4302      	orrs	r2, r0
 8005886:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005888:	695a      	ldr	r2, [r3, #20]
 800588a:	4011      	ands	r1, r2
 800588c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800588e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005890:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005892:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005896:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005898:	430a      	orrs	r2, r1
 800589a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800589c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800589e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80058a2:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80058a6:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80058aa:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80058ac:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80058ae:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80058b2:	430a      	orrs	r2, r1
 80058b4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80058b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80058bc:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80058be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058c0:	f042 0206 	orr.w	r2, r2, #6
 80058c4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80058c6:	699a      	ldr	r2, [r3, #24]
 80058c8:	f042 0201 	orr.w	r2, r2, #1
 80058cc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80058ce:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80058d0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80058d2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80058d6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80058da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80058dc:	2001      	movs	r0, #1
 80058de:	e7fc      	b.n	80058da <HAL_LTDC_Init+0xce>
 80058e0:	f000f800 	.word	0xf000f800

080058e4 <HAL_LTDC_ErrorCallback>:
 80058e4:	4770      	bx	lr

080058e6 <HAL_LTDC_LineEventCallback>:
 80058e6:	4770      	bx	lr

080058e8 <HAL_LTDC_ReloadEventCallback>:
 80058e8:	4770      	bx	lr

080058ea <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80058ea:	6803      	ldr	r3, [r0, #0]
{
 80058ec:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80058ee:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80058f0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80058f2:	0772      	lsls	r2, r6, #29
{
 80058f4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80058f6:	d514      	bpl.n	8005922 <HAL_LTDC_IRQHandler+0x38>
 80058f8:	0769      	lsls	r1, r5, #29
 80058fa:	d512      	bpl.n	8005922 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80058fc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058fe:	f022 0204 	bic.w	r2, r2, #4
 8005902:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005904:	2204      	movs	r2, #4
 8005906:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005908:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800590c:	f043 0301 	orr.w	r3, r3, #1
 8005910:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005914:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005916:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800591a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800591e:	f7ff ffe1 	bl	80058e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005922:	07b2      	lsls	r2, r6, #30
 8005924:	d516      	bpl.n	8005954 <HAL_LTDC_IRQHandler+0x6a>
 8005926:	07ab      	lsls	r3, r5, #30
 8005928:	d514      	bpl.n	8005954 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800592a:	6823      	ldr	r3, [r4, #0]
 800592c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800592e:	f022 0202 	bic.w	r2, r2, #2
 8005932:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005934:	2202      	movs	r2, #2
 8005936:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005938:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800593c:	4313      	orrs	r3, r2
 800593e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005942:	2304      	movs	r3, #4
 8005944:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005948:	2300      	movs	r3, #0
 800594a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800594e:	4620      	mov	r0, r4
 8005950:	f7ff ffc8 	bl	80058e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005954:	07f0      	lsls	r0, r6, #31
 8005956:	d510      	bpl.n	800597a <HAL_LTDC_IRQHandler+0x90>
 8005958:	07e9      	lsls	r1, r5, #31
 800595a:	d50e      	bpl.n	800597a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800595c:	6823      	ldr	r3, [r4, #0]
 800595e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005960:	f022 0201 	bic.w	r2, r2, #1
 8005964:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005966:	2201      	movs	r2, #1
 8005968:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800596a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800596c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005970:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005974:	4620      	mov	r0, r4
 8005976:	f7ff ffb6 	bl	80058e6 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800597a:	0732      	lsls	r2, r6, #28
 800597c:	d511      	bpl.n	80059a2 <HAL_LTDC_IRQHandler+0xb8>
 800597e:	072b      	lsls	r3, r5, #28
 8005980:	d50f      	bpl.n	80059a2 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005982:	6823      	ldr	r3, [r4, #0]
 8005984:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005986:	f022 0208 	bic.w	r2, r2, #8
 800598a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800598c:	2208      	movs	r2, #8
 800598e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005990:	2301      	movs	r3, #1
 8005992:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005996:	2300      	movs	r3, #0
 8005998:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800599c:	4620      	mov	r0, r4
 800599e:	f7ff ffa3 	bl	80058e8 <HAL_LTDC_ReloadEventCallback>
}
 80059a2:	bd70      	pop	{r4, r5, r6, pc}

080059a4 <HAL_LTDC_ConfigLayer>:
{
 80059a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80059a8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80059ac:	2b01      	cmp	r3, #1
{
 80059ae:	4606      	mov	r6, r0
 80059b0:	460f      	mov	r7, r1
 80059b2:	4694      	mov	ip, r2
 80059b4:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80059b8:	d01f      	beq.n	80059fa <HAL_LTDC_ConfigLayer+0x56>
 80059ba:	f04f 0801 	mov.w	r8, #1
 80059be:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80059c2:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80059c6:	2434      	movs	r4, #52	; 0x34
 80059c8:	460d      	mov	r5, r1
 80059ca:	fb04 6402 	mla	r4, r4, r2, r6
 80059ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059d0:	3438      	adds	r4, #56	; 0x38
 80059d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059dc:	682b      	ldr	r3, [r5, #0]
 80059de:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80059e0:	4630      	mov	r0, r6
 80059e2:	4662      	mov	r2, ip
 80059e4:	4639      	mov	r1, r7
 80059e6:	f7ff fe8a 	bl	80056fe <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80059ea:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80059ec:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80059ee:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80059f2:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80059f6:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80059fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005a00 <HAL_LTDC_SetPitch>:
{
 8005a00:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8005a02:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005a06:	2b01      	cmp	r3, #1
 8005a08:	f04f 0302 	mov.w	r3, #2
 8005a0c:	d02c      	beq.n	8005a68 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005a0e:	2434      	movs	r4, #52	; 0x34
 8005a10:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a14:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005a18:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005a1a:	b33c      	cbz	r4, 8005a6c <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005a1c:	2c01      	cmp	r4, #1
 8005a1e:	d027      	beq.n	8005a70 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005a20:	1ea5      	subs	r5, r4, #2
 8005a22:	429d      	cmp	r5, r3
 8005a24:	d902      	bls.n	8005a2c <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8005a26:	2c07      	cmp	r4, #7
 8005a28:	bf18      	it	ne
 8005a2a:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005a2c:	6804      	ldr	r4, [r0, #0]
 8005a2e:	01d2      	lsls	r2, r2, #7
 8005a30:	3284      	adds	r2, #132	; 0x84
 8005a32:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005a34:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005a36:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005a38:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005a3c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005a40:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005a42:	4c0c      	ldr	r4, [pc, #48]	; (8005a74 <HAL_LTDC_SetPitch+0x74>)
 8005a44:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005a46:	f045 0501 	orr.w	r5, r5, #1
 8005a4a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005a4c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005a4e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8005a52:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005a54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005a56:	f043 0301 	orr.w	r3, r3, #1
 8005a5a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005a5c:	2301      	movs	r3, #1
 8005a5e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005a62:	2300      	movs	r3, #0
 8005a64:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005a68:	4618      	mov	r0, r3
 8005a6a:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005a6c:	2304      	movs	r3, #4
 8005a6e:	e7dd      	b.n	8005a2c <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005a70:	2303      	movs	r3, #3
 8005a72:	e7db      	b.n	8005a2c <HAL_LTDC_SetPitch+0x2c>
 8005a74:	40016800 	.word	0x40016800

08005a78 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005a78:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005a7a:	2300      	movs	r3, #0
 8005a7c:	9301      	str	r3, [sp, #4]
 8005a7e:	4b18      	ldr	r3, [pc, #96]	; (8005ae0 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a80:	4d18      	ldr	r5, [pc, #96]	; (8005ae4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005a82:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005a84:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005a88:	641a      	str	r2, [r3, #64]	; 0x40
 8005a8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a8c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a90:	9301      	str	r3, [sp, #4]
 8005a92:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005a94:	4b14      	ldr	r3, [pc, #80]	; (8005ae8 <HAL_PWREx_EnableOverDrive+0x70>)
 8005a96:	2201      	movs	r2, #1
 8005a98:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005a9a:	f7fe f9fb 	bl	8003e94 <HAL_GetTick>
 8005a9e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005aa0:	686b      	ldr	r3, [r5, #4]
 8005aa2:	03da      	lsls	r2, r3, #15
 8005aa4:	d50b      	bpl.n	8005abe <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005aa6:	4b11      	ldr	r3, [pc, #68]	; (8005aec <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005aa8:	4d0e      	ldr	r5, [pc, #56]	; (8005ae4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005aaa:	2201      	movs	r2, #1
 8005aac:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005aae:	f7fe f9f1 	bl	8003e94 <HAL_GetTick>
 8005ab2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005ab4:	686b      	ldr	r3, [r5, #4]
 8005ab6:	039b      	lsls	r3, r3, #14
 8005ab8:	d50a      	bpl.n	8005ad0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005aba:	2000      	movs	r0, #0
 8005abc:	e006      	b.n	8005acc <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005abe:	f7fe f9e9 	bl	8003e94 <HAL_GetTick>
 8005ac2:	1b00      	subs	r0, r0, r4
 8005ac4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005ac8:	d9ea      	bls.n	8005aa0 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005aca:	2003      	movs	r0, #3
}
 8005acc:	b003      	add	sp, #12
 8005ace:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005ad0:	f7fe f9e0 	bl	8003e94 <HAL_GetTick>
 8005ad4:	1b00      	subs	r0, r0, r4
 8005ad6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005ada:	d9eb      	bls.n	8005ab4 <HAL_PWREx_EnableOverDrive+0x3c>
 8005adc:	e7f5      	b.n	8005aca <HAL_PWREx_EnableOverDrive+0x52>
 8005ade:	bf00      	nop
 8005ae0:	40023800 	.word	0x40023800
 8005ae4:	40007000 	.word	0x40007000
 8005ae8:	420e0040 	.word	0x420e0040
 8005aec:	420e0044 	.word	0x420e0044

08005af0 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005af0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005af4:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005af6:	b13e      	cbz	r6, 8005b08 <QSPI_Config+0x18>
 8005af8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005afc:	bf1f      	itttt	ne
 8005afe:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005b00:	6804      	ldrne	r4, [r0, #0]
 8005b02:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005b06:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005b08:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8005b0c:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 8005b10:	f1ba 0f00 	cmp.w	sl, #0
 8005b14:	d04e      	beq.n	8005bb4 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005b16:	694b      	ldr	r3, [r1, #20]
 8005b18:	6805      	ldr	r5, [r0, #0]
 8005b1a:	f8d1 8000 	ldr.w	r8, [r1]
 8005b1e:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8005b20:	ea46 0a0a 	orr.w	sl, r6, sl
 8005b24:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 8005b28:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8005b2c:	ea4a 0a02 	orr.w	sl, sl, r2
 8005b30:	f1bc 0f00 	cmp.w	ip, #0
 8005b34:	d026      	beq.n	8005b84 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005b36:	688b      	ldr	r3, [r1, #8]
 8005b38:	690e      	ldr	r6, [r1, #16]
 8005b3a:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b3c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8005b40:	b1a7      	cbz	r7, 8005b6c <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b42:	ea48 0307 	orr.w	r3, r8, r7
 8005b46:	4323      	orrs	r3, r4
 8005b48:	ea43 0309 	orr.w	r3, r3, r9
 8005b4c:	4303      	orrs	r3, r0
 8005b4e:	68c8      	ldr	r0, [r1, #12]
 8005b50:	4333      	orrs	r3, r6
 8005b52:	4303      	orrs	r3, r0
 8005b54:	ea43 030e 	orr.w	r3, r3, lr
 8005b58:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b5c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b60:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b62:	d001      	beq.n	8005b68 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005b64:	684b      	ldr	r3, [r1, #4]
 8005b66:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005b68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b6c:	ea48 0304 	orr.w	r3, r8, r4
 8005b70:	ea43 0309 	orr.w	r3, r3, r9
 8005b74:	4303      	orrs	r3, r0
 8005b76:	4333      	orrs	r3, r6
 8005b78:	ea43 030e 	orr.w	r3, r3, lr
 8005b7c:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b80:	616b      	str	r3, [r5, #20]
 8005b82:	e7f1      	b.n	8005b68 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b84:	b167      	cbz	r7, 8005ba0 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b86:	ea48 0307 	orr.w	r3, r8, r7
 8005b8a:	4323      	orrs	r3, r4
 8005b8c:	ea43 0309 	orr.w	r3, r3, r9
 8005b90:	4303      	orrs	r3, r0
 8005b92:	68c8      	ldr	r0, [r1, #12]
 8005b94:	4303      	orrs	r3, r0
 8005b96:	ea43 030e 	orr.w	r3, r3, lr
 8005b9a:	ea43 030a 	orr.w	r3, r3, sl
 8005b9e:	e7dd      	b.n	8005b5c <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ba0:	ea48 0304 	orr.w	r3, r8, r4
 8005ba4:	ea43 0309 	orr.w	r3, r3, r9
 8005ba8:	4303      	orrs	r3, r0
 8005baa:	ea43 030e 	orr.w	r3, r3, lr
 8005bae:	ea43 030a 	orr.w	r3, r3, sl
 8005bb2:	e7e5      	b.n	8005b80 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005bb4:	f1bc 0f00 	cmp.w	ip, #0
 8005bb8:	d028      	beq.n	8005c0c <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005bba:	6804      	ldr	r4, [r0, #0]
 8005bbc:	688b      	ldr	r3, [r1, #8]
 8005bbe:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005bc0:	ea46 030c 	orr.w	r3, r6, ip
 8005bc4:	694e      	ldr	r6, [r1, #20]
 8005bc6:	6908      	ldr	r0, [r1, #16]
 8005bc8:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005bcc:	ea43 0502 	orr.w	r5, r3, r2
 8005bd0:	04b6      	lsls	r6, r6, #18
 8005bd2:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 8005bd6:	b187      	cbz	r7, 8005bfa <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005bd8:	4338      	orrs	r0, r7
 8005bda:	ea40 0008 	orr.w	r0, r0, r8
 8005bde:	4303      	orrs	r3, r0
 8005be0:	68c8      	ldr	r0, [r1, #12]
 8005be2:	ea43 030c 	orr.w	r3, r3, ip
 8005be6:	4303      	orrs	r3, r0
 8005be8:	4333      	orrs	r3, r6
 8005bea:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005bec:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005bf0:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005bf2:	d0b9      	beq.n	8005b68 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005bf4:	684b      	ldr	r3, [r1, #4]
 8005bf6:	61a3      	str	r3, [r4, #24]
 8005bf8:	e7b6      	b.n	8005b68 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005bfa:	ea40 0008 	orr.w	r0, r0, r8
 8005bfe:	4303      	orrs	r3, r0
 8005c00:	ea43 030c 	orr.w	r3, r3, ip
 8005c04:	4333      	orrs	r3, r6
 8005c06:	432b      	orrs	r3, r5
 8005c08:	6163      	str	r3, [r4, #20]
 8005c0a:	e7ad      	b.n	8005b68 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005c0c:	b1af      	cbz	r7, 8005c3a <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005c0e:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005c10:	6800      	ldr	r0, [r0, #0]
 8005c12:	ea46 0307 	orr.w	r3, r6, r7
 8005c16:	4313      	orrs	r3, r2
 8005c18:	4323      	orrs	r3, r4
 8005c1a:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005c1c:	4323      	orrs	r3, r4
 8005c1e:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005c20:	4323      	orrs	r3, r4
 8005c22:	68cc      	ldr	r4, [r1, #12]
 8005c24:	4323      	orrs	r3, r4
 8005c26:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005c28:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005c2c:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005c30:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005c32:	d099      	beq.n	8005b68 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005c34:	684b      	ldr	r3, [r1, #4]
 8005c36:	6183      	str	r3, [r0, #24]
 8005c38:	e796      	b.n	8005b68 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005c3a:	2e00      	cmp	r6, #0
 8005c3c:	d094      	beq.n	8005b68 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005c3e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005c40:	6800      	ldr	r0, [r0, #0]
 8005c42:	4333      	orrs	r3, r6
 8005c44:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005c46:	431a      	orrs	r2, r3
 8005c48:	4332      	orrs	r2, r6
 8005c4a:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005c4c:	694b      	ldr	r3, [r1, #20]
 8005c4e:	4332      	orrs	r2, r6
 8005c50:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005c54:	6142      	str	r2, [r0, #20]
}
 8005c56:	e787      	b.n	8005b68 <QSPI_Config+0x78>

08005c58 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c5c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005c60:	4604      	mov	r4, r0
 8005c62:	460e      	mov	r6, r1
 8005c64:	4615      	mov	r5, r2
 8005c66:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005c68:	6822      	ldr	r2, [r4, #0]
 8005c6a:	6893      	ldr	r3, [r2, #8]
 8005c6c:	4233      	tst	r3, r6
 8005c6e:	bf14      	ite	ne
 8005c70:	2301      	movne	r3, #1
 8005c72:	2300      	moveq	r3, #0
 8005c74:	42ab      	cmp	r3, r5
 8005c76:	d101      	bne.n	8005c7c <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005c78:	2000      	movs	r0, #0
 8005c7a:	e012      	b.n	8005ca2 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005c7c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005c80:	d0f3      	beq.n	8005c6a <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c82:	f7fe f907 	bl	8003e94 <HAL_GetTick>
 8005c86:	1bc0      	subs	r0, r0, r7
 8005c88:	4540      	cmp	r0, r8
 8005c8a:	d802      	bhi.n	8005c92 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005c8c:	f1b8 0f00 	cmp.w	r8, #0
 8005c90:	d1ea      	bne.n	8005c68 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005c92:	2304      	movs	r3, #4
 8005c94:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005c98:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005c9a:	f043 0301 	orr.w	r3, r3, #1
 8005c9e:	6463      	str	r3, [r4, #68]	; 0x44
 8005ca0:	2001      	movs	r0, #1
}
 8005ca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005ca8 <HAL_QSPI_Init>:
{
 8005ca8:	b530      	push	{r4, r5, lr}
 8005caa:	b085      	sub	sp, #20
 8005cac:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005cae:	f7fe f8f1 	bl	8003e94 <HAL_GetTick>
 8005cb2:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005cb4:	2c00      	cmp	r4, #0
 8005cb6:	d047      	beq.n	8005d48 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005cb8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005cbc:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8005cc0:	b94a      	cbnz	r2, 8005cd6 <HAL_QSPI_Init+0x2e>
 8005cc2:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005cc4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005cc8:	4620      	mov	r0, r4
 8005cca:	f7fb ffcd 	bl	8001c68 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005cce:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cd2:	9b03      	ldr	r3, [sp, #12]
 8005cd4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005cd6:	6820      	ldr	r0, [r4, #0]
 8005cd8:	68a1      	ldr	r1, [r4, #8]
 8005cda:	6802      	ldr	r2, [r0, #0]
 8005cdc:	3901      	subs	r1, #1
 8005cde:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8005ce2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005ce6:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ce8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005cea:	9200      	str	r2, [sp, #0]
 8005cec:	2120      	movs	r1, #32
 8005cee:	2200      	movs	r2, #0
 8005cf0:	4620      	mov	r0, r4
 8005cf2:	f7ff ffb1 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005cf6:	bb10      	cbnz	r0, 8005d3e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005cf8:	69e5      	ldr	r5, [r4, #28]
 8005cfa:	68e3      	ldr	r3, [r4, #12]
 8005cfc:	6822      	ldr	r2, [r4, #0]
 8005cfe:	432b      	orrs	r3, r5
 8005d00:	6a25      	ldr	r5, [r4, #32]
 8005d02:	6811      	ldr	r1, [r2, #0]
 8005d04:	432b      	orrs	r3, r5
 8005d06:	6865      	ldr	r5, [r4, #4]
 8005d08:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005d0c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005d10:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005d14:	430b      	orrs	r3, r1
 8005d16:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005d18:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005d1c:	430b      	orrs	r3, r1
 8005d1e:	6921      	ldr	r1, [r4, #16]
 8005d20:	6855      	ldr	r5, [r2, #4]
 8005d22:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005d26:	4909      	ldr	r1, [pc, #36]	; (8005d4c <HAL_QSPI_Init+0xa4>)
 8005d28:	4029      	ands	r1, r5
 8005d2a:	430b      	orrs	r3, r1
 8005d2c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005d2e:	6813      	ldr	r3, [r2, #0]
 8005d30:	f043 0301 	orr.w	r3, r3, #1
 8005d34:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005d36:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005d38:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005d3a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005d3e:	2300      	movs	r3, #0
 8005d40:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005d44:	b005      	add	sp, #20
 8005d46:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005d48:	2001      	movs	r0, #1
 8005d4a:	e7fb      	b.n	8005d44 <HAL_QSPI_Init+0x9c>
 8005d4c:	ffe0f8fe 	.word	0xffe0f8fe

08005d50 <HAL_QSPI_DeInit>:
{
 8005d50:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005d52:	4604      	mov	r4, r0
 8005d54:	b168      	cbz	r0, 8005d72 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005d56:	6802      	ldr	r2, [r0, #0]
 8005d58:	6813      	ldr	r3, [r2, #0]
 8005d5a:	f023 0301 	bic.w	r3, r3, #1
 8005d5e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005d60:	f7fb ffdc 	bl	8001d1c <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005d64:	2000      	movs	r0, #0
 8005d66:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005d68:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005d6c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005d70:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005d72:	2001      	movs	r0, #1
 8005d74:	e7fc      	b.n	8005d70 <HAL_QSPI_DeInit+0x20>

08005d76 <HAL_QSPI_Command>:
{
 8005d76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005d7a:	4604      	mov	r4, r0
 8005d7c:	b085      	sub	sp, #20
 8005d7e:	4617      	mov	r7, r2
 8005d80:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005d82:	f7fe f887 	bl	8003e94 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005d86:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005d8a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005d8c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005d8e:	d034      	beq.n	8005dfa <HAL_QSPI_Command+0x84>
 8005d90:	2201      	movs	r2, #1
 8005d92:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005d96:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005d9a:	2a01      	cmp	r2, #1
 8005d9c:	fa5f f882 	uxtb.w	r8, r2
 8005da0:	f04f 0602 	mov.w	r6, #2
 8005da4:	d127      	bne.n	8005df6 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005da6:	2200      	movs	r2, #0
 8005da8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005daa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005dac:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005db0:	9700      	str	r7, [sp, #0]
 8005db2:	2120      	movs	r1, #32
 8005db4:	4620      	mov	r0, r4
 8005db6:	f7ff ff4f 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005dba:	4605      	mov	r5, r0
 8005dbc:	b9a0      	cbnz	r0, 8005de8 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005dbe:	4602      	mov	r2, r0
 8005dc0:	4649      	mov	r1, r9
 8005dc2:	4620      	mov	r0, r4
 8005dc4:	f7ff fe94 	bl	8005af0 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005dc8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005dcc:	9b03      	ldr	r3, [sp, #12]
 8005dce:	b94a      	cbnz	r2, 8005de4 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005dd0:	9700      	str	r7, [sp, #0]
 8005dd2:	4642      	mov	r2, r8
 8005dd4:	4631      	mov	r1, r6
 8005dd6:	4620      	mov	r0, r4
 8005dd8:	f7ff ff3e 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005ddc:	4605      	mov	r5, r0
 8005dde:	b918      	cbnz	r0, 8005de8 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005de0:	6823      	ldr	r3, [r4, #0]
 8005de2:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005de4:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005de8:	2300      	movs	r3, #0
 8005dea:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005dee:	4628      	mov	r0, r5
 8005df0:	b005      	add	sp, #20
 8005df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005df6:	4635      	mov	r5, r6
 8005df8:	e7f6      	b.n	8005de8 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005dfa:	2502      	movs	r5, #2
 8005dfc:	e7f7      	b.n	8005dee <HAL_QSPI_Command+0x78>

08005dfe <HAL_QSPI_AutoPolling>:
{
 8005dfe:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005e02:	4604      	mov	r4, r0
 8005e04:	4615      	mov	r5, r2
 8005e06:	461e      	mov	r6, r3
 8005e08:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005e0a:	f7fe f843 	bl	8003e94 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005e0e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005e12:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005e14:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005e16:	d040      	beq.n	8005e9a <HAL_QSPI_AutoPolling+0x9c>
 8005e18:	2201      	movs	r2, #1
 8005e1a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005e1e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005e22:	2a01      	cmp	r2, #1
 8005e24:	b2d7      	uxtb	r7, r2
 8005e26:	d136      	bne.n	8005e96 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005e28:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e2a:	2200      	movs	r2, #0
 8005e2c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005e2e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005e30:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005e34:	9600      	str	r6, [sp, #0]
 8005e36:	2120      	movs	r1, #32
 8005e38:	4620      	mov	r0, r4
 8005e3a:	f7ff ff0d 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005e3e:	bb20      	cbnz	r0, 8005e8a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005e40:	6821      	ldr	r1, [r4, #0]
 8005e42:	682a      	ldr	r2, [r5, #0]
 8005e44:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005e46:	686a      	ldr	r2, [r5, #4]
 8005e48:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005e4a:	68aa      	ldr	r2, [r5, #8]
 8005e4c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005e4e:	680a      	ldr	r2, [r1, #0]
 8005e50:	6928      	ldr	r0, [r5, #16]
 8005e52:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005e56:	4302      	orrs	r2, r0
 8005e58:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005e5c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005e5e:	68ea      	ldr	r2, [r5, #12]
 8005e60:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005e64:	4641      	mov	r1, r8
 8005e66:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005e6a:	4620      	mov	r0, r4
 8005e6c:	f7ff fe40 	bl	8005af0 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005e70:	9b03      	ldr	r3, [sp, #12]
 8005e72:	9600      	str	r6, [sp, #0]
 8005e74:	463a      	mov	r2, r7
 8005e76:	2108      	movs	r1, #8
 8005e78:	4620      	mov	r0, r4
 8005e7a:	f7ff feed 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005e7e:	b920      	cbnz	r0, 8005e8a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005e80:	6823      	ldr	r3, [r4, #0]
 8005e82:	2208      	movs	r2, #8
 8005e84:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005e86:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005e90:	b004      	add	sp, #16
 8005e92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005e96:	2002      	movs	r0, #2
 8005e98:	e7f7      	b.n	8005e8a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005e9a:	2002      	movs	r0, #2
 8005e9c:	e7f8      	b.n	8005e90 <HAL_QSPI_AutoPolling+0x92>

08005e9e <HAL_QSPI_MemoryMapped>:
{
 8005e9e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ea0:	4604      	mov	r4, r0
 8005ea2:	4616      	mov	r6, r2
 8005ea4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005ea6:	f7fd fff5 	bl	8003e94 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005eaa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005eae:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005eb0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005eb2:	d032      	beq.n	8005f1a <HAL_QSPI_MemoryMapped+0x7c>
 8005eb4:	2201      	movs	r2, #1
 8005eb6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005eba:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005ebe:	2a01      	cmp	r2, #1
 8005ec0:	d129      	bne.n	8005f16 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005ec2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005ec4:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005ec6:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005ec8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ecc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005ece:	9100      	str	r1, [sp, #0]
 8005ed0:	4620      	mov	r0, r4
 8005ed2:	2120      	movs	r1, #32
 8005ed4:	f7ff fec0 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005ed8:	4605      	mov	r5, r0
 8005eda:	b9b0      	cbnz	r0, 8005f0a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005edc:	6823      	ldr	r3, [r4, #0]
 8005ede:	6872      	ldr	r2, [r6, #4]
 8005ee0:	6818      	ldr	r0, [r3, #0]
 8005ee2:	f020 0008 	bic.w	r0, r0, #8
 8005ee6:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005ee8:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005eea:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005eec:	d107      	bne.n	8005efe <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005eee:	6832      	ldr	r2, [r6, #0]
 8005ef0:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005ef2:	2210      	movs	r2, #16
 8005ef4:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005ef6:	681a      	ldr	r2, [r3, #0]
 8005ef8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005efc:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005efe:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005f02:	4639      	mov	r1, r7
 8005f04:	4620      	mov	r0, r4
 8005f06:	f7ff fdf3 	bl	8005af0 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005f0a:	2300      	movs	r3, #0
 8005f0c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005f10:	4628      	mov	r0, r5
 8005f12:	b003      	add	sp, #12
 8005f14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005f16:	2502      	movs	r5, #2
 8005f18:	e7f7      	b.n	8005f0a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005f1a:	2502      	movs	r5, #2
 8005f1c:	e7f8      	b.n	8005f10 <HAL_QSPI_MemoryMapped+0x72>

08005f1e <HAL_QSPI_Abort>:
{
 8005f1e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005f20:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005f22:	f7fd ffb7 	bl	8003e94 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005f26:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8005f2a:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005f2c:	f012 0002 	ands.w	r0, r2, #2
 8005f30:	d036      	beq.n	8005fa0 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8005f32:	2200      	movs	r2, #0
 8005f34:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005f38:	6822      	ldr	r2, [r4, #0]
 8005f3a:	6811      	ldr	r1, [r2, #0]
 8005f3c:	0749      	lsls	r1, r1, #29
 8005f3e:	d50d      	bpl.n	8005f5c <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005f40:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005f42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005f44:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005f46:	f021 0104 	bic.w	r1, r1, #4
 8005f4a:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005f4c:	f7fe f8f2 	bl	8004134 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005f50:	9b03      	ldr	r3, [sp, #12]
 8005f52:	b118      	cbz	r0, 8005f5c <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005f54:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005f56:	f042 0204 	orr.w	r2, r2, #4
 8005f5a:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005f5c:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005f5e:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005f60:	680a      	ldr	r2, [r1, #0]
 8005f62:	f042 0202 	orr.w	r2, r2, #2
 8005f66:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005f68:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005f6a:	9200      	str	r2, [sp, #0]
 8005f6c:	2102      	movs	r1, #2
 8005f6e:	2201      	movs	r2, #1
 8005f70:	4620      	mov	r0, r4
 8005f72:	f7ff fe71 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005f76:	9b03      	ldr	r3, [sp, #12]
 8005f78:	b990      	cbnz	r0, 8005fa0 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005f7a:	6822      	ldr	r2, [r4, #0]
 8005f7c:	2102      	movs	r1, #2
 8005f7e:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005f80:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005f82:	9200      	str	r2, [sp, #0]
 8005f84:	2120      	movs	r1, #32
 8005f86:	4602      	mov	r2, r0
 8005f88:	4620      	mov	r0, r4
 8005f8a:	f7ff fe65 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005f8e:	b938      	cbnz	r0, 8005fa0 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005f90:	6822      	ldr	r2, [r4, #0]
 8005f92:	6953      	ldr	r3, [r2, #20]
 8005f94:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005f98:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005f9a:	2301      	movs	r3, #1
 8005f9c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005fa0:	b004      	add	sp, #16
 8005fa2:	bd10      	pop	{r4, pc}

08005fa4 <HAL_QSPI_Transmit>:
{
 8005fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005fa6:	4604      	mov	r4, r0
 8005fa8:	b085      	sub	sp, #20
 8005faa:	4616      	mov	r6, r2
 8005fac:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005fae:	f7fd ff71 	bl	8003e94 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005fb2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005fb6:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005fb8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005fba:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005fbc:	d04c      	beq.n	8006058 <HAL_QSPI_Transmit+0xb4>
 8005fbe:	2201      	movs	r2, #1
 8005fc0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005fc4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005fc8:	2a01      	cmp	r2, #1
 8005fca:	b2d0      	uxtb	r0, r2
 8005fcc:	d142      	bne.n	8006054 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005fce:	2200      	movs	r2, #0
 8005fd0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005fd2:	2f00      	cmp	r7, #0
 8005fd4:	d039      	beq.n	800604a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005fd6:	2212      	movs	r2, #18
 8005fd8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005fdc:	692a      	ldr	r2, [r5, #16]
 8005fde:	3201      	adds	r2, #1
 8005fe0:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005fe2:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005fe4:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005fe6:	3201      	adds	r2, #1
 8005fe8:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005fea:	696a      	ldr	r2, [r5, #20]
 8005fec:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005ff0:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005ff2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005ff4:	b9a2      	cbnz	r2, 8006020 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005ff6:	9600      	str	r6, [sp, #0]
 8005ff8:	2201      	movs	r2, #1
 8005ffa:	2102      	movs	r1, #2
 8005ffc:	4620      	mov	r0, r4
 8005ffe:	f7ff fe2b 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006002:	b928      	cbnz	r0, 8006010 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006004:	6823      	ldr	r3, [r4, #0]
 8006006:	2202      	movs	r2, #2
 8006008:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800600a:	4620      	mov	r0, r4
 800600c:	f7ff ff87 	bl	8005f1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006010:	2301      	movs	r3, #1
 8006012:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006016:	2300      	movs	r3, #0
 8006018:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800601c:	b005      	add	sp, #20
 800601e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006020:	9600      	str	r6, [sp, #0]
 8006022:	2201      	movs	r2, #1
 8006024:	2104      	movs	r1, #4
 8006026:	4620      	mov	r0, r4
 8006028:	9303      	str	r3, [sp, #12]
 800602a:	f7ff fe15 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800602e:	2800      	cmp	r0, #0
 8006030:	d1ee      	bne.n	8006010 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006032:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006034:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006036:	7812      	ldrb	r2, [r2, #0]
 8006038:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800603c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800603e:	3201      	adds	r2, #1
 8006040:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006042:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006044:	3a01      	subs	r2, #1
 8006046:	62e2      	str	r2, [r4, #44]	; 0x2c
 8006048:	e7d3      	b.n	8005ff2 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800604a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800604c:	f043 0308 	orr.w	r3, r3, #8
 8006050:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006052:	e7e0      	b.n	8006016 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006054:	2002      	movs	r0, #2
 8006056:	e7de      	b.n	8006016 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8006058:	2002      	movs	r0, #2
 800605a:	e7df      	b.n	800601c <HAL_QSPI_Transmit+0x78>

0800605c <HAL_QSPI_Receive>:
{
 800605c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800605e:	4604      	mov	r4, r0
 8006060:	b085      	sub	sp, #20
 8006062:	4616      	mov	r6, r2
 8006064:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006066:	f7fd ff15 	bl	8003e94 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800606a:	6825      	ldr	r5, [r4, #0]
 800606c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8006070:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006074:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006076:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006078:	d050      	beq.n	800611c <HAL_QSPI_Receive+0xc0>
 800607a:	2201      	movs	r2, #1
 800607c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006080:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006084:	2a01      	cmp	r2, #1
 8006086:	b2d0      	uxtb	r0, r2
 8006088:	d146      	bne.n	8006118 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800608a:	2200      	movs	r2, #0
 800608c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800608e:	2f00      	cmp	r7, #0
 8006090:	d03d      	beq.n	800610e <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8006092:	2222      	movs	r2, #34	; 0x22
 8006094:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006098:	692a      	ldr	r2, [r5, #16]
 800609a:	3201      	adds	r2, #1
 800609c:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800609e:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80060a0:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80060a2:	3201      	adds	r2, #1
 80060a4:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80060a6:	6969      	ldr	r1, [r5, #20]
 80060a8:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 80060ac:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80060b0:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80060b2:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80060b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80060b8:	b9a2      	cbnz	r2, 80060e4 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80060ba:	9600      	str	r6, [sp, #0]
 80060bc:	2201      	movs	r2, #1
 80060be:	2102      	movs	r1, #2
 80060c0:	4620      	mov	r0, r4
 80060c2:	f7ff fdc9 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80060c6:	b928      	cbnz	r0, 80060d4 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80060c8:	6823      	ldr	r3, [r4, #0]
 80060ca:	2202      	movs	r2, #2
 80060cc:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80060ce:	4620      	mov	r0, r4
 80060d0:	f7ff ff25 	bl	8005f1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80060d4:	2301      	movs	r3, #1
 80060d6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80060da:	2300      	movs	r3, #0
 80060dc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80060e0:	b005      	add	sp, #20
 80060e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80060e4:	9600      	str	r6, [sp, #0]
 80060e6:	2201      	movs	r2, #1
 80060e8:	2106      	movs	r1, #6
 80060ea:	4620      	mov	r0, r4
 80060ec:	9303      	str	r3, [sp, #12]
 80060ee:	f7ff fdb3 	bl	8005c58 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80060f2:	2800      	cmp	r0, #0
 80060f4:	d1ee      	bne.n	80060d4 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80060f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80060f8:	f895 1020 	ldrb.w	r1, [r5, #32]
 80060fc:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80060fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006100:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006102:	3201      	adds	r2, #1
 8006104:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006106:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006108:	3a01      	subs	r2, #1
 800610a:	63a2      	str	r2, [r4, #56]	; 0x38
 800610c:	e7d3      	b.n	80060b6 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800610e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006110:	f043 0308 	orr.w	r3, r3, #8
 8006114:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006116:	e7e0      	b.n	80060da <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006118:	2002      	movs	r0, #2
 800611a:	e7de      	b.n	80060da <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800611c:	2002      	movs	r0, #2
 800611e:	e7df      	b.n	80060e0 <HAL_QSPI_Receive+0x84>

08006120 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006120:	4913      	ldr	r1, [pc, #76]	; (8006170 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006122:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006124:	688b      	ldr	r3, [r1, #8]
 8006126:	f003 030c 	and.w	r3, r3, #12
 800612a:	2b04      	cmp	r3, #4
 800612c:	d01c      	beq.n	8006168 <HAL_RCC_GetSysClockFreq+0x48>
 800612e:	2b08      	cmp	r3, #8
 8006130:	d11c      	bne.n	800616c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006132:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006134:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006136:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006138:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800613c:	bf14      	ite	ne
 800613e:	480d      	ldrne	r0, [pc, #52]	; (8006174 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006140:	480d      	ldreq	r0, [pc, #52]	; (8006178 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006142:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006146:	bf18      	it	ne
 8006148:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800614a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800614e:	fba1 0100 	umull	r0, r1, r1, r0
 8006152:	f7fa f8a5 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006156:	4b06      	ldr	r3, [pc, #24]	; (8006170 <HAL_RCC_GetSysClockFreq+0x50>)
 8006158:	685b      	ldr	r3, [r3, #4]
 800615a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800615e:	3301      	adds	r3, #1
 8006160:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006162:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006166:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006168:	4802      	ldr	r0, [pc, #8]	; (8006174 <HAL_RCC_GetSysClockFreq+0x54>)
 800616a:	e7fc      	b.n	8006166 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800616c:	4802      	ldr	r0, [pc, #8]	; (8006178 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800616e:	e7fa      	b.n	8006166 <HAL_RCC_GetSysClockFreq+0x46>
 8006170:	40023800 	.word	0x40023800
 8006174:	007a1200 	.word	0x007a1200
 8006178:	00f42400 	.word	0x00f42400

0800617c <HAL_RCC_ClockConfig>:
{
 800617c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006180:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006182:	4604      	mov	r4, r0
 8006184:	b910      	cbnz	r0, 800618c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006186:	2001      	movs	r0, #1
}
 8006188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800618c:	4b44      	ldr	r3, [pc, #272]	; (80062a0 <HAL_RCC_ClockConfig+0x124>)
 800618e:	681a      	ldr	r2, [r3, #0]
 8006190:	f002 020f 	and.w	r2, r2, #15
 8006194:	428a      	cmp	r2, r1
 8006196:	d328      	bcc.n	80061ea <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006198:	6822      	ldr	r2, [r4, #0]
 800619a:	0797      	lsls	r7, r2, #30
 800619c:	d42d      	bmi.n	80061fa <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800619e:	07d0      	lsls	r0, r2, #31
 80061a0:	d441      	bmi.n	8006226 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80061a2:	4b3f      	ldr	r3, [pc, #252]	; (80062a0 <HAL_RCC_ClockConfig+0x124>)
 80061a4:	681a      	ldr	r2, [r3, #0]
 80061a6:	f002 020f 	and.w	r2, r2, #15
 80061aa:	42aa      	cmp	r2, r5
 80061ac:	d866      	bhi.n	800627c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80061ae:	6822      	ldr	r2, [r4, #0]
 80061b0:	0751      	lsls	r1, r2, #29
 80061b2:	d46c      	bmi.n	800628e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80061b4:	0713      	lsls	r3, r2, #28
 80061b6:	d507      	bpl.n	80061c8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80061b8:	4a3a      	ldr	r2, [pc, #232]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 80061ba:	6921      	ldr	r1, [r4, #16]
 80061bc:	6893      	ldr	r3, [r2, #8]
 80061be:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80061c2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80061c6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80061c8:	f7ff ffaa 	bl	8006120 <HAL_RCC_GetSysClockFreq>
 80061cc:	4b35      	ldr	r3, [pc, #212]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 80061ce:	4a36      	ldr	r2, [pc, #216]	; (80062a8 <HAL_RCC_ClockConfig+0x12c>)
 80061d0:	689b      	ldr	r3, [r3, #8]
 80061d2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80061d6:	5cd3      	ldrb	r3, [r2, r3]
 80061d8:	40d8      	lsrs	r0, r3
 80061da:	4b34      	ldr	r3, [pc, #208]	; (80062ac <HAL_RCC_ClockConfig+0x130>)
 80061dc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80061de:	4b34      	ldr	r3, [pc, #208]	; (80062b0 <HAL_RCC_ClockConfig+0x134>)
 80061e0:	6818      	ldr	r0, [r3, #0]
 80061e2:	f7fb fe71 	bl	8001ec8 <HAL_InitTick>
  return HAL_OK;
 80061e6:	2000      	movs	r0, #0
 80061e8:	e7ce      	b.n	8006188 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80061ea:	b2ca      	uxtb	r2, r1
 80061ec:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	f003 030f 	and.w	r3, r3, #15
 80061f4:	428b      	cmp	r3, r1
 80061f6:	d1c6      	bne.n	8006186 <HAL_RCC_ClockConfig+0xa>
 80061f8:	e7ce      	b.n	8006198 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80061fa:	4b2a      	ldr	r3, [pc, #168]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 80061fc:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006200:	bf1e      	ittt	ne
 8006202:	6899      	ldrne	r1, [r3, #8]
 8006204:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006208:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800620a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800620c:	bf42      	ittt	mi
 800620e:	6899      	ldrmi	r1, [r3, #8]
 8006210:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006214:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006216:	4923      	ldr	r1, [pc, #140]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 8006218:	68a0      	ldr	r0, [r4, #8]
 800621a:	688b      	ldr	r3, [r1, #8]
 800621c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006220:	4303      	orrs	r3, r0
 8006222:	608b      	str	r3, [r1, #8]
 8006224:	e7bb      	b.n	800619e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006226:	6862      	ldr	r2, [r4, #4]
 8006228:	4b1e      	ldr	r3, [pc, #120]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 800622a:	2a01      	cmp	r2, #1
 800622c:	d11c      	bne.n	8006268 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800622e:	681b      	ldr	r3, [r3, #0]
 8006230:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006234:	d0a7      	beq.n	8006186 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006236:	4e1b      	ldr	r6, [pc, #108]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 8006238:	68b3      	ldr	r3, [r6, #8]
 800623a:	f023 0303 	bic.w	r3, r3, #3
 800623e:	4313      	orrs	r3, r2
 8006240:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006242:	f7fd fe27 	bl	8003e94 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006246:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800624a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800624c:	68b3      	ldr	r3, [r6, #8]
 800624e:	6862      	ldr	r2, [r4, #4]
 8006250:	f003 030c 	and.w	r3, r3, #12
 8006254:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006258:	d0a3      	beq.n	80061a2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800625a:	f7fd fe1b 	bl	8003e94 <HAL_GetTick>
 800625e:	1bc0      	subs	r0, r0, r7
 8006260:	4540      	cmp	r0, r8
 8006262:	d9f3      	bls.n	800624c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006264:	2003      	movs	r0, #3
 8006266:	e78f      	b.n	8006188 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006268:	1e91      	subs	r1, r2, #2
 800626a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800626c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800626e:	d802      	bhi.n	8006276 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006270:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006274:	e7de      	b.n	8006234 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006276:	f013 0f02 	tst.w	r3, #2
 800627a:	e7db      	b.n	8006234 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800627c:	b2ea      	uxtb	r2, r5
 800627e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	f003 030f 	and.w	r3, r3, #15
 8006286:	42ab      	cmp	r3, r5
 8006288:	f47f af7d 	bne.w	8006186 <HAL_RCC_ClockConfig+0xa>
 800628c:	e78f      	b.n	80061ae <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800628e:	4905      	ldr	r1, [pc, #20]	; (80062a4 <HAL_RCC_ClockConfig+0x128>)
 8006290:	68e0      	ldr	r0, [r4, #12]
 8006292:	688b      	ldr	r3, [r1, #8]
 8006294:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006298:	4303      	orrs	r3, r0
 800629a:	608b      	str	r3, [r1, #8]
 800629c:	e78a      	b.n	80061b4 <HAL_RCC_ClockConfig+0x38>
 800629e:	bf00      	nop
 80062a0:	40023c00 	.word	0x40023c00
 80062a4:	40023800 	.word	0x40023800
 80062a8:	0801dcf1 	.word	0x0801dcf1
 80062ac:	20000050 	.word	0x20000050
 80062b0:	20000058 	.word	0x20000058

080062b4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80062b4:	4b04      	ldr	r3, [pc, #16]	; (80062c8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80062b6:	4a05      	ldr	r2, [pc, #20]	; (80062cc <HAL_RCC_GetPCLK1Freq+0x18>)
 80062b8:	689b      	ldr	r3, [r3, #8]
 80062ba:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80062be:	5cd3      	ldrb	r3, [r2, r3]
 80062c0:	4a03      	ldr	r2, [pc, #12]	; (80062d0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80062c2:	6810      	ldr	r0, [r2, #0]
}
 80062c4:	40d8      	lsrs	r0, r3
 80062c6:	4770      	bx	lr
 80062c8:	40023800 	.word	0x40023800
 80062cc:	0801dd01 	.word	0x0801dd01
 80062d0:	20000050 	.word	0x20000050

080062d4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80062d4:	230f      	movs	r3, #15
 80062d6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80062d8:	4b0b      	ldr	r3, [pc, #44]	; (8006308 <HAL_RCC_GetClockConfig+0x34>)
 80062da:	689a      	ldr	r2, [r3, #8]
 80062dc:	f002 0203 	and.w	r2, r2, #3
 80062e0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80062e2:	689a      	ldr	r2, [r3, #8]
 80062e4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80062e8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80062ea:	689a      	ldr	r2, [r3, #8]
 80062ec:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80062f0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80062f2:	689b      	ldr	r3, [r3, #8]
 80062f4:	08db      	lsrs	r3, r3, #3
 80062f6:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80062fa:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80062fc:	4b03      	ldr	r3, [pc, #12]	; (800630c <HAL_RCC_GetClockConfig+0x38>)
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	f003 030f 	and.w	r3, r3, #15
 8006304:	600b      	str	r3, [r1, #0]
}
 8006306:	4770      	bx	lr
 8006308:	40023800 	.word	0x40023800
 800630c:	40023c00 	.word	0x40023c00

08006310 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006310:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006312:	6802      	ldr	r2, [r0, #0]
{
 8006314:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006316:	0610      	lsls	r0, r2, #24
 8006318:	d508      	bpl.n	800632c <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800631a:	49a8      	ldr	r1, [pc, #672]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800631c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800631e:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006322:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8006326:	4303      	orrs	r3, r0
 8006328:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800632c:	05d1      	lsls	r1, r2, #23
 800632e:	d508      	bpl.n	8006342 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8006330:	49a2      	ldr	r1, [pc, #648]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8006332:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006334:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006338:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800633c:	4303      	orrs	r3, r0
 800633e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006342:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006346:	d172      	bne.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006348:	6823      	ldr	r3, [r4, #0]
 800634a:	f013 0f0c 	tst.w	r3, #12
 800634e:	f000 80bf 	beq.w	80064d0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006352:	4d9b      	ldr	r5, [pc, #620]	; (80065c0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006354:	4e99      	ldr	r6, [pc, #612]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006356:	2300      	movs	r3, #0
 8006358:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800635a:	f7fd fd9b 	bl	8003e94 <HAL_GetTick>
 800635e:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006360:	6833      	ldr	r3, [r6, #0]
 8006362:	009a      	lsls	r2, r3, #2
 8006364:	f100 80f9 	bmi.w	800655a <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006368:	6822      	ldr	r2, [r4, #0]
 800636a:	0753      	lsls	r3, r2, #29
 800636c:	d51a      	bpl.n	80063a4 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800636e:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006372:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006376:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800637a:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800637e:	430b      	orrs	r3, r1
 8006380:	6921      	ldr	r1, [r4, #16]
 8006382:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006386:	69a1      	ldr	r1, [r4, #24]
 8006388:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800638c:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006390:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8006394:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006396:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800639a:	3901      	subs	r1, #1
 800639c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80063a0:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80063a4:	0717      	lsls	r7, r2, #28
 80063a6:	d519      	bpl.n	80063dc <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80063a8:	4984      	ldr	r1, [pc, #528]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80063aa:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063ae:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 80063b2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80063b6:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80063ba:	4303      	orrs	r3, r0
 80063bc:	6920      	ldr	r0, [r4, #16]
 80063be:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80063c2:	69e0      	ldr	r0, [r4, #28]
 80063c4:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 80063c8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80063cc:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80063d0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80063d2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80063d6:	4303      	orrs	r3, r0
 80063d8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 80063dc:	0616      	lsls	r6, r2, #24
 80063de:	d517      	bpl.n	8006410 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80063e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80063e2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80063e6:	d113      	bne.n	8006410 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063e8:	4974      	ldr	r1, [pc, #464]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80063ea:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80063ee:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 80063f2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80063f6:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80063fa:	4313      	orrs	r3, r2
 80063fc:	6922      	ldr	r2, [r4, #16]
 80063fe:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006402:	6962      	ldr	r2, [r4, #20]
 8006404:	0852      	lsrs	r2, r2, #1
 8006406:	3a01      	subs	r2, #1
 8006408:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800640c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006410:	2301      	movs	r3, #1
 8006412:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006414:	f7fd fd3e 	bl	8003e94 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006418:	4e68      	ldr	r6, [pc, #416]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800641a:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800641c:	6833      	ldr	r3, [r6, #0]
 800641e:	0098      	lsls	r0, r3, #2
 8006420:	d458      	bmi.n	80064d4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006422:	f7fd fd37 	bl	8003e94 <HAL_GetTick>
 8006426:	1b40      	subs	r0, r0, r5
 8006428:	2802      	cmp	r0, #2
 800642a:	d9f7      	bls.n	800641c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800642c:	e04d      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800642e:	4d65      	ldr	r5, [pc, #404]	; (80065c4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006430:	4f62      	ldr	r7, [pc, #392]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006432:	2300      	movs	r3, #0
 8006434:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006436:	f7fd fd2d 	bl	8003e94 <HAL_GetTick>
 800643a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800643c:	683b      	ldr	r3, [r7, #0]
 800643e:	011b      	lsls	r3, r3, #4
 8006440:	d43e      	bmi.n	80064c0 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006442:	6821      	ldr	r1, [r4, #0]
 8006444:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006446:	bf41      	itttt	mi
 8006448:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800644c:	071b      	lslmi	r3, r3, #28
 800644e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006452:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006456:	078a      	lsls	r2, r1, #30
 8006458:	d515      	bpl.n	8006486 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800645a:	4a58      	ldr	r2, [pc, #352]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800645c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800645e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006462:	6866      	ldr	r6, [r4, #4]
 8006464:	061b      	lsls	r3, r3, #24
 8006466:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800646a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800646e:	4303      	orrs	r3, r0
 8006470:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006474:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006478:	6a23      	ldr	r3, [r4, #32]
 800647a:	f020 001f 	bic.w	r0, r0, #31
 800647e:	3b01      	subs	r3, #1
 8006480:	4303      	orrs	r3, r0
 8006482:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006486:	064b      	lsls	r3, r1, #25
 8006488:	d50a      	bpl.n	80064a0 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800648a:	68e3      	ldr	r3, [r4, #12]
 800648c:	6862      	ldr	r2, [r4, #4]
 800648e:	061b      	lsls	r3, r3, #24
 8006490:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006494:	68a2      	ldr	r2, [r4, #8]
 8006496:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800649a:	4a48      	ldr	r2, [pc, #288]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800649c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80064a0:	2301      	movs	r3, #1
 80064a2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80064a4:	f7fd fcf6 	bl	8003e94 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064a8:	4e44      	ldr	r6, [pc, #272]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 80064aa:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064ac:	6833      	ldr	r3, [r6, #0]
 80064ae:	011f      	lsls	r7, r3, #4
 80064b0:	f53f af4a 	bmi.w	8006348 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80064b4:	f7fd fcee 	bl	8003e94 <HAL_GetTick>
 80064b8:	1b40      	subs	r0, r0, r5
 80064ba:	2802      	cmp	r0, #2
 80064bc:	d9f6      	bls.n	80064ac <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80064be:	e004      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80064c0:	f7fd fce8 	bl	8003e94 <HAL_GetTick>
 80064c4:	1b80      	subs	r0, r0, r6
 80064c6:	2802      	cmp	r0, #2
 80064c8:	d9b8      	bls.n	800643c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 80064ca:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 80064cc:	b003      	add	sp, #12
 80064ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 80064d0:	0618      	lsls	r0, r3, #24
 80064d2:	d43d      	bmi.n	8006550 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80064d4:	6823      	ldr	r3, [r4, #0]
 80064d6:	0699      	lsls	r1, r3, #26
 80064d8:	d530      	bpl.n	800653c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 80064da:	2300      	movs	r3, #0
 80064dc:	9301      	str	r3, [sp, #4]
 80064de:	4b37      	ldr	r3, [pc, #220]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 80064e0:	4d39      	ldr	r5, [pc, #228]	; (80065c8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80064e2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80064e4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80064e8:	641a      	str	r2, [r3, #64]	; 0x40
 80064ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80064f0:	9301      	str	r3, [sp, #4]
 80064f2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80064f4:	682b      	ldr	r3, [r5, #0]
 80064f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80064fa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80064fc:	f7fd fcca 	bl	8003e94 <HAL_GetTick>
 8006500:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006502:	682b      	ldr	r3, [r5, #0]
 8006504:	05d9      	lsls	r1, r3, #23
 8006506:	d52f      	bpl.n	8006568 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006508:	4d2c      	ldr	r5, [pc, #176]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800650a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800650c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006510:	d130      	bne.n	8006574 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006512:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006514:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006518:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800651c:	4a27      	ldr	r2, [pc, #156]	; (80065bc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800651e:	d148      	bne.n	80065b2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8006520:	6891      	ldr	r1, [r2, #8]
 8006522:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006526:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800652a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800652e:	4301      	orrs	r1, r0
 8006530:	6091      	str	r1, [r2, #8]
 8006532:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006534:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006538:	430b      	orrs	r3, r1
 800653a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800653c:	6820      	ldr	r0, [r4, #0]
 800653e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006542:	bf1f      	itttt	ne
 8006544:	4b21      	ldrne	r3, [pc, #132]	; (80065cc <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8006546:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800654a:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800654c:	2000      	movne	r0, #0
 800654e:	e7bd      	b.n	80064cc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8006550:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006552:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006556:	d1bd      	bne.n	80064d4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8006558:	e6fb      	b.n	8006352 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800655a:	f7fd fc9b 	bl	8003e94 <HAL_GetTick>
 800655e:	1bc0      	subs	r0, r0, r7
 8006560:	2802      	cmp	r0, #2
 8006562:	f67f aefd 	bls.w	8006360 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006566:	e7b0      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006568:	f7fd fc94 	bl	8003e94 <HAL_GetTick>
 800656c:	1b80      	subs	r0, r0, r6
 800656e:	2802      	cmp	r0, #2
 8006570:	d9c7      	bls.n	8006502 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 8006572:	e7aa      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006574:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006576:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800657a:	4293      	cmp	r3, r2
 800657c:	d0c9      	beq.n	8006512 <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800657e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006580:	4a13      	ldr	r2, [pc, #76]	; (80065d0 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8006582:	2101      	movs	r1, #1
 8006584:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006586:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800658a:	2100      	movs	r1, #0
 800658c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800658e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006590:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006592:	07da      	lsls	r2, r3, #31
 8006594:	d5bd      	bpl.n	8006512 <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8006596:	f7fd fc7d 	bl	8003e94 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800659a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800659e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80065a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80065a2:	079b      	lsls	r3, r3, #30
 80065a4:	d4b5      	bmi.n	8006512 <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80065a6:	f7fd fc75 	bl	8003e94 <HAL_GetTick>
 80065aa:	1b80      	subs	r0, r0, r6
 80065ac:	42b8      	cmp	r0, r7
 80065ae:	d9f7      	bls.n	80065a0 <HAL_RCCEx_PeriphCLKConfig+0x290>
 80065b0:	e78b      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80065b2:	6891      	ldr	r1, [r2, #8]
 80065b4:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80065b8:	e7ba      	b.n	8006530 <HAL_RCCEx_PeriphCLKConfig+0x220>
 80065ba:	bf00      	nop
 80065bc:	40023800 	.word	0x40023800
 80065c0:	42470070 	.word	0x42470070
 80065c4:	42470068 	.word	0x42470068
 80065c8:	40007000 	.word	0x40007000
 80065cc:	424711e0 	.word	0x424711e0
 80065d0:	42470e40 	.word	0x42470e40

080065d4 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80065d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80065d8:	4604      	mov	r4, r0
 80065da:	b340      	cbz	r0, 800662e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80065dc:	6803      	ldr	r3, [r0, #0]
 80065de:	07dd      	lsls	r5, r3, #31
 80065e0:	d410      	bmi.n	8006604 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80065e2:	6823      	ldr	r3, [r4, #0]
 80065e4:	0798      	lsls	r0, r3, #30
 80065e6:	d45e      	bmi.n	80066a6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80065e8:	6823      	ldr	r3, [r4, #0]
 80065ea:	071a      	lsls	r2, r3, #28
 80065ec:	f100 80a0 	bmi.w	8006730 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80065f0:	6823      	ldr	r3, [r4, #0]
 80065f2:	075b      	lsls	r3, r3, #29
 80065f4:	f100 80be 	bmi.w	8006774 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80065f8:	69a0      	ldr	r0, [r4, #24]
 80065fa:	2800      	cmp	r0, #0
 80065fc:	f040 811f 	bne.w	800683e <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006600:	2000      	movs	r0, #0
 8006602:	e02b      	b.n	800665c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006604:	4ba7      	ldr	r3, [pc, #668]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 8006606:	689a      	ldr	r2, [r3, #8]
 8006608:	f002 020c 	and.w	r2, r2, #12
 800660c:	2a04      	cmp	r2, #4
 800660e:	d007      	beq.n	8006620 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006610:	689a      	ldr	r2, [r3, #8]
 8006612:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006616:	2a08      	cmp	r2, #8
 8006618:	d10b      	bne.n	8006632 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800661a:	685a      	ldr	r2, [r3, #4]
 800661c:	0251      	lsls	r1, r2, #9
 800661e:	d508      	bpl.n	8006632 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006620:	4ba0      	ldr	r3, [pc, #640]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 8006622:	681b      	ldr	r3, [r3, #0]
 8006624:	039a      	lsls	r2, r3, #14
 8006626:	d5dc      	bpl.n	80065e2 <HAL_RCC_OscConfig+0xe>
 8006628:	6863      	ldr	r3, [r4, #4]
 800662a:	2b00      	cmp	r3, #0
 800662c:	d1d9      	bne.n	80065e2 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800662e:	2001      	movs	r0, #1
 8006630:	e014      	b.n	800665c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006632:	6862      	ldr	r2, [r4, #4]
 8006634:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006638:	d113      	bne.n	8006662 <HAL_RCC_OscConfig+0x8e>
 800663a:	681a      	ldr	r2, [r3, #0]
 800663c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006640:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006642:	f7fd fc27 	bl	8003e94 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006646:	4e97      	ldr	r6, [pc, #604]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006648:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800664a:	6833      	ldr	r3, [r6, #0]
 800664c:	039b      	lsls	r3, r3, #14
 800664e:	d4c8      	bmi.n	80065e2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006650:	f7fd fc20 	bl	8003e94 <HAL_GetTick>
 8006654:	1b40      	subs	r0, r0, r5
 8006656:	2864      	cmp	r0, #100	; 0x64
 8006658:	d9f7      	bls.n	800664a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800665a:	2003      	movs	r0, #3
}
 800665c:	b002      	add	sp, #8
 800665e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006662:	4d90      	ldr	r5, [pc, #576]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 8006664:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006668:	682b      	ldr	r3, [r5, #0]
 800666a:	d107      	bne.n	800667c <HAL_RCC_OscConfig+0xa8>
 800666c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006670:	602b      	str	r3, [r5, #0]
 8006672:	682b      	ldr	r3, [r5, #0]
 8006674:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006678:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800667a:	e7e2      	b.n	8006642 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800667c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006680:	602b      	str	r3, [r5, #0]
 8006682:	682b      	ldr	r3, [r5, #0]
 8006684:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006688:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800668a:	2a00      	cmp	r2, #0
 800668c:	d1d9      	bne.n	8006642 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800668e:	f7fd fc01 	bl	8003e94 <HAL_GetTick>
 8006692:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006694:	682b      	ldr	r3, [r5, #0]
 8006696:	039f      	lsls	r7, r3, #14
 8006698:	d5a3      	bpl.n	80065e2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800669a:	f7fd fbfb 	bl	8003e94 <HAL_GetTick>
 800669e:	1b80      	subs	r0, r0, r6
 80066a0:	2864      	cmp	r0, #100	; 0x64
 80066a2:	d9f7      	bls.n	8006694 <HAL_RCC_OscConfig+0xc0>
 80066a4:	e7d9      	b.n	800665a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80066a6:	4b7f      	ldr	r3, [pc, #508]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 80066a8:	689a      	ldr	r2, [r3, #8]
 80066aa:	f012 0f0c 	tst.w	r2, #12
 80066ae:	d007      	beq.n	80066c0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80066b0:	689a      	ldr	r2, [r3, #8]
 80066b2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80066b6:	2a08      	cmp	r2, #8
 80066b8:	d111      	bne.n	80066de <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80066ba:	685b      	ldr	r3, [r3, #4]
 80066bc:	025e      	lsls	r6, r3, #9
 80066be:	d40e      	bmi.n	80066de <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80066c0:	4b78      	ldr	r3, [pc, #480]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 80066c2:	681a      	ldr	r2, [r3, #0]
 80066c4:	0795      	lsls	r5, r2, #30
 80066c6:	d502      	bpl.n	80066ce <HAL_RCC_OscConfig+0xfa>
 80066c8:	68e2      	ldr	r2, [r4, #12]
 80066ca:	2a01      	cmp	r2, #1
 80066cc:	d1af      	bne.n	800662e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80066ce:	681a      	ldr	r2, [r3, #0]
 80066d0:	6921      	ldr	r1, [r4, #16]
 80066d2:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80066d6:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 80066da:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80066dc:	e784      	b.n	80065e8 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80066de:	68e2      	ldr	r2, [r4, #12]
 80066e0:	4b71      	ldr	r3, [pc, #452]	; (80068a8 <HAL_RCC_OscConfig+0x2d4>)
 80066e2:	b1b2      	cbz	r2, 8006712 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80066e4:	2201      	movs	r2, #1
 80066e6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80066e8:	f7fd fbd4 	bl	8003e94 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066ec:	4d6d      	ldr	r5, [pc, #436]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80066ee:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066f0:	682b      	ldr	r3, [r5, #0]
 80066f2:	0798      	lsls	r0, r3, #30
 80066f4:	d507      	bpl.n	8006706 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80066f6:	682b      	ldr	r3, [r5, #0]
 80066f8:	6922      	ldr	r2, [r4, #16]
 80066fa:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80066fe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006702:	602b      	str	r3, [r5, #0]
 8006704:	e770      	b.n	80065e8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006706:	f7fd fbc5 	bl	8003e94 <HAL_GetTick>
 800670a:	1b80      	subs	r0, r0, r6
 800670c:	2802      	cmp	r0, #2
 800670e:	d9ef      	bls.n	80066f0 <HAL_RCC_OscConfig+0x11c>
 8006710:	e7a3      	b.n	800665a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006712:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006714:	f7fd fbbe 	bl	8003e94 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006718:	4e62      	ldr	r6, [pc, #392]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800671a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800671c:	6833      	ldr	r3, [r6, #0]
 800671e:	0799      	lsls	r1, r3, #30
 8006720:	f57f af62 	bpl.w	80065e8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006724:	f7fd fbb6 	bl	8003e94 <HAL_GetTick>
 8006728:	1b40      	subs	r0, r0, r5
 800672a:	2802      	cmp	r0, #2
 800672c:	d9f6      	bls.n	800671c <HAL_RCC_OscConfig+0x148>
 800672e:	e794      	b.n	800665a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006730:	6962      	ldr	r2, [r4, #20]
 8006732:	4b5e      	ldr	r3, [pc, #376]	; (80068ac <HAL_RCC_OscConfig+0x2d8>)
 8006734:	b17a      	cbz	r2, 8006756 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006736:	2201      	movs	r2, #1
 8006738:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800673a:	f7fd fbab 	bl	8003e94 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800673e:	4e59      	ldr	r6, [pc, #356]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 8006740:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006742:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006744:	079f      	lsls	r7, r3, #30
 8006746:	f53f af53 	bmi.w	80065f0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800674a:	f7fd fba3 	bl	8003e94 <HAL_GetTick>
 800674e:	1b40      	subs	r0, r0, r5
 8006750:	2802      	cmp	r0, #2
 8006752:	d9f6      	bls.n	8006742 <HAL_RCC_OscConfig+0x16e>
 8006754:	e781      	b.n	800665a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006756:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006758:	f7fd fb9c 	bl	8003e94 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800675c:	4e51      	ldr	r6, [pc, #324]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800675e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006760:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006762:	0798      	lsls	r0, r3, #30
 8006764:	f57f af44 	bpl.w	80065f0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006768:	f7fd fb94 	bl	8003e94 <HAL_GetTick>
 800676c:	1b40      	subs	r0, r0, r5
 800676e:	2802      	cmp	r0, #2
 8006770:	d9f6      	bls.n	8006760 <HAL_RCC_OscConfig+0x18c>
 8006772:	e772      	b.n	800665a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006774:	4b4b      	ldr	r3, [pc, #300]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 8006776:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006778:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800677c:	d128      	bne.n	80067d0 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800677e:	9201      	str	r2, [sp, #4]
 8006780:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006782:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006786:	641a      	str	r2, [r3, #64]	; 0x40
 8006788:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800678a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800678e:	9301      	str	r3, [sp, #4]
 8006790:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006792:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006794:	4d46      	ldr	r5, [pc, #280]	; (80068b0 <HAL_RCC_OscConfig+0x2dc>)
 8006796:	682b      	ldr	r3, [r5, #0]
 8006798:	05d9      	lsls	r1, r3, #23
 800679a:	d51b      	bpl.n	80067d4 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800679c:	68a3      	ldr	r3, [r4, #8]
 800679e:	4d41      	ldr	r5, [pc, #260]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 80067a0:	2b01      	cmp	r3, #1
 80067a2:	d127      	bne.n	80067f4 <HAL_RCC_OscConfig+0x220>
 80067a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80067a6:	f043 0301 	orr.w	r3, r3, #1
 80067aa:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80067ac:	f7fd fb72 	bl	8003e94 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067b0:	4e3c      	ldr	r6, [pc, #240]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80067b2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80067b4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067b8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80067ba:	079b      	lsls	r3, r3, #30
 80067bc:	d539      	bpl.n	8006832 <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 80067be:	2f00      	cmp	r7, #0
 80067c0:	f43f af1a 	beq.w	80065f8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80067c4:	4a37      	ldr	r2, [pc, #220]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 80067c6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80067c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80067cc:	6413      	str	r3, [r2, #64]	; 0x40
 80067ce:	e713      	b.n	80065f8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80067d0:	2700      	movs	r7, #0
 80067d2:	e7df      	b.n	8006794 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80067d4:	682b      	ldr	r3, [r5, #0]
 80067d6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80067da:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80067dc:	f7fd fb5a 	bl	8003e94 <HAL_GetTick>
 80067e0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80067e2:	682b      	ldr	r3, [r5, #0]
 80067e4:	05da      	lsls	r2, r3, #23
 80067e6:	d4d9      	bmi.n	800679c <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80067e8:	f7fd fb54 	bl	8003e94 <HAL_GetTick>
 80067ec:	1b80      	subs	r0, r0, r6
 80067ee:	2802      	cmp	r0, #2
 80067f0:	d9f7      	bls.n	80067e2 <HAL_RCC_OscConfig+0x20e>
 80067f2:	e732      	b.n	800665a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80067f4:	2b05      	cmp	r3, #5
 80067f6:	d104      	bne.n	8006802 <HAL_RCC_OscConfig+0x22e>
 80067f8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80067fa:	f043 0304 	orr.w	r3, r3, #4
 80067fe:	672b      	str	r3, [r5, #112]	; 0x70
 8006800:	e7d0      	b.n	80067a4 <HAL_RCC_OscConfig+0x1d0>
 8006802:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006804:	f022 0201 	bic.w	r2, r2, #1
 8006808:	672a      	str	r2, [r5, #112]	; 0x70
 800680a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800680c:	f022 0204 	bic.w	r2, r2, #4
 8006810:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006812:	2b00      	cmp	r3, #0
 8006814:	d1ca      	bne.n	80067ac <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8006816:	f7fd fb3d 	bl	8003e94 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800681a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800681e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006820:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006822:	0798      	lsls	r0, r3, #30
 8006824:	d5cb      	bpl.n	80067be <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006826:	f7fd fb35 	bl	8003e94 <HAL_GetTick>
 800682a:	1b80      	subs	r0, r0, r6
 800682c:	4540      	cmp	r0, r8
 800682e:	d9f7      	bls.n	8006820 <HAL_RCC_OscConfig+0x24c>
 8006830:	e713      	b.n	800665a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006832:	f7fd fb2f 	bl	8003e94 <HAL_GetTick>
 8006836:	1b40      	subs	r0, r0, r5
 8006838:	4540      	cmp	r0, r8
 800683a:	d9bd      	bls.n	80067b8 <HAL_RCC_OscConfig+0x1e4>
 800683c:	e70d      	b.n	800665a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800683e:	4d19      	ldr	r5, [pc, #100]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
 8006840:	68ab      	ldr	r3, [r5, #8]
 8006842:	f003 030c 	and.w	r3, r3, #12
 8006846:	2b08      	cmp	r3, #8
 8006848:	d049      	beq.n	80068de <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800684a:	4e1a      	ldr	r6, [pc, #104]	; (80068b4 <HAL_RCC_OscConfig+0x2e0>)
 800684c:	2300      	movs	r3, #0
 800684e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006850:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006852:	d137      	bne.n	80068c4 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006854:	f7fd fb1e 	bl	8003e94 <HAL_GetTick>
 8006858:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800685a:	682b      	ldr	r3, [r5, #0]
 800685c:	0199      	lsls	r1, r3, #6
 800685e:	d42b      	bmi.n	80068b8 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006860:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006864:	4313      	orrs	r3, r2
 8006866:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006868:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800686c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800686e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006872:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006874:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006878:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800687a:	0852      	lsrs	r2, r2, #1
 800687c:	3a01      	subs	r2, #1
 800687e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006882:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006884:	2301      	movs	r3, #1
 8006886:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006888:	f7fd fb04 	bl	8003e94 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800688c:	4d05      	ldr	r5, [pc, #20]	; (80068a4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800688e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006890:	682b      	ldr	r3, [r5, #0]
 8006892:	019a      	lsls	r2, r3, #6
 8006894:	f53f aeb4 	bmi.w	8006600 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006898:	f7fd fafc 	bl	8003e94 <HAL_GetTick>
 800689c:	1b00      	subs	r0, r0, r4
 800689e:	2802      	cmp	r0, #2
 80068a0:	d9f6      	bls.n	8006890 <HAL_RCC_OscConfig+0x2bc>
 80068a2:	e6da      	b.n	800665a <HAL_RCC_OscConfig+0x86>
 80068a4:	40023800 	.word	0x40023800
 80068a8:	42470000 	.word	0x42470000
 80068ac:	42470e80 	.word	0x42470e80
 80068b0:	40007000 	.word	0x40007000
 80068b4:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80068b8:	f7fd faec 	bl	8003e94 <HAL_GetTick>
 80068bc:	1bc0      	subs	r0, r0, r7
 80068be:	2802      	cmp	r0, #2
 80068c0:	d9cb      	bls.n	800685a <HAL_RCC_OscConfig+0x286>
 80068c2:	e6ca      	b.n	800665a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80068c4:	f7fd fae6 	bl	8003e94 <HAL_GetTick>
 80068c8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80068ca:	682b      	ldr	r3, [r5, #0]
 80068cc:	019b      	lsls	r3, r3, #6
 80068ce:	f57f ae97 	bpl.w	8006600 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80068d2:	f7fd fadf 	bl	8003e94 <HAL_GetTick>
 80068d6:	1b00      	subs	r0, r0, r4
 80068d8:	2802      	cmp	r0, #2
 80068da:	d9f6      	bls.n	80068ca <HAL_RCC_OscConfig+0x2f6>
 80068dc:	e6bd      	b.n	800665a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80068de:	2801      	cmp	r0, #1
 80068e0:	f43f aebc 	beq.w	800665c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80068e4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068e6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068e8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068ec:	4291      	cmp	r1, r2
 80068ee:	f47f ae9e 	bne.w	800662e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068f2:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80068f4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068f8:	428a      	cmp	r2, r1
 80068fa:	f47f ae98 	bne.w	800662e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80068fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006900:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006904:	401a      	ands	r2, r3
 8006906:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800690a:	f47f ae90 	bne.w	800662e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800690e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006910:	0852      	lsrs	r2, r2, #1
 8006912:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006916:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006918:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800691c:	f47f ae87 	bne.w	800662e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006920:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006922:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006926:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800692a:	f47f ae80 	bne.w	800662e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800692e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006930:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006934:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8006938:	f43f ae62 	beq.w	8006600 <HAL_RCC_OscConfig+0x2c>
 800693c:	e677      	b.n	800662e <HAL_RCC_OscConfig+0x5a>
 800693e:	bf00      	nop

08006940 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006940:	b538      	push	{r3, r4, r5, lr}
 8006942:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006944:	4604      	mov	r4, r0
 8006946:	b1c8      	cbz	r0, 800697c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006948:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800694c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006950:	b91b      	cbnz	r3, 800695a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006952:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006956:	f7fb f9ff 	bl	8001d58 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800695a:	2302      	movs	r3, #2
 800695c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006960:	1d21      	adds	r1, r4, #4
 8006962:	6820      	ldr	r0, [r4, #0]
 8006964:	f000 f9b8 	bl	8006cd8 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006968:	6862      	ldr	r2, [r4, #4]
 800696a:	6820      	ldr	r0, [r4, #0]
 800696c:	4629      	mov	r1, r5
 800696e:	f000 f9e9 	bl	8006d44 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006972:	2301      	movs	r3, #1
 8006974:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006978:	2000      	movs	r0, #0
}
 800697a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800697c:	2001      	movs	r0, #1
 800697e:	e7fc      	b.n	800697a <HAL_SDRAM_Init+0x3a>

08006980 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006980:	b510      	push	{r4, lr}
 8006982:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006984:	f7fb fa5e 	bl	8001e44 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006988:	e9d4 0100 	ldrd	r0, r1, [r4]
 800698c:	f000 fa16 	bl	8006dbc <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006990:	2000      	movs	r0, #0
 8006992:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006996:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800699a:	bd10      	pop	{r4, pc}

0800699c <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800699c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800699e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80069a2:	2b02      	cmp	r3, #2
{
 80069a4:	4604      	mov	r4, r0
 80069a6:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80069a8:	b2d8      	uxtb	r0, r3
 80069aa:	d00d      	beq.n	80069c8 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80069ac:	2302      	movs	r3, #2
 80069ae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80069b2:	6820      	ldr	r0, [r4, #0]
 80069b4:	f000 fa11 	bl	8006dda <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80069b8:	682b      	ldr	r3, [r5, #0]
 80069ba:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80069bc:	bf0c      	ite	eq
 80069be:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80069c0:	2301      	movne	r3, #1
 80069c2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80069c6:	2000      	movs	r0, #0
}
 80069c8:	bd38      	pop	{r3, r4, r5, pc}

080069ca <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80069ca:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80069cc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80069d0:	2b02      	cmp	r3, #2
{
 80069d2:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80069d4:	b2d8      	uxtb	r0, r3
 80069d6:	d009      	beq.n	80069ec <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80069d8:	2302      	movs	r3, #2
 80069da:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80069de:	6820      	ldr	r0, [r4, #0]
 80069e0:	f000 fa22 	bl	8006e28 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80069e4:	2301      	movs	r3, #1
 80069e6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80069ea:	2000      	movs	r0, #0
}
 80069ec:	bd10      	pop	{r4, pc}

080069ee <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80069ee:	4770      	bx	lr

080069f0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80069f0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80069f4:	2b01      	cmp	r3, #1
 80069f6:	d130      	bne.n	8006a5a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80069f8:	2302      	movs	r3, #2
 80069fa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80069fe:	6803      	ldr	r3, [r0, #0]
 8006a00:	68da      	ldr	r2, [r3, #12]
 8006a02:	f042 0201 	orr.w	r2, r2, #1
 8006a06:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006a08:	4a15      	ldr	r2, [pc, #84]	; (8006a60 <HAL_TIM_Base_Start_IT+0x70>)
 8006a0a:	4293      	cmp	r3, r2
 8006a0c:	d01a      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a0e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006a12:	d017      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a14:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006a18:	4293      	cmp	r3, r2
 8006a1a:	d013      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a20:	4293      	cmp	r3, r2
 8006a22:	d00f      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a28:	4293      	cmp	r3, r2
 8006a2a:	d00b      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a2c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006a30:	4293      	cmp	r3, r2
 8006a32:	d007      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a34:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006a38:	4293      	cmp	r3, r2
 8006a3a:	d003      	beq.n	8006a44 <HAL_TIM_Base_Start_IT+0x54>
 8006a3c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006a40:	4293      	cmp	r3, r2
 8006a42:	d104      	bne.n	8006a4e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006a44:	689a      	ldr	r2, [r3, #8]
 8006a46:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006a4a:	2a06      	cmp	r2, #6
 8006a4c:	d003      	beq.n	8006a56 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006a4e:	681a      	ldr	r2, [r3, #0]
 8006a50:	f042 0201 	orr.w	r2, r2, #1
 8006a54:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006a56:	2000      	movs	r0, #0
}
 8006a58:	4770      	bx	lr
    return HAL_ERROR;
 8006a5a:	2001      	movs	r0, #1
 8006a5c:	4770      	bx	lr
 8006a5e:	bf00      	nop
 8006a60:	40010000 	.word	0x40010000

08006a64 <HAL_TIM_OC_DelayElapsedCallback>:
 8006a64:	4770      	bx	lr

08006a66 <HAL_TIM_IC_CaptureCallback>:
 8006a66:	4770      	bx	lr

08006a68 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006a68:	4770      	bx	lr

08006a6a <HAL_TIM_TriggerCallback>:
 8006a6a:	4770      	bx	lr

08006a6c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006a6c:	6803      	ldr	r3, [r0, #0]
 8006a6e:	691a      	ldr	r2, [r3, #16]
 8006a70:	0791      	lsls	r1, r2, #30
{
 8006a72:	b510      	push	{r4, lr}
 8006a74:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006a76:	d50e      	bpl.n	8006a96 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006a78:	68da      	ldr	r2, [r3, #12]
 8006a7a:	0792      	lsls	r2, r2, #30
 8006a7c:	d50b      	bpl.n	8006a96 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006a7e:	f06f 0202 	mvn.w	r2, #2
 8006a82:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006a84:	2201      	movs	r2, #1
 8006a86:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006a88:	699b      	ldr	r3, [r3, #24]
 8006a8a:	079b      	lsls	r3, r3, #30
 8006a8c:	d077      	beq.n	8006b7e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006a8e:	f7ff ffea 	bl	8006a66 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006a92:	2300      	movs	r3, #0
 8006a94:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006a96:	6823      	ldr	r3, [r4, #0]
 8006a98:	691a      	ldr	r2, [r3, #16]
 8006a9a:	0750      	lsls	r0, r2, #29
 8006a9c:	d510      	bpl.n	8006ac0 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006a9e:	68da      	ldr	r2, [r3, #12]
 8006aa0:	0751      	lsls	r1, r2, #29
 8006aa2:	d50d      	bpl.n	8006ac0 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006aa4:	f06f 0204 	mvn.w	r2, #4
 8006aa8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006aaa:	2202      	movs	r2, #2
 8006aac:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006aae:	699b      	ldr	r3, [r3, #24]
 8006ab0:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006ab4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006ab6:	d068      	beq.n	8006b8a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006ab8:	f7ff ffd5 	bl	8006a66 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006abc:	2300      	movs	r3, #0
 8006abe:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006ac0:	6823      	ldr	r3, [r4, #0]
 8006ac2:	691a      	ldr	r2, [r3, #16]
 8006ac4:	0712      	lsls	r2, r2, #28
 8006ac6:	d50f      	bpl.n	8006ae8 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006ac8:	68da      	ldr	r2, [r3, #12]
 8006aca:	0710      	lsls	r0, r2, #28
 8006acc:	d50c      	bpl.n	8006ae8 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006ace:	f06f 0208 	mvn.w	r2, #8
 8006ad2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006ad4:	2204      	movs	r2, #4
 8006ad6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006ad8:	69db      	ldr	r3, [r3, #28]
 8006ada:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006adc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006ade:	d05a      	beq.n	8006b96 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006ae0:	f7ff ffc1 	bl	8006a66 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006ae8:	6823      	ldr	r3, [r4, #0]
 8006aea:	691a      	ldr	r2, [r3, #16]
 8006aec:	06d2      	lsls	r2, r2, #27
 8006aee:	d510      	bpl.n	8006b12 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006af0:	68da      	ldr	r2, [r3, #12]
 8006af2:	06d0      	lsls	r0, r2, #27
 8006af4:	d50d      	bpl.n	8006b12 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006af6:	f06f 0210 	mvn.w	r2, #16
 8006afa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006afc:	2208      	movs	r2, #8
 8006afe:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006b00:	69db      	ldr	r3, [r3, #28]
 8006b02:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006b06:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006b08:	d04b      	beq.n	8006ba2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006b0a:	f7ff ffac 	bl	8006a66 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006b0e:	2300      	movs	r3, #0
 8006b10:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006b12:	6823      	ldr	r3, [r4, #0]
 8006b14:	691a      	ldr	r2, [r3, #16]
 8006b16:	07d1      	lsls	r1, r2, #31
 8006b18:	d508      	bpl.n	8006b2c <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006b1a:	68da      	ldr	r2, [r3, #12]
 8006b1c:	07d2      	lsls	r2, r2, #31
 8006b1e:	d505      	bpl.n	8006b2c <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006b20:	f06f 0201 	mvn.w	r2, #1
 8006b24:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006b26:	4620      	mov	r0, r4
 8006b28:	f7fa ff64 	bl	80019f4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006b2c:	6823      	ldr	r3, [r4, #0]
 8006b2e:	691a      	ldr	r2, [r3, #16]
 8006b30:	0610      	lsls	r0, r2, #24
 8006b32:	d508      	bpl.n	8006b46 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006b34:	68da      	ldr	r2, [r3, #12]
 8006b36:	0611      	lsls	r1, r2, #24
 8006b38:	d505      	bpl.n	8006b46 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006b3a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006b3e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006b40:	4620      	mov	r0, r4
 8006b42:	f000 f8c8 	bl	8006cd6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006b46:	6823      	ldr	r3, [r4, #0]
 8006b48:	691a      	ldr	r2, [r3, #16]
 8006b4a:	0652      	lsls	r2, r2, #25
 8006b4c:	d508      	bpl.n	8006b60 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006b4e:	68da      	ldr	r2, [r3, #12]
 8006b50:	0650      	lsls	r0, r2, #25
 8006b52:	d505      	bpl.n	8006b60 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006b54:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006b58:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006b5a:	4620      	mov	r0, r4
 8006b5c:	f7ff ff85 	bl	8006a6a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006b60:	6823      	ldr	r3, [r4, #0]
 8006b62:	691a      	ldr	r2, [r3, #16]
 8006b64:	0691      	lsls	r1, r2, #26
 8006b66:	d522      	bpl.n	8006bae <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006b68:	68da      	ldr	r2, [r3, #12]
 8006b6a:	0692      	lsls	r2, r2, #26
 8006b6c:	d51f      	bpl.n	8006bae <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006b6e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006b72:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006b74:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006b76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006b7a:	f000 b8ab 	b.w	8006cd4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b7e:	f7ff ff71 	bl	8006a64 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b82:	4620      	mov	r0, r4
 8006b84:	f7ff ff70 	bl	8006a68 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b88:	e783      	b.n	8006a92 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b8a:	f7ff ff6b 	bl	8006a64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b8e:	4620      	mov	r0, r4
 8006b90:	f7ff ff6a 	bl	8006a68 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b94:	e792      	b.n	8006abc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b96:	f7ff ff65 	bl	8006a64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b9a:	4620      	mov	r0, r4
 8006b9c:	f7ff ff64 	bl	8006a68 <HAL_TIM_PWM_PulseFinishedCallback>
 8006ba0:	e7a0      	b.n	8006ae4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006ba2:	f7ff ff5f 	bl	8006a64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006ba6:	4620      	mov	r0, r4
 8006ba8:	f7ff ff5e 	bl	8006a68 <HAL_TIM_PWM_PulseFinishedCallback>
 8006bac:	e7af      	b.n	8006b0e <HAL_TIM_IRQHandler+0xa2>
}
 8006bae:	bd10      	pop	{r4, pc}

08006bb0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006bb0:	4a30      	ldr	r2, [pc, #192]	; (8006c74 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006bb2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006bb4:	4290      	cmp	r0, r2
 8006bb6:	d012      	beq.n	8006bde <TIM_Base_SetConfig+0x2e>
 8006bb8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006bbc:	d00f      	beq.n	8006bde <TIM_Base_SetConfig+0x2e>
 8006bbe:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006bc2:	4290      	cmp	r0, r2
 8006bc4:	d00b      	beq.n	8006bde <TIM_Base_SetConfig+0x2e>
 8006bc6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bca:	4290      	cmp	r0, r2
 8006bcc:	d007      	beq.n	8006bde <TIM_Base_SetConfig+0x2e>
 8006bce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bd2:	4290      	cmp	r0, r2
 8006bd4:	d003      	beq.n	8006bde <TIM_Base_SetConfig+0x2e>
 8006bd6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006bda:	4290      	cmp	r0, r2
 8006bdc:	d119      	bne.n	8006c12 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006bde:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006be0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006be4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006be6:	4a23      	ldr	r2, [pc, #140]	; (8006c74 <TIM_Base_SetConfig+0xc4>)
 8006be8:	4290      	cmp	r0, r2
 8006bea:	d029      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006bec:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006bf0:	d026      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006bf2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006bf6:	4290      	cmp	r0, r2
 8006bf8:	d022      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006bfa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bfe:	4290      	cmp	r0, r2
 8006c00:	d01e      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c06:	4290      	cmp	r0, r2
 8006c08:	d01a      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c0a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006c0e:	4290      	cmp	r0, r2
 8006c10:	d016      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c12:	4a19      	ldr	r2, [pc, #100]	; (8006c78 <TIM_Base_SetConfig+0xc8>)
 8006c14:	4290      	cmp	r0, r2
 8006c16:	d013      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c18:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c1c:	4290      	cmp	r0, r2
 8006c1e:	d00f      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c20:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c24:	4290      	cmp	r0, r2
 8006c26:	d00b      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c28:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006c2c:	4290      	cmp	r0, r2
 8006c2e:	d007      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c30:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c34:	4290      	cmp	r0, r2
 8006c36:	d003      	beq.n	8006c40 <TIM_Base_SetConfig+0x90>
 8006c38:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c3c:	4290      	cmp	r0, r2
 8006c3e:	d103      	bne.n	8006c48 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006c40:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006c42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006c46:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006c48:	694a      	ldr	r2, [r1, #20]
 8006c4a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006c4e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006c50:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006c52:	688b      	ldr	r3, [r1, #8]
 8006c54:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006c56:	680b      	ldr	r3, [r1, #0]
 8006c58:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006c5a:	4b06      	ldr	r3, [pc, #24]	; (8006c74 <TIM_Base_SetConfig+0xc4>)
 8006c5c:	4298      	cmp	r0, r3
 8006c5e:	d003      	beq.n	8006c68 <TIM_Base_SetConfig+0xb8>
 8006c60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006c64:	4298      	cmp	r0, r3
 8006c66:	d101      	bne.n	8006c6c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006c68:	690b      	ldr	r3, [r1, #16]
 8006c6a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006c6c:	2301      	movs	r3, #1
 8006c6e:	6143      	str	r3, [r0, #20]
}
 8006c70:	4770      	bx	lr
 8006c72:	bf00      	nop
 8006c74:	40010000 	.word	0x40010000
 8006c78:	40014000 	.word	0x40014000

08006c7c <HAL_TIM_Base_Init>:
{
 8006c7c:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006c7e:	4604      	mov	r4, r0
 8006c80:	b330      	cbz	r0, 8006cd0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006c82:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006c86:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006c8a:	b91b      	cbnz	r3, 8006c94 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006c8c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006c90:	f7ff fead 	bl	80069ee <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006c94:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006c96:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006c98:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006c9c:	1d21      	adds	r1, r4, #4
 8006c9e:	f7ff ff87 	bl	8006bb0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006ca2:	2301      	movs	r3, #1
 8006ca4:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006ca8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006caa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006cae:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006cb2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006cb6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006cba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006cbe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006cc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006cc6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006cca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006cce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006cd0:	2001      	movs	r0, #1
 8006cd2:	e7fc      	b.n	8006cce <HAL_TIM_Base_Init+0x52>

08006cd4 <HAL_TIMEx_CommutCallback>:
 8006cd4:	4770      	bx	lr

08006cd6 <HAL_TIMEx_BreakCallback>:
 8006cd6:	4770      	bx	lr

08006cd8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006cdc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006cde:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006ce2:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006ce6:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006cea:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006cee:	6809      	ldr	r1, [r1, #0]
 8006cf0:	2901      	cmp	r1, #1
 8006cf2:	ea43 0304 	orr.w	r3, r3, r4
 8006cf6:	4912      	ldr	r1, [pc, #72]	; (8006d40 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8006cf8:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006cfa:	d00f      	beq.n	8006d1c <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006cfc:	431a      	orrs	r2, r3
 8006cfe:	432a      	orrs	r2, r5
 8006d00:	ea42 0308 	orr.w	r3, r2, r8
 8006d04:	ea43 030e 	orr.w	r3, r3, lr
 8006d08:	ea43 030c 	orr.w	r3, r3, ip
 8006d0c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006d0e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006d10:	4333      	orrs	r3, r6
 8006d12:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006d14:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006d16:	2000      	movs	r0, #0
 8006d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006d1c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006d1e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006d20:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006d22:	ea45 0208 	orr.w	r2, r5, r8
 8006d26:	ea42 020e 	orr.w	r2, r2, lr
 8006d2a:	ea42 020c 	orr.w	r2, r2, ip
 8006d2e:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006d30:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006d34:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006d36:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006d38:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006d3a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006d3c:	6042      	str	r2, [r0, #4]
 8006d3e:	e7ea      	b.n	8006d16 <FMC_SDRAM_Init+0x3e>
 8006d40:	ffff8000 	.word	0xffff8000

08006d44 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8006d44:	68cb      	ldr	r3, [r1, #12]
{
 8006d46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d48:	680c      	ldr	r4, [r1, #0]
 8006d4a:	688e      	ldr	r6, [r1, #8]
 8006d4c:	690d      	ldr	r5, [r1, #16]
 8006d4e:	1e5f      	subs	r7, r3, #1
 8006d50:	694b      	ldr	r3, [r1, #20]
 8006d52:	f104 3cff 	add.w	ip, r4, #4294967295
 8006d56:	684c      	ldr	r4, [r1, #4]
 8006d58:	6989      	ldr	r1, [r1, #24]
 8006d5a:	3b01      	subs	r3, #1
 8006d5c:	051b      	lsls	r3, r3, #20
 8006d5e:	3c01      	subs	r4, #1
 8006d60:	3e01      	subs	r6, #1
 8006d62:	3d01      	subs	r5, #1
 8006d64:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8006d66:	2a01      	cmp	r2, #1
 8006d68:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006d6c:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006d70:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006d74:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006d78:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006d7c:	d00c      	beq.n	8006d98 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006d7e:	ea43 030c 	orr.w	r3, r3, ip
 8006d82:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006d84:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006d86:	4333      	orrs	r3, r6
 8006d88:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006d8a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006d8e:	430b      	orrs	r3, r1
 8006d90:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006d92:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006d94:	2000      	movs	r0, #0
 8006d96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006d98:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006d9a:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006d9e:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006da2:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006da4:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006da6:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006daa:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006dac:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006dae:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006db0:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006db4:	430a      	orrs	r2, r1
 8006db6:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006db8:	60c2      	str	r2, [r0, #12]
 8006dba:	e7eb      	b.n	8006d94 <FMC_SDRAM_Timing_Init+0x50>

08006dbc <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006dbc:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006dc0:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006dc4:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8006dc8:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006dcc:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006dce:	2300      	movs	r3, #0
 8006dd0:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006dd2:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006dd4:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006dd6:	4618      	mov	r0, r3
 8006dd8:	4770      	bx	lr

08006dda <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006dda:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006ddc:	2300      	movs	r3, #0
 8006dde:	9301      	str	r3, [sp, #4]
{
 8006de0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006de2:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006de6:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006de8:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006dea:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006dee:	688a      	ldr	r2, [r1, #8]
 8006df0:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006df2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006df6:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006df8:	9b01      	ldr	r3, [sp, #4]
 8006dfa:	6103      	str	r3, [r0, #16]
{
 8006dfc:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006dfe:	f7fd f849 	bl	8003e94 <HAL_GetTick>
 8006e02:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006e04:	69a3      	ldr	r3, [r4, #24]
 8006e06:	f013 0320 	ands.w	r3, r3, #32
 8006e0a:	d101      	bne.n	8006e10 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006e0c:	4618      	mov	r0, r3
 8006e0e:	e003      	b.n	8006e18 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8006e10:	1c6b      	adds	r3, r5, #1
 8006e12:	d0f7      	beq.n	8006e04 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006e14:	b915      	cbnz	r5, 8006e1c <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8006e16:	2003      	movs	r0, #3
}
 8006e18:	b002      	add	sp, #8
 8006e1a:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006e1c:	f7fd f83a 	bl	8003e94 <HAL_GetTick>
 8006e20:	1b80      	subs	r0, r0, r6
 8006e22:	42a8      	cmp	r0, r5
 8006e24:	d9ee      	bls.n	8006e04 <FMC_SDRAM_SendCommand+0x2a>
 8006e26:	e7f6      	b.n	8006e16 <FMC_SDRAM_SendCommand+0x3c>

08006e28 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8006e28:	6943      	ldr	r3, [r0, #20]
 8006e2a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006e2e:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006e30:	2000      	movs	r0, #0
 8006e32:	4770      	bx	lr

08006e34 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006e34:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006e36:	4b05      	ldr	r3, [pc, #20]	; (8006e4c <SysTick_Handler+0x18>)
 8006e38:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006e3a:	f001 fe4b 	bl	8008ad4 <xTaskGetSchedulerState>
 8006e3e:	2801      	cmp	r0, #1
 8006e40:	d003      	beq.n	8006e4a <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006e42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006e46:	f000 bbdd 	b.w	8007604 <xPortSysTickHandler>
}
 8006e4a:	bd08      	pop	{r3, pc}
 8006e4c:	e000e010 	.word	0xe000e010

08006e50 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006e50:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e54:	b92b      	cbnz	r3, 8006e62 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006e56:	4b06      	ldr	r3, [pc, #24]	; (8006e70 <osKernelInitialize+0x20>)
 8006e58:	6818      	ldr	r0, [r3, #0]
 8006e5a:	b928      	cbnz	r0, 8006e68 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006e5c:	2201      	movs	r2, #1
 8006e5e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006e60:	4770      	bx	lr
    stat = osErrorISR;
 8006e62:	f06f 0005 	mvn.w	r0, #5
 8006e66:	4770      	bx	lr
    } else {
      stat = osError;
 8006e68:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006e6c:	4770      	bx	lr
 8006e6e:	bf00      	nop
 8006e70:	200017f8 	.word	0x200017f8

08006e74 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006e74:	b510      	push	{r4, lr}
 8006e76:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e7a:	b95c      	cbnz	r4, 8006e94 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006e7c:	4b08      	ldr	r3, [pc, #32]	; (8006ea0 <osKernelStart+0x2c>)
 8006e7e:	681a      	ldr	r2, [r3, #0]
 8006e80:	2a01      	cmp	r2, #1
 8006e82:	d10a      	bne.n	8006e9a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006e84:	4a07      	ldr	r2, [pc, #28]	; (8006ea4 <osKernelStart+0x30>)
 8006e86:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006e88:	2202      	movs	r2, #2
 8006e8a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006e8c:	f001 fcc8 	bl	8008820 <vTaskStartScheduler>
      stat = osOK;
 8006e90:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006e92:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006e94:	f06f 0005 	mvn.w	r0, #5
 8006e98:	e7fb      	b.n	8006e92 <osKernelStart+0x1e>
      stat = osError;
 8006e9a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006e9e:	e7f8      	b.n	8006e92 <osKernelStart+0x1e>
 8006ea0:	200017f8 	.word	0x200017f8
 8006ea4:	e000ed00 	.word	0xe000ed00

08006ea8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006eaa:	b087      	sub	sp, #28
 8006eac:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006eae:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006eb0:	460b      	mov	r3, r1
  hTask = NULL;
 8006eb2:	9205      	str	r2, [sp, #20]
 8006eb4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006eb8:	b9d2      	cbnz	r2, 8006ef0 <osThreadNew+0x48>
 8006eba:	b1c8      	cbz	r0, 8006ef0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006ebc:	2c00      	cmp	r4, #0
 8006ebe:	d02f      	beq.n	8006f20 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006ec0:	69a5      	ldr	r5, [r4, #24]
 8006ec2:	2d00      	cmp	r5, #0
 8006ec4:	bf08      	it	eq
 8006ec6:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006ec8:	1e69      	subs	r1, r5, #1
 8006eca:	2937      	cmp	r1, #55	; 0x37
 8006ecc:	46ac      	mov	ip, r5
 8006ece:	d82b      	bhi.n	8006f28 <osThreadNew+0x80>
 8006ed0:	6861      	ldr	r1, [r4, #4]
 8006ed2:	07c9      	lsls	r1, r1, #31
 8006ed4:	d428      	bmi.n	8006f28 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006ed6:	6966      	ldr	r6, [r4, #20]
 8006ed8:	b16e      	cbz	r6, 8006ef6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006eda:	08b2      	lsrs	r2, r6, #2
 8006edc:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006ee0:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006ee2:	b157      	cbz	r7, 8006efa <osThreadNew+0x52>
 8006ee4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006ee8:	d902      	bls.n	8006ef0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006eea:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006eec:	b104      	cbz	r4, 8006ef0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006eee:	b9ee      	cbnz	r6, 8006f2c <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006ef0:	9805      	ldr	r0, [sp, #20]
}
 8006ef2:	b007      	add	sp, #28
 8006ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006ef6:	2280      	movs	r2, #128	; 0x80
 8006ef8:	e7f0      	b.n	8006edc <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006efa:	f1be 0f00 	cmp.w	lr, #0
 8006efe:	d1f7      	bne.n	8006ef0 <osThreadNew+0x48>
      if (mem == 0) {
 8006f00:	6924      	ldr	r4, [r4, #16]
 8006f02:	2c00      	cmp	r4, #0
 8006f04:	d1f4      	bne.n	8006ef0 <osThreadNew+0x48>
 8006f06:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006f08:	a905      	add	r1, sp, #20
 8006f0a:	e9cd c100 	strd	ip, r1, [sp]
 8006f0e:	b292      	uxth	r2, r2
 8006f10:	4621      	mov	r1, r4
 8006f12:	f001 faff 	bl	8008514 <xTaskCreate>
 8006f16:	2801      	cmp	r0, #1
            hTask = NULL;
 8006f18:	bf1c      	itt	ne
 8006f1a:	2300      	movne	r3, #0
 8006f1c:	9305      	strne	r3, [sp, #20]
 8006f1e:	e7e7      	b.n	8006ef0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006f20:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006f24:	2280      	movs	r2, #128	; 0x80
 8006f26:	e7ef      	b.n	8006f08 <osThreadNew+0x60>
        return (NULL);
 8006f28:	4610      	mov	r0, r2
 8006f2a:	e7e2      	b.n	8006ef2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006f2c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006f30:	9500      	str	r5, [sp, #0]
 8006f32:	f001 fab7 	bl	80084a4 <xTaskCreateStatic>
 8006f36:	9005      	str	r0, [sp, #20]
 8006f38:	e7da      	b.n	8006ef0 <osThreadNew+0x48>

08006f3a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006f3a:	b510      	push	{r4, lr}
 8006f3c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006f40:	b924      	cbnz	r4, 8006f4c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006f42:	b110      	cbz	r0, 8006f4a <osDelay+0x10>
      vTaskDelay(ticks);
 8006f44:	f001 fc2c 	bl	80087a0 <vTaskDelay>
    stat = osOK;
 8006f48:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006f4a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006f4c:	f06f 0005 	mvn.w	r0, #5
 8006f50:	e7fb      	b.n	8006f4a <osDelay+0x10>

08006f52 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006f52:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f54:	4604      	mov	r4, r0
 8006f56:	460e      	mov	r6, r1
 8006f58:	4615      	mov	r5, r2
 8006f5a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006f5e:	b11a      	cbz	r2, 8006f68 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006f60:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006f62:	4620      	mov	r0, r4
 8006f64:	b003      	add	sp, #12
 8006f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006f68:	2800      	cmp	r0, #0
 8006f6a:	d0f9      	beq.n	8006f60 <osSemaphoreNew+0xe>
 8006f6c:	4288      	cmp	r0, r1
 8006f6e:	d3f7      	bcc.n	8006f60 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006f70:	b1e5      	cbz	r5, 8006fac <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006f72:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006f76:	b1bb      	cbz	r3, 8006fa8 <osSemaphoreNew+0x56>
 8006f78:	2f4f      	cmp	r7, #79	; 0x4f
 8006f7a:	d9f1      	bls.n	8006f60 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006f7c:	2801      	cmp	r0, #1
 8006f7e:	d12a      	bne.n	8006fd6 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006f80:	2103      	movs	r1, #3
 8006f82:	9100      	str	r1, [sp, #0]
 8006f84:	4611      	mov	r1, r2
 8006f86:	f000 fced 	bl	8007964 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006f8a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006f8c:	2800      	cmp	r0, #0
 8006f8e:	d0e7      	beq.n	8006f60 <osSemaphoreNew+0xe>
 8006f90:	b1de      	cbz	r6, 8006fca <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006f92:	2300      	movs	r3, #0
 8006f94:	461a      	mov	r2, r3
 8006f96:	4619      	mov	r1, r3
 8006f98:	f000 fd9a 	bl	8007ad0 <xQueueGenericSend>
 8006f9c:	2801      	cmp	r0, #1
 8006f9e:	d014      	beq.n	8006fca <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006fa0:	4620      	mov	r0, r4
 8006fa2:	f001 f8db 	bl	800815c <vQueueDelete>
 8006fa6:	e7db      	b.n	8006f60 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006fa8:	2f00      	cmp	r7, #0
 8006faa:	d1d9      	bne.n	8006f60 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006fac:	2c01      	cmp	r4, #1
 8006fae:	d105      	bne.n	8006fbc <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006fb0:	2203      	movs	r2, #3
 8006fb2:	2100      	movs	r1, #0
 8006fb4:	4620      	mov	r0, r4
 8006fb6:	f000 fd23 	bl	8007a00 <xQueueGenericCreate>
 8006fba:	e7e6      	b.n	8006f8a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006fbc:	4620      	mov	r0, r4
 8006fbe:	4631      	mov	r1, r6
 8006fc0:	f000 fd67 	bl	8007a92 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006fc4:	4604      	mov	r4, r0
 8006fc6:	2800      	cmp	r0, #0
 8006fc8:	d0ca      	beq.n	8006f60 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006fca:	b955      	cbnz	r5, 8006fe2 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006fcc:	4629      	mov	r1, r5
 8006fce:	4620      	mov	r0, r4
 8006fd0:	f001 f89a 	bl	8008108 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006fd4:	e7c5      	b.n	8006f62 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006fd6:	461a      	mov	r2, r3
 8006fd8:	f000 fd39 	bl	8007a4e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006fdc:	4604      	mov	r4, r0
 8006fde:	2800      	cmp	r0, #0
 8006fe0:	d0be      	beq.n	8006f60 <osSemaphoreNew+0xe>
          name = attr->name;
 8006fe2:	682d      	ldr	r5, [r5, #0]
 8006fe4:	e7f2      	b.n	8006fcc <osSemaphoreNew+0x7a>
	...

08006fe8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006fe8:	b513      	push	{r0, r1, r4, lr}
 8006fea:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006fec:	b1f8      	cbz	r0, 800702e <osSemaphoreAcquire+0x46>
 8006fee:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006ff2:	b1a3      	cbz	r3, 800701e <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 8006ff4:	b9d9      	cbnz	r1, 800702e <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006ff6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006ff8:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006ffa:	f001 f835 	bl	8008068 <xQueueReceiveFromISR>
 8006ffe:	2801      	cmp	r0, #1
 8007000:	d112      	bne.n	8007028 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007002:	9b01      	ldr	r3, [sp, #4]
 8007004:	b913      	cbnz	r3, 800700c <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007006:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007008:	b002      	add	sp, #8
 800700a:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800700c:	4b0b      	ldr	r3, [pc, #44]	; (800703c <osSemaphoreAcquire+0x54>)
 800700e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007012:	601a      	str	r2, [r3, #0]
 8007014:	f3bf 8f4f 	dsb	sy
 8007018:	f3bf 8f6f 	isb	sy
 800701c:	e7f3      	b.n	8007006 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800701e:	f000 ff5f 	bl	8007ee0 <xQueueSemaphoreTake>
 8007022:	2801      	cmp	r0, #1
 8007024:	d0ef      	beq.n	8007006 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8007026:	b92c      	cbnz	r4, 8007034 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8007028:	f06f 0002 	mvn.w	r0, #2
 800702c:	e7ec      	b.n	8007008 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800702e:	f06f 0003 	mvn.w	r0, #3
 8007032:	e7e9      	b.n	8007008 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8007034:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007038:	e7e6      	b.n	8007008 <osSemaphoreAcquire+0x20>
 800703a:	bf00      	nop
 800703c:	e000ed04 	.word	0xe000ed04

08007040 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007040:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007042:	b300      	cbz	r0, 8007086 <osSemaphoreRelease+0x46>
 8007044:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007048:	b1a3      	cbz	r3, 8007074 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800704a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800704c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800704e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007050:	f000 fe52 	bl	8007cf8 <xQueueGiveFromISR>
 8007054:	2801      	cmp	r0, #1
 8007056:	d113      	bne.n	8007080 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8007058:	9b01      	ldr	r3, [sp, #4]
 800705a:	b913      	cbnz	r3, 8007062 <osSemaphoreRelease+0x22>
  stat = osOK;
 800705c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800705e:	b002      	add	sp, #8
 8007060:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007062:	4b0a      	ldr	r3, [pc, #40]	; (800708c <osSemaphoreRelease+0x4c>)
 8007064:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007068:	601a      	str	r2, [r3, #0]
 800706a:	f3bf 8f4f 	dsb	sy
 800706e:	f3bf 8f6f 	isb	sy
 8007072:	e7f3      	b.n	800705c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007074:	461a      	mov	r2, r3
 8007076:	4619      	mov	r1, r3
 8007078:	f000 fd2a 	bl	8007ad0 <xQueueGenericSend>
 800707c:	2801      	cmp	r0, #1
 800707e:	d0ed      	beq.n	800705c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007080:	f06f 0002 	mvn.w	r0, #2
 8007084:	e7eb      	b.n	800705e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007086:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800708a:	e7e8      	b.n	800705e <osSemaphoreRelease+0x1e>
 800708c:	e000ed04 	.word	0xe000ed04

08007090 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007090:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007092:	4606      	mov	r6, r0
 8007094:	460d      	mov	r5, r1
 8007096:	4614      	mov	r4, r2
 8007098:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800709c:	b11f      	cbz	r7, 80070a6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800709e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80070a0:	4628      	mov	r0, r5
 80070a2:	b003      	add	sp, #12
 80070a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80070a6:	2800      	cmp	r0, #0
 80070a8:	d0f9      	beq.n	800709e <osMessageQueueNew+0xe>
 80070aa:	2900      	cmp	r1, #0
 80070ac:	d0f7      	beq.n	800709e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80070ae:	b1da      	cbz	r2, 80070e8 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80070b0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80070b4:	b183      	cbz	r3, 80070d8 <osMessageQueueNew+0x48>
 80070b6:	2a4f      	cmp	r2, #79	; 0x4f
 80070b8:	d9f1      	bls.n	800709e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80070ba:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80070bc:	2a00      	cmp	r2, #0
 80070be:	d0ee      	beq.n	800709e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80070c0:	6966      	ldr	r6, [r4, #20]
 80070c2:	4345      	muls	r5, r0
 80070c4:	42ae      	cmp	r6, r5
 80070c6:	d3ea      	bcc.n	800709e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80070c8:	9700      	str	r7, [sp, #0]
 80070ca:	f000 fc4b 	bl	8007964 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80070ce:	4605      	mov	r5, r0
 80070d0:	2800      	cmp	r0, #0
 80070d2:	d0e4      	beq.n	800709e <osMessageQueueNew+0xe>
        name = attr->name;
 80070d4:	6824      	ldr	r4, [r4, #0]
 80070d6:	e011      	b.n	80070fc <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80070d8:	2a00      	cmp	r2, #0
 80070da:	d1e0      	bne.n	800709e <osMessageQueueNew+0xe>
 80070dc:	6923      	ldr	r3, [r4, #16]
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d1dd      	bne.n	800709e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80070e2:	6963      	ldr	r3, [r4, #20]
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d1da      	bne.n	800709e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80070e8:	4629      	mov	r1, r5
 80070ea:	2200      	movs	r2, #0
 80070ec:	4630      	mov	r0, r6
 80070ee:	f000 fc87 	bl	8007a00 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80070f2:	4605      	mov	r5, r0
 80070f4:	2800      	cmp	r0, #0
 80070f6:	d0d2      	beq.n	800709e <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80070f8:	2c00      	cmp	r4, #0
 80070fa:	d1eb      	bne.n	80070d4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80070fc:	4621      	mov	r1, r4
 80070fe:	4628      	mov	r0, r5
 8007100:	f001 f802 	bl	8008108 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007104:	e7cc      	b.n	80070a0 <osMessageQueueNew+0x10>
	...

08007108 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007108:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800710a:	461c      	mov	r4, r3
 800710c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007110:	b1b6      	cbz	r6, 8007140 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007112:	b308      	cbz	r0, 8007158 <osMessageQueuePut+0x50>
 8007114:	b301      	cbz	r1, 8007158 <osMessageQueuePut+0x50>
 8007116:	b9fb      	cbnz	r3, 8007158 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007118:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800711a:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800711c:	f000 fd8a 	bl	8007c34 <xQueueGenericSendFromISR>
 8007120:	2801      	cmp	r0, #1
 8007122:	d116      	bne.n	8007152 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007124:	9b01      	ldr	r3, [sp, #4]
 8007126:	b913      	cbnz	r3, 800712e <osMessageQueuePut+0x26>
  stat = osOK;
 8007128:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800712a:	b002      	add	sp, #8
 800712c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800712e:	4b0d      	ldr	r3, [pc, #52]	; (8007164 <osMessageQueuePut+0x5c>)
 8007130:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007134:	601a      	str	r2, [r3, #0]
 8007136:	f3bf 8f4f 	dsb	sy
 800713a:	f3bf 8f6f 	isb	sy
 800713e:	e7f3      	b.n	8007128 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007140:	b150      	cbz	r0, 8007158 <osMessageQueuePut+0x50>
 8007142:	b149      	cbz	r1, 8007158 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007144:	4633      	mov	r3, r6
 8007146:	4622      	mov	r2, r4
 8007148:	f000 fcc2 	bl	8007ad0 <xQueueGenericSend>
 800714c:	2801      	cmp	r0, #1
 800714e:	d0eb      	beq.n	8007128 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8007150:	b92c      	cbnz	r4, 800715e <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8007152:	f06f 0002 	mvn.w	r0, #2
 8007156:	e7e8      	b.n	800712a <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8007158:	f06f 0003 	mvn.w	r0, #3
 800715c:	e7e5      	b.n	800712a <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800715e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007162:	e7e2      	b.n	800712a <osMessageQueuePut+0x22>
 8007164:	e000ed04 	.word	0xe000ed04

08007168 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007168:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800716a:	461c      	mov	r4, r3
 800716c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007170:	b1b3      	cbz	r3, 80071a0 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007172:	b300      	cbz	r0, 80071b6 <osMessageQueueGet+0x4e>
 8007174:	b1f9      	cbz	r1, 80071b6 <osMessageQueueGet+0x4e>
 8007176:	b9f4      	cbnz	r4, 80071b6 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007178:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800717a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800717c:	f000 ff74 	bl	8008068 <xQueueReceiveFromISR>
 8007180:	2801      	cmp	r0, #1
 8007182:	d115      	bne.n	80071b0 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007184:	9b01      	ldr	r3, [sp, #4]
 8007186:	b913      	cbnz	r3, 800718e <osMessageQueueGet+0x26>
  stat = osOK;
 8007188:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800718a:	b003      	add	sp, #12
 800718c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800718e:	4b0d      	ldr	r3, [pc, #52]	; (80071c4 <osMessageQueueGet+0x5c>)
 8007190:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007194:	601a      	str	r2, [r3, #0]
 8007196:	f3bf 8f4f 	dsb	sy
 800719a:	f3bf 8f6f 	isb	sy
 800719e:	e7f3      	b.n	8007188 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80071a0:	b148      	cbz	r0, 80071b6 <osMessageQueueGet+0x4e>
 80071a2:	b141      	cbz	r1, 80071b6 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80071a4:	4622      	mov	r2, r4
 80071a6:	f000 fdfb 	bl	8007da0 <xQueueReceive>
 80071aa:	2801      	cmp	r0, #1
 80071ac:	d0ec      	beq.n	8007188 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80071ae:	b92c      	cbnz	r4, 80071bc <osMessageQueueGet+0x54>
          stat = osErrorResource;
 80071b0:	f06f 0002 	mvn.w	r0, #2
 80071b4:	e7e9      	b.n	800718a <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80071b6:	f06f 0003 	mvn.w	r0, #3
 80071ba:	e7e6      	b.n	800718a <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80071bc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80071c0:	e7e3      	b.n	800718a <osMessageQueueGet+0x22>
 80071c2:	bf00      	nop
 80071c4:	e000ed04 	.word	0xe000ed04

080071c8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80071c8:	4b03      	ldr	r3, [pc, #12]	; (80071d8 <vApplicationGetIdleTaskMemory+0x10>)
 80071ca:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80071cc:	4b03      	ldr	r3, [pc, #12]	; (80071dc <vApplicationGetIdleTaskMemory+0x14>)
 80071ce:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80071d0:	2380      	movs	r3, #128	; 0x80
 80071d2:	6013      	str	r3, [r2, #0]
}
 80071d4:	4770      	bx	lr
 80071d6:	bf00      	nop
 80071d8:	20001798 	.word	0x20001798
 80071dc:	20001598 	.word	0x20001598

080071e0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80071e0:	4b03      	ldr	r3, [pc, #12]	; (80071f0 <vApplicationGetTimerTaskMemory+0x10>)
 80071e2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80071e4:	4b03      	ldr	r3, [pc, #12]	; (80071f4 <vApplicationGetTimerTaskMemory+0x14>)
 80071e6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80071e8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80071ec:	6013      	str	r3, [r2, #0]
}
 80071ee:	4770      	bx	lr
 80071f0:	20001bfc 	.word	0x20001bfc
 80071f4:	200017fc 	.word	0x200017fc

080071f8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80071f8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80071fa:	4b0f      	ldr	r3, [pc, #60]	; (8007238 <prvInsertBlockIntoFreeList+0x40>)
 80071fc:	461a      	mov	r2, r3
 80071fe:	681b      	ldr	r3, [r3, #0]
 8007200:	4283      	cmp	r3, r0
 8007202:	d3fb      	bcc.n	80071fc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007204:	6854      	ldr	r4, [r2, #4]
 8007206:	1911      	adds	r1, r2, r4
 8007208:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800720a:	bf01      	itttt	eq
 800720c:	6841      	ldreq	r1, [r0, #4]
 800720e:	4610      	moveq	r0, r2
 8007210:	1909      	addeq	r1, r1, r4
 8007212:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007214:	6844      	ldr	r4, [r0, #4]
 8007216:	1901      	adds	r1, r0, r4
 8007218:	428b      	cmp	r3, r1
 800721a:	d107      	bne.n	800722c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800721c:	4907      	ldr	r1, [pc, #28]	; (800723c <prvInsertBlockIntoFreeList+0x44>)
 800721e:	6809      	ldr	r1, [r1, #0]
 8007220:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007222:	bf1f      	itttt	ne
 8007224:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007226:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007228:	1909      	addne	r1, r1, r4
 800722a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800722c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800722e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007230:	bf18      	it	ne
 8007232:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007234:	bd10      	pop	{r4, pc}
 8007236:	bf00      	nop
 8007238:	20009c74 	.word	0x20009c74
 800723c:	20001c5c 	.word	0x20001c5c

08007240 <pvPortMalloc>:
{
 8007240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007244:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007246:	f001 f993 	bl	8008570 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800724a:	4b3e      	ldr	r3, [pc, #248]	; (8007344 <pvPortMalloc+0x104>)
 800724c:	483e      	ldr	r0, [pc, #248]	; (8007348 <pvPortMalloc+0x108>)
 800724e:	681a      	ldr	r2, [r3, #0]
 8007250:	469c      	mov	ip, r3
 8007252:	b9d2      	cbnz	r2, 800728a <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8007254:	4a3d      	ldr	r2, [pc, #244]	; (800734c <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007256:	4b3e      	ldr	r3, [pc, #248]	; (8007350 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007258:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800725a:	bf1c      	itt	ne
 800725c:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800725e:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007262:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007264:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8007266:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8007268:	4b3a      	ldr	r3, [pc, #232]	; (8007354 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800726a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800726e:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007272:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007274:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8007278:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800727c:	4b36      	ldr	r3, [pc, #216]	; (8007358 <pvPortMalloc+0x118>)
 800727e:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007280:	4b36      	ldr	r3, [pc, #216]	; (800735c <pvPortMalloc+0x11c>)
 8007282:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007284:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007288:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800728a:	6807      	ldr	r7, [r0, #0]
 800728c:	4227      	tst	r7, r4
 800728e:	d153      	bne.n	8007338 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8007290:	2c00      	cmp	r4, #0
 8007292:	d044      	beq.n	800731e <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 8007294:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007298:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800729a:	bf1c      	itt	ne
 800729c:	f023 0307 	bicne.w	r3, r3, #7
 80072a0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	d048      	beq.n	8007338 <pvPortMalloc+0xf8>
 80072a6:	4a2d      	ldr	r2, [pc, #180]	; (800735c <pvPortMalloc+0x11c>)
 80072a8:	6816      	ldr	r6, [r2, #0]
 80072aa:	429e      	cmp	r6, r3
 80072ac:	4690      	mov	r8, r2
 80072ae:	d343      	bcc.n	8007338 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 80072b0:	4a27      	ldr	r2, [pc, #156]	; (8007350 <pvPortMalloc+0x110>)
 80072b2:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80072b4:	6869      	ldr	r1, [r5, #4]
 80072b6:	4299      	cmp	r1, r3
 80072b8:	d201      	bcs.n	80072be <pvPortMalloc+0x7e>
 80072ba:	6828      	ldr	r0, [r5, #0]
 80072bc:	b9a8      	cbnz	r0, 80072ea <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 80072be:	f8dc 0000 	ldr.w	r0, [ip]
 80072c2:	42a8      	cmp	r0, r5
 80072c4:	d038      	beq.n	8007338 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80072c6:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80072c8:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80072ca:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80072cc:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80072ce:	2910      	cmp	r1, #16
 80072d0:	d912      	bls.n	80072f8 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80072d2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80072d4:	0742      	lsls	r2, r0, #29
 80072d6:	d00b      	beq.n	80072f0 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80072d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072dc:	f383 8811 	msr	BASEPRI, r3
 80072e0:	f3bf 8f6f 	isb	sy
 80072e4:	f3bf 8f4f 	dsb	sy
 80072e8:	e7fe      	b.n	80072e8 <pvPortMalloc+0xa8>
 80072ea:	462a      	mov	r2, r5
 80072ec:	4605      	mov	r5, r0
 80072ee:	e7e1      	b.n	80072b4 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80072f0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80072f2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80072f4:	f7ff ff80 	bl	80071f8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80072f8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80072fa:	4917      	ldr	r1, [pc, #92]	; (8007358 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 80072fc:	4a18      	ldr	r2, [pc, #96]	; (8007360 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80072fe:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007300:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007302:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8007304:	2300      	movs	r3, #0
 8007306:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007308:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800730a:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800730e:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8007310:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007314:	bf38      	it	cc
 8007316:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007318:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800731a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800731c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800731e:	f001 f9cb 	bl	80086b8 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007322:	0763      	lsls	r3, r4, #29
 8007324:	d00a      	beq.n	800733c <pvPortMalloc+0xfc>
 8007326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800732a:	f383 8811 	msr	BASEPRI, r3
 800732e:	f3bf 8f6f 	isb	sy
 8007332:	f3bf 8f4f 	dsb	sy
 8007336:	e7fe      	b.n	8007336 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 8007338:	2400      	movs	r4, #0
 800733a:	e7f0      	b.n	800731e <pvPortMalloc+0xde>
}
 800733c:	4620      	mov	r0, r4
 800733e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007342:	bf00      	nop
 8007344:	20001c5c 	.word	0x20001c5c
 8007348:	20009c60 	.word	0x20009c60
 800734c:	20001c60 	.word	0x20001c60
 8007350:	20009c74 	.word	0x20009c74
 8007354:	20009c58 	.word	0x20009c58
 8007358:	20009c68 	.word	0x20009c68
 800735c:	20009c64 	.word	0x20009c64
 8007360:	20009c6c 	.word	0x20009c6c

08007364 <vPortFree>:
{
 8007364:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007366:	4604      	mov	r4, r0
 8007368:	b390      	cbz	r0, 80073d0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800736a:	4a1a      	ldr	r2, [pc, #104]	; (80073d4 <vPortFree+0x70>)
 800736c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007370:	6812      	ldr	r2, [r2, #0]
 8007372:	4213      	tst	r3, r2
 8007374:	d108      	bne.n	8007388 <vPortFree+0x24>
 8007376:	f04f 0350 	mov.w	r3, #80	; 0x50
 800737a:	f383 8811 	msr	BASEPRI, r3
 800737e:	f3bf 8f6f 	isb	sy
 8007382:	f3bf 8f4f 	dsb	sy
 8007386:	e7fe      	b.n	8007386 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007388:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800738c:	b141      	cbz	r1, 80073a0 <vPortFree+0x3c>
 800738e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007392:	f383 8811 	msr	BASEPRI, r3
 8007396:	f3bf 8f6f 	isb	sy
 800739a:	f3bf 8f4f 	dsb	sy
 800739e:	e7fe      	b.n	800739e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80073a0:	ea23 0302 	bic.w	r3, r3, r2
 80073a4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80073a8:	f001 f8e2 	bl	8008570 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80073ac:	4a0a      	ldr	r2, [pc, #40]	; (80073d8 <vPortFree+0x74>)
 80073ae:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80073b2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80073b4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80073b8:	440b      	add	r3, r1
 80073ba:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80073bc:	f7ff ff1c 	bl	80071f8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80073c0:	4a06      	ldr	r2, [pc, #24]	; (80073dc <vPortFree+0x78>)
 80073c2:	6813      	ldr	r3, [r2, #0]
}
 80073c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80073c8:	3301      	adds	r3, #1
 80073ca:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80073cc:	f001 b974 	b.w	80086b8 <xTaskResumeAll>
}
 80073d0:	bd10      	pop	{r4, pc}
 80073d2:	bf00      	nop
 80073d4:	20009c60 	.word	0x20009c60
 80073d8:	20009c64 	.word	0x20009c64
 80073dc:	20009c70 	.word	0x20009c70

080073e0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80073e0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80073e4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80073e8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80073ec:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80073ee:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80073f0:	2300      	movs	r3, #0
 80073f2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80073f4:	4770      	bx	lr

080073f6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80073f6:	2300      	movs	r3, #0
 80073f8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80073fa:	4770      	bx	lr

080073fc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80073fc:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80073fe:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007400:	689a      	ldr	r2, [r3, #8]
 8007402:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007404:	689a      	ldr	r2, [r3, #8]
 8007406:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007408:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800740a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800740c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800740e:	3301      	adds	r3, #1
 8007410:	6003      	str	r3, [r0, #0]
}
 8007412:	4770      	bx	lr

08007414 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007414:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007416:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007418:	1c63      	adds	r3, r4, #1
 800741a:	d10a      	bne.n	8007432 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800741c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800741e:	685a      	ldr	r2, [r3, #4]
 8007420:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007422:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007424:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007426:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007428:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800742a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800742c:	3301      	adds	r3, #1
 800742e:	6003      	str	r3, [r0, #0]
}
 8007430:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007432:	f100 0208 	add.w	r2, r0, #8
 8007436:	4613      	mov	r3, r2
 8007438:	6852      	ldr	r2, [r2, #4]
 800743a:	6815      	ldr	r5, [r2, #0]
 800743c:	42a5      	cmp	r5, r4
 800743e:	d9fa      	bls.n	8007436 <vListInsert+0x22>
 8007440:	e7ed      	b.n	800741e <vListInsert+0xa>

08007442 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007442:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007446:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007448:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800744a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800744c:	6859      	ldr	r1, [r3, #4]
 800744e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007450:	bf08      	it	eq
 8007452:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007454:	2200      	movs	r2, #0
 8007456:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007458:	681a      	ldr	r2, [r3, #0]
 800745a:	3a01      	subs	r2, #1
 800745c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800745e:	6818      	ldr	r0, [r3, #0]
}
 8007460:	4770      	bx	lr
	...

08007464 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007464:	4808      	ldr	r0, [pc, #32]	; (8007488 <prvPortStartFirstTask+0x24>)
 8007466:	6800      	ldr	r0, [r0, #0]
 8007468:	6800      	ldr	r0, [r0, #0]
 800746a:	f380 8808 	msr	MSP, r0
 800746e:	f04f 0000 	mov.w	r0, #0
 8007472:	f380 8814 	msr	CONTROL, r0
 8007476:	b662      	cpsie	i
 8007478:	b661      	cpsie	f
 800747a:	f3bf 8f4f 	dsb	sy
 800747e:	f3bf 8f6f 	isb	sy
 8007482:	df00      	svc	0
 8007484:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007486:	0000      	.short	0x0000
 8007488:	e000ed08 	.word	0xe000ed08

0800748c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800748c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800749c <vPortEnableVFP+0x10>
 8007490:	6801      	ldr	r1, [r0, #0]
 8007492:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007496:	6001      	str	r1, [r0, #0]
 8007498:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800749a:	0000      	.short	0x0000
 800749c:	e000ed88 	.word	0xe000ed88

080074a0 <prvTaskExitError>:
{
 80074a0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80074a2:	2300      	movs	r3, #0
 80074a4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80074a6:	4b0d      	ldr	r3, [pc, #52]	; (80074dc <prvTaskExitError+0x3c>)
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	3301      	adds	r3, #1
 80074ac:	d008      	beq.n	80074c0 <prvTaskExitError+0x20>
 80074ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074b2:	f383 8811 	msr	BASEPRI, r3
 80074b6:	f3bf 8f6f 	isb	sy
 80074ba:	f3bf 8f4f 	dsb	sy
 80074be:	e7fe      	b.n	80074be <prvTaskExitError+0x1e>
 80074c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074c4:	f383 8811 	msr	BASEPRI, r3
 80074c8:	f3bf 8f6f 	isb	sy
 80074cc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80074d0:	9b01      	ldr	r3, [sp, #4]
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d0fc      	beq.n	80074d0 <prvTaskExitError+0x30>
}
 80074d6:	b002      	add	sp, #8
 80074d8:	4770      	bx	lr
 80074da:	bf00      	nop
 80074dc:	2000005c 	.word	0x2000005c

080074e0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80074e0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80074e4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80074e8:	4b07      	ldr	r3, [pc, #28]	; (8007508 <pxPortInitialiseStack+0x28>)
 80074ea:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80074ee:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80074f2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80074f6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80074fa:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80074fe:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007502:	3844      	subs	r0, #68	; 0x44
 8007504:	4770      	bx	lr
 8007506:	bf00      	nop
 8007508:	080074a1 	.word	0x080074a1
 800750c:	00000000 	.word	0x00000000

08007510 <SVC_Handler>:
	__asm volatile (
 8007510:	4b07      	ldr	r3, [pc, #28]	; (8007530 <pxCurrentTCBConst2>)
 8007512:	6819      	ldr	r1, [r3, #0]
 8007514:	6808      	ldr	r0, [r1, #0]
 8007516:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800751a:	f380 8809 	msr	PSP, r0
 800751e:	f3bf 8f6f 	isb	sy
 8007522:	f04f 0000 	mov.w	r0, #0
 8007526:	f380 8811 	msr	BASEPRI, r0
 800752a:	4770      	bx	lr
 800752c:	f3af 8000 	nop.w

08007530 <pxCurrentTCBConst2>:
 8007530:	20009c84 	.word	0x20009c84

08007534 <vPortEnterCritical>:
 8007534:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007538:	f383 8811 	msr	BASEPRI, r3
 800753c:	f3bf 8f6f 	isb	sy
 8007540:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007544:	4a0a      	ldr	r2, [pc, #40]	; (8007570 <vPortEnterCritical+0x3c>)
 8007546:	6813      	ldr	r3, [r2, #0]
 8007548:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800754a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800754c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800754e:	d10d      	bne.n	800756c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007550:	4b08      	ldr	r3, [pc, #32]	; (8007574 <vPortEnterCritical+0x40>)
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007558:	d008      	beq.n	800756c <vPortEnterCritical+0x38>
 800755a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800755e:	f383 8811 	msr	BASEPRI, r3
 8007562:	f3bf 8f6f 	isb	sy
 8007566:	f3bf 8f4f 	dsb	sy
 800756a:	e7fe      	b.n	800756a <vPortEnterCritical+0x36>
}
 800756c:	4770      	bx	lr
 800756e:	bf00      	nop
 8007570:	2000005c 	.word	0x2000005c
 8007574:	e000ed04 	.word	0xe000ed04

08007578 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007578:	4a08      	ldr	r2, [pc, #32]	; (800759c <vPortExitCritical+0x24>)
 800757a:	6813      	ldr	r3, [r2, #0]
 800757c:	b943      	cbnz	r3, 8007590 <vPortExitCritical+0x18>
 800757e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007582:	f383 8811 	msr	BASEPRI, r3
 8007586:	f3bf 8f6f 	isb	sy
 800758a:	f3bf 8f4f 	dsb	sy
 800758e:	e7fe      	b.n	800758e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007590:	3b01      	subs	r3, #1
 8007592:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007594:	b90b      	cbnz	r3, 800759a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007596:	f383 8811 	msr	BASEPRI, r3
}
 800759a:	4770      	bx	lr
 800759c:	2000005c 	.word	0x2000005c

080075a0 <PendSV_Handler>:
	__asm volatile
 80075a0:	f3ef 8009 	mrs	r0, PSP
 80075a4:	f3bf 8f6f 	isb	sy
 80075a8:	4b15      	ldr	r3, [pc, #84]	; (8007600 <pxCurrentTCBConst>)
 80075aa:	681a      	ldr	r2, [r3, #0]
 80075ac:	f01e 0f10 	tst.w	lr, #16
 80075b0:	bf08      	it	eq
 80075b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80075b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075ba:	6010      	str	r0, [r2, #0]
 80075bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80075c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80075c4:	f380 8811 	msr	BASEPRI, r0
 80075c8:	f3bf 8f4f 	dsb	sy
 80075cc:	f3bf 8f6f 	isb	sy
 80075d0:	f001 f970 	bl	80088b4 <vTaskSwitchContext>
 80075d4:	f04f 0000 	mov.w	r0, #0
 80075d8:	f380 8811 	msr	BASEPRI, r0
 80075dc:	bc09      	pop	{r0, r3}
 80075de:	6819      	ldr	r1, [r3, #0]
 80075e0:	6808      	ldr	r0, [r1, #0]
 80075e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075e6:	f01e 0f10 	tst.w	lr, #16
 80075ea:	bf08      	it	eq
 80075ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80075f0:	f380 8809 	msr	PSP, r0
 80075f4:	f3bf 8f6f 	isb	sy
 80075f8:	4770      	bx	lr
 80075fa:	bf00      	nop
 80075fc:	f3af 8000 	nop.w

08007600 <pxCurrentTCBConst>:
 8007600:	20009c84 	.word	0x20009c84

08007604 <xPortSysTickHandler>:
{
 8007604:	b508      	push	{r3, lr}
	__asm volatile
 8007606:	f04f 0350 	mov.w	r3, #80	; 0x50
 800760a:	f383 8811 	msr	BASEPRI, r3
 800760e:	f3bf 8f6f 	isb	sy
 8007612:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007616:	f000 ffb9 	bl	800858c <xTaskIncrementTick>
 800761a:	b118      	cbz	r0, 8007624 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800761c:	4b03      	ldr	r3, [pc, #12]	; (800762c <xPortSysTickHandler+0x28>)
 800761e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007622:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007624:	2300      	movs	r3, #0
 8007626:	f383 8811 	msr	BASEPRI, r3
}
 800762a:	bd08      	pop	{r3, pc}
 800762c:	e000ed04 	.word	0xe000ed04

08007630 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007630:	4a08      	ldr	r2, [pc, #32]	; (8007654 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007632:	4909      	ldr	r1, [pc, #36]	; (8007658 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007634:	2300      	movs	r3, #0
 8007636:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007638:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800763a:	4b08      	ldr	r3, [pc, #32]	; (800765c <vPortSetupTimerInterrupt+0x2c>)
 800763c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	fbb3 f3f1 	udiv	r3, r3, r1
 8007646:	4906      	ldr	r1, [pc, #24]	; (8007660 <vPortSetupTimerInterrupt+0x30>)
 8007648:	3b01      	subs	r3, #1
 800764a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800764c:	2307      	movs	r3, #7
 800764e:	6013      	str	r3, [r2, #0]
}
 8007650:	4770      	bx	lr
 8007652:	bf00      	nop
 8007654:	e000e010 	.word	0xe000e010
 8007658:	e000e018 	.word	0xe000e018
 800765c:	20000050 	.word	0x20000050
 8007660:	e000e014 	.word	0xe000e014

08007664 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007664:	4b38      	ldr	r3, [pc, #224]	; (8007748 <xPortStartScheduler+0xe4>)
 8007666:	4a39      	ldr	r2, [pc, #228]	; (800774c <xPortStartScheduler+0xe8>)
{
 8007668:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800766a:	6819      	ldr	r1, [r3, #0]
 800766c:	4291      	cmp	r1, r2
 800766e:	d108      	bne.n	8007682 <xPortStartScheduler+0x1e>
	__asm volatile
 8007670:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007674:	f383 8811 	msr	BASEPRI, r3
 8007678:	f3bf 8f6f 	isb	sy
 800767c:	f3bf 8f4f 	dsb	sy
 8007680:	e7fe      	b.n	8007680 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007682:	681a      	ldr	r2, [r3, #0]
 8007684:	4b32      	ldr	r3, [pc, #200]	; (8007750 <xPortStartScheduler+0xec>)
 8007686:	429a      	cmp	r2, r3
 8007688:	d108      	bne.n	800769c <xPortStartScheduler+0x38>
 800768a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800768e:	f383 8811 	msr	BASEPRI, r3
 8007692:	f3bf 8f6f 	isb	sy
 8007696:	f3bf 8f4f 	dsb	sy
 800769a:	e7fe      	b.n	800769a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800769c:	4b2d      	ldr	r3, [pc, #180]	; (8007754 <xPortStartScheduler+0xf0>)
 800769e:	781a      	ldrb	r2, [r3, #0]
 80076a0:	b2d2      	uxtb	r2, r2
 80076a2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80076a4:	22ff      	movs	r2, #255	; 0xff
 80076a6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80076a8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80076aa:	4a2b      	ldr	r2, [pc, #172]	; (8007758 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80076ac:	b2db      	uxtb	r3, r3
 80076ae:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80076b2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80076b6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80076ba:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80076bc:	4a27      	ldr	r2, [pc, #156]	; (800775c <xPortStartScheduler+0xf8>)
 80076be:	2307      	movs	r3, #7
 80076c0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80076c2:	2100      	movs	r1, #0
 80076c4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80076c8:	0600      	lsls	r0, r0, #24
 80076ca:	f103 34ff 	add.w	r4, r3, #4294967295
 80076ce:	d40c      	bmi.n	80076ea <xPortStartScheduler+0x86>
 80076d0:	b111      	cbz	r1, 80076d8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80076d2:	2b03      	cmp	r3, #3
 80076d4:	6013      	str	r3, [r2, #0]
 80076d6:	d011      	beq.n	80076fc <xPortStartScheduler+0x98>
 80076d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076dc:	f383 8811 	msr	BASEPRI, r3
 80076e0:	f3bf 8f6f 	isb	sy
 80076e4:	f3bf 8f4f 	dsb	sy
 80076e8:	e7fe      	b.n	80076e8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80076ea:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80076ee:	005b      	lsls	r3, r3, #1
 80076f0:	b2db      	uxtb	r3, r3
 80076f2:	f88d 3003 	strb.w	r3, [sp, #3]
 80076f6:	2101      	movs	r1, #1
 80076f8:	4623      	mov	r3, r4
 80076fa:	e7e3      	b.n	80076c4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80076fc:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007700:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007702:	9b01      	ldr	r3, [sp, #4]
 8007704:	4a13      	ldr	r2, [pc, #76]	; (8007754 <xPortStartScheduler+0xf0>)
 8007706:	b2db      	uxtb	r3, r3
 8007708:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800770a:	4b15      	ldr	r3, [pc, #84]	; (8007760 <xPortStartScheduler+0xfc>)
 800770c:	681a      	ldr	r2, [r3, #0]
 800770e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007712:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007714:	681a      	ldr	r2, [r3, #0]
 8007716:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800771a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800771c:	f7ff ff88 	bl	8007630 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007720:	4b10      	ldr	r3, [pc, #64]	; (8007764 <xPortStartScheduler+0x100>)
 8007722:	2400      	movs	r4, #0
 8007724:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8007726:	f7ff feb1 	bl	800748c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800772a:	4a0f      	ldr	r2, [pc, #60]	; (8007768 <xPortStartScheduler+0x104>)
 800772c:	6813      	ldr	r3, [r2, #0]
 800772e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007732:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007734:	f7ff fe96 	bl	8007464 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007738:	f001 f8bc 	bl	80088b4 <vTaskSwitchContext>
	prvTaskExitError();
 800773c:	f7ff feb0 	bl	80074a0 <prvTaskExitError>
}
 8007740:	4620      	mov	r0, r4
 8007742:	b002      	add	sp, #8
 8007744:	bd10      	pop	{r4, pc}
 8007746:	bf00      	nop
 8007748:	e000ed00 	.word	0xe000ed00
 800774c:	410fc271 	.word	0x410fc271
 8007750:	410fc270 	.word	0x410fc270
 8007754:	e000e400 	.word	0xe000e400
 8007758:	20009c7c 	.word	0x20009c7c
 800775c:	20009c80 	.word	0x20009c80
 8007760:	e000ed20 	.word	0xe000ed20
 8007764:	2000005c 	.word	0x2000005c
 8007768:	e000ef34 	.word	0xe000ef34

0800776c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800776c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007770:	2b0f      	cmp	r3, #15
 8007772:	d90e      	bls.n	8007792 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007774:	4a10      	ldr	r2, [pc, #64]	; (80077b8 <vPortValidateInterruptPriority+0x4c>)
 8007776:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007778:	4a10      	ldr	r2, [pc, #64]	; (80077bc <vPortValidateInterruptPriority+0x50>)
 800777a:	7812      	ldrb	r2, [r2, #0]
 800777c:	429a      	cmp	r2, r3
 800777e:	d908      	bls.n	8007792 <vPortValidateInterruptPriority+0x26>
 8007780:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007784:	f383 8811 	msr	BASEPRI, r3
 8007788:	f3bf 8f6f 	isb	sy
 800778c:	f3bf 8f4f 	dsb	sy
 8007790:	e7fe      	b.n	8007790 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007792:	4b0b      	ldr	r3, [pc, #44]	; (80077c0 <vPortValidateInterruptPriority+0x54>)
 8007794:	4a0b      	ldr	r2, [pc, #44]	; (80077c4 <vPortValidateInterruptPriority+0x58>)
 8007796:	681b      	ldr	r3, [r3, #0]
 8007798:	6812      	ldr	r2, [r2, #0]
 800779a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800779e:	4293      	cmp	r3, r2
 80077a0:	d908      	bls.n	80077b4 <vPortValidateInterruptPriority+0x48>
 80077a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077a6:	f383 8811 	msr	BASEPRI, r3
 80077aa:	f3bf 8f6f 	isb	sy
 80077ae:	f3bf 8f4f 	dsb	sy
 80077b2:	e7fe      	b.n	80077b2 <vPortValidateInterruptPriority+0x46>
	}
 80077b4:	4770      	bx	lr
 80077b6:	bf00      	nop
 80077b8:	e000e3f0 	.word	0xe000e3f0
 80077bc:	20009c7c 	.word	0x20009c7c
 80077c0:	e000ed0c 	.word	0xe000ed0c
 80077c4:	20009c80 	.word	0x20009c80

080077c8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80077c8:	b510      	push	{r4, lr}
 80077ca:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80077cc:	f7ff feb2 	bl	8007534 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80077d0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80077d2:	f7ff fed1 	bl	8007578 <vPortExitCritical>

	return xReturn;
}
 80077d6:	fab4 f084 	clz	r0, r4
 80077da:	0940      	lsrs	r0, r0, #5
 80077dc:	bd10      	pop	{r4, pc}

080077de <prvCopyDataToQueue>:
{
 80077de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80077e0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80077e2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80077e4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80077e6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80077e8:	b952      	cbnz	r2, 8007800 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80077ea:	6807      	ldr	r7, [r0, #0]
 80077ec:	bb47      	cbnz	r7, 8007840 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80077ee:	6880      	ldr	r0, [r0, #8]
 80077f0:	f001 f9c2 	bl	8008b78 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80077f4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80077f6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80077f8:	3601      	adds	r6, #1
 80077fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80077fc:	4628      	mov	r0, r5
 80077fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007800:	b965      	cbnz	r5, 800781c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007802:	6840      	ldr	r0, [r0, #4]
 8007804:	f014 f9ea 	bl	801bbdc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007808:	6863      	ldr	r3, [r4, #4]
 800780a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800780c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800780e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007810:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007812:	4293      	cmp	r3, r2
 8007814:	d3f0      	bcc.n	80077f8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007816:	6823      	ldr	r3, [r4, #0]
 8007818:	6063      	str	r3, [r4, #4]
 800781a:	e7ed      	b.n	80077f8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800781c:	68c0      	ldr	r0, [r0, #12]
 800781e:	f014 f9dd 	bl	801bbdc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007822:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007824:	68e3      	ldr	r3, [r4, #12]
 8007826:	4251      	negs	r1, r2
 8007828:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800782a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800782c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800782e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007830:	bf3e      	ittt	cc
 8007832:	68a3      	ldrcc	r3, [r4, #8]
 8007834:	185b      	addcc	r3, r3, r1
 8007836:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007838:	2d02      	cmp	r5, #2
 800783a:	d101      	bne.n	8007840 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800783c:	b116      	cbz	r6, 8007844 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800783e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007840:	2500      	movs	r5, #0
 8007842:	e7d9      	b.n	80077f8 <prvCopyDataToQueue+0x1a>
 8007844:	4635      	mov	r5, r6
 8007846:	e7d7      	b.n	80077f8 <prvCopyDataToQueue+0x1a>

08007848 <prvCopyDataFromQueue>:
{
 8007848:	4603      	mov	r3, r0
 800784a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800784c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800784e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007850:	b16a      	cbz	r2, 800786e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007852:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007854:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007856:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007858:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800785a:	bf28      	it	cs
 800785c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800785e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007860:	bf28      	it	cs
 8007862:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007864:	68d9      	ldr	r1, [r3, #12]
}
 8007866:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800786a:	f014 b9b7 	b.w	801bbdc <memcpy>
}
 800786e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007872:	4770      	bx	lr

08007874 <prvUnlockQueue>:
{
 8007874:	b570      	push	{r4, r5, r6, lr}
 8007876:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007878:	f7ff fe5c 	bl	8007534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800787c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007880:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007884:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007886:	2d00      	cmp	r5, #0
 8007888:	dc14      	bgt.n	80078b4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800788a:	23ff      	movs	r3, #255	; 0xff
 800788c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007890:	f7ff fe72 	bl	8007578 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007894:	f7ff fe4e 	bl	8007534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007898:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800789c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80078a0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80078a2:	2d00      	cmp	r5, #0
 80078a4:	dc12      	bgt.n	80078cc <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80078a6:	23ff      	movs	r3, #255	; 0xff
 80078a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80078ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80078b0:	f7ff be62 	b.w	8007578 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80078b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	d0e7      	beq.n	800788a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80078ba:	4630      	mov	r0, r6
 80078bc:	f001 f878 	bl	80089b0 <xTaskRemoveFromEventList>
 80078c0:	b108      	cbz	r0, 80078c6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80078c2:	f001 f901 	bl	8008ac8 <vTaskMissedYield>
			--cTxLock;
 80078c6:	3d01      	subs	r5, #1
 80078c8:	b26d      	sxtb	r5, r5
 80078ca:	e7dc      	b.n	8007886 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80078cc:	6923      	ldr	r3, [r4, #16]
 80078ce:	2b00      	cmp	r3, #0
 80078d0:	d0e9      	beq.n	80078a6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80078d2:	4630      	mov	r0, r6
 80078d4:	f001 f86c 	bl	80089b0 <xTaskRemoveFromEventList>
 80078d8:	b108      	cbz	r0, 80078de <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80078da:	f001 f8f5 	bl	8008ac8 <vTaskMissedYield>
				--cRxLock;
 80078de:	3d01      	subs	r5, #1
 80078e0:	b26d      	sxtb	r5, r5
 80078e2:	e7de      	b.n	80078a2 <prvUnlockQueue+0x2e>

080078e4 <xQueueGenericReset>:
{
 80078e4:	b538      	push	{r3, r4, r5, lr}
 80078e6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80078e8:	4604      	mov	r4, r0
 80078ea:	b940      	cbnz	r0, 80078fe <xQueueGenericReset+0x1a>
 80078ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078f0:	f383 8811 	msr	BASEPRI, r3
 80078f4:	f3bf 8f6f 	isb	sy
 80078f8:	f3bf 8f4f 	dsb	sy
 80078fc:	e7fe      	b.n	80078fc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80078fe:	f7ff fe19 	bl	8007534 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007902:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007906:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007908:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800790a:	434b      	muls	r3, r1
 800790c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800790e:	1a5b      	subs	r3, r3, r1
 8007910:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007912:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007914:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007916:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007918:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800791a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800791c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007920:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007924:	b995      	cbnz	r5, 800794c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007926:	6923      	ldr	r3, [r4, #16]
 8007928:	b163      	cbz	r3, 8007944 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800792a:	f104 0010 	add.w	r0, r4, #16
 800792e:	f001 f83f 	bl	80089b0 <xTaskRemoveFromEventList>
 8007932:	b138      	cbz	r0, 8007944 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007934:	4b0a      	ldr	r3, [pc, #40]	; (8007960 <xQueueGenericReset+0x7c>)
 8007936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800793a:	601a      	str	r2, [r3, #0]
 800793c:	f3bf 8f4f 	dsb	sy
 8007940:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007944:	f7ff fe18 	bl	8007578 <vPortExitCritical>
}
 8007948:	2001      	movs	r0, #1
 800794a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800794c:	f104 0010 	add.w	r0, r4, #16
 8007950:	f7ff fd46 	bl	80073e0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007954:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007958:	f7ff fd42 	bl	80073e0 <vListInitialise>
 800795c:	e7f2      	b.n	8007944 <xQueueGenericReset+0x60>
 800795e:	bf00      	nop
 8007960:	e000ed04 	.word	0xe000ed04

08007964 <xQueueGenericCreateStatic>:
	{
 8007964:	b513      	push	{r0, r1, r4, lr}
 8007966:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007968:	b940      	cbnz	r0, 800797c <xQueueGenericCreateStatic+0x18>
 800796a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800796e:	f383 8811 	msr	BASEPRI, r3
 8007972:	f3bf 8f6f 	isb	sy
 8007976:	f3bf 8f4f 	dsb	sy
 800797a:	e7fe      	b.n	800797a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800797c:	b943      	cbnz	r3, 8007990 <xQueueGenericCreateStatic+0x2c>
 800797e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007982:	f383 8811 	msr	BASEPRI, r3
 8007986:	f3bf 8f6f 	isb	sy
 800798a:	f3bf 8f4f 	dsb	sy
 800798e:	e7fe      	b.n	800798e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007990:	b14a      	cbz	r2, 80079a6 <xQueueGenericCreateStatic+0x42>
 8007992:	b991      	cbnz	r1, 80079ba <xQueueGenericCreateStatic+0x56>
 8007994:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007998:	f383 8811 	msr	BASEPRI, r3
 800799c:	f3bf 8f6f 	isb	sy
 80079a0:	f3bf 8f4f 	dsb	sy
 80079a4:	e7fe      	b.n	80079a4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80079a6:	b141      	cbz	r1, 80079ba <xQueueGenericCreateStatic+0x56>
 80079a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079ac:	f383 8811 	msr	BASEPRI, r3
 80079b0:	f3bf 8f6f 	isb	sy
 80079b4:	f3bf 8f4f 	dsb	sy
 80079b8:	e7fe      	b.n	80079b8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80079ba:	2350      	movs	r3, #80	; 0x50
 80079bc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80079be:	9b01      	ldr	r3, [sp, #4]
 80079c0:	2b50      	cmp	r3, #80	; 0x50
 80079c2:	d008      	beq.n	80079d6 <xQueueGenericCreateStatic+0x72>
 80079c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c8:	f383 8811 	msr	BASEPRI, r3
 80079cc:	f3bf 8f6f 	isb	sy
 80079d0:	f3bf 8f4f 	dsb	sy
 80079d4:	e7fe      	b.n	80079d4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80079d6:	2900      	cmp	r1, #0
 80079d8:	bf08      	it	eq
 80079da:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80079dc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80079de:	6022      	str	r2, [r4, #0]
 80079e0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80079e2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80079e6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80079ea:	4619      	mov	r1, r3
 80079ec:	4620      	mov	r0, r4
 80079ee:	f7ff ff79 	bl	80078e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80079f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80079f6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80079fa:	4620      	mov	r0, r4
 80079fc:	b002      	add	sp, #8
 80079fe:	bd10      	pop	{r4, pc}

08007a00 <xQueueGenericCreate>:
	{
 8007a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a02:	460d      	mov	r5, r1
 8007a04:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007a06:	4606      	mov	r6, r0
 8007a08:	b940      	cbnz	r0, 8007a1c <xQueueGenericCreate+0x1c>
 8007a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a0e:	f383 8811 	msr	BASEPRI, r3
 8007a12:	f3bf 8f6f 	isb	sy
 8007a16:	f3bf 8f4f 	dsb	sy
 8007a1a:	e7fe      	b.n	8007a1a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007a1c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007a1e:	3050      	adds	r0, #80	; 0x50
 8007a20:	f7ff fc0e 	bl	8007240 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007a24:	4604      	mov	r4, r0
 8007a26:	b170      	cbz	r0, 8007a46 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007a28:	2300      	movs	r3, #0
 8007a2a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007a2e:	b165      	cbz	r5, 8007a4a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007a30:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007a34:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007a38:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007a3a:	2101      	movs	r1, #1
 8007a3c:	4620      	mov	r0, r4
 8007a3e:	f7ff ff51 	bl	80078e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007a42:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007a46:	4620      	mov	r0, r4
 8007a48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007a4a:	4603      	mov	r3, r0
 8007a4c:	e7f2      	b.n	8007a34 <xQueueGenericCreate+0x34>

08007a4e <xQueueCreateCountingSemaphoreStatic>:
	{
 8007a4e:	b513      	push	{r0, r1, r4, lr}
 8007a50:	4613      	mov	r3, r2
 8007a52:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007a54:	b940      	cbnz	r0, 8007a68 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007a56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a5a:	f383 8811 	msr	BASEPRI, r3
 8007a5e:	f3bf 8f6f 	isb	sy
 8007a62:	f3bf 8f4f 	dsb	sy
 8007a66:	e7fe      	b.n	8007a66 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007a68:	4288      	cmp	r0, r1
 8007a6a:	d208      	bcs.n	8007a7e <xQueueCreateCountingSemaphoreStatic+0x30>
 8007a6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a70:	f383 8811 	msr	BASEPRI, r3
 8007a74:	f3bf 8f6f 	isb	sy
 8007a78:	f3bf 8f4f 	dsb	sy
 8007a7c:	e7fe      	b.n	8007a7c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007a7e:	2202      	movs	r2, #2
 8007a80:	9200      	str	r2, [sp, #0]
 8007a82:	2200      	movs	r2, #0
 8007a84:	4611      	mov	r1, r2
 8007a86:	f7ff ff6d 	bl	8007964 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007a8a:	b100      	cbz	r0, 8007a8e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007a8c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007a8e:	b002      	add	sp, #8
 8007a90:	bd10      	pop	{r4, pc}

08007a92 <xQueueCreateCountingSemaphore>:
	{
 8007a92:	b510      	push	{r4, lr}
 8007a94:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007a96:	b940      	cbnz	r0, 8007aaa <xQueueCreateCountingSemaphore+0x18>
 8007a98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a9c:	f383 8811 	msr	BASEPRI, r3
 8007aa0:	f3bf 8f6f 	isb	sy
 8007aa4:	f3bf 8f4f 	dsb	sy
 8007aa8:	e7fe      	b.n	8007aa8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007aaa:	4288      	cmp	r0, r1
 8007aac:	d208      	bcs.n	8007ac0 <xQueueCreateCountingSemaphore+0x2e>
 8007aae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ab2:	f383 8811 	msr	BASEPRI, r3
 8007ab6:	f3bf 8f6f 	isb	sy
 8007aba:	f3bf 8f4f 	dsb	sy
 8007abe:	e7fe      	b.n	8007abe <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007ac0:	2202      	movs	r2, #2
 8007ac2:	2100      	movs	r1, #0
 8007ac4:	f7ff ff9c 	bl	8007a00 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007ac8:	b100      	cbz	r0, 8007acc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007aca:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007acc:	bd10      	pop	{r4, pc}
	...

08007ad0 <xQueueGenericSend>:
{
 8007ad0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007ad4:	4688      	mov	r8, r1
 8007ad6:	9201      	str	r2, [sp, #4]
 8007ad8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007ada:	4604      	mov	r4, r0
 8007adc:	b940      	cbnz	r0, 8007af0 <xQueueGenericSend+0x20>
 8007ade:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae2:	f383 8811 	msr	BASEPRI, r3
 8007ae6:	f3bf 8f6f 	isb	sy
 8007aea:	f3bf 8f4f 	dsb	sy
 8007aee:	e7fe      	b.n	8007aee <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007af0:	b951      	cbnz	r1, 8007b08 <xQueueGenericSend+0x38>
 8007af2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007af4:	b143      	cbz	r3, 8007b08 <xQueueGenericSend+0x38>
 8007af6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007afa:	f383 8811 	msr	BASEPRI, r3
 8007afe:	f3bf 8f6f 	isb	sy
 8007b02:	f3bf 8f4f 	dsb	sy
 8007b06:	e7fe      	b.n	8007b06 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007b08:	2f02      	cmp	r7, #2
 8007b0a:	d10b      	bne.n	8007b24 <xQueueGenericSend+0x54>
 8007b0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b0e:	2b01      	cmp	r3, #1
 8007b10:	d008      	beq.n	8007b24 <xQueueGenericSend+0x54>
 8007b12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b16:	f383 8811 	msr	BASEPRI, r3
 8007b1a:	f3bf 8f6f 	isb	sy
 8007b1e:	f3bf 8f4f 	dsb	sy
 8007b22:	e7fe      	b.n	8007b22 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007b24:	f000 ffd6 	bl	8008ad4 <xTaskGetSchedulerState>
 8007b28:	4606      	mov	r6, r0
 8007b2a:	b950      	cbnz	r0, 8007b42 <xQueueGenericSend+0x72>
 8007b2c:	9b01      	ldr	r3, [sp, #4]
 8007b2e:	b14b      	cbz	r3, 8007b44 <xQueueGenericSend+0x74>
 8007b30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b34:	f383 8811 	msr	BASEPRI, r3
 8007b38:	f3bf 8f6f 	isb	sy
 8007b3c:	f3bf 8f4f 	dsb	sy
 8007b40:	e7fe      	b.n	8007b40 <xQueueGenericSend+0x70>
 8007b42:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007b44:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007c30 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007b48:	f04f 0900 	mov.w	r9, #0
 8007b4c:	e037      	b.n	8007bbe <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007b4e:	9d01      	ldr	r5, [sp, #4]
 8007b50:	b91d      	cbnz	r5, 8007b5a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007b52:	f7ff fd11 	bl	8007578 <vPortExitCritical>
			return errQUEUE_FULL;
 8007b56:	2000      	movs	r0, #0
 8007b58:	e050      	b.n	8007bfc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8007b5a:	b916      	cbnz	r6, 8007b62 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b5c:	a802      	add	r0, sp, #8
 8007b5e:	f000 ff6b 	bl	8008a38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b62:	f7ff fd09 	bl	8007578 <vPortExitCritical>
		vTaskSuspendAll();
 8007b66:	f000 fd03 	bl	8008570 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007b6a:	f7ff fce3 	bl	8007534 <vPortEnterCritical>
 8007b6e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007b72:	2bff      	cmp	r3, #255	; 0xff
 8007b74:	bf08      	it	eq
 8007b76:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007b7a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007b7e:	2bff      	cmp	r3, #255	; 0xff
 8007b80:	bf08      	it	eq
 8007b82:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007b86:	f7ff fcf7 	bl	8007578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b8a:	a901      	add	r1, sp, #4
 8007b8c:	a802      	add	r0, sp, #8
 8007b8e:	f000 ff5f 	bl	8008a50 <xTaskCheckForTimeOut>
 8007b92:	2800      	cmp	r0, #0
 8007b94:	d146      	bne.n	8007c24 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007b96:	f7ff fccd 	bl	8007534 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007b9a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007b9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b9e:	429a      	cmp	r2, r3
 8007ba0:	d12f      	bne.n	8007c02 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007ba2:	f7ff fce9 	bl	8007578 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007ba6:	9901      	ldr	r1, [sp, #4]
 8007ba8:	f104 0010 	add.w	r0, r4, #16
 8007bac:	f000 fec8 	bl	8008940 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007bb0:	4620      	mov	r0, r4
 8007bb2:	f7ff fe5f 	bl	8007874 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007bb6:	f000 fd7f 	bl	80086b8 <xTaskResumeAll>
 8007bba:	b350      	cbz	r0, 8007c12 <xQueueGenericSend+0x142>
 8007bbc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007bbe:	f7ff fcb9 	bl	8007534 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007bc2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007bc4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007bc6:	429a      	cmp	r2, r3
 8007bc8:	d301      	bcc.n	8007bce <xQueueGenericSend+0xfe>
 8007bca:	2f02      	cmp	r7, #2
 8007bcc:	d1bf      	bne.n	8007b4e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007bce:	463a      	mov	r2, r7
 8007bd0:	4641      	mov	r1, r8
 8007bd2:	4620      	mov	r0, r4
 8007bd4:	f7ff fe03 	bl	80077de <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007bd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bda:	b11b      	cbz	r3, 8007be4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007bdc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007be0:	f000 fee6 	bl	80089b0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007be4:	b138      	cbz	r0, 8007bf6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8007be6:	4b12      	ldr	r3, [pc, #72]	; (8007c30 <xQueueGenericSend+0x160>)
 8007be8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bec:	601a      	str	r2, [r3, #0]
 8007bee:	f3bf 8f4f 	dsb	sy
 8007bf2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007bf6:	f7ff fcbf 	bl	8007578 <vPortExitCritical>
				return pdPASS;
 8007bfa:	2001      	movs	r0, #1
}
 8007bfc:	b004      	add	sp, #16
 8007bfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007c02:	f7ff fcb9 	bl	8007578 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007c06:	4620      	mov	r0, r4
 8007c08:	f7ff fe34 	bl	8007874 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007c0c:	f000 fd54 	bl	80086b8 <xTaskResumeAll>
 8007c10:	e7d4      	b.n	8007bbc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007c12:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007c16:	f8ca 3000 	str.w	r3, [sl]
 8007c1a:	f3bf 8f4f 	dsb	sy
 8007c1e:	f3bf 8f6f 	isb	sy
 8007c22:	e7cb      	b.n	8007bbc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8007c24:	4620      	mov	r0, r4
 8007c26:	f7ff fe25 	bl	8007874 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007c2a:	f000 fd45 	bl	80086b8 <xTaskResumeAll>
 8007c2e:	e792      	b.n	8007b56 <xQueueGenericSend+0x86>
 8007c30:	e000ed04 	.word	0xe000ed04

08007c34 <xQueueGenericSendFromISR>:
{
 8007c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007c38:	4689      	mov	r9, r1
 8007c3a:	4690      	mov	r8, r2
 8007c3c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007c3e:	4604      	mov	r4, r0
 8007c40:	b940      	cbnz	r0, 8007c54 <xQueueGenericSendFromISR+0x20>
 8007c42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c46:	f383 8811 	msr	BASEPRI, r3
 8007c4a:	f3bf 8f6f 	isb	sy
 8007c4e:	f3bf 8f4f 	dsb	sy
 8007c52:	e7fe      	b.n	8007c52 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007c54:	b951      	cbnz	r1, 8007c6c <xQueueGenericSendFromISR+0x38>
 8007c56:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c58:	b143      	cbz	r3, 8007c6c <xQueueGenericSendFromISR+0x38>
 8007c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c5e:	f383 8811 	msr	BASEPRI, r3
 8007c62:	f3bf 8f6f 	isb	sy
 8007c66:	f3bf 8f4f 	dsb	sy
 8007c6a:	e7fe      	b.n	8007c6a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007c6c:	2f02      	cmp	r7, #2
 8007c6e:	d10b      	bne.n	8007c88 <xQueueGenericSendFromISR+0x54>
 8007c70:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007c72:	2b01      	cmp	r3, #1
 8007c74:	d008      	beq.n	8007c88 <xQueueGenericSendFromISR+0x54>
 8007c76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c7a:	f383 8811 	msr	BASEPRI, r3
 8007c7e:	f3bf 8f6f 	isb	sy
 8007c82:	f3bf 8f4f 	dsb	sy
 8007c86:	e7fe      	b.n	8007c86 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c88:	f7ff fd70 	bl	800776c <vPortValidateInterruptPriority>
	__asm volatile
 8007c8c:	f3ef 8611 	mrs	r6, BASEPRI
 8007c90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c94:	f383 8811 	msr	BASEPRI, r3
 8007c98:	f3bf 8f6f 	isb	sy
 8007c9c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007ca0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007ca2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ca4:	429a      	cmp	r2, r3
 8007ca6:	d301      	bcc.n	8007cac <xQueueGenericSendFromISR+0x78>
 8007ca8:	2f02      	cmp	r7, #2
 8007caa:	d123      	bne.n	8007cf4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007cac:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007cb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007cb2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007cb4:	463a      	mov	r2, r7
 8007cb6:	4649      	mov	r1, r9
 8007cb8:	4620      	mov	r0, r4
 8007cba:	f7ff fd90 	bl	80077de <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007cbe:	1c6b      	adds	r3, r5, #1
 8007cc0:	d113      	bne.n	8007cea <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007cc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007cc4:	b90b      	cbnz	r3, 8007cca <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007cc6:	2001      	movs	r0, #1
 8007cc8:	e00b      	b.n	8007ce2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007cca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007cce:	f000 fe6f 	bl	80089b0 <xTaskRemoveFromEventList>
 8007cd2:	2800      	cmp	r0, #0
 8007cd4:	d0f7      	beq.n	8007cc6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007cd6:	f1b8 0f00 	cmp.w	r8, #0
 8007cda:	d0f4      	beq.n	8007cc6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007cdc:	2001      	movs	r0, #1
 8007cde:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007ce2:	f386 8811 	msr	BASEPRI, r6
}
 8007ce6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007cea:	3501      	adds	r5, #1
 8007cec:	b26d      	sxtb	r5, r5
 8007cee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007cf2:	e7e8      	b.n	8007cc6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007cf4:	2000      	movs	r0, #0
 8007cf6:	e7f4      	b.n	8007ce2 <xQueueGenericSendFromISR+0xae>

08007cf8 <xQueueGiveFromISR>:
{
 8007cf8:	b570      	push	{r4, r5, r6, lr}
 8007cfa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007cfc:	4604      	mov	r4, r0
 8007cfe:	b940      	cbnz	r0, 8007d12 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007d00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d04:	f383 8811 	msr	BASEPRI, r3
 8007d08:	f3bf 8f6f 	isb	sy
 8007d0c:	f3bf 8f4f 	dsb	sy
 8007d10:	e7fe      	b.n	8007d10 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007d12:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007d14:	b143      	cbz	r3, 8007d28 <xQueueGiveFromISR+0x30>
 8007d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d1a:	f383 8811 	msr	BASEPRI, r3
 8007d1e:	f3bf 8f6f 	isb	sy
 8007d22:	f3bf 8f4f 	dsb	sy
 8007d26:	e7fe      	b.n	8007d26 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007d28:	6803      	ldr	r3, [r0, #0]
 8007d2a:	b953      	cbnz	r3, 8007d42 <xQueueGiveFromISR+0x4a>
 8007d2c:	6883      	ldr	r3, [r0, #8]
 8007d2e:	b143      	cbz	r3, 8007d42 <xQueueGiveFromISR+0x4a>
 8007d30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d34:	f383 8811 	msr	BASEPRI, r3
 8007d38:	f3bf 8f6f 	isb	sy
 8007d3c:	f3bf 8f4f 	dsb	sy
 8007d40:	e7fe      	b.n	8007d40 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007d42:	f7ff fd13 	bl	800776c <vPortValidateInterruptPriority>
	__asm volatile
 8007d46:	f3ef 8611 	mrs	r6, BASEPRI
 8007d4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4e:	f383 8811 	msr	BASEPRI, r3
 8007d52:	f3bf 8f6f 	isb	sy
 8007d56:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007d5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007d5c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007d5e:	4293      	cmp	r3, r2
 8007d60:	d91c      	bls.n	8007d9c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007d62:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007d66:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007d68:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007d6a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007d6c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007d6e:	d110      	bne.n	8007d92 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007d70:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007d72:	b90b      	cbnz	r3, 8007d78 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007d74:	2001      	movs	r0, #1
 8007d76:	e009      	b.n	8007d8c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d78:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d7c:	f000 fe18 	bl	80089b0 <xTaskRemoveFromEventList>
 8007d80:	2800      	cmp	r0, #0
 8007d82:	d0f7      	beq.n	8007d74 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007d84:	2d00      	cmp	r5, #0
 8007d86:	d0f5      	beq.n	8007d74 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007d88:	2001      	movs	r0, #1
 8007d8a:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007d8c:	f386 8811 	msr	BASEPRI, r6
}
 8007d90:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007d92:	3301      	adds	r3, #1
 8007d94:	b25b      	sxtb	r3, r3
 8007d96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007d9a:	e7eb      	b.n	8007d74 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007d9c:	2000      	movs	r0, #0
 8007d9e:	e7f5      	b.n	8007d8c <xQueueGiveFromISR+0x94>

08007da0 <xQueueReceive>:
{
 8007da0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007da4:	b085      	sub	sp, #20
 8007da6:	460f      	mov	r7, r1
 8007da8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007daa:	4604      	mov	r4, r0
 8007dac:	b940      	cbnz	r0, 8007dc0 <xQueueReceive+0x20>
	__asm volatile
 8007dae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007db2:	f383 8811 	msr	BASEPRI, r3
 8007db6:	f3bf 8f6f 	isb	sy
 8007dba:	f3bf 8f4f 	dsb	sy
 8007dbe:	e7fe      	b.n	8007dbe <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007dc0:	b951      	cbnz	r1, 8007dd8 <xQueueReceive+0x38>
 8007dc2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007dc4:	b143      	cbz	r3, 8007dd8 <xQueueReceive+0x38>
 8007dc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dca:	f383 8811 	msr	BASEPRI, r3
 8007dce:	f3bf 8f6f 	isb	sy
 8007dd2:	f3bf 8f4f 	dsb	sy
 8007dd6:	e7fe      	b.n	8007dd6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007dd8:	f000 fe7c 	bl	8008ad4 <xTaskGetSchedulerState>
 8007ddc:	4606      	mov	r6, r0
 8007dde:	b950      	cbnz	r0, 8007df6 <xQueueReceive+0x56>
 8007de0:	9b01      	ldr	r3, [sp, #4]
 8007de2:	b14b      	cbz	r3, 8007df8 <xQueueReceive+0x58>
 8007de4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007de8:	f383 8811 	msr	BASEPRI, r3
 8007dec:	f3bf 8f6f 	isb	sy
 8007df0:	f3bf 8f4f 	dsb	sy
 8007df4:	e7fe      	b.n	8007df4 <xQueueReceive+0x54>
 8007df6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007df8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8007edc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 8007dfc:	f04f 0800 	mov.w	r8, #0
 8007e00:	e03b      	b.n	8007e7a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e02:	9d01      	ldr	r5, [sp, #4]
 8007e04:	b91d      	cbnz	r5, 8007e0e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8007e06:	f7ff fbb7 	bl	8007578 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007e0a:	2000      	movs	r0, #0
 8007e0c:	e052      	b.n	8007eb4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 8007e0e:	b916      	cbnz	r6, 8007e16 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e10:	a802      	add	r0, sp, #8
 8007e12:	f000 fe11 	bl	8008a38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e16:	f7ff fbaf 	bl	8007578 <vPortExitCritical>
		vTaskSuspendAll();
 8007e1a:	f000 fba9 	bl	8008570 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e1e:	f7ff fb89 	bl	8007534 <vPortEnterCritical>
 8007e22:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007e26:	2bff      	cmp	r3, #255	; 0xff
 8007e28:	bf08      	it	eq
 8007e2a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007e2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007e32:	2bff      	cmp	r3, #255	; 0xff
 8007e34:	bf08      	it	eq
 8007e36:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007e3a:	f7ff fb9d 	bl	8007578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e3e:	a901      	add	r1, sp, #4
 8007e40:	a802      	add	r0, sp, #8
 8007e42:	f000 fe05 	bl	8008a50 <xTaskCheckForTimeOut>
 8007e46:	2800      	cmp	r0, #0
 8007e48:	d13d      	bne.n	8007ec6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	f7ff fcbc 	bl	80077c8 <prvIsQueueEmpty>
 8007e50:	b398      	cbz	r0, 8007eba <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007e52:	9901      	ldr	r1, [sp, #4]
 8007e54:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007e58:	f000 fd72 	bl	8008940 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007e5c:	4620      	mov	r0, r4
 8007e5e:	f7ff fd09 	bl	8007874 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007e62:	f000 fc29 	bl	80086b8 <xTaskResumeAll>
 8007e66:	b938      	cbnz	r0, 8007e78 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8007e68:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007e6c:	f8c9 3000 	str.w	r3, [r9]
 8007e70:	f3bf 8f4f 	dsb	sy
 8007e74:	f3bf 8f6f 	isb	sy
 8007e78:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007e7a:	f7ff fb5b 	bl	8007534 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007e7e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007e80:	2d00      	cmp	r5, #0
 8007e82:	d0be      	beq.n	8007e02 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e84:	4639      	mov	r1, r7
 8007e86:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e88:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e8a:	f7ff fcdd 	bl	8007848 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e8e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e90:	6923      	ldr	r3, [r4, #16]
 8007e92:	b163      	cbz	r3, 8007eae <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e94:	f104 0010 	add.w	r0, r4, #16
 8007e98:	f000 fd8a 	bl	80089b0 <xTaskRemoveFromEventList>
 8007e9c:	b138      	cbz	r0, 8007eae <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 8007e9e:	4b0f      	ldr	r3, [pc, #60]	; (8007edc <xQueueReceive+0x13c>)
 8007ea0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ea4:	601a      	str	r2, [r3, #0]
 8007ea6:	f3bf 8f4f 	dsb	sy
 8007eaa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007eae:	f7ff fb63 	bl	8007578 <vPortExitCritical>
				return pdPASS;
 8007eb2:	2001      	movs	r0, #1
}
 8007eb4:	b005      	add	sp, #20
 8007eb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8007eba:	4620      	mov	r0, r4
 8007ebc:	f7ff fcda 	bl	8007874 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007ec0:	f000 fbfa 	bl	80086b8 <xTaskResumeAll>
 8007ec4:	e7d8      	b.n	8007e78 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 8007ec6:	4620      	mov	r0, r4
 8007ec8:	f7ff fcd4 	bl	8007874 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ecc:	f000 fbf4 	bl	80086b8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007ed0:	4620      	mov	r0, r4
 8007ed2:	f7ff fc79 	bl	80077c8 <prvIsQueueEmpty>
 8007ed6:	2800      	cmp	r0, #0
 8007ed8:	d0ce      	beq.n	8007e78 <xQueueReceive+0xd8>
 8007eda:	e796      	b.n	8007e0a <xQueueReceive+0x6a>
 8007edc:	e000ed04 	.word	0xe000ed04

08007ee0 <xQueueSemaphoreTake>:
{
 8007ee0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007ee4:	4604      	mov	r4, r0
{
 8007ee6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007ee8:	b940      	cbnz	r0, 8007efc <xQueueSemaphoreTake+0x1c>
 8007eea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eee:	f383 8811 	msr	BASEPRI, r3
 8007ef2:	f3bf 8f6f 	isb	sy
 8007ef6:	f3bf 8f4f 	dsb	sy
 8007efa:	e7fe      	b.n	8007efa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007efc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007efe:	b145      	cbz	r5, 8007f12 <xQueueSemaphoreTake+0x32>
 8007f00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f04:	f383 8811 	msr	BASEPRI, r3
 8007f08:	f3bf 8f6f 	isb	sy
 8007f0c:	f3bf 8f4f 	dsb	sy
 8007f10:	e7fe      	b.n	8007f10 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007f12:	f000 fddf 	bl	8008ad4 <xTaskGetSchedulerState>
 8007f16:	4606      	mov	r6, r0
 8007f18:	b950      	cbnz	r0, 8007f30 <xQueueSemaphoreTake+0x50>
 8007f1a:	9b01      	ldr	r3, [sp, #4]
 8007f1c:	b16b      	cbz	r3, 8007f3a <xQueueSemaphoreTake+0x5a>
 8007f1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f22:	f383 8811 	msr	BASEPRI, r3
 8007f26:	f3bf 8f6f 	isb	sy
 8007f2a:	f3bf 8f4f 	dsb	sy
 8007f2e:	e7fe      	b.n	8007f2e <xQueueSemaphoreTake+0x4e>
 8007f30:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8007f32:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8008064 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8007f36:	2700      	movs	r7, #0
 8007f38:	e051      	b.n	8007fde <xQueueSemaphoreTake+0xfe>
 8007f3a:	4605      	mov	r5, r0
 8007f3c:	e7f9      	b.n	8007f32 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007f3e:	9b01      	ldr	r3, [sp, #4]
 8007f40:	b963      	cbnz	r3, 8007f5c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007f42:	b145      	cbz	r5, 8007f56 <xQueueSemaphoreTake+0x76>
 8007f44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f48:	f383 8811 	msr	BASEPRI, r3
 8007f4c:	f3bf 8f6f 	isb	sy
 8007f50:	f3bf 8f4f 	dsb	sy
 8007f54:	e7fe      	b.n	8007f54 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8007f56:	f7ff fb0f 	bl	8007578 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007f5a:	e05e      	b.n	800801a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 8007f5c:	b916      	cbnz	r6, 8007f64 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007f5e:	a802      	add	r0, sp, #8
 8007f60:	f000 fd6a 	bl	8008a38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007f64:	f7ff fb08 	bl	8007578 <vPortExitCritical>
		vTaskSuspendAll();
 8007f68:	f000 fb02 	bl	8008570 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007f6c:	f7ff fae2 	bl	8007534 <vPortEnterCritical>
 8007f70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007f74:	2bff      	cmp	r3, #255	; 0xff
 8007f76:	bf08      	it	eq
 8007f78:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007f7c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007f80:	2bff      	cmp	r3, #255	; 0xff
 8007f82:	bf08      	it	eq
 8007f84:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007f88:	f7ff faf6 	bl	8007578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007f8c:	a901      	add	r1, sp, #4
 8007f8e:	a802      	add	r0, sp, #8
 8007f90:	f000 fd5e 	bl	8008a50 <xTaskCheckForTimeOut>
 8007f94:	2800      	cmp	r0, #0
 8007f96:	d14a      	bne.n	800802e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f98:	4620      	mov	r0, r4
 8007f9a:	f7ff fc15 	bl	80077c8 <prvIsQueueEmpty>
 8007f9e:	2800      	cmp	r0, #0
 8007fa0:	d03f      	beq.n	8008022 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007fa2:	6823      	ldr	r3, [r4, #0]
 8007fa4:	b93b      	cbnz	r3, 8007fb6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8007fa6:	f7ff fac5 	bl	8007534 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007faa:	68a0      	ldr	r0, [r4, #8]
 8007fac:	f000 fda2 	bl	8008af4 <xTaskPriorityInherit>
 8007fb0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007fb2:	f7ff fae1 	bl	8007578 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007fb6:	9901      	ldr	r1, [sp, #4]
 8007fb8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007fbc:	f000 fcc0 	bl	8008940 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007fc0:	4620      	mov	r0, r4
 8007fc2:	f7ff fc57 	bl	8007874 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007fc6:	f000 fb77 	bl	80086b8 <xTaskResumeAll>
 8007fca:	b938      	cbnz	r0, 8007fdc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007fcc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007fd0:	f8c8 3000 	str.w	r3, [r8]
 8007fd4:	f3bf 8f4f 	dsb	sy
 8007fd8:	f3bf 8f6f 	isb	sy
 8007fdc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007fde:	f7ff faa9 	bl	8007534 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007fe2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d0aa      	beq.n	8007f3e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007fe8:	3b01      	subs	r3, #1
 8007fea:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007fec:	6823      	ldr	r3, [r4, #0]
 8007fee:	b913      	cbnz	r3, 8007ff6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007ff0:	f000 fe58 	bl	8008ca4 <pvTaskIncrementMutexHeldCount>
 8007ff4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007ff6:	6923      	ldr	r3, [r4, #16]
 8007ff8:	b163      	cbz	r3, 8008014 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007ffa:	f104 0010 	add.w	r0, r4, #16
 8007ffe:	f000 fcd7 	bl	80089b0 <xTaskRemoveFromEventList>
 8008002:	b138      	cbz	r0, 8008014 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8008004:	4b17      	ldr	r3, [pc, #92]	; (8008064 <xQueueSemaphoreTake+0x184>)
 8008006:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800800a:	601a      	str	r2, [r3, #0]
 800800c:	f3bf 8f4f 	dsb	sy
 8008010:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008014:	f7ff fab0 	bl	8007578 <vPortExitCritical>
				return pdPASS;
 8008018:	2501      	movs	r5, #1
}
 800801a:	4628      	mov	r0, r5
 800801c:	b004      	add	sp, #16
 800801e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008022:	4620      	mov	r0, r4
 8008024:	f7ff fc26 	bl	8007874 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008028:	f000 fb46 	bl	80086b8 <xTaskResumeAll>
 800802c:	e7d6      	b.n	8007fdc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800802e:	4620      	mov	r0, r4
 8008030:	f7ff fc20 	bl	8007874 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008034:	f000 fb40 	bl	80086b8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008038:	4620      	mov	r0, r4
 800803a:	f7ff fbc5 	bl	80077c8 <prvIsQueueEmpty>
 800803e:	2800      	cmp	r0, #0
 8008040:	d0cc      	beq.n	8007fdc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008042:	2d00      	cmp	r5, #0
 8008044:	d0e9      	beq.n	800801a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8008046:	f7ff fa75 	bl	8007534 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800804a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800804c:	b119      	cbz	r1, 8008056 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800804e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008050:	6819      	ldr	r1, [r3, #0]
 8008052:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008056:	68a0      	ldr	r0, [r4, #8]
 8008058:	f000 fdd2 	bl	8008c00 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800805c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800805e:	f7ff fa8b 	bl	8007578 <vPortExitCritical>
 8008062:	e7da      	b.n	800801a <xQueueSemaphoreTake+0x13a>
 8008064:	e000ed04 	.word	0xe000ed04

08008068 <xQueueReceiveFromISR>:
{
 8008068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800806c:	4689      	mov	r9, r1
 800806e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008070:	4605      	mov	r5, r0
 8008072:	b940      	cbnz	r0, 8008086 <xQueueReceiveFromISR+0x1e>
 8008074:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008078:	f383 8811 	msr	BASEPRI, r3
 800807c:	f3bf 8f6f 	isb	sy
 8008080:	f3bf 8f4f 	dsb	sy
 8008084:	e7fe      	b.n	8008084 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008086:	b951      	cbnz	r1, 800809e <xQueueReceiveFromISR+0x36>
 8008088:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800808a:	b143      	cbz	r3, 800809e <xQueueReceiveFromISR+0x36>
 800808c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008090:	f383 8811 	msr	BASEPRI, r3
 8008094:	f3bf 8f6f 	isb	sy
 8008098:	f3bf 8f4f 	dsb	sy
 800809c:	e7fe      	b.n	800809c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800809e:	f7ff fb65 	bl	800776c <vPortValidateInterruptPriority>
	__asm volatile
 80080a2:	f3ef 8711 	mrs	r7, BASEPRI
 80080a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080aa:	f383 8811 	msr	BASEPRI, r3
 80080ae:	f3bf 8f6f 	isb	sy
 80080b2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80080b6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80080b8:	b31c      	cbz	r4, 8008102 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80080ba:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80080be:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80080c0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80080c2:	4628      	mov	r0, r5
 80080c4:	f7ff fbc0 	bl	8007848 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80080c8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80080ca:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80080cc:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80080ce:	d113      	bne.n	80080f8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80080d0:	692b      	ldr	r3, [r5, #16]
 80080d2:	b90b      	cbnz	r3, 80080d8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80080d4:	2001      	movs	r0, #1
 80080d6:	e00b      	b.n	80080f0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80080d8:	f105 0010 	add.w	r0, r5, #16
 80080dc:	f000 fc68 	bl	80089b0 <xTaskRemoveFromEventList>
 80080e0:	2800      	cmp	r0, #0
 80080e2:	d0f7      	beq.n	80080d4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80080e4:	f1b8 0f00 	cmp.w	r8, #0
 80080e8:	d0f4      	beq.n	80080d4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80080ea:	2001      	movs	r0, #1
 80080ec:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80080f0:	f387 8811 	msr	BASEPRI, r7
}
 80080f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80080f8:	3601      	adds	r6, #1
 80080fa:	b276      	sxtb	r6, r6
 80080fc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008100:	e7e8      	b.n	80080d4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008102:	4620      	mov	r0, r4
 8008104:	e7f4      	b.n	80080f0 <xQueueReceiveFromISR+0x88>
	...

08008108 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008108:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800810a:	4a07      	ldr	r2, [pc, #28]	; (8008128 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800810c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800810e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008112:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008116:	b91d      	cbnz	r5, 8008120 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008118:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800811c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800811e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008120:	3301      	adds	r3, #1
 8008122:	2b08      	cmp	r3, #8
 8008124:	d1f3      	bne.n	800810e <vQueueAddToRegistry+0x6>
 8008126:	e7fa      	b.n	800811e <vQueueAddToRegistry+0x16>
 8008128:	2000a7d4 	.word	0x2000a7d4

0800812c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800812c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800812e:	4909      	ldr	r1, [pc, #36]	; (8008154 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008130:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008132:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8008136:	4282      	cmp	r2, r0
 8008138:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800813c:	d106      	bne.n	800814c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800813e:	4a06      	ldr	r2, [pc, #24]	; (8008158 <vQueueUnregisterQueue+0x2c>)
 8008140:	2100      	movs	r1, #0
 8008142:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008146:	4422      	add	r2, r4
 8008148:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800814a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800814c:	3301      	adds	r3, #1
 800814e:	2b08      	cmp	r3, #8
 8008150:	d1ef      	bne.n	8008132 <vQueueUnregisterQueue+0x6>
 8008152:	e7fa      	b.n	800814a <vQueueUnregisterQueue+0x1e>
 8008154:	2000a7d8 	.word	0x2000a7d8
 8008158:	2000a7d4 	.word	0x2000a7d4

0800815c <vQueueDelete>:
{
 800815c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800815e:	b940      	cbnz	r0, 8008172 <vQueueDelete+0x16>
	__asm volatile
 8008160:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008164:	f383 8811 	msr	BASEPRI, r3
 8008168:	f3bf 8f6f 	isb	sy
 800816c:	f3bf 8f4f 	dsb	sy
 8008170:	e7fe      	b.n	8008170 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008172:	f7ff ffdb 	bl	800812c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008176:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800817a:	b91b      	cbnz	r3, 8008184 <vQueueDelete+0x28>
}
 800817c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008180:	f7ff b8f0 	b.w	8007364 <vPortFree>
}
 8008184:	bd10      	pop	{r4, pc}

08008186 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008186:	b570      	push	{r4, r5, r6, lr}
 8008188:	4604      	mov	r4, r0
 800818a:	460d      	mov	r5, r1
 800818c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800818e:	f7ff f9d1 	bl	8007534 <vPortEnterCritical>
 8008192:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008196:	2bff      	cmp	r3, #255	; 0xff
 8008198:	bf04      	itt	eq
 800819a:	2300      	moveq	r3, #0
 800819c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80081a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80081a4:	2bff      	cmp	r3, #255	; 0xff
 80081a6:	bf04      	itt	eq
 80081a8:	2300      	moveq	r3, #0
 80081aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80081ae:	f7ff f9e3 	bl	8007578 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80081b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80081b4:	b92b      	cbnz	r3, 80081c2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80081b6:	4632      	mov	r2, r6
 80081b8:	4629      	mov	r1, r5
 80081ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80081be:	f000 fbd9 	bl	8008974 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80081c2:	4620      	mov	r0, r4
	}
 80081c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80081c8:	f7ff bb54 	b.w	8007874 <prvUnlockQueue>

080081cc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80081cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081d0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80081d2:	f7ff f9af 	bl	8007534 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80081d6:	4b2f      	ldr	r3, [pc, #188]	; (8008294 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80081d8:	4d2f      	ldr	r5, [pc, #188]	; (8008298 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80081da:	681a      	ldr	r2, [r3, #0]
 80081dc:	4f2f      	ldr	r7, [pc, #188]	; (800829c <prvAddNewTaskToReadyList+0xd0>)
 80081de:	3201      	adds	r2, #1
 80081e0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80081e2:	682e      	ldr	r6, [r5, #0]
 80081e4:	2e00      	cmp	r6, #0
 80081e6:	d149      	bne.n	800827c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80081e8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	2b01      	cmp	r3, #1
 80081ee:	d11f      	bne.n	8008230 <prvAddNewTaskToReadyList+0x64>
 80081f0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80081f2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80081f4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80081f6:	f7ff f8f3 	bl	80073e0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80081fa:	2e38      	cmp	r6, #56	; 0x38
 80081fc:	f108 0814 	add.w	r8, r8, #20
 8008200:	d1f7      	bne.n	80081f2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008202:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80082c8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008206:	4e26      	ldr	r6, [pc, #152]	; (80082a0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008208:	4640      	mov	r0, r8
 800820a:	f7ff f8e9 	bl	80073e0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800820e:	4630      	mov	r0, r6
 8008210:	f7ff f8e6 	bl	80073e0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008214:	4823      	ldr	r0, [pc, #140]	; (80082a4 <prvAddNewTaskToReadyList+0xd8>)
 8008216:	f7ff f8e3 	bl	80073e0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800821a:	4823      	ldr	r0, [pc, #140]	; (80082a8 <prvAddNewTaskToReadyList+0xdc>)
 800821c:	f7ff f8e0 	bl	80073e0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008220:	4822      	ldr	r0, [pc, #136]	; (80082ac <prvAddNewTaskToReadyList+0xe0>)
 8008222:	f7ff f8dd 	bl	80073e0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008226:	4b22      	ldr	r3, [pc, #136]	; (80082b0 <prvAddNewTaskToReadyList+0xe4>)
 8008228:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800822c:	4b21      	ldr	r3, [pc, #132]	; (80082b4 <prvAddNewTaskToReadyList+0xe8>)
 800822e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8008230:	4a21      	ldr	r2, [pc, #132]	; (80082b8 <prvAddNewTaskToReadyList+0xec>)
 8008232:	6813      	ldr	r3, [r2, #0]
 8008234:	3301      	adds	r3, #1
 8008236:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008238:	4a20      	ldr	r2, [pc, #128]	; (80082bc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800823a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800823c:	6811      	ldr	r1, [r2, #0]
 800823e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008240:	2014      	movs	r0, #20
 8008242:	428b      	cmp	r3, r1
 8008244:	fb00 7003 	mla	r0, r0, r3, r7
 8008248:	f104 0104 	add.w	r1, r4, #4
 800824c:	bf88      	it	hi
 800824e:	6013      	strhi	r3, [r2, #0]
 8008250:	f7ff f8d4 	bl	80073fc <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008254:	f7ff f990 	bl	8007578 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008258:	4b19      	ldr	r3, [pc, #100]	; (80082c0 <prvAddNewTaskToReadyList+0xf4>)
 800825a:	681b      	ldr	r3, [r3, #0]
 800825c:	b163      	cbz	r3, 8008278 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800825e:	682b      	ldr	r3, [r5, #0]
 8008260:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008262:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008264:	429a      	cmp	r2, r3
 8008266:	d207      	bcs.n	8008278 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8008268:	4b16      	ldr	r3, [pc, #88]	; (80082c4 <prvAddNewTaskToReadyList+0xf8>)
 800826a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800826e:	601a      	str	r2, [r3, #0]
 8008270:	f3bf 8f4f 	dsb	sy
 8008274:	f3bf 8f6f 	isb	sy
}
 8008278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800827c:	4b10      	ldr	r3, [pc, #64]	; (80082c0 <prvAddNewTaskToReadyList+0xf4>)
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	2b00      	cmp	r3, #0
 8008282:	d1d5      	bne.n	8008230 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008284:	682b      	ldr	r3, [r5, #0]
 8008286:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008288:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800828a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800828c:	bf98      	it	ls
 800828e:	602c      	strls	r4, [r5, #0]
 8008290:	e7ce      	b.n	8008230 <prvAddNewTaskToReadyList+0x64>
 8008292:	bf00      	nop
 8008294:	2000a0f0 	.word	0x2000a0f0
 8008298:	20009c84 	.word	0x20009c84
 800829c:	20009c90 	.word	0x20009c90
 80082a0:	2000a118 	.word	0x2000a118
 80082a4:	2000a138 	.word	0x2000a138
 80082a8:	2000a164 	.word	0x2000a164
 80082ac:	2000a150 	.word	0x2000a150
 80082b0:	20009c88 	.word	0x20009c88
 80082b4:	20009c8c 	.word	0x20009c8c
 80082b8:	2000a0fc 	.word	0x2000a0fc
 80082bc:	2000a100 	.word	0x2000a100
 80082c0:	2000a14c 	.word	0x2000a14c
 80082c4:	e000ed04 	.word	0xe000ed04
 80082c8:	2000a104 	.word	0x2000a104

080082cc <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80082cc:	4a06      	ldr	r2, [pc, #24]	; (80082e8 <prvResetNextTaskUnblockTime+0x1c>)
 80082ce:	6813      	ldr	r3, [r2, #0]
 80082d0:	6819      	ldr	r1, [r3, #0]
 80082d2:	4b06      	ldr	r3, [pc, #24]	; (80082ec <prvResetNextTaskUnblockTime+0x20>)
 80082d4:	b919      	cbnz	r1, 80082de <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80082d6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80082da:	601a      	str	r2, [r3, #0]
	}
}
 80082dc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082de:	6812      	ldr	r2, [r2, #0]
 80082e0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80082e2:	68d2      	ldr	r2, [r2, #12]
 80082e4:	6852      	ldr	r2, [r2, #4]
 80082e6:	e7f8      	b.n	80082da <prvResetNextTaskUnblockTime+0xe>
 80082e8:	20009c88 	.word	0x20009c88
 80082ec:	2000a12c 	.word	0x2000a12c

080082f0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80082f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082f4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80082f8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80082fc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80082fe:	4606      	mov	r6, r0
 8008300:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008302:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008304:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008306:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008308:	f013 fc76 	bl	801bbf8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800830c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800830e:	f1a9 0904 	sub.w	r9, r9, #4
 8008312:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008314:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008318:	2d00      	cmp	r5, #0
 800831a:	d037      	beq.n	800838c <prvInitialiseNewTask.isra.0+0x9c>
 800831c:	1e6b      	subs	r3, r5, #1
 800831e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008322:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008324:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008328:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800832c:	7819      	ldrb	r1, [r3, #0]
 800832e:	b109      	cbz	r1, 8008334 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008330:	42ab      	cmp	r3, r5
 8008332:	d1f7      	bne.n	8008324 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008334:	2300      	movs	r3, #0
 8008336:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800833a:	9d08      	ldr	r5, [sp, #32]
 800833c:	2d37      	cmp	r5, #55	; 0x37
 800833e:	bf28      	it	cs
 8008340:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008342:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008346:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008348:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800834a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800834c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008350:	f7ff f851 	bl	80073f6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008354:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008358:	f104 0018 	add.w	r0, r4, #24
 800835c:	f7ff f84b 	bl	80073f6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008360:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008364:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008366:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008368:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800836a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800836e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008372:	463a      	mov	r2, r7
 8008374:	4631      	mov	r1, r6
 8008376:	4648      	mov	r0, r9
 8008378:	f7ff f8b2 	bl	80074e0 <pxPortInitialiseStack>
 800837c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800837e:	f1b8 0f00 	cmp.w	r8, #0
 8008382:	d001      	beq.n	8008388 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008384:	f8c8 4000 	str.w	r4, [r8]
}
 8008388:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800838c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008390:	e7d3      	b.n	800833a <prvInitialiseNewTask.isra.0+0x4a>

08008392 <prvDeleteTCB>:
	{
 8008392:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008394:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008398:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800839a:	b93b      	cbnz	r3, 80083ac <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800839c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800839e:	f7fe ffe1 	bl	8007364 <vPortFree>
				vPortFree( pxTCB );
 80083a2:	4620      	mov	r0, r4
	}
 80083a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80083a8:	f7fe bfdc 	b.w	8007364 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80083ac:	2b01      	cmp	r3, #1
 80083ae:	d0f9      	beq.n	80083a4 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80083b0:	2b02      	cmp	r3, #2
 80083b2:	d008      	beq.n	80083c6 <prvDeleteTCB+0x34>
 80083b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b8:	f383 8811 	msr	BASEPRI, r3
 80083bc:	f3bf 8f6f 	isb	sy
 80083c0:	f3bf 8f4f 	dsb	sy
 80083c4:	e7fe      	b.n	80083c4 <prvDeleteTCB+0x32>
	}
 80083c6:	bd10      	pop	{r4, pc}

080083c8 <prvIdleTask>:
{
 80083c8:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083ca:	4e14      	ldr	r6, [pc, #80]	; (800841c <prvIdleTask+0x54>)
				taskYIELD();
 80083cc:	4f14      	ldr	r7, [pc, #80]	; (8008420 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80083ce:	4c15      	ldr	r4, [pc, #84]	; (8008424 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 80083d0:	4d15      	ldr	r5, [pc, #84]	; (8008428 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80083d2:	6823      	ldr	r3, [r4, #0]
 80083d4:	b96b      	cbnz	r3, 80083f2 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80083d6:	4b15      	ldr	r3, [pc, #84]	; (800842c <prvIdleTask+0x64>)
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	2b01      	cmp	r3, #1
 80083dc:	d906      	bls.n	80083ec <prvIdleTask+0x24>
				taskYIELD();
 80083de:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80083e2:	603b      	str	r3, [r7, #0]
 80083e4:	f3bf 8f4f 	dsb	sy
 80083e8:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80083ec:	f7f8 fff8 	bl	80013e0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80083f0:	e7ed      	b.n	80083ce <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80083f2:	f7ff f89f 	bl	8007534 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083f6:	68f3      	ldr	r3, [r6, #12]
 80083f8:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80083fc:	f108 0004 	add.w	r0, r8, #4
 8008400:	f7ff f81f 	bl	8007442 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008404:	682b      	ldr	r3, [r5, #0]
 8008406:	3b01      	subs	r3, #1
 8008408:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800840a:	6823      	ldr	r3, [r4, #0]
 800840c:	3b01      	subs	r3, #1
 800840e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008410:	f7ff f8b2 	bl	8007578 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008414:	4640      	mov	r0, r8
 8008416:	f7ff ffbc 	bl	8008392 <prvDeleteTCB>
 800841a:	e7da      	b.n	80083d2 <prvIdleTask+0xa>
 800841c:	2000a164 	.word	0x2000a164
 8008420:	e000ed04 	.word	0xe000ed04
 8008424:	2000a0f4 	.word	0x2000a0f4
 8008428:	2000a0f0 	.word	0x2000a0f0
 800842c:	20009c90 	.word	0x20009c90

08008430 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008432:	4b16      	ldr	r3, [pc, #88]	; (800848c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008434:	4e16      	ldr	r6, [pc, #88]	; (8008490 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008436:	681d      	ldr	r5, [r3, #0]
{
 8008438:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800843a:	6830      	ldr	r0, [r6, #0]
 800843c:	3004      	adds	r0, #4
{
 800843e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008440:	f7fe ffff 	bl	8007442 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008444:	1c63      	adds	r3, r4, #1
 8008446:	4633      	mov	r3, r6
 8008448:	d107      	bne.n	800845a <prvAddCurrentTaskToDelayedList+0x2a>
 800844a:	b137      	cbz	r7, 800845a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800844c:	6831      	ldr	r1, [r6, #0]
 800844e:	4811      	ldr	r0, [pc, #68]	; (8008494 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008450:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008454:	3104      	adds	r1, #4
 8008456:	f7fe bfd1 	b.w	80073fc <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800845a:	681a      	ldr	r2, [r3, #0]
 800845c:	192c      	adds	r4, r5, r4
 800845e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8008460:	d307      	bcc.n	8008472 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008462:	4a0d      	ldr	r2, [pc, #52]	; (8008498 <prvAddCurrentTaskToDelayedList+0x68>)
 8008464:	6810      	ldr	r0, [r2, #0]
 8008466:	6819      	ldr	r1, [r3, #0]
}
 8008468:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800846c:	3104      	adds	r1, #4
 800846e:	f7fe bfd1 	b.w	8007414 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008472:	4a0a      	ldr	r2, [pc, #40]	; (800849c <prvAddCurrentTaskToDelayedList+0x6c>)
 8008474:	6810      	ldr	r0, [r2, #0]
 8008476:	6819      	ldr	r1, [r3, #0]
 8008478:	3104      	adds	r1, #4
 800847a:	f7fe ffcb 	bl	8007414 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800847e:	4b08      	ldr	r3, [pc, #32]	; (80084a0 <prvAddCurrentTaskToDelayedList+0x70>)
 8008480:	681a      	ldr	r2, [r3, #0]
 8008482:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008484:	bf88      	it	hi
 8008486:	601c      	strhi	r4, [r3, #0]
}
 8008488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800848a:	bf00      	nop
 800848c:	2000a178 	.word	0x2000a178
 8008490:	20009c84 	.word	0x20009c84
 8008494:	2000a150 	.word	0x2000a150
 8008498:	20009c8c 	.word	0x20009c8c
 800849c:	20009c88 	.word	0x20009c88
 80084a0:	2000a12c 	.word	0x2000a12c

080084a4 <xTaskCreateStatic>:
	{
 80084a4:	b570      	push	{r4, r5, r6, lr}
 80084a6:	b086      	sub	sp, #24
 80084a8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80084ac:	b945      	cbnz	r5, 80084c0 <xTaskCreateStatic+0x1c>
 80084ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084b2:	f383 8811 	msr	BASEPRI, r3
 80084b6:	f3bf 8f6f 	isb	sy
 80084ba:	f3bf 8f4f 	dsb	sy
 80084be:	e7fe      	b.n	80084be <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80084c0:	b944      	cbnz	r4, 80084d4 <xTaskCreateStatic+0x30>
 80084c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084c6:	f383 8811 	msr	BASEPRI, r3
 80084ca:	f3bf 8f6f 	isb	sy
 80084ce:	f3bf 8f4f 	dsb	sy
 80084d2:	e7fe      	b.n	80084d2 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80084d4:	2660      	movs	r6, #96	; 0x60
 80084d6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80084d8:	9e05      	ldr	r6, [sp, #20]
 80084da:	2e60      	cmp	r6, #96	; 0x60
 80084dc:	d008      	beq.n	80084f0 <xTaskCreateStatic+0x4c>
 80084de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084e2:	f383 8811 	msr	BASEPRI, r3
 80084e6:	f3bf 8f6f 	isb	sy
 80084ea:	f3bf 8f4f 	dsb	sy
 80084ee:	e7fe      	b.n	80084ee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80084f0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80084f2:	2502      	movs	r5, #2
 80084f4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80084f8:	ad04      	add	r5, sp, #16
 80084fa:	9501      	str	r5, [sp, #4]
 80084fc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80084fe:	9402      	str	r4, [sp, #8]
 8008500:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008502:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008504:	f7ff fef4 	bl	80082f0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008508:	4620      	mov	r0, r4
 800850a:	f7ff fe5f 	bl	80081cc <prvAddNewTaskToReadyList>
	}
 800850e:	9804      	ldr	r0, [sp, #16]
 8008510:	b006      	add	sp, #24
 8008512:	bd70      	pop	{r4, r5, r6, pc}

08008514 <xTaskCreate>:
	{
 8008514:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008518:	4607      	mov	r7, r0
 800851a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800851c:	0090      	lsls	r0, r2, #2
	{
 800851e:	4688      	mov	r8, r1
 8008520:	4616      	mov	r6, r2
 8008522:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008524:	f7fe fe8c 	bl	8007240 <pvPortMalloc>
			if( pxStack != NULL )
 8008528:	4605      	mov	r5, r0
 800852a:	b1e8      	cbz	r0, 8008568 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800852c:	2060      	movs	r0, #96	; 0x60
 800852e:	f7fe fe87 	bl	8007240 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008532:	4604      	mov	r4, r0
 8008534:	b1a8      	cbz	r0, 8008562 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008536:	2300      	movs	r3, #0
 8008538:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800853c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800853e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008540:	9301      	str	r3, [sp, #4]
 8008542:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008544:	9002      	str	r0, [sp, #8]
 8008546:	9300      	str	r3, [sp, #0]
 8008548:	4632      	mov	r2, r6
 800854a:	464b      	mov	r3, r9
 800854c:	4641      	mov	r1, r8
 800854e:	4638      	mov	r0, r7
 8008550:	f7ff fece 	bl	80082f0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008554:	4620      	mov	r0, r4
 8008556:	f7ff fe39 	bl	80081cc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800855a:	2001      	movs	r0, #1
	}
 800855c:	b005      	add	sp, #20
 800855e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008562:	4628      	mov	r0, r5
 8008564:	f7fe fefe 	bl	8007364 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008568:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800856c:	e7f6      	b.n	800855c <xTaskCreate+0x48>
	...

08008570 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008570:	4a02      	ldr	r2, [pc, #8]	; (800857c <vTaskSuspendAll+0xc>)
 8008572:	6813      	ldr	r3, [r2, #0]
 8008574:	3301      	adds	r3, #1
 8008576:	6013      	str	r3, [r2, #0]
}
 8008578:	4770      	bx	lr
 800857a:	bf00      	nop
 800857c:	2000a0f8 	.word	0x2000a0f8

08008580 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008580:	4b01      	ldr	r3, [pc, #4]	; (8008588 <xTaskGetTickCount+0x8>)
 8008582:	6818      	ldr	r0, [r3, #0]
}
 8008584:	4770      	bx	lr
 8008586:	bf00      	nop
 8008588:	2000a178 	.word	0x2000a178

0800858c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800858c:	4b3f      	ldr	r3, [pc, #252]	; (800868c <xTaskIncrementTick+0x100>)
 800858e:	681b      	ldr	r3, [r3, #0]
{
 8008590:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008594:	2b00      	cmp	r3, #0
 8008596:	d173      	bne.n	8008680 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008598:	4b3d      	ldr	r3, [pc, #244]	; (8008690 <xTaskIncrementTick+0x104>)
 800859a:	681d      	ldr	r5, [r3, #0]
 800859c:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800859e:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80085a0:	b9bd      	cbnz	r5, 80085d2 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80085a2:	4b3c      	ldr	r3, [pc, #240]	; (8008694 <xTaskIncrementTick+0x108>)
 80085a4:	681a      	ldr	r2, [r3, #0]
 80085a6:	6812      	ldr	r2, [r2, #0]
 80085a8:	b142      	cbz	r2, 80085bc <xTaskIncrementTick+0x30>
 80085aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ae:	f383 8811 	msr	BASEPRI, r3
 80085b2:	f3bf 8f6f 	isb	sy
 80085b6:	f3bf 8f4f 	dsb	sy
 80085ba:	e7fe      	b.n	80085ba <xTaskIncrementTick+0x2e>
 80085bc:	4a36      	ldr	r2, [pc, #216]	; (8008698 <xTaskIncrementTick+0x10c>)
 80085be:	6819      	ldr	r1, [r3, #0]
 80085c0:	6810      	ldr	r0, [r2, #0]
 80085c2:	6018      	str	r0, [r3, #0]
 80085c4:	6011      	str	r1, [r2, #0]
 80085c6:	4a35      	ldr	r2, [pc, #212]	; (800869c <xTaskIncrementTick+0x110>)
 80085c8:	6813      	ldr	r3, [r2, #0]
 80085ca:	3301      	adds	r3, #1
 80085cc:	6013      	str	r3, [r2, #0]
 80085ce:	f7ff fe7d 	bl	80082cc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80085d2:	4e33      	ldr	r6, [pc, #204]	; (80086a0 <xTaskIncrementTick+0x114>)
 80085d4:	4f33      	ldr	r7, [pc, #204]	; (80086a4 <xTaskIncrementTick+0x118>)
 80085d6:	6833      	ldr	r3, [r6, #0]
 80085d8:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80086b0 <xTaskIncrementTick+0x124>
 80085dc:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 80085de:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80085e2:	d211      	bcs.n	8008608 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80085e4:	f8d8 3000 	ldr.w	r3, [r8]
 80085e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80085ea:	2314      	movs	r3, #20
 80085ec:	4353      	muls	r3, r2
 80085ee:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80085f0:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80085f2:	4b2d      	ldr	r3, [pc, #180]	; (80086a8 <xTaskIncrementTick+0x11c>)
 80085f4:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80085f6:	bf28      	it	cs
 80085f8:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80085fa:	2b00      	cmp	r3, #0
 80085fc:	bf18      	it	ne
 80085fe:	2401      	movne	r4, #1
}
 8008600:	4620      	mov	r0, r4
 8008602:	b003      	add	sp, #12
 8008604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008608:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008694 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800860c:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80086b4 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008610:	f8d9 3000 	ldr.w	r3, [r9]
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	b91b      	cbnz	r3, 8008620 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008618:	f04f 33ff 	mov.w	r3, #4294967295
 800861c:	6033      	str	r3, [r6, #0]
					break;
 800861e:	e7e1      	b.n	80085e4 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008620:	f8d9 3000 	ldr.w	r3, [r9]
 8008624:	68db      	ldr	r3, [r3, #12]
 8008626:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800862a:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800862e:	4295      	cmp	r5, r2
 8008630:	d201      	bcs.n	8008636 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008632:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008634:	e7d6      	b.n	80085e4 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008636:	f10b 0104 	add.w	r1, fp, #4
 800863a:	4608      	mov	r0, r1
 800863c:	9101      	str	r1, [sp, #4]
 800863e:	f7fe ff00 	bl	8007442 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008642:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008646:	9901      	ldr	r1, [sp, #4]
 8008648:	b122      	cbz	r2, 8008654 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800864a:	f10b 0018 	add.w	r0, fp, #24
 800864e:	f7fe fef8 	bl	8007442 <uxListRemove>
 8008652:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008654:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008658:	f8da 2000 	ldr.w	r2, [sl]
 800865c:	2314      	movs	r3, #20
 800865e:	4290      	cmp	r0, r2
 8008660:	bf88      	it	hi
 8008662:	f8ca 0000 	strhi.w	r0, [sl]
 8008666:	fb03 7000 	mla	r0, r3, r0, r7
 800866a:	f7fe fec7 	bl	80073fc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800866e:	f8d8 1000 	ldr.w	r1, [r8]
 8008672:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008676:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008678:	429a      	cmp	r2, r3
 800867a:	bf28      	it	cs
 800867c:	2401      	movcs	r4, #1
 800867e:	e7c7      	b.n	8008610 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008680:	4a0a      	ldr	r2, [pc, #40]	; (80086ac <xTaskIncrementTick+0x120>)
 8008682:	6813      	ldr	r3, [r2, #0]
 8008684:	3301      	adds	r3, #1
 8008686:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008688:	2400      	movs	r4, #0
	return xSwitchRequired;
 800868a:	e7b9      	b.n	8008600 <xTaskIncrementTick+0x74>
 800868c:	2000a0f8 	.word	0x2000a0f8
 8008690:	2000a178 	.word	0x2000a178
 8008694:	20009c88 	.word	0x20009c88
 8008698:	20009c8c 	.word	0x20009c8c
 800869c:	2000a130 	.word	0x2000a130
 80086a0:	2000a12c 	.word	0x2000a12c
 80086a4:	20009c90 	.word	0x20009c90
 80086a8:	2000a17c 	.word	0x2000a17c
 80086ac:	2000a134 	.word	0x2000a134
 80086b0:	20009c84 	.word	0x20009c84
 80086b4:	2000a100 	.word	0x2000a100

080086b8 <xTaskResumeAll>:
{
 80086b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80086ba:	4c30      	ldr	r4, [pc, #192]	; (800877c <xTaskResumeAll+0xc4>)
 80086bc:	6823      	ldr	r3, [r4, #0]
 80086be:	b943      	cbnz	r3, 80086d2 <xTaskResumeAll+0x1a>
 80086c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086c4:	f383 8811 	msr	BASEPRI, r3
 80086c8:	f3bf 8f6f 	isb	sy
 80086cc:	f3bf 8f4f 	dsb	sy
 80086d0:	e7fe      	b.n	80086d0 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80086d2:	f7fe ff2f 	bl	8007534 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80086d6:	6823      	ldr	r3, [r4, #0]
 80086d8:	3b01      	subs	r3, #1
 80086da:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80086dc:	6824      	ldr	r4, [r4, #0]
 80086de:	b12c      	cbz	r4, 80086ec <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80086e0:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80086e2:	f7fe ff49 	bl	8007578 <vPortExitCritical>
}
 80086e6:	4620      	mov	r0, r4
 80086e8:	b003      	add	sp, #12
 80086ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80086ec:	4b24      	ldr	r3, [pc, #144]	; (8008780 <xTaskResumeAll+0xc8>)
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	2b00      	cmp	r3, #0
 80086f2:	d0f5      	beq.n	80086e0 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80086f4:	4d23      	ldr	r5, [pc, #140]	; (8008784 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80086f6:	4e24      	ldr	r6, [pc, #144]	; (8008788 <xTaskResumeAll+0xd0>)
 80086f8:	4f24      	ldr	r7, [pc, #144]	; (800878c <xTaskResumeAll+0xd4>)
 80086fa:	e01e      	b.n	800873a <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086fc:	68eb      	ldr	r3, [r5, #12]
 80086fe:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008700:	f104 0018 	add.w	r0, r4, #24
 8008704:	f7fe fe9d 	bl	8007442 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008708:	1d21      	adds	r1, r4, #4
 800870a:	4608      	mov	r0, r1
 800870c:	9101      	str	r1, [sp, #4]
 800870e:	f7fe fe98 	bl	8007442 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008712:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008714:	6832      	ldr	r2, [r6, #0]
 8008716:	9901      	ldr	r1, [sp, #4]
 8008718:	2014      	movs	r0, #20
 800871a:	4293      	cmp	r3, r2
 800871c:	fb00 7003 	mla	r0, r0, r3, r7
 8008720:	bf88      	it	hi
 8008722:	6033      	strhi	r3, [r6, #0]
 8008724:	f7fe fe6a 	bl	80073fc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008728:	4b19      	ldr	r3, [pc, #100]	; (8008790 <xTaskResumeAll+0xd8>)
 800872a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800872c:	681b      	ldr	r3, [r3, #0]
 800872e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008730:	429a      	cmp	r2, r3
 8008732:	d302      	bcc.n	800873a <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008734:	4b17      	ldr	r3, [pc, #92]	; (8008794 <xTaskResumeAll+0xdc>)
 8008736:	2201      	movs	r2, #1
 8008738:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800873a:	682b      	ldr	r3, [r5, #0]
 800873c:	2b00      	cmp	r3, #0
 800873e:	d1dd      	bne.n	80086fc <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008740:	b10c      	cbz	r4, 8008746 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008742:	f7ff fdc3 	bl	80082cc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008746:	4d14      	ldr	r5, [pc, #80]	; (8008798 <xTaskResumeAll+0xe0>)
 8008748:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800874a:	b144      	cbz	r4, 800875e <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800874c:	4e11      	ldr	r6, [pc, #68]	; (8008794 <xTaskResumeAll+0xdc>)
 800874e:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008750:	f7ff ff1c 	bl	800858c <xTaskIncrementTick>
 8008754:	b100      	cbz	r0, 8008758 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008756:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008758:	3c01      	subs	r4, #1
 800875a:	d1f9      	bne.n	8008750 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800875c:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800875e:	4b0d      	ldr	r3, [pc, #52]	; (8008794 <xTaskResumeAll+0xdc>)
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	2b00      	cmp	r3, #0
 8008764:	d0bc      	beq.n	80086e0 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008766:	4b0d      	ldr	r3, [pc, #52]	; (800879c <xTaskResumeAll+0xe4>)
 8008768:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800876c:	601a      	str	r2, [r3, #0]
 800876e:	f3bf 8f4f 	dsb	sy
 8008772:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008776:	2401      	movs	r4, #1
 8008778:	e7b3      	b.n	80086e2 <xTaskResumeAll+0x2a>
 800877a:	bf00      	nop
 800877c:	2000a0f8 	.word	0x2000a0f8
 8008780:	2000a0f0 	.word	0x2000a0f0
 8008784:	2000a138 	.word	0x2000a138
 8008788:	2000a100 	.word	0x2000a100
 800878c:	20009c90 	.word	0x20009c90
 8008790:	20009c84 	.word	0x20009c84
 8008794:	2000a17c 	.word	0x2000a17c
 8008798:	2000a134 	.word	0x2000a134
 800879c:	e000ed04 	.word	0xe000ed04

080087a0 <vTaskDelay>:
	{
 80087a0:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80087a2:	b940      	cbnz	r0, 80087b6 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 80087a4:	4b0e      	ldr	r3, [pc, #56]	; (80087e0 <vTaskDelay+0x40>)
 80087a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087aa:	601a      	str	r2, [r3, #0]
 80087ac:	f3bf 8f4f 	dsb	sy
 80087b0:	f3bf 8f6f 	isb	sy
	}
 80087b4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80087b6:	4b0b      	ldr	r3, [pc, #44]	; (80087e4 <vTaskDelay+0x44>)
 80087b8:	6819      	ldr	r1, [r3, #0]
 80087ba:	b141      	cbz	r1, 80087ce <vTaskDelay+0x2e>
 80087bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087c0:	f383 8811 	msr	BASEPRI, r3
 80087c4:	f3bf 8f6f 	isb	sy
 80087c8:	f3bf 8f4f 	dsb	sy
 80087cc:	e7fe      	b.n	80087cc <vTaskDelay+0x2c>
			vTaskSuspendAll();
 80087ce:	f7ff fecf 	bl	8008570 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80087d2:	f7ff fe2d 	bl	8008430 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80087d6:	f7ff ff6f 	bl	80086b8 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80087da:	2800      	cmp	r0, #0
 80087dc:	d0e2      	beq.n	80087a4 <vTaskDelay+0x4>
 80087de:	e7e9      	b.n	80087b4 <vTaskDelay+0x14>
 80087e0:	e000ed04 	.word	0xe000ed04
 80087e4:	2000a0f8 	.word	0x2000a0f8

080087e8 <vTaskSetApplicationTaskTag>:
	{
 80087e8:	b538      	push	{r3, r4, r5, lr}
 80087ea:	460d      	mov	r5, r1
		if( xTask == NULL )
 80087ec:	4604      	mov	r4, r0
 80087ee:	b908      	cbnz	r0, 80087f4 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80087f0:	4b04      	ldr	r3, [pc, #16]	; (8008804 <vTaskSetApplicationTaskTag+0x1c>)
 80087f2:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80087f4:	f7fe fe9e 	bl	8007534 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80087f8:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80087fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80087fe:	f7fe bebb 	b.w	8007578 <vPortExitCritical>
 8008802:	bf00      	nop
 8008804:	20009c84 	.word	0x20009c84

08008808 <xTaskCallApplicationTaskHook>:
	{
 8008808:	4603      	mov	r3, r0
 800880a:	4608      	mov	r0, r1
		if( xTask == NULL )
 800880c:	b90b      	cbnz	r3, 8008812 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800880e:	4b03      	ldr	r3, [pc, #12]	; (800881c <xTaskCallApplicationTaskHook+0x14>)
 8008810:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8008812:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008814:	b103      	cbz	r3, 8008818 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008816:	4718      	bx	r3
	}
 8008818:	4618      	mov	r0, r3
 800881a:	4770      	bx	lr
 800881c:	20009c84 	.word	0x20009c84

08008820 <vTaskStartScheduler>:
{
 8008820:	b510      	push	{r4, lr}
 8008822:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008824:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008826:	aa07      	add	r2, sp, #28
 8008828:	a906      	add	r1, sp, #24
 800882a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800882c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008830:	f7fe fcca 	bl	80071c8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008834:	9b05      	ldr	r3, [sp, #20]
 8008836:	9302      	str	r3, [sp, #8]
 8008838:	9b06      	ldr	r3, [sp, #24]
 800883a:	9a07      	ldr	r2, [sp, #28]
 800883c:	4917      	ldr	r1, [pc, #92]	; (800889c <vTaskStartScheduler+0x7c>)
 800883e:	4818      	ldr	r0, [pc, #96]	; (80088a0 <vTaskStartScheduler+0x80>)
 8008840:	e9cd 4300 	strd	r4, r3, [sp]
 8008844:	4623      	mov	r3, r4
 8008846:	f7ff fe2d 	bl	80084a4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800884a:	b1d0      	cbz	r0, 8008882 <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
 800884c:	f000 fa88 	bl	8008d60 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008850:	2801      	cmp	r0, #1
 8008852:	d118      	bne.n	8008886 <vTaskStartScheduler+0x66>
 8008854:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008858:	f383 8811 	msr	BASEPRI, r3
 800885c:	f3bf 8f6f 	isb	sy
 8008860:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008864:	4b0f      	ldr	r3, [pc, #60]	; (80088a4 <vTaskStartScheduler+0x84>)
 8008866:	f04f 32ff 	mov.w	r2, #4294967295
 800886a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800886c:	4b0e      	ldr	r3, [pc, #56]	; (80088a8 <vTaskStartScheduler+0x88>)
 800886e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008870:	4b0e      	ldr	r3, [pc, #56]	; (80088ac <vTaskStartScheduler+0x8c>)
 8008872:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008874:	4b0e      	ldr	r3, [pc, #56]	; (80088b0 <vTaskStartScheduler+0x90>)
 8008876:	4621      	mov	r1, r4
 8008878:	6818      	ldr	r0, [r3, #0]
 800887a:	f7ff ffc5 	bl	8008808 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800887e:	f7fe fef1 	bl	8007664 <xPortStartScheduler>
}
 8008882:	b008      	add	sp, #32
 8008884:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008886:	3001      	adds	r0, #1
 8008888:	d1fb      	bne.n	8008882 <vTaskStartScheduler+0x62>
 800888a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800888e:	f383 8811 	msr	BASEPRI, r3
 8008892:	f3bf 8f6f 	isb	sy
 8008896:	f3bf 8f4f 	dsb	sy
 800889a:	e7fe      	b.n	800889a <vTaskStartScheduler+0x7a>
 800889c:	0801dd11 	.word	0x0801dd11
 80088a0:	080083c9 	.word	0x080083c9
 80088a4:	2000a12c 	.word	0x2000a12c
 80088a8:	2000a14c 	.word	0x2000a14c
 80088ac:	2000a178 	.word	0x2000a178
 80088b0:	20009c84 	.word	0x20009c84

080088b4 <vTaskSwitchContext>:
{
 80088b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80088b6:	4b1d      	ldr	r3, [pc, #116]	; (800892c <vTaskSwitchContext+0x78>)
 80088b8:	681a      	ldr	r2, [r3, #0]
 80088ba:	4b1d      	ldr	r3, [pc, #116]	; (8008930 <vTaskSwitchContext+0x7c>)
 80088bc:	b112      	cbz	r2, 80088c4 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80088be:	2201      	movs	r2, #1
 80088c0:	601a      	str	r2, [r3, #0]
}
 80088c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80088c4:	4e1b      	ldr	r6, [pc, #108]	; (8008934 <vTaskSwitchContext+0x80>)
		xYieldPending = pdFALSE;
 80088c6:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 80088c8:	6830      	ldr	r0, [r6, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80088ca:	4d1b      	ldr	r5, [pc, #108]	; (8008938 <vTaskSwitchContext+0x84>)
		traceTASK_SWITCHED_OUT();
 80088cc:	2101      	movs	r1, #1
 80088ce:	f7ff ff9b 	bl	8008808 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80088d2:	4a1a      	ldr	r2, [pc, #104]	; (800893c <vTaskSwitchContext+0x88>)
 80088d4:	682b      	ldr	r3, [r5, #0]
 80088d6:	f04f 0c14 	mov.w	ip, #20
 80088da:	4617      	mov	r7, r2
 80088dc:	fb0c f103 	mul.w	r1, ip, r3
 80088e0:	1850      	adds	r0, r2, r1
 80088e2:	5854      	ldr	r4, [r2, r1]
 80088e4:	b1ac      	cbz	r4, 8008912 <vTaskSwitchContext+0x5e>
 80088e6:	6844      	ldr	r4, [r0, #4]
 80088e8:	3108      	adds	r1, #8
 80088ea:	6864      	ldr	r4, [r4, #4]
 80088ec:	6044      	str	r4, [r0, #4]
 80088ee:	440a      	add	r2, r1
 80088f0:	4294      	cmp	r4, r2
 80088f2:	bf04      	itt	eq
 80088f4:	6862      	ldreq	r2, [r4, #4]
 80088f6:	6042      	streq	r2, [r0, #4]
 80088f8:	2214      	movs	r2, #20
 80088fa:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 80088fe:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008900:	6852      	ldr	r2, [r2, #4]
 8008902:	68d2      	ldr	r2, [r2, #12]
 8008904:	6032      	str	r2, [r6, #0]
 8008906:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 8008908:	6830      	ldr	r0, [r6, #0]
}
 800890a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800890e:	f7ff bf7b 	b.w	8008808 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008912:	b943      	cbnz	r3, 8008926 <vTaskSwitchContext+0x72>
 8008914:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008918:	f383 8811 	msr	BASEPRI, r3
 800891c:	f3bf 8f6f 	isb	sy
 8008920:	f3bf 8f4f 	dsb	sy
 8008924:	e7fe      	b.n	8008924 <vTaskSwitchContext+0x70>
 8008926:	3b01      	subs	r3, #1
 8008928:	e7d8      	b.n	80088dc <vTaskSwitchContext+0x28>
 800892a:	bf00      	nop
 800892c:	2000a0f8 	.word	0x2000a0f8
 8008930:	2000a17c 	.word	0x2000a17c
 8008934:	20009c84 	.word	0x20009c84
 8008938:	2000a100 	.word	0x2000a100
 800893c:	20009c90 	.word	0x20009c90

08008940 <vTaskPlaceOnEventList>:
{
 8008940:	b510      	push	{r4, lr}
 8008942:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008944:	b940      	cbnz	r0, 8008958 <vTaskPlaceOnEventList+0x18>
 8008946:	f04f 0350 	mov.w	r3, #80	; 0x50
 800894a:	f383 8811 	msr	BASEPRI, r3
 800894e:	f3bf 8f6f 	isb	sy
 8008952:	f3bf 8f4f 	dsb	sy
 8008956:	e7fe      	b.n	8008956 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008958:	4b05      	ldr	r3, [pc, #20]	; (8008970 <vTaskPlaceOnEventList+0x30>)
 800895a:	6819      	ldr	r1, [r3, #0]
 800895c:	3118      	adds	r1, #24
 800895e:	f7fe fd59 	bl	8007414 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008962:	4620      	mov	r0, r4
 8008964:	2101      	movs	r1, #1
}
 8008966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800896a:	f7ff bd61 	b.w	8008430 <prvAddCurrentTaskToDelayedList>
 800896e:	bf00      	nop
 8008970:	20009c84 	.word	0x20009c84

08008974 <vTaskPlaceOnEventListRestricted>:
	{
 8008974:	b538      	push	{r3, r4, r5, lr}
 8008976:	460d      	mov	r5, r1
 8008978:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800897a:	b940      	cbnz	r0, 800898e <vTaskPlaceOnEventListRestricted+0x1a>
 800897c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008980:	f383 8811 	msr	BASEPRI, r3
 8008984:	f3bf 8f6f 	isb	sy
 8008988:	f3bf 8f4f 	dsb	sy
 800898c:	e7fe      	b.n	800898c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800898e:	4b07      	ldr	r3, [pc, #28]	; (80089ac <vTaskPlaceOnEventListRestricted+0x38>)
 8008990:	6819      	ldr	r1, [r3, #0]
 8008992:	3118      	adds	r1, #24
 8008994:	f7fe fd32 	bl	80073fc <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008998:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800899a:	4621      	mov	r1, r4
 800899c:	bf0c      	ite	eq
 800899e:	4628      	moveq	r0, r5
 80089a0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80089a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80089a8:	f7ff bd42 	b.w	8008430 <prvAddCurrentTaskToDelayedList>
 80089ac:	20009c84 	.word	0x20009c84

080089b0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089b0:	68c3      	ldr	r3, [r0, #12]
{
 80089b2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089b4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80089b6:	b944      	cbnz	r4, 80089ca <xTaskRemoveFromEventList+0x1a>
 80089b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089bc:	f383 8811 	msr	BASEPRI, r3
 80089c0:	f3bf 8f6f 	isb	sy
 80089c4:	f3bf 8f4f 	dsb	sy
 80089c8:	e7fe      	b.n	80089c8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80089ca:	f104 0118 	add.w	r1, r4, #24
 80089ce:	4608      	mov	r0, r1
 80089d0:	9101      	str	r1, [sp, #4]
 80089d2:	f7fe fd36 	bl	8007442 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80089d6:	4b12      	ldr	r3, [pc, #72]	; (8008a20 <xTaskRemoveFromEventList+0x70>)
 80089d8:	9901      	ldr	r1, [sp, #4]
 80089da:	681b      	ldr	r3, [r3, #0]
 80089dc:	b9eb      	cbnz	r3, 8008a1a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80089de:	1d21      	adds	r1, r4, #4
 80089e0:	4608      	mov	r0, r1
 80089e2:	9101      	str	r1, [sp, #4]
 80089e4:	f7fe fd2d 	bl	8007442 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80089e8:	4a0e      	ldr	r2, [pc, #56]	; (8008a24 <xTaskRemoveFromEventList+0x74>)
 80089ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80089ec:	6810      	ldr	r0, [r2, #0]
 80089ee:	9901      	ldr	r1, [sp, #4]
 80089f0:	4283      	cmp	r3, r0
 80089f2:	bf88      	it	hi
 80089f4:	6013      	strhi	r3, [r2, #0]
 80089f6:	4a0c      	ldr	r2, [pc, #48]	; (8008a28 <xTaskRemoveFromEventList+0x78>)
 80089f8:	2014      	movs	r0, #20
 80089fa:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80089fe:	f7fe fcfd 	bl	80073fc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008a02:	4b0a      	ldr	r3, [pc, #40]	; (8008a2c <xTaskRemoveFromEventList+0x7c>)
 8008a04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008a06:	681b      	ldr	r3, [r3, #0]
 8008a08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a0a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008a0c:	bf85      	ittet	hi
 8008a0e:	4b08      	ldrhi	r3, [pc, #32]	; (8008a30 <xTaskRemoveFromEventList+0x80>)
 8008a10:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008a12:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008a14:	6018      	strhi	r0, [r3, #0]
}
 8008a16:	b002      	add	sp, #8
 8008a18:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008a1a:	4806      	ldr	r0, [pc, #24]	; (8008a34 <xTaskRemoveFromEventList+0x84>)
 8008a1c:	e7ef      	b.n	80089fe <xTaskRemoveFromEventList+0x4e>
 8008a1e:	bf00      	nop
 8008a20:	2000a0f8 	.word	0x2000a0f8
 8008a24:	2000a100 	.word	0x2000a100
 8008a28:	20009c90 	.word	0x20009c90
 8008a2c:	20009c84 	.word	0x20009c84
 8008a30:	2000a17c 	.word	0x2000a17c
 8008a34:	2000a138 	.word	0x2000a138

08008a38 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008a38:	4b03      	ldr	r3, [pc, #12]	; (8008a48 <vTaskInternalSetTimeOutState+0x10>)
 8008a3a:	681b      	ldr	r3, [r3, #0]
 8008a3c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008a3e:	4b03      	ldr	r3, [pc, #12]	; (8008a4c <vTaskInternalSetTimeOutState+0x14>)
 8008a40:	681b      	ldr	r3, [r3, #0]
 8008a42:	6043      	str	r3, [r0, #4]
}
 8008a44:	4770      	bx	lr
 8008a46:	bf00      	nop
 8008a48:	2000a130 	.word	0x2000a130
 8008a4c:	2000a178 	.word	0x2000a178

08008a50 <xTaskCheckForTimeOut>:
{
 8008a50:	b570      	push	{r4, r5, r6, lr}
 8008a52:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008a54:	4605      	mov	r5, r0
 8008a56:	b940      	cbnz	r0, 8008a6a <xTaskCheckForTimeOut+0x1a>
 8008a58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5c:	f383 8811 	msr	BASEPRI, r3
 8008a60:	f3bf 8f6f 	isb	sy
 8008a64:	f3bf 8f4f 	dsb	sy
 8008a68:	e7fe      	b.n	8008a68 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008a6a:	b941      	cbnz	r1, 8008a7e <xTaskCheckForTimeOut+0x2e>
 8008a6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a70:	f383 8811 	msr	BASEPRI, r3
 8008a74:	f3bf 8f6f 	isb	sy
 8008a78:	f3bf 8f4f 	dsb	sy
 8008a7c:	e7fe      	b.n	8008a7c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008a7e:	f7fe fd59 	bl	8007534 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008a82:	4b0f      	ldr	r3, [pc, #60]	; (8008ac0 <xTaskCheckForTimeOut+0x70>)
 8008a84:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008a86:	6823      	ldr	r3, [r4, #0]
 8008a88:	1c5a      	adds	r2, r3, #1
 8008a8a:	d010      	beq.n	8008aae <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008a8c:	480d      	ldr	r0, [pc, #52]	; (8008ac4 <xTaskCheckForTimeOut+0x74>)
 8008a8e:	682e      	ldr	r6, [r5, #0]
 8008a90:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008a92:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008a94:	4286      	cmp	r6, r0
 8008a96:	d001      	beq.n	8008a9c <xTaskCheckForTimeOut+0x4c>
 8008a98:	428a      	cmp	r2, r1
 8008a9a:	d90f      	bls.n	8008abc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008a9c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008a9e:	4283      	cmp	r3, r0
 8008aa0:	d90a      	bls.n	8008ab8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008aa2:	1a5b      	subs	r3, r3, r1
 8008aa4:	4413      	add	r3, r2
 8008aa6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008aa8:	4628      	mov	r0, r5
 8008aaa:	f7ff ffc5 	bl	8008a38 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008aae:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008ab0:	f7fe fd62 	bl	8007578 <vPortExitCritical>
}
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008ab8:	2300      	movs	r3, #0
 8008aba:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008abc:	2401      	movs	r4, #1
 8008abe:	e7f7      	b.n	8008ab0 <xTaskCheckForTimeOut+0x60>
 8008ac0:	2000a178 	.word	0x2000a178
 8008ac4:	2000a130 	.word	0x2000a130

08008ac8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008ac8:	4b01      	ldr	r3, [pc, #4]	; (8008ad0 <vTaskMissedYield+0x8>)
 8008aca:	2201      	movs	r2, #1
 8008acc:	601a      	str	r2, [r3, #0]
}
 8008ace:	4770      	bx	lr
 8008ad0:	2000a17c 	.word	0x2000a17c

08008ad4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008ad4:	4b05      	ldr	r3, [pc, #20]	; (8008aec <xTaskGetSchedulerState+0x18>)
 8008ad6:	681b      	ldr	r3, [r3, #0]
 8008ad8:	b133      	cbz	r3, 8008ae8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008ada:	4b05      	ldr	r3, [pc, #20]	; (8008af0 <xTaskGetSchedulerState+0x1c>)
 8008adc:	681b      	ldr	r3, [r3, #0]
 8008ade:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008ae0:	bf0c      	ite	eq
 8008ae2:	2002      	moveq	r0, #2
 8008ae4:	2000      	movne	r0, #0
 8008ae6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008ae8:	2001      	movs	r0, #1
	}
 8008aea:	4770      	bx	lr
 8008aec:	2000a14c 	.word	0x2000a14c
 8008af0:	2000a0f8 	.word	0x2000a0f8

08008af4 <xTaskPriorityInherit>:
	{
 8008af4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008af6:	4604      	mov	r4, r0
 8008af8:	b350      	cbz	r0, 8008b50 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008afa:	4a1c      	ldr	r2, [pc, #112]	; (8008b6c <xTaskPriorityInherit+0x78>)
 8008afc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008afe:	6811      	ldr	r1, [r2, #0]
 8008b00:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008b02:	428b      	cmp	r3, r1
 8008b04:	4616      	mov	r6, r2
 8008b06:	d229      	bcs.n	8008b5c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008b08:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008b0a:	4d19      	ldr	r5, [pc, #100]	; (8008b70 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008b0c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b0e:	bfa1      	itttt	ge
 8008b10:	6832      	ldrge	r2, [r6, #0]
 8008b12:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008b14:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008b18:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008b1a:	2214      	movs	r2, #20
 8008b1c:	fb02 5303 	mla	r3, r2, r3, r5
 8008b20:	6942      	ldr	r2, [r0, #20]
 8008b22:	429a      	cmp	r2, r3
 8008b24:	d116      	bne.n	8008b54 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008b26:	1d01      	adds	r1, r0, #4
 8008b28:	4608      	mov	r0, r1
 8008b2a:	9101      	str	r1, [sp, #4]
 8008b2c:	f7fe fc89 	bl	8007442 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008b30:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008b32:	4a10      	ldr	r2, [pc, #64]	; (8008b74 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008b34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008b36:	6810      	ldr	r0, [r2, #0]
 8008b38:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008b3a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008b3c:	4283      	cmp	r3, r0
 8008b3e:	f04f 0014 	mov.w	r0, #20
 8008b42:	fb00 5003 	mla	r0, r0, r3, r5
 8008b46:	bf88      	it	hi
 8008b48:	6013      	strhi	r3, [r2, #0]
 8008b4a:	f7fe fc57 	bl	80073fc <vListInsertEnd>
				xReturn = pdTRUE;
 8008b4e:	2001      	movs	r0, #1
	}
 8008b50:	b002      	add	sp, #8
 8008b52:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008b54:	6833      	ldr	r3, [r6, #0]
 8008b56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b58:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008b5a:	e7f8      	b.n	8008b4e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008b5c:	6813      	ldr	r3, [r2, #0]
 8008b5e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008b60:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008b62:	42a0      	cmp	r0, r4
 8008b64:	bf2c      	ite	cs
 8008b66:	2000      	movcs	r0, #0
 8008b68:	2001      	movcc	r0, #1
 8008b6a:	e7f1      	b.n	8008b50 <xTaskPriorityInherit+0x5c>
 8008b6c:	20009c84 	.word	0x20009c84
 8008b70:	20009c90 	.word	0x20009c90
 8008b74:	2000a100 	.word	0x2000a100

08008b78 <xTaskPriorityDisinherit>:
	{
 8008b78:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008b7a:	b910      	cbnz	r0, 8008b82 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008b7c:	2000      	movs	r0, #0
	}
 8008b7e:	b002      	add	sp, #8
 8008b80:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008b82:	4b1c      	ldr	r3, [pc, #112]	; (8008bf4 <xTaskPriorityDisinherit+0x7c>)
 8008b84:	681c      	ldr	r4, [r3, #0]
 8008b86:	4284      	cmp	r4, r0
 8008b88:	d008      	beq.n	8008b9c <xTaskPriorityDisinherit+0x24>
 8008b8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b8e:	f383 8811 	msr	BASEPRI, r3
 8008b92:	f3bf 8f6f 	isb	sy
 8008b96:	f3bf 8f4f 	dsb	sy
 8008b9a:	e7fe      	b.n	8008b9a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008b9c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008b9e:	b943      	cbnz	r3, 8008bb2 <xTaskPriorityDisinherit+0x3a>
 8008ba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ba4:	f383 8811 	msr	BASEPRI, r3
 8008ba8:	f3bf 8f6f 	isb	sy
 8008bac:	f3bf 8f4f 	dsb	sy
 8008bb0:	e7fe      	b.n	8008bb0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008bb2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008bb4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008bb6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008bb8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008bba:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008bbc:	d0de      	beq.n	8008b7c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008bbe:	2b00      	cmp	r3, #0
 8008bc0:	d1dc      	bne.n	8008b7c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bc2:	1d21      	adds	r1, r4, #4
 8008bc4:	4608      	mov	r0, r1
 8008bc6:	9101      	str	r1, [sp, #4]
 8008bc8:	f7fe fc3b 	bl	8007442 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008bcc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008bce:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008bd0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bd2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008bd6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008bd8:	4a07      	ldr	r2, [pc, #28]	; (8008bf8 <xTaskPriorityDisinherit+0x80>)
 8008bda:	6810      	ldr	r0, [r2, #0]
 8008bdc:	4283      	cmp	r3, r0
 8008bde:	bf88      	it	hi
 8008be0:	6013      	strhi	r3, [r2, #0]
 8008be2:	4a06      	ldr	r2, [pc, #24]	; (8008bfc <xTaskPriorityDisinherit+0x84>)
 8008be4:	2014      	movs	r0, #20
 8008be6:	fb00 2003 	mla	r0, r0, r3, r2
 8008bea:	f7fe fc07 	bl	80073fc <vListInsertEnd>
					xReturn = pdTRUE;
 8008bee:	2001      	movs	r0, #1
		return xReturn;
 8008bf0:	e7c5      	b.n	8008b7e <xTaskPriorityDisinherit+0x6>
 8008bf2:	bf00      	nop
 8008bf4:	20009c84 	.word	0x20009c84
 8008bf8:	2000a100 	.word	0x2000a100
 8008bfc:	20009c90 	.word	0x20009c90

08008c00 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008c00:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008c02:	4604      	mov	r4, r0
 8008c04:	2800      	cmp	r0, #0
 8008c06:	d044      	beq.n	8008c92 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008c08:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008c0a:	b942      	cbnz	r2, 8008c1e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c10:	f383 8811 	msr	BASEPRI, r3
 8008c14:	f3bf 8f6f 	isb	sy
 8008c18:	f3bf 8f4f 	dsb	sy
 8008c1c:	e7fe      	b.n	8008c1c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008c1e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008c20:	4299      	cmp	r1, r3
 8008c22:	bf38      	it	cc
 8008c24:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008c26:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008c28:	428b      	cmp	r3, r1
 8008c2a:	d032      	beq.n	8008c92 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008c2c:	2a01      	cmp	r2, #1
 8008c2e:	d130      	bne.n	8008c92 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008c30:	4a19      	ldr	r2, [pc, #100]	; (8008c98 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008c32:	6812      	ldr	r2, [r2, #0]
 8008c34:	4282      	cmp	r2, r0
 8008c36:	d108      	bne.n	8008c4a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008c38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3c:	f383 8811 	msr	BASEPRI, r3
 8008c40:	f3bf 8f6f 	isb	sy
 8008c44:	f3bf 8f4f 	dsb	sy
 8008c48:	e7fe      	b.n	8008c48 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008c4a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008c4c:	4d13      	ldr	r5, [pc, #76]	; (8008c9c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008c4e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008c50:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008c52:	f04f 0214 	mov.w	r2, #20
 8008c56:	fb02 5303 	mla	r3, r2, r3, r5
 8008c5a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c5c:	bfa4      	itt	ge
 8008c5e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008c62:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008c64:	429a      	cmp	r2, r3
 8008c66:	d114      	bne.n	8008c92 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008c68:	1d01      	adds	r1, r0, #4
 8008c6a:	4608      	mov	r0, r1
 8008c6c:	9101      	str	r1, [sp, #4]
 8008c6e:	f7fe fbe8 	bl	8007442 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008c72:	4a0b      	ldr	r2, [pc, #44]	; (8008ca0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008c74:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008c76:	6810      	ldr	r0, [r2, #0]
 8008c78:	9901      	ldr	r1, [sp, #4]
 8008c7a:	4283      	cmp	r3, r0
 8008c7c:	f04f 0014 	mov.w	r0, #20
 8008c80:	fb00 5003 	mla	r0, r0, r3, r5
 8008c84:	bf88      	it	hi
 8008c86:	6013      	strhi	r3, [r2, #0]
	}
 8008c88:	b003      	add	sp, #12
 8008c8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008c8e:	f7fe bbb5 	b.w	80073fc <vListInsertEnd>
	}
 8008c92:	b003      	add	sp, #12
 8008c94:	bd30      	pop	{r4, r5, pc}
 8008c96:	bf00      	nop
 8008c98:	20009c84 	.word	0x20009c84
 8008c9c:	20009c90 	.word	0x20009c90
 8008ca0:	2000a100 	.word	0x2000a100

08008ca4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008ca4:	4b04      	ldr	r3, [pc, #16]	; (8008cb8 <pvTaskIncrementMutexHeldCount+0x14>)
 8008ca6:	681a      	ldr	r2, [r3, #0]
 8008ca8:	b11a      	cbz	r2, 8008cb2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008caa:	6819      	ldr	r1, [r3, #0]
 8008cac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008cae:	3201      	adds	r2, #1
 8008cb0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008cb2:	6818      	ldr	r0, [r3, #0]
	}
 8008cb4:	4770      	bx	lr
 8008cb6:	bf00      	nop
 8008cb8:	20009c84 	.word	0x20009c84

08008cbc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008cbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008cbe:	4c11      	ldr	r4, [pc, #68]	; (8008d04 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008cc0:	f7fe fc38 	bl	8007534 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008cc4:	6825      	ldr	r5, [r4, #0]
 8008cc6:	b9bd      	cbnz	r5, 8008cf8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008cc8:	4f0f      	ldr	r7, [pc, #60]	; (8008d08 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008cca:	4e10      	ldr	r6, [pc, #64]	; (8008d0c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008ccc:	4638      	mov	r0, r7
 8008cce:	f7fe fb87 	bl	80073e0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008cd2:	4630      	mov	r0, r6
 8008cd4:	f7fe fb84 	bl	80073e0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008cd8:	4b0d      	ldr	r3, [pc, #52]	; (8008d10 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008cda:	4a0e      	ldr	r2, [pc, #56]	; (8008d14 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008cdc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008cde:	4b0e      	ldr	r3, [pc, #56]	; (8008d18 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008ce0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008ce2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008ce4:	200a      	movs	r0, #10
 8008ce6:	4b0d      	ldr	r3, [pc, #52]	; (8008d1c <prvCheckForValidListAndQueue+0x60>)
 8008ce8:	9500      	str	r5, [sp, #0]
 8008cea:	f7fe fe3b 	bl	8007964 <xQueueGenericCreateStatic>
 8008cee:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008cf0:	b110      	cbz	r0, 8008cf8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008cf2:	490b      	ldr	r1, [pc, #44]	; (8008d20 <prvCheckForValidListAndQueue+0x64>)
 8008cf4:	f7ff fa08 	bl	8008108 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008cf8:	b003      	add	sp, #12
 8008cfa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008cfe:	f7fe bc3b 	b.w	8007578 <vPortExitCritical>
 8008d02:	bf00      	nop
 8008d04:	2000a2a4 	.word	0x2000a2a4
 8008d08:	2000a228 	.word	0x2000a228
 8008d0c:	2000a23c 	.word	0x2000a23c
 8008d10:	2000a180 	.word	0x2000a180
 8008d14:	2000a188 	.word	0x2000a188
 8008d18:	2000a184 	.word	0x2000a184
 8008d1c:	2000a254 	.word	0x2000a254
 8008d20:	0801dd16 	.word	0x0801dd16

08008d24 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008d24:	4291      	cmp	r1, r2
{
 8008d26:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008d28:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008d2a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008d2c:	d80a      	bhi.n	8008d44 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d2e:	1ad2      	subs	r2, r2, r3
 8008d30:	6983      	ldr	r3, [r0, #24]
 8008d32:	429a      	cmp	r2, r3
 8008d34:	d20d      	bcs.n	8008d52 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008d36:	4b08      	ldr	r3, [pc, #32]	; (8008d58 <prvInsertTimerInActiveList+0x34>)
 8008d38:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008d3a:	6818      	ldr	r0, [r3, #0]
 8008d3c:	f7fe fb6a 	bl	8007414 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008d40:	2000      	movs	r0, #0
}
 8008d42:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008d44:	429a      	cmp	r2, r3
 8008d46:	d201      	bcs.n	8008d4c <prvInsertTimerInActiveList+0x28>
 8008d48:	4299      	cmp	r1, r3
 8008d4a:	d202      	bcs.n	8008d52 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008d4c:	4b03      	ldr	r3, [pc, #12]	; (8008d5c <prvInsertTimerInActiveList+0x38>)
 8008d4e:	1d01      	adds	r1, r0, #4
 8008d50:	e7f3      	b.n	8008d3a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008d52:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008d54:	e7f5      	b.n	8008d42 <prvInsertTimerInActiveList+0x1e>
 8008d56:	bf00      	nop
 8008d58:	2000a184 	.word	0x2000a184
 8008d5c:	2000a180 	.word	0x2000a180

08008d60 <xTimerCreateTimerTask>:
{
 8008d60:	b510      	push	{r4, lr}
 8008d62:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008d64:	f7ff ffaa 	bl	8008cbc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008d68:	4b12      	ldr	r3, [pc, #72]	; (8008db4 <xTimerCreateTimerTask+0x54>)
 8008d6a:	681b      	ldr	r3, [r3, #0]
 8008d6c:	b1b3      	cbz	r3, 8008d9c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008d6e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008d70:	aa07      	add	r2, sp, #28
 8008d72:	a906      	add	r1, sp, #24
 8008d74:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008d76:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008d7a:	f7fe fa31 	bl	80071e0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008d7e:	9b05      	ldr	r3, [sp, #20]
 8008d80:	9302      	str	r3, [sp, #8]
 8008d82:	9b06      	ldr	r3, [sp, #24]
 8008d84:	9301      	str	r3, [sp, #4]
 8008d86:	2302      	movs	r3, #2
 8008d88:	9300      	str	r3, [sp, #0]
 8008d8a:	9a07      	ldr	r2, [sp, #28]
 8008d8c:	490a      	ldr	r1, [pc, #40]	; (8008db8 <xTimerCreateTimerTask+0x58>)
 8008d8e:	480b      	ldr	r0, [pc, #44]	; (8008dbc <xTimerCreateTimerTask+0x5c>)
 8008d90:	4623      	mov	r3, r4
 8008d92:	f7ff fb87 	bl	80084a4 <xTaskCreateStatic>
 8008d96:	4b0a      	ldr	r3, [pc, #40]	; (8008dc0 <xTimerCreateTimerTask+0x60>)
 8008d98:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008d9a:	b940      	cbnz	r0, 8008dae <xTimerCreateTimerTask+0x4e>
 8008d9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008da0:	f383 8811 	msr	BASEPRI, r3
 8008da4:	f3bf 8f6f 	isb	sy
 8008da8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008dac:	e7fe      	b.n	8008dac <xTimerCreateTimerTask+0x4c>
}
 8008dae:	2001      	movs	r0, #1
 8008db0:	b008      	add	sp, #32
 8008db2:	bd10      	pop	{r4, pc}
 8008db4:	2000a2a4 	.word	0x2000a2a4
 8008db8:	0801dd1b 	.word	0x0801dd1b
 8008dbc:	08008e99 	.word	0x08008e99
 8008dc0:	2000a2a8 	.word	0x2000a2a8

08008dc4 <xTimerGenericCommand>:
{
 8008dc4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008dc6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008dc8:	4604      	mov	r4, r0
{
 8008dca:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008dcc:	b940      	cbnz	r0, 8008de0 <xTimerGenericCommand+0x1c>
 8008dce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd2:	f383 8811 	msr	BASEPRI, r3
 8008dd6:	f3bf 8f6f 	isb	sy
 8008dda:	f3bf 8f4f 	dsb	sy
 8008dde:	e7fe      	b.n	8008dde <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008de0:	4d0d      	ldr	r5, [pc, #52]	; (8008e18 <xTimerGenericCommand+0x54>)
 8008de2:	6828      	ldr	r0, [r5, #0]
 8008de4:	b180      	cbz	r0, 8008e08 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008de6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008de8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008dec:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008dee:	dc0d      	bgt.n	8008e0c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008df0:	f7ff fe70 	bl	8008ad4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008df4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008df6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008df8:	bf08      	it	eq
 8008dfa:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008dfc:	6828      	ldr	r0, [r5, #0]
 8008dfe:	bf18      	it	ne
 8008e00:	461a      	movne	r2, r3
 8008e02:	4669      	mov	r1, sp
 8008e04:	f7fe fe64 	bl	8007ad0 <xQueueGenericSend>
}
 8008e08:	b004      	add	sp, #16
 8008e0a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008e0c:	2300      	movs	r3, #0
 8008e0e:	4669      	mov	r1, sp
 8008e10:	f7fe ff10 	bl	8007c34 <xQueueGenericSendFromISR>
 8008e14:	e7f8      	b.n	8008e08 <xTimerGenericCommand+0x44>
 8008e16:	bf00      	nop
 8008e18:	2000a2a4 	.word	0x2000a2a4

08008e1c <prvSwitchTimerLists>:
{
 8008e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008e1e:	4d1c      	ldr	r5, [pc, #112]	; (8008e90 <prvSwitchTimerLists+0x74>)
{
 8008e20:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008e22:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008e24:	682b      	ldr	r3, [r5, #0]
 8008e26:	681a      	ldr	r2, [r3, #0]
 8008e28:	b92a      	cbnz	r2, 8008e36 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 8008e2a:	4a1a      	ldr	r2, [pc, #104]	; (8008e94 <prvSwitchTimerLists+0x78>)
 8008e2c:	6811      	ldr	r1, [r2, #0]
 8008e2e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008e30:	6013      	str	r3, [r2, #0]
}
 8008e32:	b005      	add	sp, #20
 8008e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008e36:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e38:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008e3a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008e3c:	1d21      	adds	r1, r4, #4
 8008e3e:	4608      	mov	r0, r1
 8008e40:	9103      	str	r1, [sp, #12]
 8008e42:	f7fe fafe 	bl	8007442 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008e46:	6a23      	ldr	r3, [r4, #32]
 8008e48:	4620      	mov	r0, r4
 8008e4a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008e4c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008e50:	9903      	ldr	r1, [sp, #12]
 8008e52:	f013 0f04 	tst.w	r3, #4
 8008e56:	d0e5      	beq.n	8008e24 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008e58:	69a3      	ldr	r3, [r4, #24]
 8008e5a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8008e5c:	429e      	cmp	r6, r3
 8008e5e:	d205      	bcs.n	8008e6c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008e60:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008e62:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008e64:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008e66:	f7fe fad5 	bl	8007414 <vListInsert>
 8008e6a:	e7db      	b.n	8008e24 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008e6c:	2300      	movs	r3, #0
 8008e6e:	9700      	str	r7, [sp, #0]
 8008e70:	4632      	mov	r2, r6
 8008e72:	4619      	mov	r1, r3
 8008e74:	4620      	mov	r0, r4
 8008e76:	f7ff ffa5 	bl	8008dc4 <xTimerGenericCommand>
				configASSERT( xResult );
 8008e7a:	2800      	cmp	r0, #0
 8008e7c:	d1d2      	bne.n	8008e24 <prvSwitchTimerLists+0x8>
 8008e7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e82:	f383 8811 	msr	BASEPRI, r3
 8008e86:	f3bf 8f6f 	isb	sy
 8008e8a:	f3bf 8f4f 	dsb	sy
 8008e8e:	e7fe      	b.n	8008e8e <prvSwitchTimerLists+0x72>
 8008e90:	2000a180 	.word	0x2000a180
 8008e94:	2000a184 	.word	0x2000a184

08008e98 <prvTimerTask>:
{
 8008e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008e9c:	4f77      	ldr	r7, [pc, #476]	; (800907c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 8008e9e:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800908c <prvTimerTask+0x1f4>
{
 8008ea2:	b087      	sub	sp, #28
 8008ea4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008ea6:	683b      	ldr	r3, [r7, #0]
 8008ea8:	f8d3 b000 	ldr.w	fp, [r3]
 8008eac:	f1bb 0f00 	cmp.w	fp, #0
 8008eb0:	d028      	beq.n	8008f04 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008eb2:	68db      	ldr	r3, [r3, #12]
 8008eb4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008eb8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8008eba:	4e71      	ldr	r6, [pc, #452]	; (8009080 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 8008ebc:	f7ff fb58 	bl	8008570 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8008ec0:	f7ff fb5e 	bl	8008580 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008ec4:	6833      	ldr	r3, [r6, #0]
 8008ec6:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008ec8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008eca:	46b0      	mov	r8, r6
 8008ecc:	d31c      	bcc.n	8008f08 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8008ece:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008ed0:	b31c      	cbz	r4, 8008f1a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008ed2:	4b6c      	ldr	r3, [pc, #432]	; (8009084 <prvTimerTask+0x1ec>)
 8008ed4:	681b      	ldr	r3, [r3, #0]
 8008ed6:	681c      	ldr	r4, [r3, #0]
 8008ed8:	fab4 f484 	clz	r4, r4
 8008edc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008ede:	4b6a      	ldr	r3, [pc, #424]	; (8009088 <prvTimerTask+0x1f0>)
 8008ee0:	4622      	mov	r2, r4
 8008ee2:	6818      	ldr	r0, [r3, #0]
 8008ee4:	ebab 0105 	sub.w	r1, fp, r5
 8008ee8:	f7ff f94d 	bl	8008186 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008eec:	f7ff fbe4 	bl	80086b8 <xTaskResumeAll>
 8008ef0:	b978      	cbnz	r0, 8008f12 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8008ef2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008ef6:	f8ca 3000 	str.w	r3, [sl]
 8008efa:	f3bf 8f4f 	dsb	sy
 8008efe:	f3bf 8f6f 	isb	sy
 8008f02:	e006      	b.n	8008f12 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008f04:	2401      	movs	r4, #1
 8008f06:	e7d8      	b.n	8008eba <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8008f08:	f7ff ff88 	bl	8008e1c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008f0c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 8008f0e:	f7ff fbd3 	bl	80086b8 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008f12:	4e5d      	ldr	r6, [pc, #372]	; (8009088 <prvTimerTask+0x1f0>)
 8008f14:	f04f 0b00 	mov.w	fp, #0
 8008f18:	e035      	b.n	8008f86 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008f1a:	4583      	cmp	fp, r0
 8008f1c:	d8df      	bhi.n	8008ede <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 8008f1e:	f7ff fbcb 	bl	80086b8 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f22:	f8d9 3000 	ldr.w	r3, [r9]
 8008f26:	68db      	ldr	r3, [r3, #12]
 8008f28:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008f2a:	1d30      	adds	r0, r6, #4
 8008f2c:	f7fe fa89 	bl	8007442 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008f30:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8008f34:	0758      	lsls	r0, r3, #29
 8008f36:	d518      	bpl.n	8008f6a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008f38:	69b1      	ldr	r1, [r6, #24]
 8008f3a:	465b      	mov	r3, fp
 8008f3c:	462a      	mov	r2, r5
 8008f3e:	4459      	add	r1, fp
 8008f40:	4630      	mov	r0, r6
 8008f42:	f7ff feef 	bl	8008d24 <prvInsertTimerInActiveList>
 8008f46:	b1a0      	cbz	r0, 8008f72 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008f48:	9400      	str	r4, [sp, #0]
 8008f4a:	4623      	mov	r3, r4
 8008f4c:	465a      	mov	r2, fp
 8008f4e:	4621      	mov	r1, r4
 8008f50:	4630      	mov	r0, r6
 8008f52:	f7ff ff37 	bl	8008dc4 <xTimerGenericCommand>
			configASSERT( xResult );
 8008f56:	b960      	cbnz	r0, 8008f72 <prvTimerTask+0xda>
 8008f58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f5c:	f383 8811 	msr	BASEPRI, r3
 8008f60:	f3bf 8f6f 	isb	sy
 8008f64:	f3bf 8f4f 	dsb	sy
 8008f68:	e7fe      	b.n	8008f68 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008f6a:	f023 0301 	bic.w	r3, r3, #1
 8008f6e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008f72:	6a33      	ldr	r3, [r6, #32]
 8008f74:	4630      	mov	r0, r6
 8008f76:	4798      	blx	r3
}
 8008f78:	e7cb      	b.n	8008f12 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008f7a:	9b03      	ldr	r3, [sp, #12]
 8008f7c:	9905      	ldr	r1, [sp, #20]
 8008f7e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008f80:	9b02      	ldr	r3, [sp, #8]
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	da0a      	bge.n	8008f9c <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008f86:	6830      	ldr	r0, [r6, #0]
 8008f88:	2200      	movs	r2, #0
 8008f8a:	a902      	add	r1, sp, #8
 8008f8c:	f7fe ff08 	bl	8007da0 <xQueueReceive>
 8008f90:	2800      	cmp	r0, #0
 8008f92:	d088      	beq.n	8008ea6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008f94:	9b02      	ldr	r3, [sp, #8]
 8008f96:	9804      	ldr	r0, [sp, #16]
 8008f98:	2b00      	cmp	r3, #0
 8008f9a:	dbee      	blt.n	8008f7a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008f9c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008f9e:	6963      	ldr	r3, [r4, #20]
 8008fa0:	b9a3      	cbnz	r3, 8008fcc <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8008fa2:	f7ff faed 	bl	8008580 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008fa6:	f8d8 3000 	ldr.w	r3, [r8]
 8008faa:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008fac:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008fae:	d201      	bcs.n	8008fb4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8008fb0:	f7ff ff34 	bl	8008e1c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008fb4:	9b02      	ldr	r3, [sp, #8]
 8008fb6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 8008fba:	2b09      	cmp	r3, #9
 8008fbc:	d8e3      	bhi.n	8008f86 <prvTimerTask+0xee>
 8008fbe:	e8df f003 	tbb	[pc, r3]
 8008fc2:	0909      	.short	0x0909
 8008fc4:	543b3409 	.word	0x543b3409
 8008fc8:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008fcc:	1d20      	adds	r0, r4, #4
 8008fce:	f7fe fa38 	bl	8007442 <uxListRemove>
 8008fd2:	e7e6      	b.n	8008fa2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008fd4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008fd8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008fda:	f043 0301 	orr.w	r3, r3, #1
 8008fde:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008fe2:	9b03      	ldr	r3, [sp, #12]
 8008fe4:	462a      	mov	r2, r5
 8008fe6:	4419      	add	r1, r3
 8008fe8:	4620      	mov	r0, r4
 8008fea:	f7ff fe9b 	bl	8008d24 <prvInsertTimerInActiveList>
 8008fee:	2800      	cmp	r0, #0
 8008ff0:	d0c9      	beq.n	8008f86 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ff2:	6a23      	ldr	r3, [r4, #32]
 8008ff4:	4620      	mov	r0, r4
 8008ff6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008ff8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008ffc:	0759      	lsls	r1, r3, #29
 8008ffe:	d5c2      	bpl.n	8008f86 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009000:	69a2      	ldr	r2, [r4, #24]
 8009002:	9903      	ldr	r1, [sp, #12]
 8009004:	f8cd b000 	str.w	fp, [sp]
 8009008:	2300      	movs	r3, #0
 800900a:	440a      	add	r2, r1
 800900c:	4620      	mov	r0, r4
 800900e:	4619      	mov	r1, r3
 8009010:	f7ff fed8 	bl	8008dc4 <xTimerGenericCommand>
							configASSERT( xResult );
 8009014:	2800      	cmp	r0, #0
 8009016:	d1b6      	bne.n	8008f86 <prvTimerTask+0xee>
 8009018:	f04f 0350 	mov.w	r3, #80	; 0x50
 800901c:	f383 8811 	msr	BASEPRI, r3
 8009020:	f3bf 8f6f 	isb	sy
 8009024:	f3bf 8f4f 	dsb	sy
 8009028:	e7fe      	b.n	8009028 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800902a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800902e:	f023 0301 	bic.w	r3, r3, #1
 8009032:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009036:	e7a6      	b.n	8008f86 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009038:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800903c:	9903      	ldr	r1, [sp, #12]
 800903e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009040:	f043 0301 	orr.w	r3, r3, #1
 8009044:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009048:	b941      	cbnz	r1, 800905c <prvTimerTask+0x1c4>
 800904a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800904e:	f383 8811 	msr	BASEPRI, r3
 8009052:	f3bf 8f6f 	isb	sy
 8009056:	f3bf 8f4f 	dsb	sy
 800905a:	e7fe      	b.n	800905a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800905c:	462b      	mov	r3, r5
 800905e:	462a      	mov	r2, r5
 8009060:	4429      	add	r1, r5
 8009062:	4620      	mov	r0, r4
 8009064:	f7ff fe5e 	bl	8008d24 <prvInsertTimerInActiveList>
					break;
 8009068:	e78d      	b.n	8008f86 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800906a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800906e:	079a      	lsls	r2, r3, #30
 8009070:	d4dd      	bmi.n	800902e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8009072:	4620      	mov	r0, r4
 8009074:	f7fe f976 	bl	8007364 <vPortFree>
 8009078:	e785      	b.n	8008f86 <prvTimerTask+0xee>
 800907a:	bf00      	nop
 800907c:	2000a180 	.word	0x2000a180
 8009080:	2000a250 	.word	0x2000a250
 8009084:	2000a184 	.word	0x2000a184
 8009088:	2000a2a4 	.word	0x2000a2a4
 800908c:	e000ed04 	.word	0xe000ed04

08009090 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009090:	8880      	ldrh	r0, [r0, #4]
 8009092:	4770      	bx	lr

08009094 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009094:	2300      	movs	r3, #0
 8009096:	8083      	strh	r3, [r0, #4]
 8009098:	4770      	bx	lr
	...

0800909c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800909c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800909e:	6803      	ldr	r3, [r0, #0]
 80090a0:	4605      	mov	r5, r0
 80090a2:	460e      	mov	r6, r1
 80090a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090a6:	2100      	movs	r1, #0
 80090a8:	4798      	blx	r3
 80090aa:	682b      	ldr	r3, [r5, #0]
 80090ac:	4604      	mov	r4, r0
 80090ae:	6a1b      	ldr	r3, [r3, #32]
 80090b0:	4628      	mov	r0, r5
 80090b2:	4798      	blx	r3
 80090b4:	88ab      	ldrh	r3, [r5, #4]
 80090b6:	1b34      	subs	r4, r6, r4
 80090b8:	b2a4      	uxth	r4, r4
 80090ba:	fbb4 f4f0 	udiv	r4, r4, r0
 80090be:	42a3      	cmp	r3, r4
 80090c0:	d805      	bhi.n	80090ce <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80090c2:	4b0e      	ldr	r3, [pc, #56]	; (80090fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80090c4:	4a0e      	ldr	r2, [pc, #56]	; (8009100 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80090c6:	211e      	movs	r1, #30
 80090c8:	480e      	ldr	r0, [pc, #56]	; (8009104 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 80090ca:	f012 fd09 	bl	801bae0 <__assert_func>
 80090ce:	682b      	ldr	r3, [r5, #0]
 80090d0:	2100      	movs	r1, #0
 80090d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090d4:	4628      	mov	r0, r5
 80090d6:	4798      	blx	r3
 80090d8:	682b      	ldr	r3, [r5, #0]
 80090da:	4607      	mov	r7, r0
 80090dc:	6a1b      	ldr	r3, [r3, #32]
 80090de:	4628      	mov	r0, r5
 80090e0:	4798      	blx	r3
 80090e2:	1bf3      	subs	r3, r6, r7
 80090e4:	b29b      	uxth	r3, r3
 80090e6:	fbb3 f2f0 	udiv	r2, r3, r0
 80090ea:	fb02 3010 	mls	r0, r2, r0, r3
 80090ee:	b118      	cbz	r0, 80090f8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 80090f0:	4b05      	ldr	r3, [pc, #20]	; (8009108 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 80090f2:	4a03      	ldr	r2, [pc, #12]	; (8009100 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80090f4:	211f      	movs	r1, #31
 80090f6:	e7e7      	b.n	80090c8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 80090f8:	4620      	mov	r0, r4
 80090fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090fc:	0801dd23 	.word	0x0801dd23
 8009100:	0801de8e 	.word	0x0801de8e
 8009104:	0801dd38 	.word	0x0801dd38
 8009108:	0801dd66 	.word	0x0801dd66

0800910c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800910c:	b538      	push	{r3, r4, r5, lr}
 800910e:	6803      	ldr	r3, [r0, #0]
 8009110:	6a1b      	ldr	r3, [r3, #32]
 8009112:	460d      	mov	r5, r1
 8009114:	4604      	mov	r4, r0
 8009116:	4798      	blx	r3
 8009118:	4285      	cmp	r5, r0
 800911a:	d905      	bls.n	8009128 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800911c:	4b0c      	ldr	r3, [pc, #48]	; (8009150 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800911e:	4a0d      	ldr	r2, [pc, #52]	; (8009154 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009120:	2130      	movs	r1, #48	; 0x30
 8009122:	480d      	ldr	r0, [pc, #52]	; (8009158 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009124:	f012 fcdc 	bl	801bae0 <__assert_func>
 8009128:	6823      	ldr	r3, [r4, #0]
 800912a:	88a5      	ldrh	r5, [r4, #4]
 800912c:	69db      	ldr	r3, [r3, #28]
 800912e:	4620      	mov	r0, r4
 8009130:	4798      	blx	r3
 8009132:	4285      	cmp	r5, r0
 8009134:	d303      	bcc.n	800913e <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009136:	4b09      	ldr	r3, [pc, #36]	; (800915c <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009138:	4a06      	ldr	r2, [pc, #24]	; (8009154 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800913a:	2131      	movs	r1, #49	; 0x31
 800913c:	e7f1      	b.n	8009122 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800913e:	6823      	ldr	r3, [r4, #0]
 8009140:	88a1      	ldrh	r1, [r4, #4]
 8009142:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009144:	4620      	mov	r0, r4
 8009146:	4798      	blx	r3
 8009148:	88a3      	ldrh	r3, [r4, #4]
 800914a:	3301      	adds	r3, #1
 800914c:	80a3      	strh	r3, [r4, #4]
 800914e:	bd38      	pop	{r3, r4, r5, pc}
 8009150:	0801dde0 	.word	0x0801dde0
 8009154:	0801ded1 	.word	0x0801ded1
 8009158:	0801dd38 	.word	0x0801dd38
 800915c:	0801ddf7 	.word	0x0801ddf7

08009160 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009160:	b570      	push	{r4, r5, r6, lr}
 8009162:	6803      	ldr	r3, [r0, #0]
 8009164:	6a1b      	ldr	r3, [r3, #32]
 8009166:	4616      	mov	r6, r2
 8009168:	4604      	mov	r4, r0
 800916a:	460d      	mov	r5, r1
 800916c:	4798      	blx	r3
 800916e:	4286      	cmp	r6, r0
 8009170:	d905      	bls.n	800917e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8009172:	4b06      	ldr	r3, [pc, #24]	; (800918c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8009174:	4a06      	ldr	r2, [pc, #24]	; (8009190 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8009176:	4807      	ldr	r0, [pc, #28]	; (8009194 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8009178:	213a      	movs	r1, #58	; 0x3a
 800917a:	f012 fcb1 	bl	801bae0 <__assert_func>
 800917e:	6823      	ldr	r3, [r4, #0]
 8009180:	4629      	mov	r1, r5
 8009182:	4620      	mov	r0, r4
 8009184:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800918a:	4718      	bx	r3
 800918c:	0801dde0 	.word	0x0801dde0
 8009190:	0801de44 	.word	0x0801de44
 8009194:	0801dd38 	.word	0x0801dd38

08009198 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009198:	4770      	bx	lr
	...

0800919c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800919c:	4a02      	ldr	r2, [pc, #8]	; (80091a8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800919e:	6002      	str	r2, [r0, #0]
 80091a0:	2200      	movs	r2, #0
 80091a2:	8082      	strh	r2, [r0, #4]
 80091a4:	4770      	bx	lr
 80091a6:	bf00      	nop
 80091a8:	0801de18 	.word	0x0801de18

080091ac <_ZN8touchgfx9Container13getFirstChildEv>:
 80091ac:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80091ae:	4770      	bx	lr

080091b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80091b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80091b2:	2000      	movs	r0, #0
 80091b4:	b12b      	cbz	r3, 80091c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80091b6:	b920      	cbnz	r0, 80091c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80091b8:	1a5a      	subs	r2, r3, r1
 80091ba:	4250      	negs	r0, r2
 80091bc:	4150      	adcs	r0, r2
 80091be:	699b      	ldr	r3, [r3, #24]
 80091c0:	e7f8      	b.n	80091b4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80091c2:	4770      	bx	lr

080091c4 <_ZN8touchgfx9Container9removeAllEv>:
 80091c4:	2200      	movs	r2, #0
 80091c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80091c8:	b123      	cbz	r3, 80091d4 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80091ca:	6999      	ldr	r1, [r3, #24]
 80091cc:	6281      	str	r1, [r0, #40]	; 0x28
 80091ce:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80091d2:	e7f8      	b.n	80091c6 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80091d4:	4770      	bx	lr

080091d6 <_ZN8touchgfx9Container6unlinkEv>:
 80091d6:	2300      	movs	r3, #0
 80091d8:	6283      	str	r3, [r0, #40]	; 0x28
 80091da:	4770      	bx	lr

080091dc <_ZNK8touchgfx9Container12getSolidRectEv>:
 80091dc:	2200      	movs	r2, #0
 80091de:	8002      	strh	r2, [r0, #0]
 80091e0:	8042      	strh	r2, [r0, #2]
 80091e2:	8082      	strh	r2, [r0, #4]
 80091e4:	80c2      	strh	r2, [r0, #6]
 80091e6:	4770      	bx	lr

080091e8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80091e8:	b570      	push	{r4, r5, r6, lr}
 80091ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80091ec:	460d      	mov	r5, r1
 80091ee:	4616      	mov	r6, r2
 80091f0:	b13c      	cbz	r4, 8009202 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80091f2:	6823      	ldr	r3, [r4, #0]
 80091f4:	4620      	mov	r0, r4
 80091f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80091f8:	4632      	mov	r2, r6
 80091fa:	4629      	mov	r1, r5
 80091fc:	4798      	blx	r3
 80091fe:	69a4      	ldr	r4, [r4, #24]
 8009200:	e7f6      	b.n	80091f0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009202:	bd70      	pop	{r4, r5, r6, pc}

08009204 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009204:	b538      	push	{r3, r4, r5, lr}
 8009206:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009208:	460d      	mov	r5, r1
 800920a:	b134      	cbz	r4, 800921a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800920c:	682b      	ldr	r3, [r5, #0]
 800920e:	4621      	mov	r1, r4
 8009210:	689b      	ldr	r3, [r3, #8]
 8009212:	4628      	mov	r0, r5
 8009214:	4798      	blx	r3
 8009216:	69a4      	ldr	r4, [r4, #24]
 8009218:	e7f7      	b.n	800920a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800921a:	bd38      	pop	{r3, r4, r5, pc}

0800921c <_ZN8touchgfx9ContainerD1Ev>:
 800921c:	4770      	bx	lr

0800921e <_ZN8touchgfx9ContainerD0Ev>:
 800921e:	b510      	push	{r4, lr}
 8009220:	212c      	movs	r1, #44	; 0x2c
 8009222:	4604      	mov	r4, r0
 8009224:	f012 fc2e 	bl	801ba84 <_ZdlPvj>
 8009228:	4620      	mov	r0, r4
 800922a:	bd10      	pop	{r4, pc}

0800922c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800922c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800922e:	b19b      	cbz	r3, 8009258 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009230:	428b      	cmp	r3, r1
 8009232:	d109      	bne.n	8009248 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009234:	699a      	ldr	r2, [r3, #24]
 8009236:	2100      	movs	r1, #0
 8009238:	6159      	str	r1, [r3, #20]
 800923a:	6282      	str	r2, [r0, #40]	; 0x28
 800923c:	b902      	cbnz	r2, 8009240 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800923e:	4770      	bx	lr
 8009240:	6199      	str	r1, [r3, #24]
 8009242:	4770      	bx	lr
 8009244:	4613      	mov	r3, r2
 8009246:	b13a      	cbz	r2, 8009258 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009248:	699a      	ldr	r2, [r3, #24]
 800924a:	428a      	cmp	r2, r1
 800924c:	d1fa      	bne.n	8009244 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800924e:	698a      	ldr	r2, [r1, #24]
 8009250:	619a      	str	r2, [r3, #24]
 8009252:	2300      	movs	r3, #0
 8009254:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009258:	4770      	bx	lr

0800925a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800925a:	b410      	push	{r4}
 800925c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800925e:	4604      	mov	r4, r0
 8009260:	b92b      	cbnz	r3, 800926e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009262:	6803      	ldr	r3, [r0, #0]
 8009264:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009268:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800926a:	4611      	mov	r1, r2
 800926c:	4718      	bx	r3
 800926e:	b941      	cbnz	r1, 8009282 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009270:	6193      	str	r3, [r2, #24]
 8009272:	6282      	str	r2, [r0, #40]	; 0x28
 8009274:	6154      	str	r4, [r2, #20]
 8009276:	f85d 4b04 	ldr.w	r4, [sp], #4
 800927a:	4770      	bx	lr
 800927c:	4603      	mov	r3, r0
 800927e:	2800      	cmp	r0, #0
 8009280:	d0f9      	beq.n	8009276 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009282:	4299      	cmp	r1, r3
 8009284:	6998      	ldr	r0, [r3, #24]
 8009286:	d1f9      	bne.n	800927c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009288:	6190      	str	r0, [r2, #24]
 800928a:	618a      	str	r2, [r1, #24]
 800928c:	e7f2      	b.n	8009274 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009290 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009290:	4288      	cmp	r0, r1
 8009292:	b508      	push	{r3, lr}
 8009294:	d105      	bne.n	80092a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009296:	4b11      	ldr	r3, [pc, #68]	; (80092dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009298:	4a11      	ldr	r2, [pc, #68]	; (80092e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800929a:	2123      	movs	r1, #35	; 0x23
 800929c:	4811      	ldr	r0, [pc, #68]	; (80092e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800929e:	f012 fc1f 	bl	801bae0 <__assert_func>
 80092a2:	694b      	ldr	r3, [r1, #20]
 80092a4:	b11b      	cbz	r3, 80092ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 80092a6:	4b10      	ldr	r3, [pc, #64]	; (80092e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 80092a8:	4a0d      	ldr	r2, [pc, #52]	; (80092e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80092aa:	2124      	movs	r1, #36	; 0x24
 80092ac:	e7f6      	b.n	800929c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80092ae:	e9c1 0305 	strd	r0, r3, [r1, #20]
 80092b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80092b4:	b913      	cbnz	r3, 80092bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 80092b6:	6281      	str	r1, [r0, #40]	; 0x28
 80092b8:	bd08      	pop	{r3, pc}
 80092ba:	4613      	mov	r3, r2
 80092bc:	699a      	ldr	r2, [r3, #24]
 80092be:	b12a      	cbz	r2, 80092cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80092c0:	428b      	cmp	r3, r1
 80092c2:	d1fa      	bne.n	80092ba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80092c4:	4b09      	ldr	r3, [pc, #36]	; (80092ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80092c6:	4a06      	ldr	r2, [pc, #24]	; (80092e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80092c8:	2135      	movs	r1, #53	; 0x35
 80092ca:	e7e7      	b.n	800929c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80092cc:	428b      	cmp	r3, r1
 80092ce:	d103      	bne.n	80092d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80092d0:	4b06      	ldr	r3, [pc, #24]	; (80092ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80092d2:	4a03      	ldr	r2, [pc, #12]	; (80092e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80092d4:	2138      	movs	r1, #56	; 0x38
 80092d6:	e7e1      	b.n	800929c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80092d8:	6199      	str	r1, [r3, #24]
 80092da:	e7ed      	b.n	80092b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80092dc:	0801df0f 	.word	0x0801df0f
 80092e0:	0801e064 	.word	0x0801e064
 80092e4:	0801df3b 	.word	0x0801df3b
 80092e8:	0801df6e 	.word	0x0801df6e
 80092ec:	0801dfa4 	.word	0x0801dfa4

080092f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80092f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092f4:	461f      	mov	r7, r3
 80092f6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80092fa:	460d      	mov	r5, r1
 80092fc:	4616      	mov	r6, r2
 80092fe:	b103      	cbz	r3, 8009302 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009300:	6038      	str	r0, [r7, #0]
 8009302:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009304:	b314      	cbz	r4, 800934c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009306:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800930a:	b1eb      	cbz	r3, 8009348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800930c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009310:	428d      	cmp	r5, r1
 8009312:	db19      	blt.n	8009348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009314:	8923      	ldrh	r3, [r4, #8]
 8009316:	b289      	uxth	r1, r1
 8009318:	440b      	add	r3, r1
 800931a:	b21b      	sxth	r3, r3
 800931c:	429d      	cmp	r5, r3
 800931e:	da13      	bge.n	8009348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009320:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009324:	4296      	cmp	r6, r2
 8009326:	db0f      	blt.n	8009348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009328:	8963      	ldrh	r3, [r4, #10]
 800932a:	b292      	uxth	r2, r2
 800932c:	4413      	add	r3, r2
 800932e:	b21b      	sxth	r3, r3
 8009330:	429e      	cmp	r6, r3
 8009332:	da09      	bge.n	8009348 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009334:	6823      	ldr	r3, [r4, #0]
 8009336:	1ab2      	subs	r2, r6, r2
 8009338:	1a69      	subs	r1, r5, r1
 800933a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800933e:	b212      	sxth	r2, r2
 8009340:	463b      	mov	r3, r7
 8009342:	b209      	sxth	r1, r1
 8009344:	4620      	mov	r0, r4
 8009346:	47c0      	blx	r8
 8009348:	69a4      	ldr	r4, [r4, #24]
 800934a:	e7db      	b.n	8009304 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800934c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009350 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009354:	4c6e      	ldr	r4, [pc, #440]	; (8009510 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8009356:	b0a1      	sub	sp, #132	; 0x84
 8009358:	6824      	ldr	r4, [r4, #0]
 800935a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800935c:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8009360:	9303      	str	r3, [sp, #12]
 8009362:	2400      	movs	r4, #0
 8009364:	802c      	strh	r4, [r5, #0]
 8009366:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8009368:	802c      	strh	r4, [r5, #0]
 800936a:	601c      	str	r4, [r3, #0]
 800936c:	4606      	mov	r6, r0
 800936e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009372:	f7ff ffbd 	bl	80092f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009376:	f1b9 0f03 	cmp.w	r9, #3
 800937a:	f340 80c2 	ble.w	8009502 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800937e:	4631      	mov	r1, r6
 8009380:	a80c      	add	r0, sp, #48	; 0x30
 8009382:	f004 fb69 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009386:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800938a:	9306      	str	r3, [sp, #24]
 800938c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009390:	9307      	str	r3, [sp, #28]
 8009392:	9b03      	ldr	r3, [sp, #12]
 8009394:	f8d3 a000 	ldr.w	sl, [r3]
 8009398:	f1ba 0f00 	cmp.w	sl, #0
 800939c:	f000 80b4 	beq.w	8009508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80093a0:	4651      	mov	r1, sl
 80093a2:	a810      	add	r0, sp, #64	; 0x40
 80093a4:	f004 fb58 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80093a8:	9b01      	ldr	r3, [sp, #4]
 80093aa:	9a06      	ldr	r2, [sp, #24]
 80093ac:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80093b0:	189d      	adds	r5, r3, r2
 80093b2:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80093b6:	9a07      	ldr	r2, [sp, #28]
 80093b8:	2002      	movs	r0, #2
 80093ba:	fb91 f1f0 	sdiv	r1, r1, r0
 80093be:	4419      	add	r1, r3
 80093c0:	1a6d      	subs	r5, r5, r1
 80093c2:	9b02      	ldr	r3, [sp, #8]
 80093c4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80093c8:	4413      	add	r3, r2
 80093ca:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80093ce:	fb92 f2f0 	sdiv	r2, r2, r0
 80093d2:	440a      	add	r2, r1
 80093d4:	1a9b      	subs	r3, r3, r2
 80093d6:	435b      	muls	r3, r3
 80093d8:	fb05 3505 	mla	r5, r5, r5, r3
 80093dc:	4f4d      	ldr	r7, [pc, #308]	; (8009514 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80093de:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093e0:	ac10      	add	r4, sp, #64	; 0x40
 80093e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093ec:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80093f0:	f1b9 0f0c 	cmp.w	r9, #12
 80093f4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80093f8:	f04f 0303 	mov.w	r3, #3
 80093fc:	bfc8      	it	gt
 80093fe:	4698      	movgt	r8, r3
 8009400:	f8cd 9000 	str.w	r9, [sp]
 8009404:	f04f 0400 	mov.w	r4, #0
 8009408:	bfdc      	itt	le
 800940a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800940e:	fb92 f8f3 	sdivle	r8, r2, r3
 8009412:	1c63      	adds	r3, r4, #1
 8009414:	aa10      	add	r2, sp, #64	; 0x40
 8009416:	f004 0401 	and.w	r4, r4, #1
 800941a:	9308      	str	r3, [sp, #32]
 800941c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009420:	9b00      	ldr	r3, [sp, #0]
 8009422:	fb93 f3f8 	sdiv	r3, r3, r8
 8009426:	b29b      	uxth	r3, r3
 8009428:	3404      	adds	r4, #4
 800942a:	f04f 0b00 	mov.w	fp, #0
 800942e:	9304      	str	r3, [sp, #16]
 8009430:	9a04      	ldr	r2, [sp, #16]
 8009432:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009436:	fb13 f302 	smulbb	r3, r3, r2
 800943a:	9a01      	ldr	r2, [sp, #4]
 800943c:	b29b      	uxth	r3, r3
 800943e:	1899      	adds	r1, r3, r2
 8009440:	9305      	str	r3, [sp, #20]
 8009442:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009446:	b209      	sxth	r1, r1
 8009448:	4299      	cmp	r1, r3
 800944a:	db4d      	blt.n	80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800944c:	8932      	ldrh	r2, [r6, #8]
 800944e:	4413      	add	r3, r2
 8009450:	b21b      	sxth	r3, r3
 8009452:	4299      	cmp	r1, r3
 8009454:	da48      	bge.n	80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009456:	9b04      	ldr	r3, [sp, #16]
 8009458:	6827      	ldr	r7, [r4, #0]
 800945a:	fb17 f703 	smulbb	r7, r7, r3
 800945e:	9b02      	ldr	r3, [sp, #8]
 8009460:	b2bf      	uxth	r7, r7
 8009462:	18fa      	adds	r2, r7, r3
 8009464:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009468:	b212      	sxth	r2, r2
 800946a:	429a      	cmp	r2, r3
 800946c:	db3c      	blt.n	80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800946e:	8970      	ldrh	r0, [r6, #10]
 8009470:	4403      	add	r3, r0
 8009472:	b21b      	sxth	r3, r3
 8009474:	429a      	cmp	r2, r3
 8009476:	da37      	bge.n	80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009478:	2300      	movs	r3, #0
 800947a:	930b      	str	r3, [sp, #44]	; 0x2c
 800947c:	4630      	mov	r0, r6
 800947e:	ab0b      	add	r3, sp, #44	; 0x2c
 8009480:	f7ff ff36 	bl	80092f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009484:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009486:	b37a      	cbz	r2, 80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009488:	4552      	cmp	r2, sl
 800948a:	d02d      	beq.n	80094e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800948c:	4611      	mov	r1, r2
 800948e:	a80e      	add	r0, sp, #56	; 0x38
 8009490:	9209      	str	r2, [sp, #36]	; 0x24
 8009492:	f004 fae1 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009496:	9a06      	ldr	r2, [sp, #24]
 8009498:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800949c:	9b01      	ldr	r3, [sp, #4]
 800949e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80094a2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80094a6:	4413      	add	r3, r2
 80094a8:	f04f 0e02 	mov.w	lr, #2
 80094ac:	fb91 f1fe 	sdiv	r1, r1, lr
 80094b0:	4401      	add	r1, r0
 80094b2:	1a58      	subs	r0, r3, r1
 80094b4:	9a07      	ldr	r2, [sp, #28]
 80094b6:	9b02      	ldr	r3, [sp, #8]
 80094b8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80094bc:	fb9c fcfe 	sdiv	ip, ip, lr
 80094c0:	4413      	add	r3, r2
 80094c2:	448c      	add	ip, r1
 80094c4:	eba3 030c 	sub.w	r3, r3, ip
 80094c8:	435b      	muls	r3, r3
 80094ca:	fb00 3300 	mla	r3, r0, r0, r3
 80094ce:	42ab      	cmp	r3, r5
 80094d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80094d2:	d208      	bcs.n	80094e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80094d4:	9803      	ldr	r0, [sp, #12]
 80094d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80094d8:	6001      	str	r1, [r0, #0]
 80094da:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80094dc:	9805      	ldr	r0, [sp, #20]
 80094de:	8008      	strh	r0, [r1, #0]
 80094e0:	992b      	ldr	r1, [sp, #172]	; 0xac
 80094e2:	461d      	mov	r5, r3
 80094e4:	800f      	strh	r7, [r1, #0]
 80094e6:	4692      	mov	sl, r2
 80094e8:	f10b 0b01 	add.w	fp, fp, #1
 80094ec:	f1bb 0f04 	cmp.w	fp, #4
 80094f0:	f104 0408 	add.w	r4, r4, #8
 80094f4:	d19c      	bne.n	8009430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80094f6:	9b00      	ldr	r3, [sp, #0]
 80094f8:	9c08      	ldr	r4, [sp, #32]
 80094fa:	444b      	add	r3, r9
 80094fc:	4544      	cmp	r4, r8
 80094fe:	9300      	str	r3, [sp, #0]
 8009500:	d187      	bne.n	8009412 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009502:	b021      	add	sp, #132	; 0x84
 8009504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009508:	f04f 35ff 	mov.w	r5, #4294967295
 800950c:	e766      	b.n	80093dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800950e:	bf00      	nop
 8009510:	2000a2b8 	.word	0x2000a2b8
 8009514:	0801cbec 	.word	0x0801cbec

08009518 <_ZN8touchgfx4RectaNERKS0_>:
 8009518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800951c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009520:	888c      	ldrh	r4, [r1, #4]
 8009522:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009526:	443c      	add	r4, r7
 8009528:	b2a4      	uxth	r4, r4
 800952a:	fa0f f884 	sxth.w	r8, r4
 800952e:	45c1      	cmp	r9, r8
 8009530:	da2f      	bge.n	8009592 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009532:	8882      	ldrh	r2, [r0, #4]
 8009534:	444a      	add	r2, r9
 8009536:	b292      	uxth	r2, r2
 8009538:	fa0f fe82 	sxth.w	lr, r2
 800953c:	4577      	cmp	r7, lr
 800953e:	da28      	bge.n	8009592 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009540:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009544:	88cb      	ldrh	r3, [r1, #6]
 8009546:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800954a:	442b      	add	r3, r5
 800954c:	b21b      	sxth	r3, r3
 800954e:	429e      	cmp	r6, r3
 8009550:	da1f      	bge.n	8009592 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009552:	88c3      	ldrh	r3, [r0, #6]
 8009554:	4433      	add	r3, r6
 8009556:	b29b      	uxth	r3, r3
 8009558:	fa0f fc83 	sxth.w	ip, r3
 800955c:	4565      	cmp	r5, ip
 800955e:	da18      	bge.n	8009592 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009560:	454f      	cmp	r7, r9
 8009562:	bfb8      	it	lt
 8009564:	464f      	movlt	r7, r9
 8009566:	42b5      	cmp	r5, r6
 8009568:	bfb8      	it	lt
 800956a:	4635      	movlt	r5, r6
 800956c:	45f0      	cmp	r8, lr
 800956e:	bfd8      	it	le
 8009570:	4622      	movle	r2, r4
 8009572:	1bd2      	subs	r2, r2, r7
 8009574:	8082      	strh	r2, [r0, #4]
 8009576:	884a      	ldrh	r2, [r1, #2]
 8009578:	88c9      	ldrh	r1, [r1, #6]
 800957a:	8007      	strh	r7, [r0, #0]
 800957c:	440a      	add	r2, r1
 800957e:	b292      	uxth	r2, r2
 8009580:	b211      	sxth	r1, r2
 8009582:	458c      	cmp	ip, r1
 8009584:	bfa8      	it	ge
 8009586:	4613      	movge	r3, r2
 8009588:	1b5b      	subs	r3, r3, r5
 800958a:	80c3      	strh	r3, [r0, #6]
 800958c:	8045      	strh	r5, [r0, #2]
 800958e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009592:	2300      	movs	r3, #0
 8009594:	8003      	strh	r3, [r0, #0]
 8009596:	8043      	strh	r3, [r0, #2]
 8009598:	8083      	strh	r3, [r0, #4]
 800959a:	80c3      	strh	r3, [r0, #6]
 800959c:	e7f7      	b.n	800958e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800959e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800959e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80095a2:	2b00      	cmp	r3, #0
 80095a4:	dd06      	ble.n	80095b4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80095a6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80095aa:	2800      	cmp	r0, #0
 80095ac:	bfcc      	ite	gt
 80095ae:	2000      	movgt	r0, #0
 80095b0:	2001      	movle	r0, #1
 80095b2:	4770      	bx	lr
 80095b4:	2001      	movs	r0, #1
 80095b6:	4770      	bx	lr

080095b8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80095b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095bc:	2300      	movs	r3, #0
 80095be:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80095c0:	8003      	strh	r3, [r0, #0]
 80095c2:	4604      	mov	r4, r0
 80095c4:	8043      	strh	r3, [r0, #2]
 80095c6:	8083      	strh	r3, [r0, #4]
 80095c8:	80c3      	strh	r3, [r0, #6]
 80095ca:	2d00      	cmp	r5, #0
 80095cc:	d040      	beq.n	8009650 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80095ce:	1d28      	adds	r0, r5, #4
 80095d0:	f7ff ffe5 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80095d4:	b988      	cbnz	r0, 80095fa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80095d6:	4620      	mov	r0, r4
 80095d8:	f7ff ffe1 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80095dc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80095e0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80095e4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80095e8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80095ec:	b138      	cbz	r0, 80095fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80095ee:	8022      	strh	r2, [r4, #0]
 80095f0:	8063      	strh	r3, [r4, #2]
 80095f2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80095f6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80095fa:	69ad      	ldr	r5, [r5, #24]
 80095fc:	e7e5      	b.n	80095ca <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80095fe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009602:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009606:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800960a:	4290      	cmp	r0, r2
 800960c:	4607      	mov	r7, r0
 800960e:	bfa8      	it	ge
 8009610:	4617      	movge	r7, r2
 8009612:	4472      	add	r2, lr
 8009614:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009618:	8027      	strh	r7, [r4, #0]
 800961a:	4299      	cmp	r1, r3
 800961c:	460e      	mov	r6, r1
 800961e:	4440      	add	r0, r8
 8009620:	bfa8      	it	ge
 8009622:	461e      	movge	r6, r3
 8009624:	4471      	add	r1, lr
 8009626:	4463      	add	r3, ip
 8009628:	b200      	sxth	r0, r0
 800962a:	b212      	sxth	r2, r2
 800962c:	b209      	sxth	r1, r1
 800962e:	b21b      	sxth	r3, r3
 8009630:	4290      	cmp	r0, r2
 8009632:	bfac      	ite	ge
 8009634:	ebc7 0200 	rsbge	r2, r7, r0
 8009638:	ebc7 0202 	rsblt	r2, r7, r2
 800963c:	4299      	cmp	r1, r3
 800963e:	bfac      	ite	ge
 8009640:	ebc6 0301 	rsbge	r3, r6, r1
 8009644:	ebc6 0303 	rsblt	r3, r6, r3
 8009648:	8066      	strh	r6, [r4, #2]
 800964a:	80a2      	strh	r2, [r4, #4]
 800964c:	80e3      	strh	r3, [r4, #6]
 800964e:	e7d4      	b.n	80095fa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009650:	4620      	mov	r0, r4
 8009652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009656 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009656:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800965a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800965e:	b383      	cbz	r3, 80096c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009660:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009662:	b374      	cbz	r4, 80096c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009664:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009668:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800966c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009670:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009674:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009678:	b303      	cbz	r3, 80096bc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800967a:	4668      	mov	r0, sp
 800967c:	1d21      	adds	r1, r4, #4
 800967e:	f8ad 5000 	strh.w	r5, [sp]
 8009682:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009686:	f8ad 7004 	strh.w	r7, [sp, #4]
 800968a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800968e:	f7ff ff43 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 8009692:	4668      	mov	r0, sp
 8009694:	f7ff ff83 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009698:	b980      	cbnz	r0, 80096bc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800969a:	f8bd 3000 	ldrh.w	r3, [sp]
 800969e:	88a2      	ldrh	r2, [r4, #4]
 80096a0:	1a9b      	subs	r3, r3, r2
 80096a2:	f8ad 3000 	strh.w	r3, [sp]
 80096a6:	88e2      	ldrh	r2, [r4, #6]
 80096a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80096ac:	1a9b      	subs	r3, r3, r2
 80096ae:	f8ad 3002 	strh.w	r3, [sp, #2]
 80096b2:	6823      	ldr	r3, [r4, #0]
 80096b4:	4669      	mov	r1, sp
 80096b6:	689b      	ldr	r3, [r3, #8]
 80096b8:	4620      	mov	r0, r4
 80096ba:	4798      	blx	r3
 80096bc:	69a4      	ldr	r4, [r4, #24]
 80096be:	2c00      	cmp	r4, #0
 80096c0:	d1d8      	bne.n	8009674 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80096c2:	b002      	add	sp, #8
 80096c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080096c8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80096c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80096ca:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80096ce:	460d      	mov	r5, r1
 80096d0:	4616      	mov	r6, r2
 80096d2:	b323      	cbz	r3, 800971e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80096d4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80096d6:	b314      	cbz	r4, 800971e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80096d8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80096dc:	b1eb      	cbz	r3, 800971a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80096de:	6828      	ldr	r0, [r5, #0]
 80096e0:	6869      	ldr	r1, [r5, #4]
 80096e2:	466b      	mov	r3, sp
 80096e4:	c303      	stmia	r3!, {r0, r1}
 80096e6:	4668      	mov	r0, sp
 80096e8:	1d21      	adds	r1, r4, #4
 80096ea:	f7ff ff15 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 80096ee:	4668      	mov	r0, sp
 80096f0:	f7ff ff55 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80096f4:	b988      	cbnz	r0, 800971a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80096f6:	f8bd 3000 	ldrh.w	r3, [sp]
 80096fa:	88a2      	ldrh	r2, [r4, #4]
 80096fc:	1a9b      	subs	r3, r3, r2
 80096fe:	f8ad 3000 	strh.w	r3, [sp]
 8009702:	88e2      	ldrh	r2, [r4, #6]
 8009704:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009708:	1a9b      	subs	r3, r3, r2
 800970a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800970e:	6823      	ldr	r3, [r4, #0]
 8009710:	4632      	mov	r2, r6
 8009712:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009714:	4669      	mov	r1, sp
 8009716:	4620      	mov	r0, r4
 8009718:	4798      	blx	r3
 800971a:	69a4      	ldr	r4, [r4, #24]
 800971c:	e7db      	b.n	80096d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800971e:	b002      	add	sp, #8
 8009720:	bd70      	pop	{r4, r5, r6, pc}

08009722 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009722:	b513      	push	{r0, r1, r4, lr}
 8009724:	6803      	ldr	r3, [r0, #0]
 8009726:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 800972a:	2300      	movs	r3, #0
 800972c:	e9cd 3300 	strd	r3, r3, [sp]
 8009730:	466b      	mov	r3, sp
 8009732:	47a0      	blx	r4
 8009734:	b002      	add	sp, #8
 8009736:	bd10      	pop	{r4, pc}

08009738 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009738:	2301      	movs	r3, #1
 800973a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800973e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009742:	4770      	bx	lr

08009744 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009744:	2301      	movs	r3, #1
 8009746:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800974a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800974e:	4770      	bx	lr

08009750 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009750:	6843      	ldr	r3, [r0, #4]
 8009752:	2201      	movs	r2, #1
 8009754:	725a      	strb	r2, [r3, #9]
 8009756:	6840      	ldr	r0, [r0, #4]
 8009758:	6803      	ldr	r3, [r0, #0]
 800975a:	691b      	ldr	r3, [r3, #16]
 800975c:	4718      	bx	r3

0800975e <_ZN8touchgfx3HAL8flushDMAEv>:
 800975e:	6840      	ldr	r0, [r0, #4]
 8009760:	6803      	ldr	r3, [r0, #0]
 8009762:	689b      	ldr	r3, [r3, #8]
 8009764:	4718      	bx	r3

08009766 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009766:	b530      	push	{r4, r5, lr}
 8009768:	b08b      	sub	sp, #44	; 0x2c
 800976a:	6804      	ldr	r4, [r0, #0]
 800976c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009770:	9509      	str	r5, [sp, #36]	; 0x24
 8009772:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009776:	9508      	str	r5, [sp, #32]
 8009778:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800977c:	9507      	str	r5, [sp, #28]
 800977e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009782:	9506      	str	r5, [sp, #24]
 8009784:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009788:	9505      	str	r5, [sp, #20]
 800978a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800978e:	9504      	str	r5, [sp, #16]
 8009790:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009794:	9503      	str	r5, [sp, #12]
 8009796:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800979a:	9502      	str	r5, [sp, #8]
 800979c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80097a0:	e9cd 3500 	strd	r3, r5, [sp]
 80097a4:	4613      	mov	r3, r2
 80097a6:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80097a8:	2200      	movs	r2, #0
 80097aa:	47a0      	blx	r4
 80097ac:	b00b      	add	sp, #44	; 0x2c
 80097ae:	bd30      	pop	{r4, r5, pc}

080097b0 <_ZN8touchgfx3HAL10beginFrameEv>:
 80097b0:	4b04      	ldr	r3, [pc, #16]	; (80097c4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80097b2:	781b      	ldrb	r3, [r3, #0]
 80097b4:	b123      	cbz	r3, 80097c0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80097b6:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 80097ba:	f080 0001 	eor.w	r0, r0, #1
 80097be:	4770      	bx	lr
 80097c0:	2001      	movs	r0, #1
 80097c2:	4770      	bx	lr
 80097c4:	2000a2b6 	.word	0x2000a2b6

080097c8 <_ZN8touchgfx3HAL8endFrameEv>:
 80097c8:	b510      	push	{r4, lr}
 80097ca:	4604      	mov	r4, r0
 80097cc:	6840      	ldr	r0, [r0, #4]
 80097ce:	6803      	ldr	r3, [r0, #0]
 80097d0:	689b      	ldr	r3, [r3, #8]
 80097d2:	4798      	blx	r3
 80097d4:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 80097d8:	b113      	cbz	r3, 80097e0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80097da:	2301      	movs	r3, #1
 80097dc:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80097e0:	bd10      	pop	{r4, pc}

080097e2 <_ZN8touchgfx3HAL10initializeEv>:
 80097e2:	b510      	push	{r4, lr}
 80097e4:	4604      	mov	r4, r0
 80097e6:	f7f7 fa4d 	bl	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv>
 80097ea:	6860      	ldr	r0, [r4, #4]
 80097ec:	6803      	ldr	r3, [r0, #0]
 80097ee:	68db      	ldr	r3, [r3, #12]
 80097f0:	4798      	blx	r3
 80097f2:	68e0      	ldr	r0, [r4, #12]
 80097f4:	6803      	ldr	r3, [r0, #0]
 80097f6:	689b      	ldr	r3, [r3, #8]
 80097f8:	4798      	blx	r3
 80097fa:	6823      	ldr	r3, [r4, #0]
 80097fc:	4620      	mov	r0, r4
 80097fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009804:	4718      	bx	r3
	...

08009808 <_ZN8touchgfx3HAL4tickEv>:
 8009808:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800980a:	6803      	ldr	r3, [r0, #0]
 800980c:	4d5c      	ldr	r5, [pc, #368]	; (8009980 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800980e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009812:	4604      	mov	r4, r0
 8009814:	4798      	blx	r3
 8009816:	2800      	cmp	r0, #0
 8009818:	f000 8097 	beq.w	800994a <_ZN8touchgfx3HAL4tickEv+0x142>
 800981c:	2001      	movs	r0, #1
 800981e:	f7f6 ff99 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009822:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009826:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800982a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800982e:	2600      	movs	r6, #0
 8009830:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009834:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009838:	b133      	cbz	r3, 8009848 <_ZN8touchgfx3HAL4tickEv+0x40>
 800983a:	6823      	ldr	r3, [r4, #0]
 800983c:	4620      	mov	r0, r4
 800983e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009842:	4798      	blx	r3
 8009844:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009848:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800984c:	6862      	ldr	r2, [r4, #4]
 800984e:	f083 0301 	eor.w	r3, r3, #1
 8009852:	7253      	strb	r3, [r2, #9]
 8009854:	2601      	movs	r6, #1
 8009856:	702e      	strb	r6, [r5, #0]
 8009858:	f003 f8e4 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 800985c:	6803      	ldr	r3, [r0, #0]
 800985e:	4631      	mov	r1, r6
 8009860:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009862:	4798      	blx	r3
 8009864:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009868:	b90b      	cbnz	r3, 800986e <_ZN8touchgfx3HAL4tickEv+0x66>
 800986a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800986e:	f003 f8d9 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 8009872:	6803      	ldr	r3, [r0, #0]
 8009874:	695b      	ldr	r3, [r3, #20]
 8009876:	4798      	blx	r3
 8009878:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800987a:	6803      	ldr	r3, [r0, #0]
 800987c:	691b      	ldr	r3, [r3, #16]
 800987e:	4798      	blx	r3
 8009880:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009884:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009888:	3b01      	subs	r3, #1
 800988a:	b2db      	uxtb	r3, r3
 800988c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009890:	b10a      	cbz	r2, 8009896 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009892:	2b00      	cmp	r3, #0
 8009894:	d1eb      	bne.n	800986e <_ZN8touchgfx3HAL4tickEv+0x66>
 8009896:	4a3b      	ldr	r2, [pc, #236]	; (8009984 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009898:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800989c:	7813      	ldrb	r3, [r2, #0]
 800989e:	3301      	adds	r3, #1
 80098a0:	b25b      	sxtb	r3, r3
 80098a2:	4299      	cmp	r1, r3
 80098a4:	7013      	strb	r3, [r2, #0]
 80098a6:	dc10      	bgt.n	80098ca <_ZN8touchgfx3HAL4tickEv+0xc2>
 80098a8:	68e0      	ldr	r0, [r4, #12]
 80098aa:	2300      	movs	r3, #0
 80098ac:	7013      	strb	r3, [r2, #0]
 80098ae:	6803      	ldr	r3, [r0, #0]
 80098b0:	aa03      	add	r2, sp, #12
 80098b2:	68db      	ldr	r3, [r3, #12]
 80098b4:	a902      	add	r1, sp, #8
 80098b6:	4798      	blx	r3
 80098b8:	6823      	ldr	r3, [r4, #0]
 80098ba:	2800      	cmp	r0, #0
 80098bc:	d051      	beq.n	8009962 <_ZN8touchgfx3HAL4tickEv+0x15a>
 80098be:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80098c2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80098c6:	4620      	mov	r0, r4
 80098c8:	4798      	blx	r3
 80098ca:	6960      	ldr	r0, [r4, #20]
 80098cc:	2300      	movs	r3, #0
 80098ce:	f88d 3007 	strb.w	r3, [sp, #7]
 80098d2:	b158      	cbz	r0, 80098ec <_ZN8touchgfx3HAL4tickEv+0xe4>
 80098d4:	6803      	ldr	r3, [r0, #0]
 80098d6:	f10d 0107 	add.w	r1, sp, #7
 80098da:	68db      	ldr	r3, [r3, #12]
 80098dc:	4798      	blx	r3
 80098de:	b128      	cbz	r0, 80098ec <_ZN8touchgfx3HAL4tickEv+0xe4>
 80098e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80098e2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80098e6:	6803      	ldr	r3, [r0, #0]
 80098e8:	68db      	ldr	r3, [r3, #12]
 80098ea:	4798      	blx	r3
 80098ec:	f104 001c 	add.w	r0, r4, #28
 80098f0:	f011 fff0 	bl	801b8d4 <_ZN8touchgfx8Gestures4tickEv>
 80098f4:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80098f8:	b30b      	cbz	r3, 800993e <_ZN8touchgfx3HAL4tickEv+0x136>
 80098fa:	6920      	ldr	r0, [r4, #16]
 80098fc:	6803      	ldr	r3, [r0, #0]
 80098fe:	691b      	ldr	r3, [r3, #16]
 8009900:	4798      	blx	r3
 8009902:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009904:	4606      	mov	r6, r0
 8009906:	b903      	cbnz	r3, 800990a <_ZN8touchgfx3HAL4tickEv+0x102>
 8009908:	6720      	str	r0, [r4, #112]	; 0x70
 800990a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800990c:	4a1e      	ldr	r2, [pc, #120]	; (8009988 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800990e:	1af3      	subs	r3, r6, r3
 8009910:	4293      	cmp	r3, r2
 8009912:	d914      	bls.n	800993e <_ZN8touchgfx3HAL4tickEv+0x136>
 8009914:	6920      	ldr	r0, [r4, #16]
 8009916:	6803      	ldr	r3, [r0, #0]
 8009918:	699b      	ldr	r3, [r3, #24]
 800991a:	4798      	blx	r3
 800991c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800991e:	2264      	movs	r2, #100	; 0x64
 8009920:	1af3      	subs	r3, r6, r3
 8009922:	fbb3 f3f2 	udiv	r3, r3, r2
 8009926:	fbb0 f0f3 	udiv	r0, r0, r3
 800992a:	2800      	cmp	r0, #0
 800992c:	dc1e      	bgt.n	800996c <_ZN8touchgfx3HAL4tickEv+0x164>
 800992e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009932:	6920      	ldr	r0, [r4, #16]
 8009934:	6803      	ldr	r3, [r0, #0]
 8009936:	2100      	movs	r1, #0
 8009938:	69db      	ldr	r3, [r3, #28]
 800993a:	4798      	blx	r3
 800993c:	6726      	str	r6, [r4, #112]	; 0x70
 800993e:	f003 f871 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 8009942:	6803      	ldr	r3, [r0, #0]
 8009944:	2100      	movs	r1, #0
 8009946:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009948:	4798      	blx	r3
 800994a:	6823      	ldr	r3, [r4, #0]
 800994c:	4620      	mov	r0, r4
 800994e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009952:	4798      	blx	r3
 8009954:	2001      	movs	r0, #1
 8009956:	f7f6 ff19 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800995a:	2300      	movs	r3, #0
 800995c:	702b      	strb	r3, [r5, #0]
 800995e:	b004      	add	sp, #16
 8009960:	bd70      	pop	{r4, r5, r6, pc}
 8009962:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009966:	4620      	mov	r0, r4
 8009968:	4798      	blx	r3
 800996a:	e7ae      	b.n	80098ca <_ZN8touchgfx3HAL4tickEv+0xc2>
 800996c:	2863      	cmp	r0, #99	; 0x63
 800996e:	bfcb      	itete	gt
 8009970:	2300      	movgt	r3, #0
 8009972:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009976:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800997a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800997e:	e7d8      	b.n	8009932 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009980:	2000a2bc 	.word	0x2000a2bc
 8009984:	2000a2bd 	.word	0x2000a2bd
 8009988:	05f5e100 	.word	0x05f5e100

0800998c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800998c:	f7f7 b9aa 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009990 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009990:	6581      	str	r1, [r0, #88]	; 0x58
 8009992:	301c      	adds	r0, #28
 8009994:	f011 bf9c 	b.w	801b8d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009998 <_ZN8touchgfx3HAL5touchEll>:
 8009998:	b530      	push	{r4, r5, lr}
 800999a:	b087      	sub	sp, #28
 800999c:	4604      	mov	r4, r0
 800999e:	a804      	add	r0, sp, #16
 80099a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80099a4:	f002 fdf4 	bl	800c590 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80099a8:	9b04      	ldr	r3, [sp, #16]
 80099aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80099ae:	a906      	add	r1, sp, #24
 80099b0:	9b05      	ldr	r3, [sp, #20]
 80099b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80099b6:	a803      	add	r0, sp, #12
 80099b8:	f002 fe3c 	bl	800c634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80099bc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 80099c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80099c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80099c8:	f104 001c 	add.w	r0, r4, #28
 80099cc:	b189      	cbz	r1, 80099f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80099ce:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80099d2:	9300      	str	r3, [sp, #0]
 80099d4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80099d8:	4613      	mov	r3, r2
 80099da:	462a      	mov	r2, r5
 80099dc:	f011 ff88 	bl	801b8f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80099e0:	b128      	cbz	r0, 80099ee <_ZN8touchgfx3HAL5touchEll+0x56>
 80099e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80099e6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80099e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80099ec:	6623      	str	r3, [r4, #96]	; 0x60
 80099ee:	b007      	add	sp, #28
 80099f0:	bd30      	pop	{r4, r5, pc}
 80099f2:	f011 ffc1 	bl	801b978 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80099f6:	2301      	movs	r3, #1
 80099f8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80099fc:	e7f1      	b.n	80099e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

080099fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80099fe:	b510      	push	{r4, lr}
 8009a00:	2b00      	cmp	r3, #0
 8009a02:	d046      	beq.n	8009a92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009a04:	ea81 0002 	eor.w	r0, r1, r2
 8009a08:	07c4      	lsls	r4, r0, #31
 8009a0a:	d508      	bpl.n	8009a1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009a0c:	440b      	add	r3, r1
 8009a0e:	3a01      	subs	r2, #1
 8009a10:	428b      	cmp	r3, r1
 8009a12:	d93e      	bls.n	8009a92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009a14:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009a18:	f801 0b01 	strb.w	r0, [r1], #1
 8009a1c:	e7f8      	b.n	8009a10 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009a1e:	07d0      	lsls	r0, r2, #31
 8009a20:	bf42      	ittt	mi
 8009a22:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009a26:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009a2a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009a2e:	2b01      	cmp	r3, #1
 8009a30:	d911      	bls.n	8009a56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009a32:	ea81 0402 	eor.w	r4, r1, r2
 8009a36:	07a4      	lsls	r4, r4, #30
 8009a38:	4610      	mov	r0, r2
 8009a3a:	d022      	beq.n	8009a82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009a3c:	f023 0401 	bic.w	r4, r3, #1
 8009a40:	440c      	add	r4, r1
 8009a42:	428c      	cmp	r4, r1
 8009a44:	4602      	mov	r2, r0
 8009a46:	d904      	bls.n	8009a52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009a48:	8812      	ldrh	r2, [r2, #0]
 8009a4a:	f821 2b02 	strh.w	r2, [r1], #2
 8009a4e:	3002      	adds	r0, #2
 8009a50:	e7f7      	b.n	8009a42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009a52:	f003 0301 	and.w	r3, r3, #1
 8009a56:	f023 0003 	bic.w	r0, r3, #3
 8009a5a:	4408      	add	r0, r1
 8009a5c:	4288      	cmp	r0, r1
 8009a5e:	4614      	mov	r4, r2
 8009a60:	d904      	bls.n	8009a6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009a62:	6824      	ldr	r4, [r4, #0]
 8009a64:	f841 4b04 	str.w	r4, [r1], #4
 8009a68:	3204      	adds	r2, #4
 8009a6a:	e7f7      	b.n	8009a5c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009a6c:	f003 0303 	and.w	r3, r3, #3
 8009a70:	440b      	add	r3, r1
 8009a72:	3a01      	subs	r2, #1
 8009a74:	428b      	cmp	r3, r1
 8009a76:	d90c      	bls.n	8009a92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009a78:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009a7c:	f801 0b01 	strb.w	r0, [r1], #1
 8009a80:	e7f8      	b.n	8009a74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009a82:	0790      	lsls	r0, r2, #30
 8009a84:	d0e7      	beq.n	8009a56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009a86:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009a8a:	f821 0b02 	strh.w	r0, [r1], #2
 8009a8e:	3b02      	subs	r3, #2
 8009a90:	e7e1      	b.n	8009a56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009a92:	2001      	movs	r0, #1
 8009a94:	bd10      	pop	{r4, pc}

08009a96 <_ZN8touchgfx3HAL7noTouchEv>:
 8009a96:	b510      	push	{r4, lr}
 8009a98:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009a9c:	4604      	mov	r4, r0
 8009a9e:	b153      	cbz	r3, 8009ab6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009aa0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009aa4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009aa8:	2101      	movs	r1, #1
 8009aaa:	301c      	adds	r0, #28
 8009aac:	f011 ff64 	bl	801b978 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009ab0:	2300      	movs	r3, #0
 8009ab2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009ab6:	bd10      	pop	{r4, pc}

08009ab8 <_ZN8touchgfx3HAL3lcdEv>:
 8009ab8:	4b04      	ldr	r3, [pc, #16]	; (8009acc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009aba:	681b      	ldr	r3, [r3, #0]
 8009abc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009ac0:	b10a      	cbz	r2, 8009ac6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009ac2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009ac4:	b900      	cbnz	r0, 8009ac8 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009ac6:	6898      	ldr	r0, [r3, #8]
 8009ac8:	4770      	bx	lr
 8009aca:	bf00      	nop
 8009acc:	2000a2b8 	.word	0x2000a2b8

08009ad0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ad4:	4604      	mov	r4, r0
 8009ad6:	6980      	ldr	r0, [r0, #24]
 8009ad8:	b085      	sub	sp, #20
 8009ada:	460f      	mov	r7, r1
 8009adc:	4690      	mov	r8, r2
 8009ade:	4699      	mov	r9, r3
 8009ae0:	b930      	cbnz	r0, 8009af0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009ae2:	4b1c      	ldr	r3, [pc, #112]	; (8009b54 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009ae4:	4a1c      	ldr	r2, [pc, #112]	; (8009b58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009ae6:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8009aea:	481c      	ldr	r0, [pc, #112]	; (8009b5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009aec:	f011 fff8 	bl	801bae0 <__assert_func>
 8009af0:	ad04      	add	r5, sp, #16
 8009af2:	2600      	movs	r6, #0
 8009af4:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009af8:	6806      	ldr	r6, [r0, #0]
 8009afa:	9501      	str	r5, [sp, #4]
 8009afc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009b00:	9500      	str	r5, [sp, #0]
 8009b02:	6835      	ldr	r5, [r6, #0]
 8009b04:	47a8      	blx	r5
 8009b06:	4d16      	ldr	r5, [pc, #88]	; (8009b60 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009b08:	4606      	mov	r6, r0
 8009b0a:	f8a5 9000 	strh.w	r9, [r5]
 8009b0e:	f7ff ffd3 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 8009b12:	6803      	ldr	r3, [r0, #0]
 8009b14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b16:	4798      	blx	r3
 8009b18:	2801      	cmp	r0, #1
 8009b1a:	d012      	beq.n	8009b42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009b1c:	d306      	bcc.n	8009b2c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009b1e:	280d      	cmp	r0, #13
 8009b20:	d80b      	bhi.n	8009b3a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009b22:	4b10      	ldr	r3, [pc, #64]	; (8009b64 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009b24:	4a0c      	ldr	r2, [pc, #48]	; (8009b58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009b26:	f240 1167 	movw	r1, #359	; 0x167
 8009b2a:	e7de      	b.n	8009aea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009b2c:	882b      	ldrh	r3, [r5, #0]
 8009b2e:	fb08 7203 	mla	r2, r8, r3, r7
 8009b32:	9b03      	ldr	r3, [sp, #12]
 8009b34:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009b38:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009b3a:	4630      	mov	r0, r6
 8009b3c:	b005      	add	sp, #20
 8009b3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b42:	882a      	ldrh	r2, [r5, #0]
 8009b44:	9b03      	ldr	r3, [sp, #12]
 8009b46:	fb08 7202 	mla	r2, r8, r2, r7
 8009b4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009b4e:	1a9a      	subs	r2, r3, r2
 8009b50:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009b52:	e7f2      	b.n	8009b3a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009b54:	0801e20c 	.word	0x0801e20c
 8009b58:	0801e4ca 	.word	0x0801e4ca
 8009b5c:	0801e251 	.word	0x0801e251
 8009b60:	2000a2b2 	.word	0x2000a2b2
 8009b64:	0801e277 	.word	0x0801e277

08009b68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009b68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b6a:	b08b      	sub	sp, #44	; 0x2c
 8009b6c:	4617      	mov	r7, r2
 8009b6e:	4604      	mov	r4, r0
 8009b70:	460e      	mov	r6, r1
 8009b72:	461d      	mov	r5, r3
 8009b74:	f7ff ffa0 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 8009b78:	6803      	ldr	r3, [r0, #0]
 8009b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b7c:	4798      	blx	r3
 8009b7e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009b82:	9007      	str	r0, [sp, #28]
 8009b84:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009b88:	4b0d      	ldr	r3, [pc, #52]	; (8009bc0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009b8a:	6822      	ldr	r2, [r4, #0]
 8009b8c:	881b      	ldrh	r3, [r3, #0]
 8009b8e:	9306      	str	r3, [sp, #24]
 8009b90:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009b94:	9305      	str	r3, [sp, #20]
 8009b96:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009b9a:	9304      	str	r3, [sp, #16]
 8009b9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009ba0:	9303      	str	r3, [sp, #12]
 8009ba2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009ba6:	9302      	str	r3, [sp, #8]
 8009ba8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009bac:	e9cd 5300 	strd	r5, r3, [sp]
 8009bb0:	4631      	mov	r1, r6
 8009bb2:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009bb4:	463b      	mov	r3, r7
 8009bb6:	2200      	movs	r2, #0
 8009bb8:	4620      	mov	r0, r4
 8009bba:	47a8      	blx	r5
 8009bbc:	b00b      	add	sp, #44	; 0x2c
 8009bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009bc0:	2000a2b2 	.word	0x2000a2b2

08009bc4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009bc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bc8:	4698      	mov	r8, r3
 8009bca:	6803      	ldr	r3, [r0, #0]
 8009bcc:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009bce:	4b15      	ldr	r3, [pc, #84]	; (8009c24 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009bd0:	b08b      	sub	sp, #44	; 0x2c
 8009bd2:	4617      	mov	r7, r2
 8009bd4:	f8b3 9000 	ldrh.w	r9, [r3]
 8009bd8:	460e      	mov	r6, r1
 8009bda:	4604      	mov	r4, r0
 8009bdc:	f7ff ff6c 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 8009be0:	6803      	ldr	r3, [r0, #0]
 8009be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009be4:	4798      	blx	r3
 8009be6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009bea:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009bee:	2302      	movs	r3, #2
 8009bf0:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009bf4:	2301      	movs	r3, #1
 8009bf6:	9305      	str	r3, [sp, #20]
 8009bf8:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009bfc:	9304      	str	r3, [sp, #16]
 8009bfe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c02:	9303      	str	r3, [sp, #12]
 8009c04:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009c08:	9302      	str	r3, [sp, #8]
 8009c0a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c0e:	2200      	movs	r2, #0
 8009c10:	e9cd 8300 	strd	r8, r3, [sp]
 8009c14:	4631      	mov	r1, r6
 8009c16:	463b      	mov	r3, r7
 8009c18:	4620      	mov	r0, r4
 8009c1a:	47a8      	blx	r5
 8009c1c:	b00b      	add	sp, #44	; 0x2c
 8009c1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c22:	bf00      	nop
 8009c24:	2000a2b2 	.word	0x2000a2b2

08009c28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009c28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c2c:	4698      	mov	r8, r3
 8009c2e:	6803      	ldr	r3, [r0, #0]
 8009c30:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009c32:	4b11      	ldr	r3, [pc, #68]	; (8009c78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009c34:	b087      	sub	sp, #28
 8009c36:	f8b3 9000 	ldrh.w	r9, [r3]
 8009c3a:	460e      	mov	r6, r1
 8009c3c:	4617      	mov	r7, r2
 8009c3e:	4604      	mov	r4, r0
 8009c40:	f7ff ff3a 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 8009c44:	6803      	ldr	r3, [r0, #0]
 8009c46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c48:	4798      	blx	r3
 8009c4a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009c4e:	f8cd 900c 	str.w	r9, [sp, #12]
 8009c52:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009c56:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009c5a:	9302      	str	r3, [sp, #8]
 8009c5c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009c60:	9301      	str	r3, [sp, #4]
 8009c62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009c66:	9300      	str	r3, [sp, #0]
 8009c68:	463a      	mov	r2, r7
 8009c6a:	4643      	mov	r3, r8
 8009c6c:	4631      	mov	r1, r6
 8009c6e:	4620      	mov	r0, r4
 8009c70:	47a8      	blx	r5
 8009c72:	b007      	add	sp, #28
 8009c74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c78:	2000a2b2 	.word	0x2000a2b2

08009c7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c80:	4604      	mov	r4, r0
 8009c82:	b08f      	sub	sp, #60	; 0x3c
 8009c84:	4610      	mov	r0, r2
 8009c86:	460d      	mov	r5, r1
 8009c88:	4691      	mov	r9, r2
 8009c8a:	461e      	mov	r6, r3
 8009c8c:	f005 fde4 	bl	800f858 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009c90:	2800      	cmp	r0, #0
 8009c92:	f000 809c 	beq.w	8009dce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8009c96:	6823      	ldr	r3, [r4, #0]
 8009c98:	f8df b194 	ldr.w	fp, [pc, #404]	; 8009e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009c9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c9e:	f8df a194 	ldr.w	sl, [pc, #404]	; 8009e34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009ca2:	4f60      	ldr	r7, [pc, #384]	; (8009e24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009ca4:	4620      	mov	r0, r4
 8009ca6:	4798      	blx	r3
 8009ca8:	6823      	ldr	r3, [r4, #0]
 8009caa:	4620      	mov	r0, r4
 8009cac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009cae:	4798      	blx	r3
 8009cb0:	f8bb 3000 	ldrh.w	r3, [fp]
 8009cb4:	9301      	str	r3, [sp, #4]
 8009cb6:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009cba:	f8ba 3000 	ldrh.w	r3, [sl]
 8009cbe:	9302      	str	r3, [sp, #8]
 8009cc0:	883b      	ldrh	r3, [r7, #0]
 8009cc2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009cc6:	9303      	str	r3, [sp, #12]
 8009cc8:	4b57      	ldr	r3, [pc, #348]	; (8009e28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009cca:	9305      	str	r3, [sp, #20]
 8009ccc:	881a      	ldrh	r2, [r3, #0]
 8009cce:	9204      	str	r2, [sp, #16]
 8009cd0:	4640      	mov	r0, r8
 8009cd2:	f005 fe7b 	bl	800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009cd6:	8038      	strh	r0, [r7, #0]
 8009cd8:	4640      	mov	r0, r8
 8009cda:	f005 feb1 	bl	800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009cde:	9b05      	ldr	r3, [sp, #20]
 8009ce0:	8018      	strh	r0, [r3, #0]
 8009ce2:	4b52      	ldr	r3, [pc, #328]	; (8009e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009ce4:	781b      	ldrb	r3, [r3, #0]
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d174      	bne.n	8009dd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009cea:	883b      	ldrh	r3, [r7, #0]
 8009cec:	f8ab 3000 	strh.w	r3, [fp]
 8009cf0:	f8aa 0000 	strh.w	r0, [sl]
 8009cf4:	4648      	mov	r0, r9
 8009cf6:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009cfa:	f005 fdad 	bl	800f858 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009cfe:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009d02:	2200      	movs	r2, #0
 8009d04:	4611      	mov	r1, r2
 8009d06:	4628      	mov	r0, r5
 8009d08:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009d0c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009d10:	f7f8 fbf0 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
 8009d14:	2301      	movs	r3, #1
 8009d16:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009d1a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009d1e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009d22:	2b00      	cmp	r3, #0
 8009d24:	dd5c      	ble.n	8009de0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009d26:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009d2a:	2b00      	cmp	r3, #0
 8009d2c:	dd58      	ble.n	8009de0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009d2e:	462a      	mov	r2, r5
 8009d30:	ab0a      	add	r3, sp, #40	; 0x28
 8009d32:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009d36:	6851      	ldr	r1, [r2, #4]
 8009d38:	c303      	stmia	r3!, {r0, r1}
 8009d3a:	4631      	mov	r1, r6
 8009d3c:	a80a      	add	r0, sp, #40	; 0x28
 8009d3e:	f7ff fbeb 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 8009d42:	4b38      	ldr	r3, [pc, #224]	; (8009e24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009d44:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009d48:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009d4c:	2100      	movs	r1, #0
 8009d4e:	aa0a      	add	r2, sp, #40	; 0x28
 8009d50:	4b35      	ldr	r3, [pc, #212]	; (8009e28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009d52:	910c      	str	r1, [sp, #48]	; 0x30
 8009d54:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009d58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009d5c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009d60:	ab08      	add	r3, sp, #32
 8009d62:	e883 0003 	stmia.w	r3, {r0, r1}
 8009d66:	4618      	mov	r0, r3
 8009d68:	a90c      	add	r1, sp, #48	; 0x30
 8009d6a:	f7ff fbd5 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 8009d6e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009d70:	2b00      	cmp	r3, #0
 8009d72:	d13c      	bne.n	8009dee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8009d74:	2000      	movs	r0, #0
 8009d76:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009d7a:	2600      	movs	r6, #0
 8009d7c:	682a      	ldr	r2, [r5, #0]
 8009d7e:	696b      	ldr	r3, [r5, #20]
 8009d80:	616e      	str	r6, [r5, #20]
 8009d82:	9305      	str	r3, [sp, #20]
 8009d84:	6892      	ldr	r2, [r2, #8]
 8009d86:	a908      	add	r1, sp, #32
 8009d88:	4628      	mov	r0, r5
 8009d8a:	4790      	blx	r2
 8009d8c:	9b05      	ldr	r3, [sp, #20]
 8009d8e:	616b      	str	r3, [r5, #20]
 8009d90:	4652      	mov	r2, sl
 8009d92:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009d96:	4649      	mov	r1, r9
 8009d98:	4628      	mov	r0, r5
 8009d9a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009d9e:	f7f8 fba9 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
 8009da2:	4b23      	ldr	r3, [pc, #140]	; (8009e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009da4:	9a01      	ldr	r2, [sp, #4]
 8009da6:	801a      	strh	r2, [r3, #0]
 8009da8:	4b22      	ldr	r3, [pc, #136]	; (8009e34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8009daa:	9a02      	ldr	r2, [sp, #8]
 8009dac:	801a      	strh	r2, [r3, #0]
 8009dae:	4b1d      	ldr	r3, [pc, #116]	; (8009e24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009db0:	9a03      	ldr	r2, [sp, #12]
 8009db2:	801a      	strh	r2, [r3, #0]
 8009db4:	4b1c      	ldr	r3, [pc, #112]	; (8009e28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009db6:	9a04      	ldr	r2, [sp, #16]
 8009db8:	801a      	strh	r2, [r3, #0]
 8009dba:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8009dbe:	6823      	ldr	r3, [r4, #0]
 8009dc0:	4620      	mov	r0, r4
 8009dc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009dc4:	4798      	blx	r3
 8009dc6:	6823      	ldr	r3, [r4, #0]
 8009dc8:	4620      	mov	r0, r4
 8009dca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dcc:	4798      	blx	r3
 8009dce:	b00f      	add	sp, #60	; 0x3c
 8009dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009dd4:	883b      	ldrh	r3, [r7, #0]
 8009dd6:	f8ab 0000 	strh.w	r0, [fp]
 8009dda:	f8aa 3000 	strh.w	r3, [sl]
 8009dde:	e789      	b.n	8009cf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 8009de0:	462a      	mov	r2, r5
 8009de2:	ab0a      	add	r3, sp, #40	; 0x28
 8009de4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009de8:	6851      	ldr	r1, [r2, #4]
 8009dea:	c303      	stmia	r3!, {r0, r1}
 8009dec:	e7a9      	b.n	8009d42 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 8009dee:	a807      	add	r0, sp, #28
 8009df0:	f005 ff7e 	bl	800fcf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009df4:	4606      	mov	r6, r0
 8009df6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009df8:	6803      	ldr	r3, [r0, #0]
 8009dfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009dfc:	4798      	blx	r3
 8009dfe:	4286      	cmp	r6, r0
 8009e00:	d1b8      	bne.n	8009d74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8009e02:	f7ff fe59 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 8009e06:	6803      	ldr	r3, [r0, #0]
 8009e08:	4606      	mov	r6, r0
 8009e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e0c:	9305      	str	r3, [sp, #20]
 8009e0e:	a807      	add	r0, sp, #28
 8009e10:	f005 ff6e 	bl	800fcf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009e14:	9b05      	ldr	r3, [sp, #20]
 8009e16:	4601      	mov	r1, r0
 8009e18:	4630      	mov	r0, r6
 8009e1a:	4798      	blx	r3
 8009e1c:	f080 0001 	eor.w	r0, r0, #1
 8009e20:	b2c0      	uxtb	r0, r0
 8009e22:	e7a8      	b.n	8009d76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009e24:	2000a2ac 	.word	0x2000a2ac
 8009e28:	2000a2ae 	.word	0x2000a2ae
 8009e2c:	2000a2b0 	.word	0x2000a2b0
 8009e30:	2000a2b2 	.word	0x2000a2b2
 8009e34:	2000a2b4 	.word	0x2000a2b4

08009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009e38:	b510      	push	{r4, lr}
 8009e3a:	4b07      	ldr	r3, [pc, #28]	; (8009e58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009e3c:	781b      	ldrb	r3, [r3, #0]
 8009e3e:	4604      	mov	r4, r0
 8009e40:	b13b      	cbz	r3, 8009e52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009e42:	6803      	ldr	r3, [r0, #0]
 8009e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e46:	4798      	blx	r3
 8009e48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009e4a:	4283      	cmp	r3, r0
 8009e4c:	d101      	bne.n	8009e52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009e4e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009e50:	bd10      	pop	{r4, pc}
 8009e52:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009e54:	e7fc      	b.n	8009e50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009e56:	bf00      	nop
 8009e58:	2000a2b6 	.word	0x2000a2b6

08009e5c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e60:	b088      	sub	sp, #32
 8009e62:	461d      	mov	r5, r3
 8009e64:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009e68:	2400      	movs	r4, #0
 8009e6a:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 8009e6e:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8009e72:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8009e76:	9403      	str	r4, [sp, #12]
 8009e78:	e9cd 3100 	strd	r3, r1, [sp]
 8009e7c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009e80:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009e84:	4692      	mov	sl, r2
 8009e86:	4606      	mov	r6, r0
 8009e88:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009e8c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009e90:	f88d 401c 	strb.w	r4, [sp, #28]
 8009e94:	f7ff ffd0 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e98:	fb09 a505 	mla	r5, r9, r5, sl
 8009e9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009ea0:	9504      	str	r5, [sp, #16]
 8009ea2:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009ea6:	f88d 401e 	strb.w	r4, [sp, #30]
 8009eaa:	f88d 401d 	strb.w	r4, [sp, #29]
 8009eae:	f88d 401f 	strb.w	r4, [sp, #31]
 8009eb2:	f1b8 0f00 	cmp.w	r8, #0
 8009eb6:	d000      	beq.n	8009eba <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 8009eb8:	b937      	cbnz	r7, 8009ec8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 8009eba:	4b0d      	ldr	r3, [pc, #52]	; (8009ef0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009ebc:	4a0d      	ldr	r2, [pc, #52]	; (8009ef4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009ebe:	f240 210b 	movw	r1, #523	; 0x20b
 8009ec2:	480d      	ldr	r0, [pc, #52]	; (8009ef8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009ec4:	f011 fe0c 	bl	801bae0 <__assert_func>
 8009ec8:	6833      	ldr	r3, [r6, #0]
 8009eca:	9c00      	ldr	r4, [sp, #0]
 8009ecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ece:	4630      	mov	r0, r6
 8009ed0:	4798      	blx	r3
 8009ed2:	4220      	tst	r0, r4
 8009ed4:	d104      	bne.n	8009ee0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 8009ed6:	4b09      	ldr	r3, [pc, #36]	; (8009efc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8009ed8:	4a06      	ldr	r2, [pc, #24]	; (8009ef4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009eda:	f44f 7103 	mov.w	r1, #524	; 0x20c
 8009ede:	e7f0      	b.n	8009ec2 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 8009ee0:	6870      	ldr	r0, [r6, #4]
 8009ee2:	6803      	ldr	r3, [r0, #0]
 8009ee4:	4669      	mov	r1, sp
 8009ee6:	685b      	ldr	r3, [r3, #4]
 8009ee8:	4798      	blx	r3
 8009eea:	b008      	add	sp, #32
 8009eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ef0:	0801e09f 	.word	0x0801e09f
 8009ef4:	0801e2ff 	.word	0x0801e2ff
 8009ef8:	0801e251 	.word	0x0801e251
 8009efc:	0801e0d7 	.word	0x0801e0d7

08009f00 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f04:	b089      	sub	sp, #36	; 0x24
 8009f06:	2400      	movs	r4, #0
 8009f08:	461d      	mov	r5, r3
 8009f0a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009f0e:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 8009f12:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009f16:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009f1a:	9403      	str	r4, [sp, #12]
 8009f1c:	468a      	mov	sl, r1
 8009f1e:	4693      	mov	fp, r2
 8009f20:	4606      	mov	r6, r0
 8009f22:	e9cd 3400 	strd	r3, r4, [sp]
 8009f26:	f7ff ff87 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f2a:	fb09 b505 	mla	r5, r9, r5, fp
 8009f2e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009f32:	9504      	str	r5, [sp, #16]
 8009f34:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009f38:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009f3c:	f8ad 4018 	strh.w	r4, [sp, #24]
 8009f40:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009f44:	f8cd a00c 	str.w	sl, [sp, #12]
 8009f48:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009f4c:	f88d 401e 	strb.w	r4, [sp, #30]
 8009f50:	f88d 401f 	strb.w	r4, [sp, #31]
 8009f54:	f1b8 0f00 	cmp.w	r8, #0
 8009f58:	d000      	beq.n	8009f5c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 8009f5a:	b937      	cbnz	r7, 8009f6a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 8009f5c:	4b0d      	ldr	r3, [pc, #52]	; (8009f94 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009f5e:	4a0e      	ldr	r2, [pc, #56]	; (8009f98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009f60:	f240 2121 	movw	r1, #545	; 0x221
 8009f64:	480d      	ldr	r0, [pc, #52]	; (8009f9c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009f66:	f011 fdbb 	bl	801bae0 <__assert_func>
 8009f6a:	6833      	ldr	r3, [r6, #0]
 8009f6c:	9c00      	ldr	r4, [sp, #0]
 8009f6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f70:	4630      	mov	r0, r6
 8009f72:	4798      	blx	r3
 8009f74:	4220      	tst	r0, r4
 8009f76:	d104      	bne.n	8009f82 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 8009f78:	4b09      	ldr	r3, [pc, #36]	; (8009fa0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8009f7a:	4a07      	ldr	r2, [pc, #28]	; (8009f98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009f7c:	f240 2122 	movw	r1, #546	; 0x222
 8009f80:	e7f0      	b.n	8009f64 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 8009f82:	6870      	ldr	r0, [r6, #4]
 8009f84:	6803      	ldr	r3, [r0, #0]
 8009f86:	4669      	mov	r1, sp
 8009f88:	685b      	ldr	r3, [r3, #4]
 8009f8a:	4798      	blx	r3
 8009f8c:	b009      	add	sp, #36	; 0x24
 8009f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f92:	bf00      	nop
 8009f94:	0801e11c 	.word	0x0801e11c
 8009f98:	0801e375 	.word	0x0801e375
 8009f9c:	0801e251 	.word	0x0801e251
 8009fa0:	0801e154 	.word	0x0801e154

08009fa4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009fa4:	b510      	push	{r4, lr}
 8009fa6:	4b0b      	ldr	r3, [pc, #44]	; (8009fd4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009fa8:	781b      	ldrb	r3, [r3, #0]
 8009faa:	4604      	mov	r4, r0
 8009fac:	b95b      	cbnz	r3, 8009fc6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009fae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009fb2:	2b02      	cmp	r3, #2
 8009fb4:	d007      	beq.n	8009fc6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009fb6:	6840      	ldr	r0, [r0, #4]
 8009fb8:	f000 fb7a 	bl	800a6b0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009fbc:	b118      	cbz	r0, 8009fc6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009fbe:	6862      	ldr	r2, [r4, #4]
 8009fc0:	7a53      	ldrb	r3, [r2, #9]
 8009fc2:	2b00      	cmp	r3, #0
 8009fc4:	d0fc      	beq.n	8009fc0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009fc6:	f7f6 fe85 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009fca:	4620      	mov	r0, r4
 8009fcc:	f7ff ff34 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fd0:	bd10      	pop	{r4, pc}
 8009fd2:	bf00      	nop
 8009fd4:	2000a2b6 	.word	0x2000a2b6

08009fd8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009fd8:	b508      	push	{r3, lr}
 8009fda:	290d      	cmp	r1, #13
 8009fdc:	d817      	bhi.n	800a00e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009fde:	e8df f001 	tbb	[pc, r1]
 8009fe2:	090b      	.short	0x090b
 8009fe4:	0d0d0d07 	.word	0x0d0d0d07
 8009fe8:	1414140d 	.word	0x1414140d
 8009fec:	0d0d1414 	.word	0x0d0d1414
 8009ff0:	2020      	movs	r0, #32
 8009ff2:	bd08      	pop	{r3, pc}
 8009ff4:	2018      	movs	r0, #24
 8009ff6:	e7fc      	b.n	8009ff2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009ff8:	2010      	movs	r0, #16
 8009ffa:	e7fa      	b.n	8009ff2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009ffc:	4b05      	ldr	r3, [pc, #20]	; (800a014 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009ffe:	4a06      	ldr	r2, [pc, #24]	; (800a018 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800a000:	4806      	ldr	r0, [pc, #24]	; (800a01c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800a002:	f240 2182 	movw	r1, #642	; 0x282
 800a006:	f011 fd6b 	bl	801bae0 <__assert_func>
 800a00a:	2008      	movs	r0, #8
 800a00c:	e7f1      	b.n	8009ff2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a00e:	2000      	movs	r0, #0
 800a010:	e7ef      	b.n	8009ff2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a012:	bf00      	nop
 800a014:	0801e2cd 	.word	0x0801e2cd
 800a018:	0801e6a0 	.word	0x0801e6a0
 800a01c:	0801e251 	.word	0x0801e251

0800a020 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a020:	b570      	push	{r4, r5, r6, lr}
 800a022:	460d      	mov	r5, r1
 800a024:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a028:	4616      	mov	r6, r2
 800a02a:	461c      	mov	r4, r3
 800a02c:	f7ff ffd4 	bl	8009fd8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a030:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a034:	10c0      	asrs	r0, r0, #3
 800a036:	fb06 5101 	mla	r1, r6, r1, r5
 800a03a:	fb00 4001 	mla	r0, r0, r1, r4
 800a03e:	bd70      	pop	{r4, r5, r6, pc}

0800a040 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a044:	b08a      	sub	sp, #40	; 0x28
 800a046:	f04f 0c00 	mov.w	ip, #0
 800a04a:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800a04e:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a052:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a056:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a05a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800a05e:	f8cd c014 	str.w	ip, [sp, #20]
 800a062:	2d0b      	cmp	r5, #11
 800a064:	4604      	mov	r4, r0
 800a066:	469a      	mov	sl, r3
 800a068:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a06c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a070:	d12d      	bne.n	800a0ce <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800a072:	2080      	movs	r0, #128	; 0x80
 800a074:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a078:	9204      	str	r2, [sp, #16]
 800a07a:	4620      	mov	r0, r4
 800a07c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a080:	f8ad 2020 	strh.w	r2, [sp, #32]
 800a084:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a088:	f8ad 701c 	strh.w	r7, [sp, #28]
 800a08c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a090:	f7ff fed2 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a094:	e9cd 9800 	strd	r9, r8, [sp]
 800a098:	4603      	mov	r3, r0
 800a09a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a09e:	4651      	mov	r1, sl
 800a0a0:	4620      	mov	r0, r4
 800a0a2:	f7ff ffbd 	bl	800a020 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a0a6:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800a0aa:	9006      	str	r0, [sp, #24]
 800a0ac:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800a0b0:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a0b4:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800a0b8:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a0bc:	b107      	cbz	r7, 800a0c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 800a0be:	b9d6      	cbnz	r6, 800a0f6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 800a0c0:	4b17      	ldr	r3, [pc, #92]	; (800a120 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 800a0c2:	4a18      	ldr	r2, [pc, #96]	; (800a124 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a0c4:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 800a0c8:	4817      	ldr	r0, [pc, #92]	; (800a128 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800a0ca:	f011 fd09 	bl	801bae0 <__assert_func>
 800a0ce:	2d02      	cmp	r5, #2
 800a0d0:	d108      	bne.n	800a0e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 800a0d2:	2bff      	cmp	r3, #255	; 0xff
 800a0d4:	d104      	bne.n	800a0e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 800a0d6:	2800      	cmp	r0, #0
 800a0d8:	bf14      	ite	ne
 800a0da:	2040      	movne	r0, #64	; 0x40
 800a0dc:	2020      	moveq	r0, #32
 800a0de:	e7c9      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a0e0:	2040      	movs	r0, #64	; 0x40
 800a0e2:	e7c7      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a0e4:	2bff      	cmp	r3, #255	; 0xff
 800a0e6:	d104      	bne.n	800a0f2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 800a0e8:	2800      	cmp	r0, #0
 800a0ea:	bf14      	ite	ne
 800a0ec:	2004      	movne	r0, #4
 800a0ee:	2001      	moveq	r0, #1
 800a0f0:	e7c0      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a0f2:	2004      	movs	r0, #4
 800a0f4:	e7be      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a0f6:	6823      	ldr	r3, [r4, #0]
 800a0f8:	9d02      	ldr	r5, [sp, #8]
 800a0fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a0fc:	4620      	mov	r0, r4
 800a0fe:	4798      	blx	r3
 800a100:	4228      	tst	r0, r5
 800a102:	d104      	bne.n	800a10e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 800a104:	4b09      	ldr	r3, [pc, #36]	; (800a12c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800a106:	4a07      	ldr	r2, [pc, #28]	; (800a124 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a108:	f240 11d5 	movw	r1, #469	; 0x1d5
 800a10c:	e7dc      	b.n	800a0c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 800a10e:	6860      	ldr	r0, [r4, #4]
 800a110:	6803      	ldr	r3, [r0, #0]
 800a112:	a902      	add	r1, sp, #8
 800a114:	685b      	ldr	r3, [r3, #4]
 800a116:	4798      	blx	r3
 800a118:	b00a      	add	sp, #40	; 0x28
 800a11a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a11e:	bf00      	nop
 800a120:	0801e09f 	.word	0x0801e09f
 800a124:	0801e52e 	.word	0x0801e52e
 800a128:	0801e251 	.word	0x0801e251
 800a12c:	0801e0d7 	.word	0x0801e0d7

0800a130 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a134:	b08b      	sub	sp, #44	; 0x2c
 800a136:	469b      	mov	fp, r3
 800a138:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a13c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a140:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a144:	2fff      	cmp	r7, #255	; 0xff
 800a146:	bf14      	ite	ne
 800a148:	2308      	movne	r3, #8
 800a14a:	2302      	moveq	r3, #2
 800a14c:	2600      	movs	r6, #0
 800a14e:	4604      	mov	r4, r0
 800a150:	4689      	mov	r9, r1
 800a152:	4692      	mov	sl, r2
 800a154:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a158:	9605      	str	r6, [sp, #20]
 800a15a:	f7ff fe6d 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a15e:	e9cd 8500 	strd	r8, r5, [sp]
 800a162:	4603      	mov	r3, r0
 800a164:	465a      	mov	r2, fp
 800a166:	4651      	mov	r1, sl
 800a168:	4620      	mov	r0, r4
 800a16a:	f7ff ff59 	bl	800a020 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a16e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a172:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a176:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a17a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a17e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a182:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a186:	6823      	ldr	r3, [r4, #0]
 800a188:	9006      	str	r0, [sp, #24]
 800a18a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a18e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a192:	f8ad 6020 	strh.w	r6, [sp, #32]
 800a196:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800a19a:	f8cd 9014 	str.w	r9, [sp, #20]
 800a19e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a1a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1a4:	9d02      	ldr	r5, [sp, #8]
 800a1a6:	4620      	mov	r0, r4
 800a1a8:	4798      	blx	r3
 800a1aa:	4228      	tst	r0, r5
 800a1ac:	d106      	bne.n	800a1bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 800a1ae:	4b07      	ldr	r3, [pc, #28]	; (800a1cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 800a1b0:	4a07      	ldr	r2, [pc, #28]	; (800a1d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800a1b2:	4808      	ldr	r0, [pc, #32]	; (800a1d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800a1b4:	f240 2137 	movw	r1, #567	; 0x237
 800a1b8:	f011 fc92 	bl	801bae0 <__assert_func>
 800a1bc:	6860      	ldr	r0, [r4, #4]
 800a1be:	6803      	ldr	r3, [r0, #0]
 800a1c0:	a902      	add	r1, sp, #8
 800a1c2:	685b      	ldr	r3, [r3, #4]
 800a1c4:	4798      	blx	r3
 800a1c6:	b00b      	add	sp, #44	; 0x2c
 800a1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1cc:	0801e0d7 	.word	0x0801e0d7
 800a1d0:	0801e605 	.word	0x0801e605
 800a1d4:	0801e251 	.word	0x0801e251

0800a1d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a1d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a1dc:	461f      	mov	r7, r3
 800a1de:	4b0b      	ldr	r3, [pc, #44]	; (800a20c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a1e0:	460d      	mov	r5, r1
 800a1e2:	f8b3 8000 	ldrh.w	r8, [r3]
 800a1e6:	4616      	mov	r6, r2
 800a1e8:	4604      	mov	r4, r0
 800a1ea:	f7ff fc65 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800a1ee:	6803      	ldr	r3, [r0, #0]
 800a1f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1f2:	4798      	blx	r3
 800a1f4:	463b      	mov	r3, r7
 800a1f6:	e9cd 8000 	strd	r8, r0, [sp]
 800a1fa:	4632      	mov	r2, r6
 800a1fc:	4629      	mov	r1, r5
 800a1fe:	4620      	mov	r0, r4
 800a200:	f7ff ff0e 	bl	800a020 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a204:	b002      	add	sp, #8
 800a206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a20a:	bf00      	nop
 800a20c:	2000a2b2 	.word	0x2000a2b2

0800a210 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a214:	b088      	sub	sp, #32
 800a216:	4698      	mov	r8, r3
 800a218:	2300      	movs	r3, #0
 800a21a:	9303      	str	r3, [sp, #12]
 800a21c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a220:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a224:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a228:	f8ad 6014 	strh.w	r6, [sp, #20]
 800a22c:	e9cd 3100 	strd	r3, r1, [sp]
 800a230:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a234:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a238:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a23c:	f88d 301c 	strb.w	r3, [sp, #28]
 800a240:	4617      	mov	r7, r2
 800a242:	4604      	mov	r4, r0
 800a244:	f8ad 5016 	strh.w	r5, [sp, #22]
 800a248:	f7ff fdf6 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a24c:	4642      	mov	r2, r8
 800a24e:	4603      	mov	r3, r0
 800a250:	4639      	mov	r1, r7
 800a252:	4620      	mov	r0, r4
 800a254:	f7ff ffc0 	bl	800a1d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a258:	4b18      	ldr	r3, [pc, #96]	; (800a2bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 800a25a:	9004      	str	r0, [sp, #16]
 800a25c:	881b      	ldrh	r3, [r3, #0]
 800a25e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a262:	f7ff fc29 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800a266:	6803      	ldr	r3, [r0, #0]
 800a268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a26a:	4798      	blx	r3
 800a26c:	f88d 001e 	strb.w	r0, [sp, #30]
 800a270:	f88d 001d 	strb.w	r0, [sp, #29]
 800a274:	b106      	cbz	r6, 800a278 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800a276:	b935      	cbnz	r5, 800a286 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800a278:	4b11      	ldr	r3, [pc, #68]	; (800a2c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800a27a:	4a12      	ldr	r2, [pc, #72]	; (800a2c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a27c:	f240 11f1 	movw	r1, #497	; 0x1f1
 800a280:	4811      	ldr	r0, [pc, #68]	; (800a2c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a282:	f011 fc2d 	bl	801bae0 <__assert_func>
 800a286:	6823      	ldr	r3, [r4, #0]
 800a288:	9d00      	ldr	r5, [sp, #0]
 800a28a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a28c:	4620      	mov	r0, r4
 800a28e:	4798      	blx	r3
 800a290:	4228      	tst	r0, r5
 800a292:	d104      	bne.n	800a29e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800a294:	4b0d      	ldr	r3, [pc, #52]	; (800a2cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800a296:	4a0b      	ldr	r2, [pc, #44]	; (800a2c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a298:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 800a29c:	e7f0      	b.n	800a280 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800a29e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a2a0:	9303      	str	r3, [sp, #12]
 800a2a2:	6860      	ldr	r0, [r4, #4]
 800a2a4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a2a8:	f88d 301f 	strb.w	r3, [sp, #31]
 800a2ac:	6803      	ldr	r3, [r0, #0]
 800a2ae:	4669      	mov	r1, sp
 800a2b0:	685b      	ldr	r3, [r3, #4]
 800a2b2:	4798      	blx	r3
 800a2b4:	b008      	add	sp, #32
 800a2b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2ba:	bf00      	nop
 800a2bc:	2000a2b2 	.word	0x2000a2b2
 800a2c0:	0801e09f 	.word	0x0801e09f
 800a2c4:	0801e3da 	.word	0x0801e3da
 800a2c8:	0801e251 	.word	0x0801e251
 800a2cc:	0801e0d7 	.word	0x0801e0d7

0800a2d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a2d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a2d2:	b08b      	sub	sp, #44	; 0x2c
 800a2d4:	466b      	mov	r3, sp
 800a2d6:	e883 0006 	stmia.w	r3, {r1, r2}
 800a2da:	4b21      	ldr	r3, [pc, #132]	; (800a360 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a2dc:	781b      	ldrb	r3, [r3, #0]
 800a2de:	4604      	mov	r4, r0
 800a2e0:	b933      	cbnz	r3, 800a2f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a2e2:	4b20      	ldr	r3, [pc, #128]	; (800a364 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a2e4:	4a20      	ldr	r2, [pc, #128]	; (800a368 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a2e6:	4821      	ldr	r0, [pc, #132]	; (800a36c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a2e8:	f44f 7112 	mov.w	r1, #584	; 0x248
 800a2ec:	f011 fbf8 	bl	801bae0 <__assert_func>
 800a2f0:	2301      	movs	r3, #1
 800a2f2:	9302      	str	r3, [sp, #8]
 800a2f4:	6803      	ldr	r3, [r0, #0]
 800a2f6:	f8bd 6000 	ldrh.w	r6, [sp]
 800a2fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a2fc:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a300:	2500      	movs	r5, #0
 800a302:	9505      	str	r5, [sp, #20]
 800a304:	4798      	blx	r3
 800a306:	463a      	mov	r2, r7
 800a308:	4631      	mov	r1, r6
 800a30a:	4603      	mov	r3, r0
 800a30c:	4620      	mov	r0, r4
 800a30e:	f7ff ff63 	bl	800a1d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a312:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a314:	9306      	str	r3, [sp, #24]
 800a316:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a31a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a31e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a322:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a326:	4b12      	ldr	r3, [pc, #72]	; (800a370 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800a328:	9003      	str	r0, [sp, #12]
 800a32a:	881b      	ldrh	r3, [r3, #0]
 800a32c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a330:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a334:	f7ff fbc0 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800a338:	6803      	ldr	r3, [r0, #0]
 800a33a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a33c:	4798      	blx	r3
 800a33e:	23ff      	movs	r3, #255	; 0xff
 800a340:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a344:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a348:	6860      	ldr	r0, [r4, #4]
 800a34a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a34e:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 800a352:	6803      	ldr	r3, [r0, #0]
 800a354:	a902      	add	r1, sp, #8
 800a356:	685b      	ldr	r3, [r3, #4]
 800a358:	4798      	blx	r3
 800a35a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a35c:	b00b      	add	sp, #44	; 0x2c
 800a35e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a360:	2000a2b7 	.word	0x2000a2b7
 800a364:	0801e19e 	.word	0x0801e19e
 800a368:	0801e484 	.word	0x0801e484
 800a36c:	0801e251 	.word	0x0801e251
 800a370:	2000a2b2 	.word	0x2000a2b2

0800a374 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a378:	b08a      	sub	sp, #40	; 0x28
 800a37a:	466d      	mov	r5, sp
 800a37c:	e885 0006 	stmia.w	r5, {r1, r2}
 800a380:	461d      	mov	r5, r3
 800a382:	2301      	movs	r3, #1
 800a384:	9302      	str	r3, [sp, #8]
 800a386:	6803      	ldr	r3, [r0, #0]
 800a388:	f8bd 7000 	ldrh.w	r7, [sp]
 800a38c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a38e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a392:	2600      	movs	r6, #0
 800a394:	9605      	str	r6, [sp, #20]
 800a396:	4604      	mov	r4, r0
 800a398:	4798      	blx	r3
 800a39a:	4642      	mov	r2, r8
 800a39c:	4639      	mov	r1, r7
 800a39e:	4603      	mov	r3, r0
 800a3a0:	4620      	mov	r0, r4
 800a3a2:	f7ff ff19 	bl	800a1d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a3a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a3aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a3b2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a3b6:	4b10      	ldr	r3, [pc, #64]	; (800a3f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 800a3b8:	9003      	str	r0, [sp, #12]
 800a3ba:	881b      	ldrh	r3, [r3, #0]
 800a3bc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a3c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a3c2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a3c6:	9506      	str	r5, [sp, #24]
 800a3c8:	f7ff fb76 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800a3cc:	6803      	ldr	r3, [r0, #0]
 800a3ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a3d0:	4798      	blx	r3
 800a3d2:	23ff      	movs	r3, #255	; 0xff
 800a3d4:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a3d8:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a3dc:	6860      	ldr	r0, [r4, #4]
 800a3de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a3e2:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 800a3e6:	6803      	ldr	r3, [r0, #0]
 800a3e8:	a902      	add	r1, sp, #8
 800a3ea:	685b      	ldr	r3, [r3, #4]
 800a3ec:	4798      	blx	r3
 800a3ee:	4628      	mov	r0, r5
 800a3f0:	b00a      	add	sp, #40	; 0x28
 800a3f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a3f6:	bf00      	nop
 800a3f8:	2000a2b2 	.word	0x2000a2b2

0800a3fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a3fc:	b570      	push	{r4, r5, r6, lr}
 800a3fe:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a402:	4604      	mov	r4, r0
 800a404:	b19b      	cbz	r3, 800a42e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a406:	2002      	movs	r0, #2
 800a408:	f7f6 f9dc 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a40c:	2300      	movs	r3, #0
 800a40e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a412:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a416:	6823      	ldr	r3, [r4, #0]
 800a418:	4620      	mov	r0, r4
 800a41a:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800a41e:	f7ff fd0b 	bl	8009e38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a422:	462b      	mov	r3, r5
 800a424:	4601      	mov	r1, r0
 800a426:	4620      	mov	r0, r4
 800a428:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a42c:	4718      	bx	r3
 800a42e:	bd70      	pop	{r4, r5, r6, pc}

0800a430 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a430:	b570      	push	{r4, r5, r6, lr}
 800a432:	4605      	mov	r5, r0
 800a434:	460c      	mov	r4, r1
 800a436:	2003      	movs	r0, #3
 800a438:	b149      	cbz	r1, 800a44e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a43a:	f7f6 f98b 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a43e:	6928      	ldr	r0, [r5, #16]
 800a440:	b168      	cbz	r0, 800a45e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a442:	6803      	ldr	r3, [r0, #0]
 800a444:	695b      	ldr	r3, [r3, #20]
 800a446:	2101      	movs	r1, #1
 800a448:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a44c:	4718      	bx	r3
 800a44e:	f7f6 f99d 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a452:	6928      	ldr	r0, [r5, #16]
 800a454:	b118      	cbz	r0, 800a45e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a456:	6803      	ldr	r3, [r0, #0]
 800a458:	4621      	mov	r1, r4
 800a45a:	695b      	ldr	r3, [r3, #20]
 800a45c:	e7f4      	b.n	800a448 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a45e:	bd70      	pop	{r4, r5, r6, pc}

0800a460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a460:	4770      	bx	lr

0800a462 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a462:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a466:	1a13      	subs	r3, r2, r0
 800a468:	4258      	negs	r0, r3
 800a46a:	4158      	adcs	r0, r3
 800a46c:	4770      	bx	lr

0800a46e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a46e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a472:	1a9b      	subs	r3, r3, r2
 800a474:	2b00      	cmp	r3, #0
 800a476:	bfdc      	itt	le
 800a478:	6882      	ldrle	r2, [r0, #8]
 800a47a:	189b      	addle	r3, r3, r2
 800a47c:	2b01      	cmp	r3, #1
 800a47e:	bfcc      	ite	gt
 800a480:	2000      	movgt	r0, #0
 800a482:	2001      	movle	r0, #1
 800a484:	4770      	bx	lr

0800a486 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a486:	6902      	ldr	r2, [r0, #16]
 800a488:	6840      	ldr	r0, [r0, #4]
 800a48a:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a48e:	4770      	bx	lr

0800a490 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a490:	6803      	ldr	r3, [r0, #0]
 800a492:	691b      	ldr	r3, [r3, #16]
 800a494:	4718      	bx	r3

0800a496 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a496:	4770      	bx	lr

0800a498 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a498:	4770      	bx	lr

0800a49a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a49a:	4770      	bx	lr

0800a49c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a49c:	b570      	push	{r4, r5, r6, lr}
 800a49e:	2301      	movs	r3, #1
 800a4a0:	7203      	strb	r3, [r0, #8]
 800a4a2:	4604      	mov	r4, r0
 800a4a4:	6840      	ldr	r0, [r0, #4]
 800a4a6:	6803      	ldr	r3, [r0, #0]
 800a4a8:	699b      	ldr	r3, [r3, #24]
 800a4aa:	4798      	blx	r3
 800a4ac:	6803      	ldr	r3, [r0, #0]
 800a4ae:	2b40      	cmp	r3, #64	; 0x40
 800a4b0:	4605      	mov	r5, r0
 800a4b2:	d039      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4b4:	d815      	bhi.n	800a4e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a4b6:	2b04      	cmp	r3, #4
 800a4b8:	d022      	beq.n	800a500 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a4ba:	d808      	bhi.n	800a4ce <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a4bc:	2b01      	cmp	r3, #1
 800a4be:	d033      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4c0:	2b02      	cmp	r3, #2
 800a4c2:	d108      	bne.n	800a4d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a4c4:	6823      	ldr	r3, [r4, #0]
 800a4c6:	4620      	mov	r0, r4
 800a4c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a4ca:	4798      	blx	r3
 800a4cc:	e025      	b.n	800a51a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a4ce:	2b08      	cmp	r3, #8
 800a4d0:	d01e      	beq.n	800a510 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a4d2:	2b20      	cmp	r3, #32
 800a4d4:	d028      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4d6:	4b17      	ldr	r3, [pc, #92]	; (800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a4d8:	4a17      	ldr	r2, [pc, #92]	; (800a538 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a4da:	4818      	ldr	r0, [pc, #96]	; (800a53c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a4dc:	218b      	movs	r1, #139	; 0x8b
 800a4de:	f011 faff 	bl	801bae0 <__assert_func>
 800a4e2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a4e6:	d01f      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4e8:	d804      	bhi.n	800a4f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a4ea:	2b80      	cmp	r3, #128	; 0x80
 800a4ec:	d01c      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4ee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a4f2:	e7ef      	b.n	800a4d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a4f4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a4f8:	d016      	beq.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4fa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a4fe:	e7e0      	b.n	800a4c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a500:	6823      	ldr	r3, [r4, #0]
 800a502:	7f01      	ldrb	r1, [r0, #28]
 800a504:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a506:	4620      	mov	r0, r4
 800a508:	4798      	blx	r3
 800a50a:	6823      	ldr	r3, [r4, #0]
 800a50c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a50e:	e006      	b.n	800a51e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a510:	6823      	ldr	r3, [r4, #0]
 800a512:	7f01      	ldrb	r1, [r0, #28]
 800a514:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a516:	4620      	mov	r0, r4
 800a518:	4798      	blx	r3
 800a51a:	6823      	ldr	r3, [r4, #0]
 800a51c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a51e:	4629      	mov	r1, r5
 800a520:	4620      	mov	r0, r4
 800a522:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a526:	4718      	bx	r3
 800a528:	6823      	ldr	r3, [r4, #0]
 800a52a:	4620      	mov	r0, r4
 800a52c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a52e:	4798      	blx	r3
 800a530:	e7eb      	b.n	800a50a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a532:	bf00      	nop
 800a534:	0801e6e9 	.word	0x0801e6e9
 800a538:	0801e7a8 	.word	0x0801e7a8
 800a53c:	0801e70e 	.word	0x0801e70e

0800a540 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a540:	b570      	push	{r4, r5, r6, lr}
 800a542:	4604      	mov	r4, r0
 800a544:	460e      	mov	r6, r1
 800a546:	6860      	ldr	r0, [r4, #4]
 800a548:	6803      	ldr	r3, [r0, #0]
 800a54a:	685b      	ldr	r3, [r3, #4]
 800a54c:	4798      	blx	r3
 800a54e:	2800      	cmp	r0, #0
 800a550:	d1f9      	bne.n	800a546 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a552:	4d0d      	ldr	r5, [pc, #52]	; (800a588 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a554:	6828      	ldr	r0, [r5, #0]
 800a556:	6803      	ldr	r3, [r0, #0]
 800a558:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a55a:	4798      	blx	r3
 800a55c:	f7f6 fbc8 	bl	8000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a560:	6828      	ldr	r0, [r5, #0]
 800a562:	2101      	movs	r1, #1
 800a564:	f7ff ff7c 	bl	800a460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a568:	6860      	ldr	r0, [r4, #4]
 800a56a:	6803      	ldr	r3, [r0, #0]
 800a56c:	4631      	mov	r1, r6
 800a56e:	689b      	ldr	r3, [r3, #8]
 800a570:	4798      	blx	r3
 800a572:	6823      	ldr	r3, [r4, #0]
 800a574:	4620      	mov	r0, r4
 800a576:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a578:	4798      	blx	r3
 800a57a:	6828      	ldr	r0, [r5, #0]
 800a57c:	6803      	ldr	r3, [r0, #0]
 800a57e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a582:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a584:	4718      	bx	r3
 800a586:	bf00      	nop
 800a588:	2000a2b8 	.word	0x2000a2b8

0800a58c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a58c:	b508      	push	{r3, lr}
 800a58e:	f7f6 fba1 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a592:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a596:	f7f6 bba5 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a59a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a59a:	b510      	push	{r4, lr}
 800a59c:	2114      	movs	r1, #20
 800a59e:	4604      	mov	r4, r0
 800a5a0:	f011 fa70 	bl	801ba84 <_ZdlPvj>
 800a5a4:	4620      	mov	r0, r4
 800a5a6:	bd10      	pop	{r4, pc}

0800a5a8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a5a8:	b510      	push	{r4, lr}
 800a5aa:	4604      	mov	r4, r0
 800a5ac:	6840      	ldr	r0, [r0, #4]
 800a5ae:	6803      	ldr	r3, [r0, #0]
 800a5b0:	681b      	ldr	r3, [r3, #0]
 800a5b2:	4798      	blx	r3
 800a5b4:	b948      	cbnz	r0, 800a5ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5b6:	7a63      	ldrb	r3, [r4, #9]
 800a5b8:	b13b      	cbz	r3, 800a5ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5ba:	7a23      	ldrb	r3, [r4, #8]
 800a5bc:	b92b      	cbnz	r3, 800a5ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5be:	6823      	ldr	r3, [r4, #0]
 800a5c0:	4620      	mov	r0, r4
 800a5c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5c8:	4718      	bx	r3
 800a5ca:	bd10      	pop	{r4, pc}

0800a5cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a5cc:	b570      	push	{r4, r5, r6, lr}
 800a5ce:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a5d2:	1a9b      	subs	r3, r3, r2
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	4606      	mov	r6, r0
 800a5d8:	bfdc      	itt	le
 800a5da:	6880      	ldrle	r0, [r0, #8]
 800a5dc:	181b      	addle	r3, r3, r0
 800a5de:	2b01      	cmp	r3, #1
 800a5e0:	dd13      	ble.n	800a60a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 800a5e2:	6874      	ldr	r4, [r6, #4]
 800a5e4:	460d      	mov	r5, r1
 800a5e6:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 800a5ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a5ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a5ee:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800a5f2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a5f6:	68f3      	ldr	r3, [r6, #12]
 800a5f8:	68b2      	ldr	r2, [r6, #8]
 800a5fa:	f3bf 8f5b 	dmb	ish
 800a5fe:	3301      	adds	r3, #1
 800a600:	429a      	cmp	r2, r3
 800a602:	bfd8      	it	le
 800a604:	1a9b      	suble	r3, r3, r2
 800a606:	60f3      	str	r3, [r6, #12]
 800a608:	bd70      	pop	{r4, r5, r6, pc}
 800a60a:	4b03      	ldr	r3, [pc, #12]	; (800a618 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 800a60c:	4a03      	ldr	r2, [pc, #12]	; (800a61c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a60e:	4804      	ldr	r0, [pc, #16]	; (800a620 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a610:	2139      	movs	r1, #57	; 0x39
 800a612:	f011 fa65 	bl	801bae0 <__assert_func>
 800a616:	bf00      	nop
 800a618:	0801e734 	.word	0x0801e734
 800a61c:	0801e7d8 	.word	0x0801e7d8
 800a620:	0801e70e 	.word	0x0801e70e

0800a624 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a624:	b510      	push	{r4, lr}
 800a626:	6803      	ldr	r3, [r0, #0]
 800a628:	681b      	ldr	r3, [r3, #0]
 800a62a:	4604      	mov	r4, r0
 800a62c:	4798      	blx	r3
 800a62e:	b128      	cbz	r0, 800a63c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a630:	4b07      	ldr	r3, [pc, #28]	; (800a650 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a632:	4a08      	ldr	r2, [pc, #32]	; (800a654 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a634:	4808      	ldr	r0, [pc, #32]	; (800a658 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a636:	213f      	movs	r1, #63	; 0x3f
 800a638:	f011 fa52 	bl	801bae0 <__assert_func>
 800a63c:	6923      	ldr	r3, [r4, #16]
 800a63e:	68a2      	ldr	r2, [r4, #8]
 800a640:	f3bf 8f5b 	dmb	ish
 800a644:	3301      	adds	r3, #1
 800a646:	429a      	cmp	r2, r3
 800a648:	bfd8      	it	le
 800a64a:	1a9b      	suble	r3, r3, r2
 800a64c:	6123      	str	r3, [r4, #16]
 800a64e:	bd10      	pop	{r4, pc}
 800a650:	0801e757 	.word	0x0801e757
 800a654:	0801e826 	.word	0x0801e826
 800a658:	0801e70e 	.word	0x0801e70e

0800a65c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a65c:	b570      	push	{r4, r5, r6, lr}
 800a65e:	4604      	mov	r4, r0
 800a660:	6840      	ldr	r0, [r0, #4]
 800a662:	6803      	ldr	r3, [r0, #0]
 800a664:	681b      	ldr	r3, [r3, #0]
 800a666:	4798      	blx	r3
 800a668:	4605      	mov	r5, r0
 800a66a:	b930      	cbnz	r0, 800a67a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a66c:	7a23      	ldrb	r3, [r4, #8]
 800a66e:	b123      	cbz	r3, 800a67a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a670:	6860      	ldr	r0, [r4, #4]
 800a672:	6803      	ldr	r3, [r0, #0]
 800a674:	695b      	ldr	r3, [r3, #20]
 800a676:	4798      	blx	r3
 800a678:	7225      	strb	r5, [r4, #8]
 800a67a:	6860      	ldr	r0, [r4, #4]
 800a67c:	6803      	ldr	r3, [r0, #0]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	4798      	blx	r3
 800a682:	b928      	cbnz	r0, 800a690 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a684:	6823      	ldr	r3, [r4, #0]
 800a686:	4620      	mov	r0, r4
 800a688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a68a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a68e:	4718      	bx	r3
 800a690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a694:	f7f6 bb34 	b.w	8000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a698 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a698:	b510      	push	{r4, lr}
 800a69a:	4c04      	ldr	r4, [pc, #16]	; (800a6ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a69c:	6082      	str	r2, [r0, #8]
 800a69e:	2200      	movs	r2, #0
 800a6a0:	e9c0 4100 	strd	r4, r1, [r0]
 800a6a4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a6a8:	bd10      	pop	{r4, pc}
 800a6aa:	bf00      	nop
 800a6ac:	0801e78c 	.word	0x0801e78c

0800a6b0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a6b0:	6840      	ldr	r0, [r0, #4]
 800a6b2:	6803      	ldr	r3, [r0, #0]
 800a6b4:	681b      	ldr	r3, [r3, #0]
 800a6b6:	4718      	bx	r3

0800a6b8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a6b8:	2200      	movs	r2, #0
 800a6ba:	8002      	strh	r2, [r0, #0]
 800a6bc:	8042      	strh	r2, [r0, #2]
 800a6be:	8082      	strh	r2, [r0, #4]
 800a6c0:	80c2      	strh	r2, [r0, #6]
 800a6c2:	4770      	bx	lr

0800a6c4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a6c4:	b570      	push	{r4, r5, r6, lr}
 800a6c6:	6803      	ldr	r3, [r0, #0]
 800a6c8:	4604      	mov	r4, r0
 800a6ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6cc:	4615      	mov	r5, r2
 800a6ce:	4798      	blx	r3
 800a6d0:	6823      	ldr	r3, [r4, #0]
 800a6d2:	4629      	mov	r1, r5
 800a6d4:	4620      	mov	r0, r4
 800a6d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a6d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6dc:	4718      	bx	r3

0800a6de <_ZN8touchgfx8TextAreaD1Ev>:
 800a6de:	4770      	bx	lr

0800a6e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a6e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6e2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a6e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a6e8:	4299      	cmp	r1, r3
 800a6ea:	d029      	beq.n	800a740 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a6ec:	4b15      	ldr	r3, [pc, #84]	; (800a744 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	b92b      	cbnz	r3, 800a6fe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a6f2:	4b15      	ldr	r3, [pc, #84]	; (800a748 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a6f4:	4a15      	ldr	r2, [pc, #84]	; (800a74c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a6f6:	21ae      	movs	r1, #174	; 0xae
 800a6f8:	4815      	ldr	r0, [pc, #84]	; (800a750 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a6fa:	f011 f9f1 	bl	801bae0 <__assert_func>
 800a6fe:	4a15      	ldr	r2, [pc, #84]	; (800a754 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a700:	8812      	ldrh	r2, [r2, #0]
 800a702:	428a      	cmp	r2, r1
 800a704:	d803      	bhi.n	800a70e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a706:	4b14      	ldr	r3, [pc, #80]	; (800a758 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a708:	4a10      	ldr	r2, [pc, #64]	; (800a74c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a70a:	21af      	movs	r1, #175	; 0xaf
 800a70c:	e7f4      	b.n	800a6f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a70e:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a712:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a716:	4b11      	ldr	r3, [pc, #68]	; (800a75c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a718:	7854      	ldrb	r4, [r2, #1]
 800a71a:	681b      	ldr	r3, [r3, #0]
 800a71c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a720:	682b      	ldr	r3, [r5, #0]
 800a722:	69de      	ldr	r6, [r3, #28]
 800a724:	4b0e      	ldr	r3, [pc, #56]	; (800a760 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a726:	6818      	ldr	r0, [r3, #0]
 800a728:	f7f8 facc 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a72c:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a730:	2300      	movs	r3, #0
 800a732:	4602      	mov	r2, r0
 800a734:	9300      	str	r3, [sp, #0]
 800a736:	4621      	mov	r1, r4
 800a738:	4628      	mov	r0, r5
 800a73a:	47b0      	blx	r6
 800a73c:	b002      	add	sp, #8
 800a73e:	bd70      	pop	{r4, r5, r6, pc}
 800a740:	2000      	movs	r0, #0
 800a742:	e7fb      	b.n	800a73c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a744:	2000a308 	.word	0x2000a308
 800a748:	0801d760 	.word	0x0801d760
 800a74c:	0801e8d0 	.word	0x0801e8d0
 800a750:	0801d7ee 	.word	0x0801d7ee
 800a754:	2000a30c 	.word	0x2000a30c
 800a758:	0801d817 	.word	0x0801d817
 800a75c:	2000a310 	.word	0x2000a310
 800a760:	2000a314 	.word	0x2000a314

0800a764 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a764:	b570      	push	{r4, r5, r6, lr}
 800a766:	6803      	ldr	r3, [r0, #0]
 800a768:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a76a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a76c:	4b11      	ldr	r3, [pc, #68]	; (800a7b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a76e:	681b      	ldr	r3, [r3, #0]
 800a770:	4604      	mov	r4, r0
 800a772:	b28d      	uxth	r5, r1
 800a774:	b92b      	cbnz	r3, 800a782 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a776:	4b10      	ldr	r3, [pc, #64]	; (800a7b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a778:	4a10      	ldr	r2, [pc, #64]	; (800a7bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a77a:	21ae      	movs	r1, #174	; 0xae
 800a77c:	4810      	ldr	r0, [pc, #64]	; (800a7c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a77e:	f011 f9af 	bl	801bae0 <__assert_func>
 800a782:	4910      	ldr	r1, [pc, #64]	; (800a7c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a784:	8809      	ldrh	r1, [r1, #0]
 800a786:	4291      	cmp	r1, r2
 800a788:	d803      	bhi.n	800a792 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a78a:	4b0f      	ldr	r3, [pc, #60]	; (800a7c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a78c:	4a0b      	ldr	r2, [pc, #44]	; (800a7bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a78e:	21af      	movs	r1, #175	; 0xaf
 800a790:	e7f4      	b.n	800a77c <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a792:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a796:	4b0d      	ldr	r3, [pc, #52]	; (800a7cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a798:	681b      	ldr	r3, [r3, #0]
 800a79a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a79e:	6803      	ldr	r3, [r0, #0]
 800a7a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7a2:	4798      	blx	r3
 800a7a4:	1a29      	subs	r1, r5, r0
 800a7a6:	4633      	mov	r3, r6
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	b209      	sxth	r1, r1
 800a7ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7b0:	4718      	bx	r3
 800a7b2:	bf00      	nop
 800a7b4:	2000a308 	.word	0x2000a308
 800a7b8:	0801d760 	.word	0x0801d760
 800a7bc:	0801e8d0 	.word	0x0801e8d0
 800a7c0:	0801d7ee 	.word	0x0801d7ee
 800a7c4:	2000a30c 	.word	0x2000a30c
 800a7c8:	0801d817 	.word	0x0801d817
 800a7cc:	2000a310 	.word	0x2000a310

0800a7d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a7d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a7d4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a7d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a7da:	4293      	cmp	r3, r2
 800a7dc:	b08c      	sub	sp, #48	; 0x30
 800a7de:	4604      	mov	r4, r0
 800a7e0:	4688      	mov	r8, r1
 800a7e2:	d05f      	beq.n	800a8a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a7e4:	4e31      	ldr	r6, [pc, #196]	; (800a8ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a7e6:	6832      	ldr	r2, [r6, #0]
 800a7e8:	b92a      	cbnz	r2, 800a7f6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a7ea:	4b31      	ldr	r3, [pc, #196]	; (800a8b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a7ec:	4a31      	ldr	r2, [pc, #196]	; (800a8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a7ee:	21ae      	movs	r1, #174	; 0xae
 800a7f0:	4831      	ldr	r0, [pc, #196]	; (800a8b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a7f2:	f011 f975 	bl	801bae0 <__assert_func>
 800a7f6:	4d31      	ldr	r5, [pc, #196]	; (800a8bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a7f8:	8829      	ldrh	r1, [r5, #0]
 800a7fa:	4299      	cmp	r1, r3
 800a7fc:	d803      	bhi.n	800a806 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a7fe:	4b30      	ldr	r3, [pc, #192]	; (800a8c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a800:	4a2c      	ldr	r2, [pc, #176]	; (800a8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a802:	21af      	movs	r1, #175	; 0xaf
 800a804:	e7f4      	b.n	800a7f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a806:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a80a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a80e:	4b2d      	ldr	r3, [pc, #180]	; (800a8c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a816:	2a00      	cmp	r2, #0
 800a818:	d044      	beq.n	800a8a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a81a:	784b      	ldrb	r3, [r1, #1]
 800a81c:	9207      	str	r2, [sp, #28]
 800a81e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800a822:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a826:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a82a:	4b27      	ldr	r3, [pc, #156]	; (800a8c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a82c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800a830:	681b      	ldr	r3, [r3, #0]
 800a832:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800a836:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a83a:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800a83e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a842:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a846:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a848:	f88d a020 	strb.w	sl, [sp, #32]
 800a84c:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800a850:	9009      	str	r0, [sp, #36]	; 0x24
 800a852:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800a856:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800a85a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a85e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a862:	b10a      	cbz	r2, 800a868 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a864:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a866:	b907      	cbnz	r7, 800a86a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a868:	689f      	ldr	r7, [r3, #8]
 800a86a:	f10d 0914 	add.w	r9, sp, #20
 800a86e:	4621      	mov	r1, r4
 800a870:	4648      	mov	r0, r9
 800a872:	f003 f8f1 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a876:	6833      	ldr	r3, [r6, #0]
 800a878:	2b00      	cmp	r3, #0
 800a87a:	d0b6      	beq.n	800a7ea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a87c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a87e:	882b      	ldrh	r3, [r5, #0]
 800a880:	428b      	cmp	r3, r1
 800a882:	d9bc      	bls.n	800a7fe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a884:	4b11      	ldr	r3, [pc, #68]	; (800a8cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a886:	6818      	ldr	r0, [r3, #0]
 800a888:	f7f8 fa1c 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a88c:	2300      	movs	r3, #0
 800a88e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a892:	ab07      	add	r3, sp, #28
 800a894:	9001      	str	r0, [sp, #4]
 800a896:	9300      	str	r3, [sp, #0]
 800a898:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a89c:	4643      	mov	r3, r8
 800a89e:	4638      	mov	r0, r7
 800a8a0:	f7f8 f9c2 	bl	8002c28 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a8a4:	b00c      	add	sp, #48	; 0x30
 800a8a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a8aa:	bf00      	nop
 800a8ac:	2000a308 	.word	0x2000a308
 800a8b0:	0801d760 	.word	0x0801d760
 800a8b4:	0801e8d0 	.word	0x0801e8d0
 800a8b8:	0801d7ee 	.word	0x0801d7ee
 800a8bc:	2000a30c 	.word	0x2000a30c
 800a8c0:	0801d817 	.word	0x0801d817
 800a8c4:	2000a310 	.word	0x2000a310
 800a8c8:	2000a2b8 	.word	0x2000a2b8
 800a8cc:	2000a314 	.word	0x2000a314

0800a8d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a8d0:	b40e      	push	{r1, r2, r3}
 800a8d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8d6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a8d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a8dc:	4293      	cmp	r3, r2
 800a8de:	b09c      	sub	sp, #112	; 0x70
 800a8e0:	4604      	mov	r4, r0
 800a8e2:	d06b      	beq.n	800a9bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800a8e4:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800a9d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a8e8:	aa26      	add	r2, sp, #152	; 0x98
 800a8ea:	9202      	str	r2, [sp, #8]
 800a8ec:	f8da 2000 	ldr.w	r2, [sl]
 800a8f0:	b92a      	cbnz	r2, 800a8fe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a8f2:	4b33      	ldr	r3, [pc, #204]	; (800a9c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a8f4:	4a33      	ldr	r2, [pc, #204]	; (800a9c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a8f6:	21ae      	movs	r1, #174	; 0xae
 800a8f8:	4833      	ldr	r0, [pc, #204]	; (800a9c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 800a8fa:	f011 f8f1 	bl	801bae0 <__assert_func>
 800a8fe:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a9d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 800a902:	f8b8 1000 	ldrh.w	r1, [r8]
 800a906:	4299      	cmp	r1, r3
 800a908:	d803      	bhi.n	800a912 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a90a:	4b30      	ldr	r3, [pc, #192]	; (800a9cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 800a90c:	4a2d      	ldr	r2, [pc, #180]	; (800a9c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a90e:	21af      	movs	r1, #175	; 0xaf
 800a910:	e7f2      	b.n	800a8f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a912:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 800a9d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 800a916:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a91a:	f8d9 3000 	ldr.w	r3, [r9]
 800a91e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a922:	682b      	ldr	r3, [r5, #0]
 800a924:	4628      	mov	r0, r5
 800a926:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a928:	4798      	blx	r3
 800a92a:	4606      	mov	r6, r0
 800a92c:	b207      	sxth	r7, r0
 800a92e:	a803      	add	r0, sp, #12
 800a930:	f003 fc4a 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800a934:	682b      	ldr	r3, [r5, #0]
 800a936:	4628      	mov	r0, r5
 800a938:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a93a:	4798      	blx	r3
 800a93c:	682b      	ldr	r3, [r5, #0]
 800a93e:	4683      	mov	fp, r0
 800a940:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a942:	4628      	mov	r0, r5
 800a944:	4798      	blx	r3
 800a946:	465b      	mov	r3, fp
 800a948:	9000      	str	r0, [sp, #0]
 800a94a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a94c:	9a02      	ldr	r2, [sp, #8]
 800a94e:	a803      	add	r0, sp, #12
 800a950:	f003 fc8d 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a954:	f8da 3000 	ldr.w	r3, [sl]
 800a958:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a95c:	2b00      	cmp	r3, #0
 800a95e:	d0c8      	beq.n	800a8f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a960:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a962:	f8b8 0000 	ldrh.w	r0, [r8]
 800a966:	4290      	cmp	r0, r2
 800a968:	d9cf      	bls.n	800a90a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a96a:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800a96e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a972:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800a976:	786a      	ldrb	r2, [r5, #1]
 800a978:	8925      	ldrh	r5, [r4, #8]
 800a97a:	f8d9 3000 	ldr.w	r3, [r9]
 800a97e:	eba5 050c 	sub.w	r5, r5, ip
 800a982:	b22d      	sxth	r5, r5
 800a984:	9500      	str	r5, [sp, #0]
 800a986:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a98a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a98e:	a803      	add	r0, sp, #12
 800a990:	f001 fb9a 	bl	800c0c8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a994:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a998:	18b9      	adds	r1, r7, r2
 800a99a:	2900      	cmp	r1, #0
 800a99c:	b203      	sxth	r3, r0
 800a99e:	dd0b      	ble.n	800a9b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 800a9a0:	3b01      	subs	r3, #1
 800a9a2:	fb13 f302 	smulbb	r3, r3, r2
 800a9a6:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a9aa:	b21f      	sxth	r7, r3
 800a9ac:	4638      	mov	r0, r7
 800a9ae:	b01c      	add	sp, #112	; 0x70
 800a9b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9b4:	b003      	add	sp, #12
 800a9b6:	4770      	bx	lr
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	dcf7      	bgt.n	800a9ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800a9bc:	2700      	movs	r7, #0
 800a9be:	e7f5      	b.n	800a9ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800a9c0:	0801d760 	.word	0x0801d760
 800a9c4:	0801e8d0 	.word	0x0801e8d0
 800a9c8:	0801d7ee 	.word	0x0801d7ee
 800a9cc:	0801d817 	.word	0x0801d817
 800a9d0:	2000a308 	.word	0x2000a308
 800a9d4:	2000a30c 	.word	0x2000a30c
 800a9d8:	2000a310 	.word	0x2000a310

0800a9dc <_ZN8touchgfx8TextAreaD0Ev>:
 800a9dc:	b510      	push	{r4, lr}
 800a9de:	213c      	movs	r1, #60	; 0x3c
 800a9e0:	4604      	mov	r4, r0
 800a9e2:	f011 f84f 	bl	801ba84 <_ZdlPvj>
 800a9e6:	4620      	mov	r0, r4
 800a9e8:	bd10      	pop	{r4, pc}
	...

0800a9ec <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a9ec:	b570      	push	{r4, r5, r6, lr}
 800a9ee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a9f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a9f4:	4299      	cmp	r1, r3
 800a9f6:	4604      	mov	r4, r0
 800a9f8:	d01e      	beq.n	800aa38 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a9fa:	6803      	ldr	r3, [r0, #0]
 800a9fc:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800a9fe:	4b0f      	ldr	r3, [pc, #60]	; (800aa3c <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	b92b      	cbnz	r3, 800aa10 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800aa04:	4b0e      	ldr	r3, [pc, #56]	; (800aa40 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800aa06:	4a0f      	ldr	r2, [pc, #60]	; (800aa44 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aa08:	21ae      	movs	r1, #174	; 0xae
 800aa0a:	480f      	ldr	r0, [pc, #60]	; (800aa48 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800aa0c:	f011 f868 	bl	801bae0 <__assert_func>
 800aa10:	4b0e      	ldr	r3, [pc, #56]	; (800aa4c <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800aa12:	881b      	ldrh	r3, [r3, #0]
 800aa14:	428b      	cmp	r3, r1
 800aa16:	d803      	bhi.n	800aa20 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800aa18:	4b0d      	ldr	r3, [pc, #52]	; (800aa50 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800aa1a:	4a0a      	ldr	r2, [pc, #40]	; (800aa44 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aa1c:	21af      	movs	r1, #175	; 0xaf
 800aa1e:	e7f4      	b.n	800aa0a <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800aa20:	4b0c      	ldr	r3, [pc, #48]	; (800aa54 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800aa22:	6818      	ldr	r0, [r3, #0]
 800aa24:	f7f8 f94e 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800aa28:	2300      	movs	r3, #0
 800aa2a:	4601      	mov	r1, r0
 800aa2c:	46ac      	mov	ip, r5
 800aa2e:	4620      	mov	r0, r4
 800aa30:	461a      	mov	r2, r3
 800aa32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa36:	4760      	bx	ip
 800aa38:	2000      	movs	r0, #0
 800aa3a:	bd70      	pop	{r4, r5, r6, pc}
 800aa3c:	2000a308 	.word	0x2000a308
 800aa40:	0801d760 	.word	0x0801d760
 800aa44:	0801e8d0 	.word	0x0801e8d0
 800aa48:	0801d7ee 	.word	0x0801d7ee
 800aa4c:	2000a30c 	.word	0x2000a30c
 800aa50:	0801d817 	.word	0x0801d817
 800aa54:	2000a314 	.word	0x2000a314

0800aa58 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800aa58:	b570      	push	{r4, r5, r6, lr}
 800aa5a:	6803      	ldr	r3, [r0, #0]
 800aa5c:	4604      	mov	r4, r0
 800aa5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa60:	4615      	mov	r5, r2
 800aa62:	4798      	blx	r3
 800aa64:	6823      	ldr	r3, [r4, #0]
 800aa66:	4629      	mov	r1, r5
 800aa68:	4620      	mov	r0, r4
 800aa6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa70:	4718      	bx	r3

0800aa72 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aa72:	b538      	push	{r3, r4, r5, lr}
 800aa74:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aa76:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa7a:	429a      	cmp	r2, r3
 800aa7c:	4604      	mov	r4, r0
 800aa7e:	d014      	beq.n	800aaaa <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800aa80:	6803      	ldr	r3, [r0, #0]
 800aa82:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800aa84:	4798      	blx	r3
 800aa86:	6823      	ldr	r3, [r4, #0]
 800aa88:	4605      	mov	r5, r0
 800aa8a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	4798      	blx	r3
 800aa90:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aa94:	b22d      	sxth	r5, r5
 800aa96:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aa9a:	4601      	mov	r1, r0
 800aa9c:	bf06      	itte	eq
 800aa9e:	4602      	moveq	r2, r0
 800aaa0:	4629      	moveq	r1, r5
 800aaa2:	462a      	movne	r2, r5
 800aaa4:	4620      	mov	r0, r4
 800aaa6:	f7ff ffd7 	bl	800aa58 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aaaa:	bd38      	pop	{r3, r4, r5, pc}

0800aaac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800aaac:	888a      	ldrh	r2, [r1, #4]
 800aaae:	8582      	strh	r2, [r0, #44]	; 0x2c
 800aab0:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800aab4:	b922      	cbnz	r2, 800aac0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800aab6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800aaba:	b90b      	cbnz	r3, 800aac0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800aabc:	f7ff bfd9 	b.w	800aa72 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800aac0:	4770      	bx	lr

0800aac2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800aac2:	2300      	movs	r3, #0
 800aac4:	8083      	strh	r3, [r0, #4]
 800aac6:	80c3      	strh	r3, [r0, #6]
 800aac8:	8003      	strh	r3, [r0, #0]
 800aaca:	8043      	strh	r3, [r0, #2]
 800aacc:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800aad0:	2bff      	cmp	r3, #255	; 0xff
 800aad2:	bf01      	itttt	eq
 800aad4:	890b      	ldrheq	r3, [r1, #8]
 800aad6:	8083      	strheq	r3, [r0, #4]
 800aad8:	894b      	ldrheq	r3, [r1, #10]
 800aada:	80c3      	strheq	r3, [r0, #6]
 800aadc:	4770      	bx	lr
	...

0800aae0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800aae0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aae2:	4604      	mov	r4, r0
 800aae4:	6808      	ldr	r0, [r1, #0]
 800aae6:	6849      	ldr	r1, [r1, #4]
 800aae8:	466b      	mov	r3, sp
 800aaea:	c303      	stmia	r3!, {r0, r1}
 800aaec:	6823      	ldr	r3, [r4, #0]
 800aaee:	4669      	mov	r1, sp
 800aaf0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aaf2:	4620      	mov	r0, r4
 800aaf4:	4798      	blx	r3
 800aaf6:	4b08      	ldr	r3, [pc, #32]	; (800ab18 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800aafe:	b10a      	cbz	r2, 800ab04 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ab00:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ab02:	b900      	cbnz	r0, 800ab06 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ab04:	6898      	ldr	r0, [r3, #8]
 800ab06:	6803      	ldr	r3, [r0, #0]
 800ab08:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ab0a:	699d      	ldr	r5, [r3, #24]
 800ab0c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ab10:	4669      	mov	r1, sp
 800ab12:	47a8      	blx	r5
 800ab14:	b003      	add	sp, #12
 800ab16:	bd30      	pop	{r4, r5, pc}
 800ab18:	2000a2b8 	.word	0x2000a2b8

0800ab1c <_ZN8touchgfx3BoxD1Ev>:
 800ab1c:	4770      	bx	lr

0800ab1e <_ZN8touchgfx3BoxD0Ev>:
 800ab1e:	b510      	push	{r4, lr}
 800ab20:	212c      	movs	r1, #44	; 0x2c
 800ab22:	4604      	mov	r4, r0
 800ab24:	f010 ffae 	bl	801ba84 <_ZdlPvj>
 800ab28:	4620      	mov	r0, r4
 800ab2a:	bd10      	pop	{r4, pc}

0800ab2c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800ab2c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800ab30:	4770      	bx	lr

0800ab32 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ab32:	b570      	push	{r4, r5, r6, lr}
 800ab34:	880b      	ldrh	r3, [r1, #0]
 800ab36:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ab38:	4605      	mov	r5, r0
 800ab3a:	8813      	ldrh	r3, [r2, #0]
 800ab3c:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ab40:	4604      	mov	r4, r0
 800ab42:	4628      	mov	r0, r5
 800ab44:	f004 ff42 	bl	800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab48:	4606      	mov	r6, r0
 800ab4a:	4628      	mov	r0, r5
 800ab4c:	f004 ff78 	bl	800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab50:	6823      	ldr	r3, [r4, #0]
 800ab52:	4605      	mov	r5, r0
 800ab54:	b231      	sxth	r1, r6
 800ab56:	4620      	mov	r0, r4
 800ab58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ab5a:	4798      	blx	r3
 800ab5c:	6823      	ldr	r3, [r4, #0]
 800ab5e:	b229      	sxth	r1, r5
 800ab60:	4620      	mov	r0, r4
 800ab62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab68:	4718      	bx	r3

0800ab6a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800ab6a:	b510      	push	{r4, lr}
 800ab6c:	4604      	mov	r4, r0
 800ab6e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ab70:	b150      	cbz	r0, 800ab88 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ab72:	6803      	ldr	r3, [r0, #0]
 800ab74:	68db      	ldr	r3, [r3, #12]
 800ab76:	4798      	blx	r3
 800ab78:	b130      	cbz	r0, 800ab88 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ab7a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ab7c:	6803      	ldr	r3, [r0, #0]
 800ab7e:	4621      	mov	r1, r4
 800ab80:	689b      	ldr	r3, [r3, #8]
 800ab82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ab86:	4718      	bx	r3
 800ab88:	bd10      	pop	{r4, pc}

0800ab8a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ab8a:	b510      	push	{r4, lr}
 800ab8c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ab90:	2bff      	cmp	r3, #255	; 0xff
 800ab92:	4604      	mov	r4, r0
 800ab94:	d006      	beq.n	800aba4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ab96:	2300      	movs	r3, #0
 800ab98:	8003      	strh	r3, [r0, #0]
 800ab9a:	8043      	strh	r3, [r0, #2]
 800ab9c:	8083      	strh	r3, [r0, #4]
 800ab9e:	80c3      	strh	r3, [r0, #6]
 800aba0:	4620      	mov	r0, r4
 800aba2:	bd10      	pop	{r4, pc}
 800aba4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800aba8:	b11b      	cbz	r3, 800abb2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800abaa:	3130      	adds	r1, #48	; 0x30
 800abac:	f004 ff82 	bl	800fab4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800abb0:	e7f6      	b.n	800aba0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800abb2:	312e      	adds	r1, #46	; 0x2e
 800abb4:	e7fa      	b.n	800abac <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800abb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800abb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abbc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800abc0:	b08a      	sub	sp, #40	; 0x28
 800abc2:	4604      	mov	r4, r0
 800abc4:	4688      	mov	r8, r1
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	d044      	beq.n	800ac54 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800abca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800abcc:	f8ad 3014 	strh.w	r3, [sp, #20]
 800abd0:	a805      	add	r0, sp, #20
 800abd2:	f004 fefb 	bl	800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abd6:	4605      	mov	r5, r0
 800abd8:	b206      	sxth	r6, r0
 800abda:	a805      	add	r0, sp, #20
 800abdc:	f004 ff30 	bl	800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800abe0:	f9b8 2000 	ldrsh.w	r2, [r8]
 800abe4:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800abe8:	4417      	add	r7, r2
 800abea:	b2bf      	uxth	r7, r7
 800abec:	2300      	movs	r3, #0
 800abee:	fa0f fe87 	sxth.w	lr, r7
 800abf2:	459e      	cmp	lr, r3
 800abf4:	fa0f fc80 	sxth.w	ip, r0
 800abf8:	9306      	str	r3, [sp, #24]
 800abfa:	dd2d      	ble.n	800ac58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800abfc:	4296      	cmp	r6, r2
 800abfe:	dd2b      	ble.n	800ac58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800ac00:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800ac04:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800ac08:	4419      	add	r1, r3
 800ac0a:	b289      	uxth	r1, r1
 800ac0c:	fa0f f881 	sxth.w	r8, r1
 800ac10:	f1b8 0f00 	cmp.w	r8, #0
 800ac14:	dd20      	ble.n	800ac58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800ac16:	459c      	cmp	ip, r3
 800ac18:	dd1e      	ble.n	800ac58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800ac1a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800ac1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ac22:	4576      	cmp	r6, lr
 800ac24:	bfa8      	it	ge
 800ac26:	463d      	movge	r5, r7
 800ac28:	45c4      	cmp	ip, r8
 800ac2a:	bfa8      	it	ge
 800ac2c:	4608      	movge	r0, r1
 800ac2e:	1aad      	subs	r5, r5, r2
 800ac30:	1ac0      	subs	r0, r0, r3
 800ac32:	f8ad 501c 	strh.w	r5, [sp, #28]
 800ac36:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ac3a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ac3e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ac42:	4b1f      	ldr	r3, [pc, #124]	; (800acc0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800ac44:	681b      	ldr	r3, [r3, #0]
 800ac46:	b953      	cbnz	r3, 800ac5e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800ac48:	4b1e      	ldr	r3, [pc, #120]	; (800acc4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800ac4a:	4a1f      	ldr	r2, [pc, #124]	; (800acc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800ac4c:	481f      	ldr	r0, [pc, #124]	; (800accc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800ac4e:	2187      	movs	r1, #135	; 0x87
 800ac50:	f010 ff46 	bl	801bae0 <__assert_func>
 800ac54:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ac56:	e7b9      	b.n	800abcc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800ac58:	2300      	movs	r3, #0
 800ac5a:	9307      	str	r3, [sp, #28]
 800ac5c:	e7f1      	b.n	800ac42 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800ac5e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ac62:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ac66:	429a      	cmp	r2, r3
 800ac68:	d026      	beq.n	800acb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ac6a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ac6e:	2b00      	cmp	r3, #0
 800ac70:	dd22      	ble.n	800acb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ac72:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ac76:	2b00      	cmp	r3, #0
 800ac78:	dd1e      	ble.n	800acb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ac7a:	2300      	movs	r3, #0
 800ac7c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ac80:	6823      	ldr	r3, [r4, #0]
 800ac82:	a908      	add	r1, sp, #32
 800ac84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac86:	4620      	mov	r0, r4
 800ac88:	4798      	blx	r3
 800ac8a:	4b11      	ldr	r3, [pc, #68]	; (800acd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ac92:	b10a      	cbz	r2, 800ac98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ac94:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ac96:	b900      	cbnz	r0, 800ac9a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800ac98:	6898      	ldr	r0, [r3, #8]
 800ac9a:	6801      	ldr	r1, [r0, #0]
 800ac9c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800aca0:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800aca4:	2501      	movs	r5, #1
 800aca6:	9502      	str	r5, [sp, #8]
 800aca8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800acac:	9401      	str	r4, [sp, #4]
 800acae:	ac06      	add	r4, sp, #24
 800acb0:	9400      	str	r4, [sp, #0]
 800acb2:	688c      	ldr	r4, [r1, #8]
 800acb4:	a905      	add	r1, sp, #20
 800acb6:	47a0      	blx	r4
 800acb8:	b00a      	add	sp, #40	; 0x28
 800acba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800acbe:	bf00      	nop
 800acc0:	2000a340 	.word	0x2000a340
 800acc4:	0801e964 	.word	0x0801e964
 800acc8:	0801e9c6 	.word	0x0801e9c6
 800accc:	0801e9a0 	.word	0x0801e9a0
 800acd0:	2000a2b8 	.word	0x2000a2b8

0800acd4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800acd4:	4770      	bx	lr
	...

0800acd8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800acd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800acda:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800acdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ace0:	4299      	cmp	r1, r3
 800ace2:	4606      	mov	r6, r0
 800ace4:	d02a      	beq.n	800ad3c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800ace6:	4b16      	ldr	r3, [pc, #88]	; (800ad40 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800ace8:	681b      	ldr	r3, [r3, #0]
 800acea:	b92b      	cbnz	r3, 800acf8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800acec:	4b15      	ldr	r3, [pc, #84]	; (800ad44 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800acee:	4a16      	ldr	r2, [pc, #88]	; (800ad48 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800acf0:	21ae      	movs	r1, #174	; 0xae
 800acf2:	4816      	ldr	r0, [pc, #88]	; (800ad4c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800acf4:	f010 fef4 	bl	801bae0 <__assert_func>
 800acf8:	4a15      	ldr	r2, [pc, #84]	; (800ad50 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800acfa:	8812      	ldrh	r2, [r2, #0]
 800acfc:	428a      	cmp	r2, r1
 800acfe:	d803      	bhi.n	800ad08 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800ad00:	4b14      	ldr	r3, [pc, #80]	; (800ad54 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800ad02:	4a11      	ldr	r2, [pc, #68]	; (800ad48 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ad04:	21af      	movs	r1, #175	; 0xaf
 800ad06:	e7f4      	b.n	800acf2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800ad08:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ad0c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ad10:	4b11      	ldr	r3, [pc, #68]	; (800ad58 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800ad12:	7854      	ldrb	r4, [r2, #1]
 800ad14:	681b      	ldr	r3, [r3, #0]
 800ad16:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800ad1a:	682b      	ldr	r3, [r5, #0]
 800ad1c:	69df      	ldr	r7, [r3, #28]
 800ad1e:	4b0f      	ldr	r3, [pc, #60]	; (800ad5c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800ad20:	6818      	ldr	r0, [r3, #0]
 800ad22:	f7f7 ffcf 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800ad26:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800ad2a:	2300      	movs	r3, #0
 800ad2c:	9300      	str	r3, [sp, #0]
 800ad2e:	4602      	mov	r2, r0
 800ad30:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800ad32:	4621      	mov	r1, r4
 800ad34:	4628      	mov	r0, r5
 800ad36:	47b8      	blx	r7
 800ad38:	b003      	add	sp, #12
 800ad3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad3c:	2000      	movs	r0, #0
 800ad3e:	e7fb      	b.n	800ad38 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800ad40:	2000a308 	.word	0x2000a308
 800ad44:	0801d760 	.word	0x0801d760
 800ad48:	0801ea74 	.word	0x0801ea74
 800ad4c:	0801d7ee 	.word	0x0801d7ee
 800ad50:	2000a30c 	.word	0x2000a30c
 800ad54:	0801d817 	.word	0x0801d817
 800ad58:	2000a310 	.word	0x2000a310
 800ad5c:	2000a314 	.word	0x2000a314

0800ad60 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800ad60:	b570      	push	{r4, r5, r6, lr}
 800ad62:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ad64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ad68:	4299      	cmp	r1, r3
 800ad6a:	4604      	mov	r4, r0
 800ad6c:	d01e      	beq.n	800adac <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800ad6e:	6803      	ldr	r3, [r0, #0]
 800ad70:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ad72:	4b0f      	ldr	r3, [pc, #60]	; (800adb0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800ad74:	681b      	ldr	r3, [r3, #0]
 800ad76:	b92b      	cbnz	r3, 800ad84 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800ad78:	4b0e      	ldr	r3, [pc, #56]	; (800adb4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800ad7a:	4a0f      	ldr	r2, [pc, #60]	; (800adb8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ad7c:	21ae      	movs	r1, #174	; 0xae
 800ad7e:	480f      	ldr	r0, [pc, #60]	; (800adbc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800ad80:	f010 feae 	bl	801bae0 <__assert_func>
 800ad84:	4b0e      	ldr	r3, [pc, #56]	; (800adc0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800ad86:	881b      	ldrh	r3, [r3, #0]
 800ad88:	428b      	cmp	r3, r1
 800ad8a:	d803      	bhi.n	800ad94 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800ad8c:	4b0d      	ldr	r3, [pc, #52]	; (800adc4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800ad8e:	4a0a      	ldr	r2, [pc, #40]	; (800adb8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ad90:	21af      	movs	r1, #175	; 0xaf
 800ad92:	e7f4      	b.n	800ad7e <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800ad94:	4b0c      	ldr	r3, [pc, #48]	; (800adc8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800ad96:	6818      	ldr	r0, [r3, #0]
 800ad98:	f7f7 ff94 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800ad9c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ad9e:	4601      	mov	r1, r0
 800ada0:	46ac      	mov	ip, r5
 800ada2:	4620      	mov	r0, r4
 800ada4:	2300      	movs	r3, #0
 800ada6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adaa:	4760      	bx	ip
 800adac:	2000      	movs	r0, #0
 800adae:	bd70      	pop	{r4, r5, r6, pc}
 800adb0:	2000a308 	.word	0x2000a308
 800adb4:	0801d760 	.word	0x0801d760
 800adb8:	0801ea74 	.word	0x0801ea74
 800adbc:	0801d7ee 	.word	0x0801d7ee
 800adc0:	2000a30c 	.word	0x2000a30c
 800adc4:	0801d817 	.word	0x0801d817
 800adc8:	2000a314 	.word	0x2000a314

0800adcc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800adcc:	b510      	push	{r4, lr}
 800adce:	2140      	movs	r1, #64	; 0x40
 800add0:	4604      	mov	r4, r0
 800add2:	f010 fe57 	bl	801ba84 <_ZdlPvj>
 800add6:	4620      	mov	r0, r4
 800add8:	bd10      	pop	{r4, pc}
	...

0800addc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800addc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ade0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ade2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ade6:	4293      	cmp	r3, r2
 800ade8:	b08c      	sub	sp, #48	; 0x30
 800adea:	4604      	mov	r4, r0
 800adec:	460e      	mov	r6, r1
 800adee:	d05d      	beq.n	800aeac <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800adf0:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800aed0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800adf4:	f8d8 2000 	ldr.w	r2, [r8]
 800adf8:	b92a      	cbnz	r2, 800ae06 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800adfa:	4b2e      	ldr	r3, [pc, #184]	; (800aeb4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800adfc:	4a2e      	ldr	r2, [pc, #184]	; (800aeb8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800adfe:	21ae      	movs	r1, #174	; 0xae
 800ae00:	482e      	ldr	r0, [pc, #184]	; (800aebc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800ae02:	f010 fe6d 	bl	801bae0 <__assert_func>
 800ae06:	4f2e      	ldr	r7, [pc, #184]	; (800aec0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800ae08:	8839      	ldrh	r1, [r7, #0]
 800ae0a:	4299      	cmp	r1, r3
 800ae0c:	d803      	bhi.n	800ae16 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800ae0e:	4b2d      	ldr	r3, [pc, #180]	; (800aec4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800ae10:	4a29      	ldr	r2, [pc, #164]	; (800aeb8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ae12:	21af      	movs	r1, #175	; 0xaf
 800ae14:	e7f4      	b.n	800ae00 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800ae16:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ae1a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ae1e:	4b2a      	ldr	r3, [pc, #168]	; (800aec8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800ae20:	681b      	ldr	r3, [r3, #0]
 800ae22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ae26:	2a00      	cmp	r2, #0
 800ae28:	d040      	beq.n	800aeac <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ae2a:	784b      	ldrb	r3, [r1, #1]
 800ae2c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800ae30:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ae34:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800ae38:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800ae3c:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800ae40:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ae42:	9207      	str	r2, [sp, #28]
 800ae44:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800ae48:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ae4c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ae50:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800ae54:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800ae58:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800ae5c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ae60:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800ae64:	f88d a020 	strb.w	sl, [sp, #32]
 800ae68:	9009      	str	r0, [sp, #36]	; 0x24
 800ae6a:	f7fe fe25 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800ae6e:	ad05      	add	r5, sp, #20
 800ae70:	4681      	mov	r9, r0
 800ae72:	4621      	mov	r1, r4
 800ae74:	4628      	mov	r0, r5
 800ae76:	f002 fdef 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae7a:	f8d8 3000 	ldr.w	r3, [r8]
 800ae7e:	2b00      	cmp	r3, #0
 800ae80:	d0bb      	beq.n	800adfa <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800ae82:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ae84:	883b      	ldrh	r3, [r7, #0]
 800ae86:	428b      	cmp	r3, r1
 800ae88:	d9c1      	bls.n	800ae0e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800ae8a:	4b10      	ldr	r3, [pc, #64]	; (800aecc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800ae8c:	6818      	ldr	r0, [r3, #0]
 800ae8e:	f7f7 ff19 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800ae92:	2300      	movs	r3, #0
 800ae94:	9303      	str	r3, [sp, #12]
 800ae96:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ae98:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800ae9c:	ab07      	add	r3, sp, #28
 800ae9e:	9300      	str	r3, [sp, #0]
 800aea0:	e895 0006 	ldmia.w	r5, {r1, r2}
 800aea4:	4633      	mov	r3, r6
 800aea6:	4648      	mov	r0, r9
 800aea8:	f7f7 febe 	bl	8002c28 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800aeac:	b00c      	add	sp, #48	; 0x30
 800aeae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aeb2:	bf00      	nop
 800aeb4:	0801d760 	.word	0x0801d760
 800aeb8:	0801ea74 	.word	0x0801ea74
 800aebc:	0801d7ee 	.word	0x0801d7ee
 800aec0:	2000a30c 	.word	0x2000a30c
 800aec4:	0801d817 	.word	0x0801d817
 800aec8:	2000a310 	.word	0x2000a310
 800aecc:	2000a314 	.word	0x2000a314
 800aed0:	2000a308 	.word	0x2000a308

0800aed4 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800aed4:	4770      	bx	lr

0800aed6 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800aed6:	b510      	push	{r4, lr}
 800aed8:	2148      	movs	r1, #72	; 0x48
 800aeda:	4604      	mov	r4, r0
 800aedc:	f010 fdd2 	bl	801ba84 <_ZdlPvj>
 800aee0:	4620      	mov	r0, r4
 800aee2:	bd10      	pop	{r4, pc}

0800aee4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800aee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aee8:	4604      	mov	r4, r0
 800aeea:	b08c      	sub	sp, #48	; 0x30
 800aeec:	4688      	mov	r8, r1
 800aeee:	f7ff fe63 	bl	800abb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800aef2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800aef4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800aef8:	4293      	cmp	r3, r2
 800aefa:	f000 8099 	beq.w	800b030 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800aefe:	4e54      	ldr	r6, [pc, #336]	; (800b050 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800af00:	6832      	ldr	r2, [r6, #0]
 800af02:	b92a      	cbnz	r2, 800af10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800af04:	4b53      	ldr	r3, [pc, #332]	; (800b054 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800af06:	4a54      	ldr	r2, [pc, #336]	; (800b058 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800af08:	21ae      	movs	r1, #174	; 0xae
 800af0a:	4854      	ldr	r0, [pc, #336]	; (800b05c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800af0c:	f010 fde8 	bl	801bae0 <__assert_func>
 800af10:	4d53      	ldr	r5, [pc, #332]	; (800b060 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800af12:	8829      	ldrh	r1, [r5, #0]
 800af14:	4299      	cmp	r1, r3
 800af16:	d803      	bhi.n	800af20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800af18:	4b52      	ldr	r3, [pc, #328]	; (800b064 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800af1a:	4a4f      	ldr	r2, [pc, #316]	; (800b058 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800af1c:	21af      	movs	r1, #175	; 0xaf
 800af1e:	e7f4      	b.n	800af0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800af20:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800af24:	4b50      	ldr	r3, [pc, #320]	; (800b068 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800af26:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800af2a:	681b      	ldr	r3, [r3, #0]
 800af2c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800af30:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800af34:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800af38:	2300      	movs	r3, #0
 800af3a:	f1be 0f01 	cmp.w	lr, #1
 800af3e:	9303      	str	r3, [sp, #12]
 800af40:	b208      	sxth	r0, r1
 800af42:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800af46:	f04f 0c02 	mov.w	ip, #2
 800af4a:	d074      	beq.n	800b036 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800af4c:	f1be 0f03 	cmp.w	lr, #3
 800af50:	d071      	beq.n	800b036 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800af52:	1a52      	subs	r2, r2, r1
 800af54:	f8ad 3010 	strh.w	r3, [sp, #16]
 800af58:	fb92 f2fc 	sdiv	r2, r2, ip
 800af5c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800af60:	f8ad 200e 	strh.w	r2, [sp, #14]
 800af64:	f10d 090c 	add.w	r9, sp, #12
 800af68:	e899 0003 	ldmia.w	r9, {r0, r1}
 800af6c:	f10d 0a14 	add.w	sl, sp, #20
 800af70:	e88a 0003 	stmia.w	sl, {r0, r1}
 800af74:	4641      	mov	r1, r8
 800af76:	4650      	mov	r0, sl
 800af78:	f7fe face 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800af7c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800af80:	2b00      	cmp	r3, #0
 800af82:	dd55      	ble.n	800b030 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800af84:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800af88:	2b00      	cmp	r3, #0
 800af8a:	dd51      	ble.n	800b030 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800af8c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800af90:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800af94:	1a9b      	subs	r3, r3, r2
 800af96:	f8ad 3014 	strh.w	r3, [sp, #20]
 800af9a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800af9e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800afa2:	1a9b      	subs	r3, r3, r2
 800afa4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800afa8:	6823      	ldr	r3, [r4, #0]
 800afaa:	4649      	mov	r1, r9
 800afac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afae:	4620      	mov	r0, r4
 800afb0:	4798      	blx	r3
 800afb2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800afb6:	2b00      	cmp	r3, #0
 800afb8:	d047      	beq.n	800b04a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800afba:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800afbe:	6833      	ldr	r3, [r6, #0]
 800afc0:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800afc4:	2b00      	cmp	r3, #0
 800afc6:	d09d      	beq.n	800af04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800afc8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800afca:	882d      	ldrh	r5, [r5, #0]
 800afcc:	428d      	cmp	r5, r1
 800afce:	d9a3      	bls.n	800af18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800afd0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800afd4:	6812      	ldr	r2, [r2, #0]
 800afd6:	785b      	ldrb	r3, [r3, #1]
 800afd8:	9209      	str	r2, [sp, #36]	; 0x24
 800afda:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800afde:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800afe2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800afe6:	2300      	movs	r3, #0
 800afe8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800afec:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800aff0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800aff4:	4b1d      	ldr	r3, [pc, #116]	; (800b06c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800aff6:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	9707      	str	r7, [sp, #28]
 800affe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b002:	f88d 5020 	strb.w	r5, [sp, #32]
 800b006:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b00a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b00e:	b10a      	cbz	r2, 800b014 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800b010:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b012:	b904      	cbnz	r4, 800b016 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800b014:	689c      	ldr	r4, [r3, #8]
 800b016:	4b16      	ldr	r3, [pc, #88]	; (800b070 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800b018:	6818      	ldr	r0, [r3, #0]
 800b01a:	f7f7 fe53 	bl	8002cc4 <_ZNK8touchgfx5Texts7getTextEt>
 800b01e:	ab07      	add	r3, sp, #28
 800b020:	9001      	str	r0, [sp, #4]
 800b022:	9300      	str	r3, [sp, #0]
 800b024:	e899 0006 	ldmia.w	r9, {r1, r2}
 800b028:	4653      	mov	r3, sl
 800b02a:	4620      	mov	r0, r4
 800b02c:	f7f7 fdfc 	bl	8002c28 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b030:	b00c      	add	sp, #48	; 0x30
 800b032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b036:	1a5b      	subs	r3, r3, r1
 800b038:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b03c:	fb93 f3fc 	sdiv	r3, r3, ip
 800b040:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b044:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b048:	e78c      	b.n	800af64 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800b04a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800b04e:	e7b6      	b.n	800afbe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800b050:	2000a308 	.word	0x2000a308
 800b054:	0801d760 	.word	0x0801d760
 800b058:	0801eb14 	.word	0x0801eb14
 800b05c:	0801d7ee 	.word	0x0801d7ee
 800b060:	2000a30c 	.word	0x2000a30c
 800b064:	0801d817 	.word	0x0801d817
 800b068:	2000a310 	.word	0x2000a310
 800b06c:	2000a2b8 	.word	0x2000a2b8
 800b070:	2000a314 	.word	0x2000a314

0800b074 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b074:	b510      	push	{r4, lr}
 800b076:	2101      	movs	r1, #1
 800b078:	4c13      	ldr	r4, [pc, #76]	; (800b0c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b07a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b07e:	2200      	movs	r2, #0
 800b080:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b084:	6004      	str	r4, [r0, #0]
 800b086:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b08a:	4c10      	ldr	r4, [pc, #64]	; (800b0cc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b08c:	8082      	strh	r2, [r0, #4]
 800b08e:	80c2      	strh	r2, [r0, #6]
 800b090:	8102      	strh	r2, [r0, #8]
 800b092:	8142      	strh	r2, [r0, #10]
 800b094:	8182      	strh	r2, [r0, #12]
 800b096:	81c2      	strh	r2, [r0, #14]
 800b098:	8202      	strh	r2, [r0, #16]
 800b09a:	8242      	strh	r2, [r0, #18]
 800b09c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b0a0:	61c2      	str	r2, [r0, #28]
 800b0a2:	8402      	strh	r2, [r0, #32]
 800b0a4:	8442      	strh	r2, [r0, #34]	; 0x22
 800b0a6:	6282      	str	r2, [r0, #40]	; 0x28
 800b0a8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b0ac:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b0ae:	8601      	strh	r1, [r0, #48]	; 0x30
 800b0b0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b0b4:	6344      	str	r4, [r0, #52]	; 0x34
 800b0b6:	8701      	strh	r1, [r0, #56]	; 0x38
 800b0b8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b0bc:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b0c0:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800b0c4:	bd10      	pop	{r4, pc}
 800b0c6:	bf00      	nop
 800b0c8:	0801eaac 	.word	0x0801eaac
 800b0cc:	0801d360 	.word	0x0801d360

0800b0d0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b0d0:	b510      	push	{r4, lr}
 800b0d2:	6803      	ldr	r3, [r0, #0]
 800b0d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b0d6:	460c      	mov	r4, r1
 800b0d8:	4798      	blx	r3
 800b0da:	1b03      	subs	r3, r0, r4
 800b0dc:	4258      	negs	r0, r3
 800b0de:	4158      	adcs	r0, r3
 800b0e0:	bd10      	pop	{r4, pc}
	...

0800b0e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b0e4:	4b01      	ldr	r3, [pc, #4]	; (800b0ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b0e6:	6019      	str	r1, [r3, #0]
 800b0e8:	4770      	bx	lr
 800b0ea:	bf00      	nop
 800b0ec:	2000a2c0 	.word	0x2000a2c0

0800b0f0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0f4:	4696      	mov	lr, r2
 800b0f6:	4605      	mov	r5, r0
 800b0f8:	4614      	mov	r4, r2
 800b0fa:	460e      	mov	r6, r1
 800b0fc:	461f      	mov	r7, r3
 800b0fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b102:	b097      	sub	sp, #92	; 0x5c
 800b104:	f10d 0c1c 	add.w	ip, sp, #28
 800b108:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b10c:	f8de 3000 	ldr.w	r3, [lr]
 800b110:	f8cc 3000 	str.w	r3, [ip]
 800b114:	f104 0e14 	add.w	lr, r4, #20
 800b118:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b11c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b120:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b124:	f8de 3000 	ldr.w	r3, [lr]
 800b128:	f8cc 3000 	str.w	r3, [ip]
 800b12c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b130:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b134:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b138:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b13c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b140:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b144:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b148:	f8de 3000 	ldr.w	r3, [lr]
 800b14c:	f8cc 3000 	str.w	r3, [ip]
 800b150:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b152:	682b      	ldr	r3, [r5, #0]
 800b154:	9201      	str	r2, [sp, #4]
 800b156:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b15a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b15c:	9200      	str	r2, [sp, #0]
 800b15e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b162:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 800b166:	aa07      	add	r2, sp, #28
 800b168:	463b      	mov	r3, r7
 800b16a:	4631      	mov	r1, r6
 800b16c:	4628      	mov	r0, r5
 800b16e:	47d8      	blx	fp
 800b170:	46a6      	mov	lr, r4
 800b172:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b176:	f10d 0c1c 	add.w	ip, sp, #28
 800b17a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b17e:	f8de 3000 	ldr.w	r3, [lr]
 800b182:	f8cc 3000 	str.w	r3, [ip]
 800b186:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b18a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b18e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b192:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b196:	343c      	adds	r4, #60	; 0x3c
 800b198:	f8de 3000 	ldr.w	r3, [lr]
 800b19c:	f8cc 3000 	str.w	r3, [ip]
 800b1a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b1a2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b1a6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1aa:	6823      	ldr	r3, [r4, #0]
 800b1ac:	f8cc 3000 	str.w	r3, [ip]
 800b1b0:	682b      	ldr	r3, [r5, #0]
 800b1b2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b1b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b1b8:	9201      	str	r2, [sp, #4]
 800b1ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b1bc:	9200      	str	r2, [sp, #0]
 800b1be:	f8cd 8008 	str.w	r8, [sp, #8]
 800b1c2:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800b1c4:	aa07      	add	r2, sp, #28
 800b1c6:	463b      	mov	r3, r7
 800b1c8:	4631      	mov	r1, r6
 800b1ca:	4628      	mov	r0, r5
 800b1cc:	47a0      	blx	r4
 800b1ce:	b017      	add	sp, #92	; 0x5c
 800b1d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b1d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1d8:	b08d      	sub	sp, #52	; 0x34
 800b1da:	4688      	mov	r8, r1
 800b1dc:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b1de:	f8d3 c000 	ldr.w	ip, [r3]
 800b1e2:	680f      	ldr	r7, [r1, #0]
 800b1e4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b1e8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b1ec:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b1f0:	edd3 6a07 	vldr	s13, [r3, #28]
 800b1f4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b1f6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b1fa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b1fe:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b202:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b206:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b20a:	eba7 070c 	sub.w	r7, r7, ip
 800b20e:	42bc      	cmp	r4, r7
 800b210:	bfa8      	it	ge
 800b212:	463c      	movge	r4, r7
 800b214:	ee07 4a90 	vmov	s15, r4
 800b218:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b21c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b220:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b224:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b228:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b22c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b230:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b234:	eb09 0e0c 	add.w	lr, r9, ip
 800b238:	4571      	cmp	r1, lr
 800b23a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b23e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b242:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b246:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b24a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b24e:	f340 808d 	ble.w	800b36c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b252:	eba1 060e 	sub.w	r6, r1, lr
 800b256:	fb96 f5f4 	sdiv	r5, r6, r4
 800b25a:	ee07 5a10 	vmov	s14, r5
 800b25e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b262:	2d00      	cmp	r5, #0
 800b264:	fb04 6615 	mls	r6, r4, r5, r6
 800b268:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b26c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b270:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b274:	dd13      	ble.n	800b29e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b276:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b27a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b27e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b286:	bf18      	it	ne
 800b288:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b28c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b290:	bf08      	it	eq
 800b292:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b296:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b29a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b29e:	fb05 f204 	mul.w	r2, r5, r4
 800b2a2:	1abf      	subs	r7, r7, r2
 800b2a4:	4494      	add	ip, r2
 800b2a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b2aa:	4411      	add	r1, r2
 800b2ac:	eb09 020c 	add.w	r2, r9, ip
 800b2b0:	443a      	add	r2, r7
 800b2b2:	b209      	sxth	r1, r1
 800b2b4:	428a      	cmp	r2, r1
 800b2b6:	bfc4      	itt	gt
 800b2b8:	eba1 0209 	subgt.w	r2, r1, r9
 800b2bc:	eba2 070c 	subgt.w	r7, r2, ip
 800b2c0:	2f00      	cmp	r7, #0
 800b2c2:	dd50      	ble.n	800b366 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b2c4:	fb97 f1f4 	sdiv	r1, r7, r4
 800b2c8:	fb04 7211 	mls	r2, r4, r1, r7
 800b2cc:	b90a      	cbnz	r2, 800b2d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b2ce:	3901      	subs	r1, #1
 800b2d0:	4622      	mov	r2, r4
 800b2d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b2d6:	6840      	ldr	r0, [r0, #4]
 800b2d8:	900b      	str	r0, [sp, #44]	; 0x2c
 800b2da:	f8d0 a000 	ldr.w	sl, [r0]
 800b2de:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b2e0:	9008      	str	r0, [sp, #32]
 800b2e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b2e6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b2e8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b2ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b2f0:	695b      	ldr	r3, [r3, #20]
 800b2f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b2f4:	445b      	add	r3, fp
 800b2f6:	eef0 6a42 	vmov.f32	s13, s4
 800b2fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b2fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b302:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b30a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b30e:	9307      	str	r3, [sp, #28]
 800b310:	ee17 7a90 	vmov	r7, s15
 800b314:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b318:	eeb0 7a61 	vmov.f32	s14, s3
 800b31c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b320:	ee16 3a90 	vmov	r3, s13
 800b324:	fb97 f7f4 	sdiv	r7, r7, r4
 800b328:	ee17 ca90 	vmov	ip, s15
 800b32c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b330:	fb9c fcf4 	sdiv	ip, ip, r4
 800b334:	fb0c 3306 	mla	r3, ip, r6, r3
 800b338:	9302      	str	r3, [sp, #8]
 800b33a:	ee17 3a10 	vmov	r3, s14
 800b33e:	44b6      	add	lr, r6
 800b340:	fb04 e505 	mla	r5, r4, r5, lr
 800b344:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b348:	fb07 3706 	mla	r7, r7, r6, r3
 800b34c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b350:	e9cd 4700 	strd	r4, r7, [sp]
 800b354:	2900      	cmp	r1, #0
 800b356:	bfcc      	ite	gt
 800b358:	46a1      	movgt	r9, r4
 800b35a:	4691      	movle	r9, r2
 800b35c:	eba9 0306 	sub.w	r3, r9, r6
 800b360:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b364:	47a0      	blx	r4
 800b366:	b00d      	add	sp, #52	; 0x34
 800b368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b36c:	2500      	movs	r5, #0
 800b36e:	462e      	mov	r6, r5
 800b370:	e799      	b.n	800b2a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b378:	b0db      	sub	sp, #364	; 0x16c
 800b37a:	461d      	mov	r5, r3
 800b37c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b380:	930a      	str	r3, [sp, #40]	; 0x28
 800b382:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b386:	930b      	str	r3, [sp, #44]	; 0x2c
 800b388:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b38c:	9310      	str	r3, [sp, #64]	; 0x40
 800b38e:	6803      	ldr	r3, [r0, #0]
 800b390:	910f      	str	r1, [sp, #60]	; 0x3c
 800b392:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800b394:	9009      	str	r0, [sp, #36]	; 0x24
 800b396:	4614      	mov	r4, r2
 800b398:	4629      	mov	r1, r5
 800b39a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b39e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b3a2:	47b8      	blx	r7
 800b3a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3a6:	6058      	str	r0, [r3, #4]
 800b3a8:	2800      	cmp	r0, #0
 800b3aa:	f000 83a1 	beq.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3ae:	682b      	ldr	r3, [r5, #0]
 800b3b0:	9314      	str	r3, [sp, #80]	; 0x50
 800b3b2:	686b      	ldr	r3, [r5, #4]
 800b3b4:	9315      	str	r3, [sp, #84]	; 0x54
 800b3b6:	4bc4      	ldr	r3, [pc, #784]	; (800b6c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b3b8:	ed94 7a02 	vldr	s14, [r4, #8]
 800b3bc:	7819      	ldrb	r1, [r3, #0]
 800b3be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b3c2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b3c6:	2900      	cmp	r1, #0
 800b3c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b3cc:	bf16      	itet	ne
 800b3ce:	4619      	movne	r1, r3
 800b3d0:	4611      	moveq	r1, r2
 800b3d2:	4613      	movne	r3, r2
 800b3d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3d8:	9116      	str	r1, [sp, #88]	; 0x58
 800b3da:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b3de:	f240 8387 	bls.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3e2:	ed94 7a07 	vldr	s14, [r4, #28]
 800b3e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b3ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3ee:	f240 837f 	bls.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3f2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b3f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b3fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3fe:	f240 8377 	bls.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b402:	6822      	ldr	r2, [r4, #0]
 800b404:	4bb1      	ldr	r3, [pc, #708]	; (800b6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b406:	429a      	cmp	r2, r3
 800b408:	f2c0 8372 	blt.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b40c:	49b0      	ldr	r1, [pc, #704]	; (800b6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b40e:	6963      	ldr	r3, [r4, #20]
 800b410:	428a      	cmp	r2, r1
 800b412:	f300 836d 	bgt.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b416:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b41a:	48ae      	ldr	r0, [pc, #696]	; (800b6d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b41c:	33ff      	adds	r3, #255	; 0xff
 800b41e:	4283      	cmp	r3, r0
 800b420:	f200 8366 	bhi.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b424:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b426:	4dac      	ldr	r5, [pc, #688]	; (800b6d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b428:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b42c:	33ff      	adds	r3, #255	; 0xff
 800b42e:	42ab      	cmp	r3, r5
 800b430:	f200 835e 	bhi.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b434:	6862      	ldr	r2, [r4, #4]
 800b436:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b43a:	33ff      	adds	r3, #255	; 0xff
 800b43c:	4283      	cmp	r3, r0
 800b43e:	f200 8357 	bhi.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b442:	69a1      	ldr	r1, [r4, #24]
 800b444:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b448:	33ff      	adds	r3, #255	; 0xff
 800b44a:	4283      	cmp	r3, r0
 800b44c:	f200 8350 	bhi.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b450:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b452:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b456:	30ff      	adds	r0, #255	; 0xff
 800b458:	42a8      	cmp	r0, r5
 800b45a:	f200 8349 	bhi.w	800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b45e:	428a      	cmp	r2, r1
 800b460:	f280 8110 	bge.w	800b684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b464:	429a      	cmp	r2, r3
 800b466:	f300 8119 	bgt.w	800b69c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b46a:	4299      	cmp	r1, r3
 800b46c:	f280 811d 	bge.w	800b6aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b470:	2502      	movs	r5, #2
 800b472:	2701      	movs	r7, #1
 800b474:	46a9      	mov	r9, r5
 800b476:	46b8      	mov	r8, r7
 800b478:	f04f 0a00 	mov.w	sl, #0
 800b47c:	4621      	mov	r1, r4
 800b47e:	a849      	add	r0, sp, #292	; 0x124
 800b480:	f003 fc70 	bl	800ed64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b484:	4622      	mov	r2, r4
 800b486:	4653      	mov	r3, sl
 800b488:	a949      	add	r1, sp, #292	; 0x124
 800b48a:	f8cd 9000 	str.w	r9, [sp]
 800b48e:	a819      	add	r0, sp, #100	; 0x64
 800b490:	f003 fd98 	bl	800efc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b494:	4622      	mov	r2, r4
 800b496:	4653      	mov	r3, sl
 800b498:	a949      	add	r1, sp, #292	; 0x124
 800b49a:	f8cd 8000 	str.w	r8, [sp]
 800b49e:	a829      	add	r0, sp, #164	; 0xa4
 800b4a0:	f003 fd90 	bl	800efc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b4a4:	4643      	mov	r3, r8
 800b4a6:	4622      	mov	r2, r4
 800b4a8:	a949      	add	r1, sp, #292	; 0x124
 800b4aa:	f8cd 9000 	str.w	r9, [sp]
 800b4ae:	a839      	add	r0, sp, #228	; 0xe4
 800b4b0:	f003 fd88 	bl	800efc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b4b4:	42af      	cmp	r7, r5
 800b4b6:	bfb5      	itete	lt
 800b4b8:	2300      	movlt	r3, #0
 800b4ba:	2301      	movge	r3, #1
 800b4bc:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b4be:	930e      	strge	r3, [sp, #56]	; 0x38
 800b4c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b4c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b4c6:	af12      	add	r7, sp, #72	; 0x48
 800b4c8:	bfb9      	ittee	lt
 800b4ca:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b4cc:	ac19      	addlt	r4, sp, #100	; 0x64
 800b4ce:	ad19      	addge	r5, sp, #100	; 0x64
 800b4d0:	ac29      	addge	r4, sp, #164	; 0xa4
 800b4d2:	e887 0003 	stmia.w	r7, {r0, r1}
 800b4d6:	b928      	cbnz	r0, 800b4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b4d8:	4b80      	ldr	r3, [pc, #512]	; (800b6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b4da:	6818      	ldr	r0, [r3, #0]
 800b4dc:	6803      	ldr	r3, [r0, #0]
 800b4de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4e0:	4798      	blx	r3
 800b4e2:	6038      	str	r0, [r7, #0]
 800b4e4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b4e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b4ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b4ee:	930c      	str	r3, [sp, #48]	; 0x30
 800b4f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b4f2:	6963      	ldr	r3, [r4, #20]
 800b4f4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b4f6:	440b      	add	r3, r1
 800b4f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b4fc:	4408      	add	r0, r1
 800b4fe:	b200      	sxth	r0, r0
 800b500:	4283      	cmp	r3, r0
 800b502:	900d      	str	r0, [sp, #52]	; 0x34
 800b504:	f280 80dd 	bge.w	800b6c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b508:	428b      	cmp	r3, r1
 800b50a:	da08      	bge.n	800b51e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b50c:	2a00      	cmp	r2, #0
 800b50e:	dd06      	ble.n	800b51e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b510:	1acb      	subs	r3, r1, r3
 800b512:	429a      	cmp	r2, r3
 800b514:	f2c0 80e4 	blt.w	800b6e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b518:	2b00      	cmp	r3, #0
 800b51a:	f300 80e2 	bgt.w	800b6e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b51e:	6967      	ldr	r7, [r4, #20]
 800b520:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b522:	443b      	add	r3, r7
 800b524:	461f      	mov	r7, r3
 800b526:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b528:	1bdf      	subs	r7, r3, r7
 800b52a:	4297      	cmp	r7, r2
 800b52c:	bfa8      	it	ge
 800b52e:	4617      	movge	r7, r2
 800b530:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b534:	2f00      	cmp	r7, #0
 800b536:	f340 8166 	ble.w	800b806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b53a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b53c:	6829      	ldr	r1, [r5, #0]
 800b53e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b542:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b546:	6820      	ldr	r0, [r4, #0]
 800b548:	4411      	add	r1, r2
 800b54a:	4299      	cmp	r1, r3
 800b54c:	dd1a      	ble.n	800b584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b54e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b552:	440b      	add	r3, r1
 800b554:	4402      	add	r2, r0
 800b556:	b21b      	sxth	r3, r3
 800b558:	429a      	cmp	r2, r3
 800b55a:	dc13      	bgt.n	800b584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b55c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b55e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b560:	681b      	ldr	r3, [r3, #0]
 800b562:	9206      	str	r2, [sp, #24]
 800b564:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b566:	9205      	str	r2, [sp, #20]
 800b568:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b56a:	9500      	str	r5, [sp, #0]
 800b56c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b570:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b572:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b574:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b578:	a912      	add	r1, sp, #72	; 0x48
 800b57a:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b57e:	aa49      	add	r2, sp, #292	; 0x124
 800b580:	4623      	mov	r3, r4
 800b582:	47c8      	blx	r9
 800b584:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b588:	441a      	add	r2, r3
 800b58a:	6963      	ldr	r3, [r4, #20]
 800b58c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b590:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b594:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b598:	68a1      	ldr	r1, [r4, #8]
 800b59a:	ed94 6a08 	vldr	s12, [r4, #32]
 800b59e:	6022      	str	r2, [r4, #0]
 800b5a0:	3301      	adds	r3, #1
 800b5a2:	6163      	str	r3, [r4, #20]
 800b5a4:	69a3      	ldr	r3, [r4, #24]
 800b5a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b5aa:	3b01      	subs	r3, #1
 800b5ac:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b5b0:	61a3      	str	r3, [r4, #24]
 800b5b2:	6923      	ldr	r3, [r4, #16]
 800b5b4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b5b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b5bc:	edd4 6a07 	vldr	s13, [r4, #28]
 800b5c0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b5c4:	440b      	add	r3, r1
 800b5c6:	68e1      	ldr	r1, [r4, #12]
 800b5c8:	6123      	str	r3, [r4, #16]
 800b5ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b5ce:	428b      	cmp	r3, r1
 800b5d0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b5d4:	db15      	blt.n	800b602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b5d6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b5da:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b5de:	3201      	adds	r2, #1
 800b5e0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b5e4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b5e8:	6022      	str	r2, [r4, #0]
 800b5ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b5ee:	1a5b      	subs	r3, r3, r1
 800b5f0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b5f4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b5f8:	6123      	str	r3, [r4, #16]
 800b5fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b5fe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b602:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b606:	441a      	add	r2, r3
 800b608:	696b      	ldr	r3, [r5, #20]
 800b60a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b60e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b612:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b616:	68a9      	ldr	r1, [r5, #8]
 800b618:	ed95 6a08 	vldr	s12, [r5, #32]
 800b61c:	602a      	str	r2, [r5, #0]
 800b61e:	3301      	adds	r3, #1
 800b620:	616b      	str	r3, [r5, #20]
 800b622:	69ab      	ldr	r3, [r5, #24]
 800b624:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b628:	3b01      	subs	r3, #1
 800b62a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b62e:	61ab      	str	r3, [r5, #24]
 800b630:	692b      	ldr	r3, [r5, #16]
 800b632:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b636:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b63a:	edd5 6a07 	vldr	s13, [r5, #28]
 800b63e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b642:	440b      	add	r3, r1
 800b644:	68e9      	ldr	r1, [r5, #12]
 800b646:	612b      	str	r3, [r5, #16]
 800b648:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b64c:	428b      	cmp	r3, r1
 800b64e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b652:	db15      	blt.n	800b680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b654:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b658:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b65c:	3201      	adds	r2, #1
 800b65e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b662:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b666:	602a      	str	r2, [r5, #0]
 800b668:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b66c:	1a5b      	subs	r3, r3, r1
 800b66e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b672:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b676:	612b      	str	r3, [r5, #16]
 800b678:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b67c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b680:	3f01      	subs	r7, #1
 800b682:	e757      	b.n	800b534 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b684:	4299      	cmp	r1, r3
 800b686:	dc13      	bgt.n	800b6b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b688:	429a      	cmp	r2, r3
 800b68a:	da14      	bge.n	800b6b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b68c:	2502      	movs	r5, #2
 800b68e:	2703      	movs	r7, #3
 800b690:	46a9      	mov	r9, r5
 800b692:	f04f 0800 	mov.w	r8, #0
 800b696:	f04f 0a01 	mov.w	sl, #1
 800b69a:	e6ef      	b.n	800b47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b69c:	2501      	movs	r5, #1
 800b69e:	2700      	movs	r7, #0
 800b6a0:	46a9      	mov	r9, r5
 800b6a2:	46b8      	mov	r8, r7
 800b6a4:	f04f 0a02 	mov.w	sl, #2
 800b6a8:	e6e8      	b.n	800b47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b6aa:	2501      	movs	r5, #1
 800b6ac:	2702      	movs	r7, #2
 800b6ae:	e6e1      	b.n	800b474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b6b0:	2500      	movs	r5, #0
 800b6b2:	2701      	movs	r7, #1
 800b6b4:	e7f4      	b.n	800b6a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b6b6:	2702      	movs	r7, #2
 800b6b8:	2503      	movs	r5, #3
 800b6ba:	f04f 0900 	mov.w	r9, #0
 800b6be:	46b8      	mov	r8, r7
 800b6c0:	e7e9      	b.n	800b696 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b6c2:	4613      	mov	r3, r2
 800b6c4:	e728      	b.n	800b518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b6c6:	bf00      	nop
 800b6c8:	2000a2b0 	.word	0x2000a2b0
 800b6cc:	fffd8f01 	.word	0xfffd8f01
 800b6d0:	00027100 	.word	0x00027100
 800b6d4:	0004e1ff 	.word	0x0004e1ff
 800b6d8:	0004e1fe 	.word	0x0004e1fe
 800b6dc:	2000a2b8 	.word	0x2000a2b8
 800b6e0:	4613      	mov	r3, r2
 800b6e2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b6e4:	9111      	str	r1, [sp, #68]	; 0x44
 800b6e6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b6ea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b6ee:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b6f0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b6f4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b6f8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b6fc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b700:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b704:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b708:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b70c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b710:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b714:	469e      	mov	lr, r3
 800b716:	469c      	mov	ip, r3
 800b718:	f04f 0900 	mov.w	r9, #0
 800b71c:	f1bc 0f00 	cmp.w	ip, #0
 800b720:	d147      	bne.n	800b7b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b722:	eb03 0c07 	add.w	ip, r3, r7
 800b726:	1ad7      	subs	r7, r2, r3
 800b728:	f1b9 0f00 	cmp.w	r9, #0
 800b72c:	d009      	beq.n	800b742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b72e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b732:	9029      	str	r0, [sp, #164]	; 0xa4
 800b734:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b738:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b73c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b740:	912d      	str	r1, [sp, #180]	; 0xb4
 800b742:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b744:	9111      	str	r1, [sp, #68]	; 0x44
 800b746:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b74a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b74e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b752:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b756:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b75a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b75e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b762:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b766:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b76a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b76e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b772:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b776:	f04f 0800 	mov.w	r8, #0
 800b77a:	f1be 0f00 	cmp.w	lr, #0
 800b77e:	d031      	beq.n	800b7e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b780:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b782:	4431      	add	r1, r6
 800b784:	4549      	cmp	r1, r9
 800b786:	4450      	add	r0, sl
 800b788:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b78c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b790:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b794:	db08      	blt.n	800b7a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b796:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b79a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b79e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b7a2:	3001      	adds	r0, #1
 800b7a4:	eba1 0109 	sub.w	r1, r1, r9
 800b7a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b7ac:	f04f 0801 	mov.w	r8, #1
 800b7b0:	e7e3      	b.n	800b77a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b7b2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b7b4:	4431      	add	r1, r6
 800b7b6:	4541      	cmp	r1, r8
 800b7b8:	4450      	add	r0, sl
 800b7ba:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b7be:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b7c2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b7c6:	db08      	blt.n	800b7da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b7c8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b7cc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b7d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b7d4:	3001      	adds	r0, #1
 800b7d6:	eba1 0108 	sub.w	r1, r1, r8
 800b7da:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b7de:	f04f 0901 	mov.w	r9, #1
 800b7e2:	e79b      	b.n	800b71c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b7e4:	449c      	add	ip, r3
 800b7e6:	1aff      	subs	r7, r7, r3
 800b7e8:	f1b8 0f00 	cmp.w	r8, #0
 800b7ec:	d009      	beq.n	800b802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b7ee:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b7f2:	9019      	str	r0, [sp, #100]	; 0x64
 800b7f4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b7f8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b7fc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b800:	911d      	str	r1, [sp, #116]	; 0x74
 800b802:	1ad2      	subs	r2, r2, r3
 800b804:	e68b      	b.n	800b51e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b806:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b808:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b80a:	2b00      	cmp	r3, #0
 800b80c:	f000 80d1 	beq.w	800b9b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b810:	ad19      	add	r5, sp, #100	; 0x64
 800b812:	ac39      	add	r4, sp, #228	; 0xe4
 800b814:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b816:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b81a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b81e:	930c      	str	r3, [sp, #48]	; 0x30
 800b820:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b822:	6963      	ldr	r3, [r4, #20]
 800b824:	440b      	add	r3, r1
 800b826:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b82a:	4408      	add	r0, r1
 800b82c:	b200      	sxth	r0, r0
 800b82e:	4283      	cmp	r3, r0
 800b830:	900d      	str	r0, [sp, #52]	; 0x34
 800b832:	f280 80c1 	bge.w	800b9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b836:	428b      	cmp	r3, r1
 800b838:	da08      	bge.n	800b84c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b83a:	2a00      	cmp	r2, #0
 800b83c:	dd06      	ble.n	800b84c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b83e:	1acb      	subs	r3, r1, r3
 800b840:	429a      	cmp	r2, r3
 800b842:	f2c0 80bb 	blt.w	800b9bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b846:	2b00      	cmp	r3, #0
 800b848:	f300 80b9 	bgt.w	800b9be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b84c:	6967      	ldr	r7, [r4, #20]
 800b84e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b850:	443b      	add	r3, r7
 800b852:	461f      	mov	r7, r3
 800b854:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b856:	1bdf      	subs	r7, r3, r7
 800b858:	4297      	cmp	r7, r2
 800b85a:	bfa8      	it	ge
 800b85c:	4617      	movge	r7, r2
 800b85e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b862:	2f00      	cmp	r7, #0
 800b864:	f340 813c 	ble.w	800bae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b868:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b86a:	6829      	ldr	r1, [r5, #0]
 800b86c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b870:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b874:	6820      	ldr	r0, [r4, #0]
 800b876:	4411      	add	r1, r2
 800b878:	4299      	cmp	r1, r3
 800b87a:	dd1a      	ble.n	800b8b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b87c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b880:	440b      	add	r3, r1
 800b882:	4402      	add	r2, r0
 800b884:	b21b      	sxth	r3, r3
 800b886:	429a      	cmp	r2, r3
 800b888:	dc13      	bgt.n	800b8b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b88a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b88c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b88e:	681b      	ldr	r3, [r3, #0]
 800b890:	9206      	str	r2, [sp, #24]
 800b892:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b894:	9205      	str	r2, [sp, #20]
 800b896:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b898:	9500      	str	r5, [sp, #0]
 800b89a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b89e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b8a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b8a2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b8a6:	a912      	add	r1, sp, #72	; 0x48
 800b8a8:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b8ac:	aa49      	add	r2, sp, #292	; 0x124
 800b8ae:	4623      	mov	r3, r4
 800b8b0:	47c8      	blx	r9
 800b8b2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b8b6:	441a      	add	r2, r3
 800b8b8:	6963      	ldr	r3, [r4, #20]
 800b8ba:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b8be:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b8c2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b8c6:	68a1      	ldr	r1, [r4, #8]
 800b8c8:	ed94 6a08 	vldr	s12, [r4, #32]
 800b8cc:	6022      	str	r2, [r4, #0]
 800b8ce:	3301      	adds	r3, #1
 800b8d0:	6163      	str	r3, [r4, #20]
 800b8d2:	69a3      	ldr	r3, [r4, #24]
 800b8d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b8d8:	3b01      	subs	r3, #1
 800b8da:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b8de:	61a3      	str	r3, [r4, #24]
 800b8e0:	6923      	ldr	r3, [r4, #16]
 800b8e2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b8e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b8ea:	edd4 6a07 	vldr	s13, [r4, #28]
 800b8ee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b8f2:	440b      	add	r3, r1
 800b8f4:	68e1      	ldr	r1, [r4, #12]
 800b8f6:	6123      	str	r3, [r4, #16]
 800b8f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b8fc:	428b      	cmp	r3, r1
 800b8fe:	edc4 6a07 	vstr	s13, [r4, #28]
 800b902:	db15      	blt.n	800b930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b904:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b908:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b90c:	3201      	adds	r2, #1
 800b90e:	edc4 6a07 	vstr	s13, [r4, #28]
 800b912:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b916:	6022      	str	r2, [r4, #0]
 800b918:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b91c:	1a5b      	subs	r3, r3, r1
 800b91e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b922:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b926:	6123      	str	r3, [r4, #16]
 800b928:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b92c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b930:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b934:	441a      	add	r2, r3
 800b936:	696b      	ldr	r3, [r5, #20]
 800b938:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b93c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b940:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b944:	68a9      	ldr	r1, [r5, #8]
 800b946:	ed95 6a08 	vldr	s12, [r5, #32]
 800b94a:	602a      	str	r2, [r5, #0]
 800b94c:	3301      	adds	r3, #1
 800b94e:	616b      	str	r3, [r5, #20]
 800b950:	69ab      	ldr	r3, [r5, #24]
 800b952:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b956:	3b01      	subs	r3, #1
 800b958:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b95c:	61ab      	str	r3, [r5, #24]
 800b95e:	692b      	ldr	r3, [r5, #16]
 800b960:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b964:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b968:	edd5 6a07 	vldr	s13, [r5, #28]
 800b96c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b970:	440b      	add	r3, r1
 800b972:	68e9      	ldr	r1, [r5, #12]
 800b974:	612b      	str	r3, [r5, #16]
 800b976:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b97a:	428b      	cmp	r3, r1
 800b97c:	edc5 6a07 	vstr	s13, [r5, #28]
 800b980:	db15      	blt.n	800b9ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b982:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b986:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b98a:	3201      	adds	r2, #1
 800b98c:	edc5 6a07 	vstr	s13, [r5, #28]
 800b990:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b994:	602a      	str	r2, [r5, #0]
 800b996:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b99a:	1a5b      	subs	r3, r3, r1
 800b99c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b9a0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b9a4:	612b      	str	r3, [r5, #16]
 800b9a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b9aa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b9ae:	3f01      	subs	r7, #1
 800b9b0:	e757      	b.n	800b862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b9b2:	ad39      	add	r5, sp, #228	; 0xe4
 800b9b4:	ac19      	add	r4, sp, #100	; 0x64
 800b9b6:	e72d      	b.n	800b814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b9b8:	4613      	mov	r3, r2
 800b9ba:	e744      	b.n	800b846 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b9bc:	4613      	mov	r3, r2
 800b9be:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b9c2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b9c4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b9c8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b9cc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b9d0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b9d4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b9d8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b9dc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b9e0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b9e2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b9e6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b9ea:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b9ee:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b9f2:	960e      	str	r6, [sp, #56]	; 0x38
 800b9f4:	469e      	mov	lr, r3
 800b9f6:	461f      	mov	r7, r3
 800b9f8:	f04f 0900 	mov.w	r9, #0
 800b9fc:	2f00      	cmp	r7, #0
 800b9fe:	d146      	bne.n	800ba8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ba00:	449c      	add	ip, r3
 800ba02:	1ad7      	subs	r7, r2, r3
 800ba04:	f1b9 0f00 	cmp.w	r9, #0
 800ba08:	d009      	beq.n	800ba1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ba0a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800ba0e:	9039      	str	r0, [sp, #228]	; 0xe4
 800ba10:	913d      	str	r1, [sp, #244]	; 0xf4
 800ba12:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ba16:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ba1a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ba1e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ba20:	910e      	str	r1, [sp, #56]	; 0x38
 800ba22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ba26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ba2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ba2e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ba32:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ba36:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ba3a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ba3e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ba42:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ba46:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ba4a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ba4e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ba52:	f04f 0800 	mov.w	r8, #0
 800ba56:	f1be 0f00 	cmp.w	lr, #0
 800ba5a:	d030      	beq.n	800babe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ba5c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ba5e:	4431      	add	r1, r6
 800ba60:	4549      	cmp	r1, r9
 800ba62:	4450      	add	r0, sl
 800ba64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ba68:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ba6c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ba70:	db08      	blt.n	800ba84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ba72:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ba76:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ba7a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ba7e:	3001      	adds	r0, #1
 800ba80:	eba1 0109 	sub.w	r1, r1, r9
 800ba84:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ba88:	f04f 0801 	mov.w	r8, #1
 800ba8c:	e7e3      	b.n	800ba56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ba8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ba90:	4431      	add	r1, r6
 800ba92:	4541      	cmp	r1, r8
 800ba94:	4450      	add	r0, sl
 800ba96:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ba9a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ba9e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800baa2:	db08      	blt.n	800bab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800baa4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800baa8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800baac:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bab0:	3001      	adds	r0, #1
 800bab2:	eba1 0108 	sub.w	r1, r1, r8
 800bab6:	3f01      	subs	r7, #1
 800bab8:	f04f 0901 	mov.w	r9, #1
 800babc:	e79e      	b.n	800b9fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800babe:	449c      	add	ip, r3
 800bac0:	1aff      	subs	r7, r7, r3
 800bac2:	f1b8 0f00 	cmp.w	r8, #0
 800bac6:	d009      	beq.n	800badc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bac8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bacc:	9019      	str	r0, [sp, #100]	; 0x64
 800bace:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bad2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bad6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bada:	911d      	str	r1, [sp, #116]	; 0x74
 800badc:	1ad2      	subs	r2, r2, r3
 800bade:	e6b5      	b.n	800b84c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bae0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bae2:	681b      	ldr	r3, [r3, #0]
 800bae4:	b923      	cbnz	r3, 800baf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bae6:	4b04      	ldr	r3, [pc, #16]	; (800baf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bae8:	6818      	ldr	r0, [r3, #0]
 800baea:	6803      	ldr	r3, [r0, #0]
 800baec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800baee:	4798      	blx	r3
 800baf0:	b05b      	add	sp, #364	; 0x16c
 800baf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800baf6:	bf00      	nop
 800baf8:	2000a2b8 	.word	0x2000a2b8

0800bafc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800bafc:	b570      	push	{r4, r5, r6, lr}
 800bafe:	4604      	mov	r4, r0
 800bb00:	2500      	movs	r5, #0
 800bb02:	7223      	strb	r3, [r4, #8]
 800bb04:	9804      	ldr	r0, [sp, #16]
 800bb06:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800bb0a:	8025      	strh	r5, [r4, #0]
 800bb0c:	6061      	str	r1, [r4, #4]
 800bb0e:	7263      	strb	r3, [r4, #9]
 800bb10:	60e0      	str	r0, [r4, #12]
 800bb12:	8222      	strh	r2, [r4, #16]
 800bb14:	8265      	strh	r5, [r4, #18]
 800bb16:	82a5      	strh	r5, [r4, #20]
 800bb18:	82e5      	strh	r5, [r4, #22]
 800bb1a:	8325      	strh	r5, [r4, #24]
 800bb1c:	8365      	strh	r5, [r4, #26]
 800bb1e:	83a5      	strh	r5, [r4, #28]
 800bb20:	77a5      	strb	r5, [r4, #30]
 800bb22:	6803      	ldr	r3, [r0, #0]
 800bb24:	695b      	ldr	r3, [r3, #20]
 800bb26:	4798      	blx	r3
 800bb28:	4606      	mov	r6, r0
 800bb2a:	b1f8      	cbz	r0, 800bb6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bb2c:	68e0      	ldr	r0, [r4, #12]
 800bb2e:	6803      	ldr	r3, [r0, #0]
 800bb30:	4631      	mov	r1, r6
 800bb32:	68db      	ldr	r3, [r3, #12]
 800bb34:	4798      	blx	r3
 800bb36:	7b43      	ldrb	r3, [r0, #13]
 800bb38:	7a82      	ldrb	r2, [r0, #10]
 800bb3a:	005b      	lsls	r3, r3, #1
 800bb3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bb40:	4313      	orrs	r3, r2
 800bb42:	83a3      	strh	r3, [r4, #28]
 800bb44:	7a63      	ldrb	r3, [r4, #9]
 800bb46:	2b04      	cmp	r3, #4
 800bb48:	4605      	mov	r5, r0
 800bb4a:	d10f      	bne.n	800bb6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bb4c:	68e0      	ldr	r0, [r4, #12]
 800bb4e:	6803      	ldr	r3, [r0, #0]
 800bb50:	462a      	mov	r2, r5
 800bb52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bb54:	4631      	mov	r1, r6
 800bb56:	4798      	blx	r3
 800bb58:	7b6b      	ldrb	r3, [r5, #13]
 800bb5a:	005b      	lsls	r3, r3, #1
 800bb5c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bb60:	7aab      	ldrb	r3, [r5, #10]
 800bb62:	4313      	orrs	r3, r2
 800bb64:	4418      	add	r0, r3
 800bb66:	8ba3      	ldrh	r3, [r4, #28]
 800bb68:	4418      	add	r0, r3
 800bb6a:	83a0      	strh	r0, [r4, #28]
 800bb6c:	4620      	mov	r0, r4
 800bb6e:	bd70      	pop	{r4, r5, r6, pc}

0800bb70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb74:	2400      	movs	r4, #0
 800bb76:	b085      	sub	sp, #20
 800bb78:	4681      	mov	r9, r0
 800bb7a:	4688      	mov	r8, r1
 800bb7c:	4692      	mov	sl, r2
 800bb7e:	469b      	mov	fp, r3
 800bb80:	4627      	mov	r7, r4
 800bb82:	4625      	mov	r5, r4
 800bb84:	4626      	mov	r6, r4
 800bb86:	4554      	cmp	r4, sl
 800bb88:	da2a      	bge.n	800bbe0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bb8a:	2300      	movs	r3, #0
 800bb8c:	9303      	str	r3, [sp, #12]
 800bb8e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bb92:	429d      	cmp	r5, r3
 800bb94:	d004      	beq.n	800bba0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bb96:	f242 030b 	movw	r3, #8203	; 0x200b
 800bb9a:	429d      	cmp	r5, r3
 800bb9c:	bf18      	it	ne
 800bb9e:	462f      	movne	r7, r5
 800bba0:	ab03      	add	r3, sp, #12
 800bba2:	4642      	mov	r2, r8
 800bba4:	4659      	mov	r1, fp
 800bba6:	4648      	mov	r0, r9
 800bba8:	f002 fe60 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bbac:	4605      	mov	r5, r0
 800bbae:	b1b8      	cbz	r0, 800bbe0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bbb0:	280a      	cmp	r0, #10
 800bbb2:	d015      	beq.n	800bbe0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bbb4:	9a03      	ldr	r2, [sp, #12]
 800bbb6:	b18a      	cbz	r2, 800bbdc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bbb8:	7b50      	ldrb	r0, [r2, #13]
 800bbba:	7a93      	ldrb	r3, [r2, #10]
 800bbbc:	8895      	ldrh	r5, [r2, #4]
 800bbbe:	0040      	lsls	r0, r0, #1
 800bbc0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bbc4:	4303      	orrs	r3, r0
 800bbc6:	9301      	str	r3, [sp, #4]
 800bbc8:	f8d8 3000 	ldr.w	r3, [r8]
 800bbcc:	4639      	mov	r1, r7
 800bbce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbd0:	4640      	mov	r0, r8
 800bbd2:	4798      	blx	r3
 800bbd4:	9b01      	ldr	r3, [sp, #4]
 800bbd6:	4418      	add	r0, r3
 800bbd8:	4406      	add	r6, r0
 800bbda:	b2b6      	uxth	r6, r6
 800bbdc:	3401      	adds	r4, #1
 800bbde:	e7d2      	b.n	800bb86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bbe0:	4630      	mov	r0, r6
 800bbe2:	b005      	add	sp, #20
 800bbe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bbe8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bbe8:	2a02      	cmp	r2, #2
 800bbea:	b530      	push	{r4, r5, lr}
 800bbec:	d011      	beq.n	800bc12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bbee:	2a03      	cmp	r2, #3
 800bbf0:	d01c      	beq.n	800bc2c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bbf2:	2a01      	cmp	r2, #1
 800bbf4:	d10c      	bne.n	800bc10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bbf6:	888b      	ldrh	r3, [r1, #4]
 800bbf8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bbfc:	8801      	ldrh	r1, [r0, #0]
 800bbfe:	8844      	ldrh	r4, [r0, #2]
 800bc00:	8004      	strh	r4, [r0, #0]
 800bc02:	1a9b      	subs	r3, r3, r2
 800bc04:	1a5b      	subs	r3, r3, r1
 800bc06:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bc0a:	8043      	strh	r3, [r0, #2]
 800bc0c:	8081      	strh	r1, [r0, #4]
 800bc0e:	80c2      	strh	r2, [r0, #6]
 800bc10:	bd30      	pop	{r4, r5, pc}
 800bc12:	88cb      	ldrh	r3, [r1, #6]
 800bc14:	88c2      	ldrh	r2, [r0, #6]
 800bc16:	1a9b      	subs	r3, r3, r2
 800bc18:	8842      	ldrh	r2, [r0, #2]
 800bc1a:	1a9b      	subs	r3, r3, r2
 800bc1c:	888a      	ldrh	r2, [r1, #4]
 800bc1e:	8881      	ldrh	r1, [r0, #4]
 800bc20:	8043      	strh	r3, [r0, #2]
 800bc22:	1a52      	subs	r2, r2, r1
 800bc24:	8801      	ldrh	r1, [r0, #0]
 800bc26:	1a52      	subs	r2, r2, r1
 800bc28:	8002      	strh	r2, [r0, #0]
 800bc2a:	e7f1      	b.n	800bc10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bc2c:	88cb      	ldrh	r3, [r1, #6]
 800bc2e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bc32:	8841      	ldrh	r1, [r0, #2]
 800bc34:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bc38:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bc3c:	8045      	strh	r5, [r0, #2]
 800bc3e:	1a9b      	subs	r3, r3, r2
 800bc40:	1a5b      	subs	r3, r3, r1
 800bc42:	8003      	strh	r3, [r0, #0]
 800bc44:	8082      	strh	r2, [r0, #4]
 800bc46:	80c4      	strh	r4, [r0, #6]
 800bc48:	e7e2      	b.n	800bc10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800bc4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800bc4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc4e:	b09f      	sub	sp, #124	; 0x7c
 800bc50:	9116      	str	r1, [sp, #88]	; 0x58
 800bc52:	9317      	str	r3, [sp, #92]	; 0x5c
 800bc54:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bc56:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bc58:	8809      	ldrh	r1, [r1, #0]
 800bc5a:	889b      	ldrh	r3, [r3, #4]
 800bc5c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bc60:	9212      	str	r2, [sp, #72]	; 0x48
 800bc62:	440b      	add	r3, r1
 800bc64:	b21b      	sxth	r3, r3
 800bc66:	9310      	str	r3, [sp, #64]	; 0x40
 800bc68:	f8d8 3000 	ldr.w	r3, [r8]
 800bc6c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800bc70:	7a59      	ldrb	r1, [r3, #9]
 800bc72:	7a1b      	ldrb	r3, [r3, #8]
 800bc74:	9315      	str	r3, [sp, #84]	; 0x54
 800bc76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bc78:	9011      	str	r0, [sp, #68]	; 0x44
 800bc7a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bc7e:	9114      	str	r1, [sp, #80]	; 0x50
 800bc80:	f9b3 5000 	ldrsh.w	r5, [r3]
 800bc84:	2a00      	cmp	r2, #0
 800bc86:	d067      	beq.n	800bd58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800bc88:	f898 3010 	ldrb.w	r3, [r8, #16]
 800bc8c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800bc8e:	2b04      	cmp	r3, #4
 800bc90:	bf14      	ite	ne
 800bc92:	2301      	movne	r3, #1
 800bc94:	2302      	moveq	r3, #2
 800bc96:	4413      	add	r3, r2
 800bc98:	f04f 0900 	mov.w	r9, #0
 800bc9c:	930f      	str	r3, [sp, #60]	; 0x3c
 800bc9e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bca2:	464c      	mov	r4, r9
 800bca4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800bca8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bcac:	4293      	cmp	r3, r2
 800bcae:	f280 808c 	bge.w	800bdca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bcb2:	2300      	movs	r3, #0
 800bcb4:	931c      	str	r3, [sp, #112]	; 0x70
 800bcb6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bcba:	429c      	cmp	r4, r3
 800bcbc:	d006      	beq.n	800bccc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800bcbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bcc0:	f242 020b 	movw	r2, #8203	; 0x200b
 800bcc4:	4294      	cmp	r4, r2
 800bcc6:	bf18      	it	ne
 800bcc8:	4623      	movne	r3, r4
 800bcca:	930d      	str	r3, [sp, #52]	; 0x34
 800bccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bcce:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bcd0:	f8d8 2000 	ldr.w	r2, [r8]
 800bcd4:	428b      	cmp	r3, r1
 800bcd6:	db41      	blt.n	800bd5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800bcd8:	6813      	ldr	r3, [r2, #0]
 800bcda:	4610      	mov	r0, r2
 800bcdc:	695b      	ldr	r3, [r3, #20]
 800bcde:	4798      	blx	r3
 800bce0:	4604      	mov	r4, r0
 800bce2:	f8d8 0000 	ldr.w	r0, [r8]
 800bce6:	6803      	ldr	r3, [r0, #0]
 800bce8:	aa1d      	add	r2, sp, #116	; 0x74
 800bcea:	689e      	ldr	r6, [r3, #8]
 800bcec:	4621      	mov	r1, r4
 800bcee:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bcf2:	47b0      	blx	r6
 800bcf4:	901c      	str	r0, [sp, #112]	; 0x70
 800bcf6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bcfa:	429c      	cmp	r4, r3
 800bcfc:	f000 80e9 	beq.w	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd00:	f242 030b 	movw	r3, #8203	; 0x200b
 800bd04:	429c      	cmp	r4, r3
 800bd06:	f000 80e4 	beq.w	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd0a:	2c00      	cmp	r4, #0
 800bd0c:	f000 80f6 	beq.w	800befc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bd10:	2c0a      	cmp	r4, #10
 800bd12:	d060      	beq.n	800bdd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bd14:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bd16:	b36a      	cbz	r2, 800bd74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800bd18:	8894      	ldrh	r4, [r2, #4]
 800bd1a:	f1bb 0f00 	cmp.w	fp, #0
 800bd1e:	d03b      	beq.n	800bd98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800bd20:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bd24:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bd28:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bd2c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bd30:	f1bb 0f01 	cmp.w	fp, #1
 800bd34:	ea49 0903 	orr.w	r9, r9, r3
 800bd38:	d134      	bne.n	800bda4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800bd3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd3c:	eba5 0509 	sub.w	r5, r5, r9
 800bd40:	2b00      	cmp	r3, #0
 800bd42:	d14f      	bne.n	800bde4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bd44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bd46:	eb09 0305 	add.w	r3, r9, r5
 800bd4a:	4413      	add	r3, r2
 800bd4c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bd4e:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bd52:	4293      	cmp	r3, r2
 800bd54:	da51      	bge.n	800bdfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800bd56:	e038      	b.n	800bdca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bd58:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bd5a:	e79d      	b.n	800bc98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800bd5c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bd60:	9301      	str	r3, [sp, #4]
 800bd62:	ab1d      	add	r3, sp, #116	; 0x74
 800bd64:	9300      	str	r3, [sp, #0]
 800bd66:	4659      	mov	r1, fp
 800bd68:	ab1c      	add	r3, sp, #112	; 0x70
 800bd6a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bd6c:	f002 fdd6 	bl	800e91c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bd70:	4604      	mov	r4, r0
 800bd72:	e7c0      	b.n	800bcf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800bd74:	f8d8 0000 	ldr.w	r0, [r8]
 800bd78:	6803      	ldr	r3, [r0, #0]
 800bd7a:	691b      	ldr	r3, [r3, #16]
 800bd7c:	4798      	blx	r3
 800bd7e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bd82:	4298      	cmp	r0, r3
 800bd84:	f000 80a5 	beq.w	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd88:	f242 030b 	movw	r3, #8203	; 0x200b
 800bd8c:	4298      	cmp	r0, r3
 800bd8e:	f000 80a0 	beq.w	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd92:	f1bb 0f00 	cmp.w	fp, #0
 800bd96:	d100      	bne.n	800bd9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800bd98:	444d      	add	r5, r9
 800bd9a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bd9c:	2a00      	cmp	r2, #0
 800bd9e:	d1bf      	bne.n	800bd20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800bda0:	4691      	mov	r9, r2
 800bda2:	e096      	b.n	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bda4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bda6:	2b00      	cmp	r3, #0
 800bda8:	f000 80aa 	beq.w	800bf00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800bdac:	f1bb 0f00 	cmp.w	fp, #0
 800bdb0:	d118      	bne.n	800bde4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bdb2:	f8d8 0000 	ldr.w	r0, [r8]
 800bdb6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bdb8:	6803      	ldr	r3, [r0, #0]
 800bdba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bdbc:	4798      	blx	r3
 800bdbe:	4405      	add	r5, r0
 800bdc0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bdc2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bdc4:	1aeb      	subs	r3, r5, r3
 800bdc6:	4293      	cmp	r3, r2
 800bdc8:	dd17      	ble.n	800bdfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800bdca:	2c00      	cmp	r4, #0
 800bdcc:	f000 8096 	beq.w	800befc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bdd0:	2c0a      	cmp	r4, #10
 800bdd2:	f040 8084 	bne.w	800bede <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800bdd6:	240a      	movs	r4, #10
 800bdd8:	fab4 f084 	clz	r0, r4
 800bddc:	0940      	lsrs	r0, r0, #5
 800bdde:	b01f      	add	sp, #124	; 0x7c
 800bde0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bde4:	f8d8 0000 	ldr.w	r0, [r8]
 800bde8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bdea:	6803      	ldr	r3, [r0, #0]
 800bdec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bdee:	4798      	blx	r3
 800bdf0:	f1bb 0f01 	cmp.w	fp, #1
 800bdf4:	eba5 0500 	sub.w	r5, r5, r0
 800bdf8:	d0a4      	beq.n	800bd44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800bdfa:	981c      	ldr	r0, [sp, #112]	; 0x70
 800bdfc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bdfe:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800be02:	f9b3 6000 	ldrsh.w	r6, [r3]
 800be06:	7b43      	ldrb	r3, [r0, #13]
 800be08:	015b      	lsls	r3, r3, #5
 800be0a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800be0e:	7983      	ldrb	r3, [r0, #6]
 800be10:	4429      	add	r1, r5
 800be12:	4313      	orrs	r3, r2
 800be14:	440b      	add	r3, r1
 800be16:	42b3      	cmp	r3, r6
 800be18:	db5b      	blt.n	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be1c:	4299      	cmp	r1, r3
 800be1e:	da58      	bge.n	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be20:	f8d8 0000 	ldr.w	r0, [r8]
 800be24:	6803      	ldr	r3, [r0, #0]
 800be26:	42ae      	cmp	r6, r5
 800be28:	bfc8      	it	gt
 800be2a:	1b76      	subgt	r6, r6, r5
 800be2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be2e:	bfcc      	ite	gt
 800be30:	b2b6      	uxthgt	r6, r6
 800be32:	2600      	movle	r6, #0
 800be34:	4798      	blx	r3
 800be36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800be38:	7b5a      	ldrb	r2, [r3, #13]
 800be3a:	00d1      	lsls	r1, r2, #3
 800be3c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800be40:	7a19      	ldrb	r1, [r3, #8]
 800be42:	4339      	orrs	r1, r7
 800be44:	0657      	lsls	r7, r2, #25
 800be46:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800be48:	bf44      	itt	mi
 800be4a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800be4e:	b209      	sxthmi	r1, r1
 800be50:	19c7      	adds	r7, r0, r7
 800be52:	1a7f      	subs	r7, r7, r1
 800be54:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800be56:	b2bf      	uxth	r7, r7
 800be58:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800be5c:	fa0f fa87 	sxth.w	sl, r7
 800be60:	4551      	cmp	r1, sl
 800be62:	dd3a      	ble.n	800beda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800be64:	0112      	lsls	r2, r2, #4
 800be66:	79d8      	ldrb	r0, [r3, #7]
 800be68:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800be6c:	4302      	orrs	r2, r0
 800be6e:	4492      	add	sl, r2
 800be70:	4551      	cmp	r1, sl
 800be72:	dc2e      	bgt.n	800bed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be74:	1bcf      	subs	r7, r1, r7
 800be76:	b2bf      	uxth	r7, r7
 800be78:	468a      	mov	sl, r1
 800be7a:	9319      	str	r3, [sp, #100]	; 0x64
 800be7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800be7e:	f8d8 0000 	ldr.w	r0, [r8]
 800be82:	681a      	ldr	r2, [r3, #0]
 800be84:	6801      	ldr	r1, [r0, #0]
 800be86:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800be88:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800be8a:	9313      	str	r3, [sp, #76]	; 0x4c
 800be8c:	9218      	str	r2, [sp, #96]	; 0x60
 800be8e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800be90:	4788      	blx	r1
 800be92:	f898 1006 	ldrb.w	r1, [r8, #6]
 800be96:	910b      	str	r1, [sp, #44]	; 0x2c
 800be98:	f898 100e 	ldrb.w	r1, [r8, #14]
 800be9c:	910a      	str	r1, [sp, #40]	; 0x28
 800be9e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800bea2:	9109      	str	r1, [sp, #36]	; 0x24
 800bea4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bea6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800beaa:	9305      	str	r3, [sp, #20]
 800beac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800beae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800beb0:	9206      	str	r2, [sp, #24]
 800beb2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800beb6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800beba:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bebe:	442e      	add	r6, r5
 800bec0:	b236      	sxth	r6, r6
 800bec2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bec4:	9600      	str	r6, [sp, #0]
 800bec6:	681a      	ldr	r2, [r3, #0]
 800bec8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800beca:	685b      	ldr	r3, [r3, #4]
 800becc:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bece:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800bed0:	47b0      	blx	r6
 800bed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bed4:	3301      	adds	r3, #1
 800bed6:	930e      	str	r3, [sp, #56]	; 0x38
 800bed8:	e6e6      	b.n	800bca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800beda:	2700      	movs	r7, #0
 800bedc:	e7cd      	b.n	800be7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800bede:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800bee0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bee2:	3501      	adds	r5, #1
 800bee4:	429d      	cmp	r5, r3
 800bee6:	f6bf af77 	bge.w	800bdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800beea:	4659      	mov	r1, fp
 800beec:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800beee:	f7f6 fe57 	bl	8002ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bef2:	4604      	mov	r4, r0
 800bef4:	b110      	cbz	r0, 800befc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bef6:	280a      	cmp	r0, #10
 800bef8:	d1f2      	bne.n	800bee0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800befa:	e76c      	b.n	800bdd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800befc:	2400      	movs	r4, #0
 800befe:	e76b      	b.n	800bdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800bf00:	f1bb 0f00 	cmp.w	fp, #0
 800bf04:	f43f af5c 	beq.w	800bdc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800bf08:	e777      	b.n	800bdfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800bf0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800bf0a:	b530      	push	{r4, r5, lr}
 800bf0c:	8a44      	ldrh	r4, [r0, #18]
 800bf0e:	8ac5      	ldrh	r5, [r0, #22]
 800bf10:	82c3      	strh	r3, [r0, #22]
 800bf12:	442c      	add	r4, r5
 800bf14:	1ae4      	subs	r4, r4, r3
 800bf16:	8244      	strh	r4, [r0, #18]
 800bf18:	8b03      	ldrh	r3, [r0, #24]
 800bf1a:	8a84      	ldrh	r4, [r0, #20]
 800bf1c:	4422      	add	r2, r4
 800bf1e:	440c      	add	r4, r1
 800bf20:	1a59      	subs	r1, r3, r1
 800bf22:	8342      	strh	r2, [r0, #26]
 800bf24:	8284      	strh	r4, [r0, #20]
 800bf26:	8301      	strh	r1, [r0, #24]
 800bf28:	bd30      	pop	{r4, r5, pc}

0800bf2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800bf2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf2e:	7a43      	ldrb	r3, [r0, #9]
 800bf30:	1eda      	subs	r2, r3, #3
 800bf32:	b087      	sub	sp, #28
 800bf34:	4604      	mov	r4, r0
 800bf36:	b2d2      	uxtb	r2, r2
 800bf38:	460f      	mov	r7, r1
 800bf3a:	2900      	cmp	r1, #0
 800bf3c:	d036      	beq.n	800bfac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800bf3e:	2a01      	cmp	r2, #1
 800bf40:	d932      	bls.n	800bfa8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800bf42:	1e58      	subs	r0, r3, #1
 800bf44:	f1d0 0b00 	rsbs	fp, r0, #0
 800bf48:	eb4b 0b00 	adc.w	fp, fp, r0
 800bf4c:	1e99      	subs	r1, r3, #2
 800bf4e:	424b      	negs	r3, r1
 800bf50:	414b      	adcs	r3, r1
 800bf52:	9303      	str	r3, [sp, #12]
 800bf54:	2300      	movs	r3, #0
 800bf56:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bf5a:	2500      	movs	r5, #0
 800bf5c:	8265      	strh	r5, [r4, #18]
 800bf5e:	82a5      	strh	r5, [r4, #20]
 800bf60:	46a9      	mov	r9, r5
 800bf62:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800bf66:	2300      	movs	r3, #0
 800bf68:	9305      	str	r3, [sp, #20]
 800bf6a:	8823      	ldrh	r3, [r4, #0]
 800bf6c:	2b20      	cmp	r3, #32
 800bf6e:	d02b      	beq.n	800bfc8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800bf70:	eba3 020a 	sub.w	r2, r3, sl
 800bf74:	4256      	negs	r6, r2
 800bf76:	4156      	adcs	r6, r2
 800bf78:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800bf7c:	4293      	cmp	r3, r2
 800bf7e:	d004      	beq.n	800bf8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bf80:	4553      	cmp	r3, sl
 800bf82:	bf16      	itet	ne
 800bf84:	4699      	movne	r9, r3
 800bf86:	2601      	moveq	r6, #1
 800bf88:	2600      	movne	r6, #0
 800bf8a:	ab05      	add	r3, sp, #20
 800bf8c:	68e2      	ldr	r2, [r4, #12]
 800bf8e:	7a21      	ldrb	r1, [r4, #8]
 800bf90:	6860      	ldr	r0, [r4, #4]
 800bf92:	f002 fc6b 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bf96:	8020      	strh	r0, [r4, #0]
 800bf98:	b9c8      	cbnz	r0, 800bfce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800bf9a:	8b22      	ldrh	r2, [r4, #24]
 800bf9c:	2300      	movs	r3, #0
 800bf9e:	4611      	mov	r1, r2
 800bfa0:	4620      	mov	r0, r4
 800bfa2:	f7ff ffb2 	bl	800bf0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bfa6:	e066      	b.n	800c076 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bfa8:	468b      	mov	fp, r1
 800bfaa:	e7cf      	b.n	800bf4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800bfac:	3b01      	subs	r3, #1
 800bfae:	2a01      	cmp	r2, #1
 800bfb0:	bf8c      	ite	hi
 800bfb2:	2200      	movhi	r2, #0
 800bfb4:	2201      	movls	r2, #1
 800bfb6:	2b01      	cmp	r3, #1
 800bfb8:	bf8c      	ite	hi
 800bfba:	2300      	movhi	r3, #0
 800bfbc:	2301      	movls	r3, #1
 800bfbe:	9202      	str	r2, [sp, #8]
 800bfc0:	9301      	str	r3, [sp, #4]
 800bfc2:	9103      	str	r1, [sp, #12]
 800bfc4:	468b      	mov	fp, r1
 800bfc6:	e7c8      	b.n	800bf5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800bfc8:	4699      	mov	r9, r3
 800bfca:	2601      	movs	r6, #1
 800bfcc:	e7dd      	b.n	800bf8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bfce:	8ae3      	ldrh	r3, [r4, #22]
 800bfd0:	280a      	cmp	r0, #10
 800bfd2:	f103 0301 	add.w	r3, r3, #1
 800bfd6:	82e3      	strh	r3, [r4, #22]
 800bfd8:	d0df      	beq.n	800bf9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800bfda:	9a05      	ldr	r2, [sp, #20]
 800bfdc:	bb42      	cbnz	r2, 800c030 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800bfde:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bfe2:	4298      	cmp	r0, r3
 800bfe4:	d001      	beq.n	800bfea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bfe6:	4550      	cmp	r0, sl
 800bfe8:	d1bd      	bne.n	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bfea:	8823      	ldrh	r3, [r4, #0]
 800bfec:	8b21      	ldrh	r1, [r4, #24]
 800bfee:	2b20      	cmp	r3, #32
 800bff0:	d001      	beq.n	800bff6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800bff2:	4553      	cmp	r3, sl
 800bff4:	d131      	bne.n	800c05a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800bff6:	2e00      	cmp	r6, #0
 800bff8:	bf0a      	itet	eq
 800bffa:	460d      	moveq	r5, r1
 800bffc:	4630      	movne	r0, r6
 800bffe:	2001      	moveq	r0, #1
 800c000:	440a      	add	r2, r1
 800c002:	8aa3      	ldrh	r3, [r4, #20]
 800c004:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c008:	b292      	uxth	r2, r2
 800c00a:	8322      	strh	r2, [r4, #24]
 800c00c:	4413      	add	r3, r2
 800c00e:	2f00      	cmp	r7, #0
 800c010:	d03a      	beq.n	800c088 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c012:	f1bb 0f00 	cmp.w	fp, #0
 800c016:	d102      	bne.n	800c01e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c018:	9903      	ldr	r1, [sp, #12]
 800c01a:	b301      	cbz	r1, 800c05e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c01c:	b1f8      	cbz	r0, 800c05e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c01e:	8ba1      	ldrh	r1, [r4, #28]
 800c020:	4419      	add	r1, r3
 800c022:	458c      	cmp	ip, r1
 800c024:	da2a      	bge.n	800c07c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c026:	8a61      	ldrh	r1, [r4, #18]
 800c028:	b341      	cbz	r1, 800c07c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c02a:	4563      	cmp	r3, ip
 800c02c:	dd9b      	ble.n	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c02e:	e01c      	b.n	800c06a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c030:	8893      	ldrh	r3, [r2, #4]
 800c032:	8023      	strh	r3, [r4, #0]
 800c034:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c038:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c03c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c040:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c044:	ea48 0800 	orr.w	r8, r8, r0
 800c048:	68e0      	ldr	r0, [r4, #12]
 800c04a:	6803      	ldr	r3, [r0, #0]
 800c04c:	4649      	mov	r1, r9
 800c04e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c050:	4798      	blx	r3
 800c052:	eb08 0200 	add.w	r2, r8, r0
 800c056:	b292      	uxth	r2, r2
 800c058:	e7c7      	b.n	800bfea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c05a:	2000      	movs	r0, #0
 800c05c:	e7d0      	b.n	800c000 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c05e:	4563      	cmp	r3, ip
 800c060:	dd81      	ble.n	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c062:	8a63      	ldrh	r3, [r4, #18]
 800c064:	2b00      	cmp	r3, #0
 800c066:	f43f af7e 	beq.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c06a:	2301      	movs	r3, #1
 800c06c:	77a3      	strb	r3, [r4, #30]
 800c06e:	8ba2      	ldrh	r2, [r4, #28]
 800c070:	8b63      	ldrh	r3, [r4, #26]
 800c072:	4413      	add	r3, r2
 800c074:	8363      	strh	r3, [r4, #26]
 800c076:	b007      	add	sp, #28
 800c078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c07c:	2300      	movs	r3, #0
 800c07e:	4611      	mov	r1, r2
 800c080:	4620      	mov	r0, r4
 800c082:	f7ff ff42 	bl	800bf0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c086:	e76e      	b.n	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c088:	4563      	cmp	r3, ip
 800c08a:	dd14      	ble.n	800c0b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c08c:	9b02      	ldr	r3, [sp, #8]
 800c08e:	b113      	cbz	r3, 800c096 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c090:	2301      	movs	r3, #1
 800c092:	460a      	mov	r2, r1
 800c094:	e783      	b.n	800bf9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c096:	9b01      	ldr	r3, [sp, #4]
 800c098:	2b00      	cmp	r3, #0
 800c09a:	f43f af64 	beq.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c09e:	2800      	cmp	r0, #0
 800c0a0:	f47f af61 	bne.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0a4:	b116      	cbz	r6, 800c0ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c0a6:	2301      	movs	r3, #1
 800c0a8:	462a      	mov	r2, r5
 800c0aa:	e779      	b.n	800bfa0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c0ac:	8a63      	ldrh	r3, [r4, #18]
 800c0ae:	2b00      	cmp	r3, #0
 800c0b0:	f43f af59 	beq.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0b4:	e7df      	b.n	800c076 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c0b6:	2800      	cmp	r0, #0
 800c0b8:	f47f af55 	bne.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0bc:	2e00      	cmp	r6, #0
 800c0be:	f43f af52 	beq.w	800bf66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0c2:	2301      	movs	r3, #1
 800c0c4:	462a      	mov	r2, r5
 800c0c6:	e7db      	b.n	800c080 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c0c8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c0c8:	b530      	push	{r4, r5, lr}
 800c0ca:	4605      	mov	r5, r0
 800c0cc:	b08b      	sub	sp, #44	; 0x2c
 800c0ce:	b191      	cbz	r1, 800c0f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c0d0:	e9cd 3100 	strd	r3, r1, [sp]
 800c0d4:	4613      	mov	r3, r2
 800c0d6:	4601      	mov	r1, r0
 800c0d8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c0dc:	a802      	add	r0, sp, #8
 800c0de:	f7ff fd0d 	bl	800bafc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c0e2:	2401      	movs	r4, #1
 800c0e4:	2100      	movs	r1, #0
 800c0e6:	a802      	add	r0, sp, #8
 800c0e8:	f7ff ff1f 	bl	800bf2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c0ec:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c0f0:	b163      	cbz	r3, 800c10c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c0f2:	3401      	adds	r4, #1
 800c0f4:	e7f6      	b.n	800c0e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c0f6:	f002 fcb3 	bl	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c0fa:	2401      	movs	r4, #1
 800c0fc:	280a      	cmp	r0, #10
 800c0fe:	4628      	mov	r0, r5
 800c100:	bf08      	it	eq
 800c102:	3401      	addeq	r4, #1
 800c104:	f002 fcac 	bl	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c108:	2800      	cmp	r0, #0
 800c10a:	d1f7      	bne.n	800c0fc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c10c:	b2a0      	uxth	r0, r4
 800c10e:	b00b      	add	sp, #44	; 0x2c
 800c110:	bd30      	pop	{r4, r5, pc}

0800c112 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c112:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c116:	b0e5      	sub	sp, #404	; 0x194
 800c118:	4689      	mov	r9, r1
 800c11a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800c11e:	900a      	str	r0, [sp, #40]	; 0x28
 800c120:	461c      	mov	r4, r3
 800c122:	f1ba 0f00 	cmp.w	sl, #0
 800c126:	f000 80b4 	beq.w	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c12a:	681b      	ldr	r3, [r3, #0]
 800c12c:	2b00      	cmp	r3, #0
 800c12e:	f000 80b0 	beq.w	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c132:	7ba3      	ldrb	r3, [r4, #14]
 800c134:	2b00      	cmp	r3, #0
 800c136:	f000 80ac 	beq.w	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c13a:	6810      	ldr	r0, [r2, #0]
 800c13c:	6851      	ldr	r1, [r2, #4]
 800c13e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c142:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800c146:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800c14a:	4643      	mov	r3, r8
 800c14c:	c303      	stmia	r3!, {r0, r1}
 800c14e:	2500      	movs	r5, #0
 800c150:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c154:	79a2      	ldrb	r2, [r4, #6]
 800c156:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c15a:	a90f      	add	r1, sp, #60	; 0x3c
 800c15c:	4640      	mov	r0, r8
 800c15e:	950f      	str	r5, [sp, #60]	; 0x3c
 800c160:	f7ff fd42 	bl	800bbe8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c164:	a90f      	add	r1, sp, #60	; 0x3c
 800c166:	4608      	mov	r0, r1
 800c168:	79a2      	ldrb	r2, [r4, #6]
 800c16a:	af19      	add	r7, sp, #100	; 0x64
 800c16c:	f7ff fd3c 	bl	800bbe8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c170:	4638      	mov	r0, r7
 800c172:	f002 f829 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800c176:	6820      	ldr	r0, [r4, #0]
 800c178:	6803      	ldr	r3, [r0, #0]
 800c17a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c17c:	4798      	blx	r3
 800c17e:	4606      	mov	r6, r0
 800c180:	6820      	ldr	r0, [r4, #0]
 800c182:	6803      	ldr	r3, [r0, #0]
 800c184:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c186:	4798      	blx	r3
 800c188:	4633      	mov	r3, r6
 800c18a:	9000      	str	r0, [sp, #0]
 800c18c:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c18e:	4651      	mov	r1, sl
 800c190:	4638      	mov	r0, r7
 800c192:	f002 f86c 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c196:	6820      	ldr	r0, [r4, #0]
 800c198:	7923      	ldrb	r3, [r4, #4]
 800c19a:	9308      	str	r3, [sp, #32]
 800c19c:	6803      	ldr	r3, [r0, #0]
 800c19e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c1a0:	4798      	blx	r3
 800c1a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c1a6:	181e      	adds	r6, r3, r0
 800c1a8:	42ae      	cmp	r6, r5
 800c1aa:	dd06      	ble.n	800c1ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800c1ac:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c1b0:	4282      	cmp	r2, r0
 800c1b2:	bfa4      	itt	ge
 800c1b4:	189d      	addge	r5, r3, r2
 800c1b6:	fb95 f5f6 	sdivge	r5, r5, r6
 800c1ba:	a832      	add	r0, sp, #200	; 0xc8
 800c1bc:	f002 f804 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800c1c0:	7c23      	ldrb	r3, [r4, #16]
 800c1c2:	b17b      	cbz	r3, 800c1e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800c1c4:	6820      	ldr	r0, [r4, #0]
 800c1c6:	6803      	ldr	r3, [r0, #0]
 800c1c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1ca:	4798      	blx	r3
 800c1cc:	4683      	mov	fp, r0
 800c1ce:	6820      	ldr	r0, [r4, #0]
 800c1d0:	6803      	ldr	r3, [r0, #0]
 800c1d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c1d4:	4798      	blx	r3
 800c1d6:	465b      	mov	r3, fp
 800c1d8:	9000      	str	r0, [sp, #0]
 800c1da:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c1dc:	4651      	mov	r1, sl
 800c1de:	a832      	add	r0, sp, #200	; 0xc8
 800c1e0:	f002 f845 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c1e4:	7be1      	ldrb	r1, [r4, #15]
 800c1e6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c1ea:	7963      	ldrb	r3, [r4, #5]
 800c1ec:	1a52      	subs	r2, r2, r1
 800c1ee:	7c21      	ldrb	r1, [r4, #16]
 800c1f0:	9101      	str	r1, [sp, #4]
 800c1f2:	6821      	ldr	r1, [r4, #0]
 800c1f4:	9100      	str	r1, [sp, #0]
 800c1f6:	b292      	uxth	r2, r2
 800c1f8:	a932      	add	r1, sp, #200	; 0xc8
 800c1fa:	a811      	add	r0, sp, #68	; 0x44
 800c1fc:	f7ff fc7e 	bl	800bafc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c200:	7c23      	ldrb	r3, [r4, #16]
 800c202:	b9bb      	cbnz	r3, 800c234 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800c204:	fa1f fa86 	uxth.w	sl, r6
 800c208:	2d00      	cmp	r5, #0
 800c20a:	dd45      	ble.n	800c298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c20c:	4638      	mov	r0, r7
 800c20e:	f002 fc27 	bl	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c212:	2800      	cmp	r0, #0
 800c214:	d03d      	beq.n	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c216:	280a      	cmp	r0, #10
 800c218:	d1f6      	bne.n	800c208 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c21a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c21e:	4453      	add	r3, sl
 800c220:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c224:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c228:	eba3 030a 	sub.w	r3, r3, sl
 800c22c:	3d01      	subs	r5, #1
 800c22e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c232:	e7e9      	b.n	800c208 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c234:	0073      	lsls	r3, r6, #1
 800c236:	9309      	str	r3, [sp, #36]	; 0x24
 800c238:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c23c:	fa1f fa86 	uxth.w	sl, r6
 800c240:	2d00      	cmp	r5, #0
 800c242:	dd29      	ble.n	800c298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c244:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c248:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c24a:	428b      	cmp	r3, r1
 800c24c:	bfd4      	ite	le
 800c24e:	2100      	movle	r1, #0
 800c250:	2101      	movgt	r1, #1
 800c252:	a811      	add	r0, sp, #68	; 0x44
 800c254:	f7ff fe69 	bl	800bf2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c258:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800c25c:	3b01      	subs	r3, #1
 800c25e:	b29b      	uxth	r3, r3
 800c260:	455b      	cmp	r3, fp
 800c262:	930b      	str	r3, [sp, #44]	; 0x2c
 800c264:	d005      	beq.n	800c272 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800c266:	7961      	ldrb	r1, [r4, #5]
 800c268:	4638      	mov	r0, r7
 800c26a:	f7f6 fc99 	bl	8002ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c26e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c270:	e7f4      	b.n	800c25c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800c272:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c276:	4453      	add	r3, sl
 800c278:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c27c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c280:	eba3 030a 	sub.w	r3, r3, sl
 800c284:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c288:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c28c:	3d01      	subs	r5, #1
 800c28e:	2b00      	cmp	r3, #0
 800c290:	d1d6      	bne.n	800c240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800c292:	b065      	add	sp, #404	; 0x194
 800c294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c298:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c29c:	ad4b      	add	r5, sp, #300	; 0x12c
 800c29e:	f04f 0b00 	mov.w	fp, #0
 800c2a2:	7c23      	ldrb	r3, [r4, #16]
 800c2a4:	2b00      	cmp	r3, #0
 800c2a6:	d067      	beq.n	800c378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800c2a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c2ac:	458a      	cmp	sl, r1
 800c2ae:	bfd4      	ite	le
 800c2b0:	2100      	movle	r1, #0
 800c2b2:	2101      	movgt	r1, #1
 800c2b4:	a811      	add	r0, sp, #68	; 0x44
 800c2b6:	f7ff fe38 	bl	800bf2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c2ba:	9b08      	ldr	r3, [sp, #32]
 800c2bc:	2b00      	cmp	r3, #0
 800c2be:	d056      	beq.n	800c36e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c2c0:	7c23      	ldrb	r3, [r4, #16]
 800c2c2:	9309      	str	r3, [sp, #36]	; 0x24
 800c2c4:	2264      	movs	r2, #100	; 0x64
 800c2c6:	4639      	mov	r1, r7
 800c2c8:	4628      	mov	r0, r5
 800c2ca:	f00f fc87 	bl	801bbdc <memcpy>
 800c2ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2d0:	2b00      	cmp	r3, #0
 800c2d2:	d059      	beq.n	800c388 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x276>
 800c2d4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800c2d8:	7922      	ldrb	r2, [r4, #4]
 800c2da:	2a01      	cmp	r2, #1
 800c2dc:	d13d      	bne.n	800c35a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c2de:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800c2e2:	1ac0      	subs	r0, r0, r3
 800c2e4:	2302      	movs	r3, #2
 800c2e6:	fb90 f0f3 	sdiv	r0, r0, r3
 800c2ea:	b200      	sxth	r0, r0
 800c2ec:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c2f0:	4418      	add	r0, r3
 800c2f2:	7c23      	ldrb	r3, [r4, #16]
 800c2f4:	f8ad 012c 	strh.w	r0, [sp, #300]	; 0x12c
 800c2f8:	2b00      	cmp	r3, #0
 800c2fa:	d03a      	beq.n	800c372 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800c2fc:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800c300:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800c304:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800c308:	9500      	str	r5, [sp, #0]
 800c30a:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c30e:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c312:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c316:	464a      	mov	r2, r9
 800c318:	2100      	movs	r1, #0
 800c31a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c31c:	f7ff fc95 	bl	800bc4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c320:	2800      	cmp	r0, #0
 800c322:	d1b6      	bne.n	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c324:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c328:	b2b2      	uxth	r2, r6
 800c32a:	4611      	mov	r1, r2
 800c32c:	4413      	add	r3, r2
 800c32e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800c332:	1a52      	subs	r2, r2, r1
 800c334:	7c21      	ldrb	r1, [r4, #16]
 800c336:	b21b      	sxth	r3, r3
 800c338:	b212      	sxth	r2, r2
 800c33a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c33e:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800c342:	b109      	cbz	r1, 800c348 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 800c344:	42b2      	cmp	r2, r6
 800c346:	dba4      	blt.n	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c348:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c34c:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c350:	440a      	add	r2, r1
 800c352:	b212      	sxth	r2, r2
 800c354:	4293      	cmp	r3, r2
 800c356:	dda4      	ble.n	800c2a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x190>
 800c358:	e79b      	b.n	800c292 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c35a:	2a02      	cmp	r2, #2
 800c35c:	d105      	bne.n	800c36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c35e:	7be2      	ldrb	r2, [r4, #15]
 800c360:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800c364:	1a80      	subs	r0, r0, r2
 800c366:	1ac0      	subs	r0, r0, r3
 800c368:	e7bf      	b.n	800c2ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d8>
 800c36a:	2000      	movs	r0, #0
 800c36c:	e7be      	b.n	800c2ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c36e:	7be0      	ldrb	r0, [r4, #15]
 800c370:	e7bc      	b.n	800c2ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c372:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c376:	e7c3      	b.n	800c300 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800c378:	9b08      	ldr	r3, [sp, #32]
 800c37a:	2b00      	cmp	r3, #0
 800c37c:	d0f7      	beq.n	800c36e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c37e:	2264      	movs	r2, #100	; 0x64
 800c380:	4639      	mov	r1, r7
 800c382:	4628      	mov	r0, r5
 800c384:	f00f fc2a 	bl	801bbdc <memcpy>
 800c388:	2300      	movs	r3, #0
 800c38a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c38e:	6821      	ldr	r1, [r4, #0]
 800c390:	4628      	mov	r0, r5
 800c392:	f7ff fbed 	bl	800bb70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c396:	b203      	sxth	r3, r0
 800c398:	e79e      	b.n	800c2d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>

0800c39a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c39a:	b510      	push	{r4, lr}
 800c39c:	2b02      	cmp	r3, #2
 800c39e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c3a2:	d00b      	beq.n	800c3bc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c3a4:	2b03      	cmp	r3, #3
 800c3a6:	d00e      	beq.n	800c3c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c3a8:	2b01      	cmp	r3, #1
 800c3aa:	d001      	beq.n	800c3b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c3ac:	1860      	adds	r0, r4, r1
 800c3ae:	bd10      	pop	{r4, pc}
 800c3b0:	8880      	ldrh	r0, [r0, #4]
 800c3b2:	4420      	add	r0, r4
 800c3b4:	b200      	sxth	r0, r0
 800c3b6:	1a80      	subs	r0, r0, r2
 800c3b8:	3801      	subs	r0, #1
 800c3ba:	e7f8      	b.n	800c3ae <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c3bc:	8880      	ldrh	r0, [r0, #4]
 800c3be:	4420      	add	r0, r4
 800c3c0:	b200      	sxth	r0, r0
 800c3c2:	1a40      	subs	r0, r0, r1
 800c3c4:	e7f8      	b.n	800c3b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c3c6:	18a0      	adds	r0, r4, r2
 800c3c8:	e7f1      	b.n	800c3ae <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c3ca <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c3ca:	b510      	push	{r4, lr}
 800c3cc:	2b02      	cmp	r3, #2
 800c3ce:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c3d2:	d006      	beq.n	800c3e2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c3d4:	2b03      	cmp	r3, #3
 800c3d6:	d00a      	beq.n	800c3ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c3d8:	2b01      	cmp	r3, #1
 800c3da:	bf14      	ite	ne
 800c3dc:	18a0      	addne	r0, r4, r2
 800c3de:	1860      	addeq	r0, r4, r1
 800c3e0:	bd10      	pop	{r4, pc}
 800c3e2:	88c0      	ldrh	r0, [r0, #6]
 800c3e4:	4420      	add	r0, r4
 800c3e6:	b200      	sxth	r0, r0
 800c3e8:	1a80      	subs	r0, r0, r2
 800c3ea:	3801      	subs	r0, #1
 800c3ec:	e7f8      	b.n	800c3e0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c3ee:	88c0      	ldrh	r0, [r0, #6]
 800c3f0:	4420      	add	r0, r4
 800c3f2:	b200      	sxth	r0, r0
 800c3f4:	1a40      	subs	r0, r0, r1
 800c3f6:	e7f8      	b.n	800c3ea <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800c3f8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c3f8:	4b01      	ldr	r3, [pc, #4]	; (800c400 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c3fa:	2200      	movs	r2, #0
 800c3fc:	601a      	str	r2, [r3, #0]
 800c3fe:	4770      	bx	lr
 800c400:	2000a2c0 	.word	0x2000a2c0

0800c404 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c404:	4603      	mov	r3, r0
 800c406:	b1c8      	cbz	r0, 800c43c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c408:	0c02      	lsrs	r2, r0, #16
 800c40a:	0412      	lsls	r2, r2, #16
 800c40c:	b9a2      	cbnz	r2, 800c438 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c40e:	0403      	lsls	r3, r0, #16
 800c410:	2010      	movs	r0, #16
 800c412:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c416:	bf04      	itt	eq
 800c418:	021b      	lsleq	r3, r3, #8
 800c41a:	3008      	addeq	r0, #8
 800c41c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c420:	bf04      	itt	eq
 800c422:	011b      	lsleq	r3, r3, #4
 800c424:	3004      	addeq	r0, #4
 800c426:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c42a:	bf04      	itt	eq
 800c42c:	009b      	lsleq	r3, r3, #2
 800c42e:	3002      	addeq	r0, #2
 800c430:	2b00      	cmp	r3, #0
 800c432:	db04      	blt.n	800c43e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c434:	3001      	adds	r0, #1
 800c436:	4770      	bx	lr
 800c438:	2000      	movs	r0, #0
 800c43a:	e7ea      	b.n	800c412 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c43c:	2020      	movs	r0, #32
 800c43e:	4770      	bx	lr

0800c440 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c444:	b087      	sub	sp, #28
 800c446:	4681      	mov	r9, r0
 800c448:	4698      	mov	r8, r3
 800c44a:	4610      	mov	r0, r2
 800c44c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c450:	460d      	mov	r5, r1
 800c452:	b981      	cbnz	r1, 800c476 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c454:	b14b      	cbz	r3, 800c46a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c456:	460b      	mov	r3, r1
 800c458:	e9cd 4700 	strd	r4, r7, [sp]
 800c45c:	464a      	mov	r2, r9
 800c45e:	4641      	mov	r1, r8
 800c460:	f7ff ffee 	bl	800c440 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c464:	b007      	add	sp, #28
 800c466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c46a:	f04f 33ff 	mov.w	r3, #4294967295
 800c46e:	603b      	str	r3, [r7, #0]
 800c470:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c474:	e7f6      	b.n	800c464 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c476:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c47a:	d107      	bne.n	800c48c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c47c:	fb09 f602 	mul.w	r6, r9, r2
 800c480:	fbb6 f0f4 	udiv	r0, r6, r4
 800c484:	fb04 6610 	mls	r6, r4, r0, r6
 800c488:	603e      	str	r6, [r7, #0]
 800c48a:	e7eb      	b.n	800c464 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c48c:	2601      	movs	r6, #1
 800c48e:	408e      	lsls	r6, r1
 800c490:	3e01      	subs	r6, #1
 800c492:	4016      	ands	r6, r2
 800c494:	fa09 fb01 	lsl.w	fp, r9, r1
 800c498:	4630      	mov	r0, r6
 800c49a:	fbbb f3f4 	udiv	r3, fp, r4
 800c49e:	9302      	str	r3, [sp, #8]
 800c4a0:	fb0a f303 	mul.w	r3, sl, r3
 800c4a4:	9303      	str	r3, [sp, #12]
 800c4a6:	f7ff ffad 	bl	800c404 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c4aa:	464a      	mov	r2, r9
 800c4ac:	460b      	mov	r3, r1
 800c4ae:	e9cd 4700 	strd	r4, r7, [sp]
 800c4b2:	4601      	mov	r1, r0
 800c4b4:	4630      	mov	r0, r6
 800c4b6:	f7ff ffc3 	bl	800c440 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c4ba:	9b02      	ldr	r3, [sp, #8]
 800c4bc:	fb04 bb13 	mls	fp, r4, r3, fp
 800c4c0:	4606      	mov	r6, r0
 800c4c2:	4658      	mov	r0, fp
 800c4c4:	eb05 0108 	add.w	r1, r5, r8
 800c4c8:	f7ff ff9c 	bl	800c404 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c4cc:	ab05      	add	r3, sp, #20
 800c4ce:	e9cd 4300 	strd	r4, r3, [sp]
 800c4d2:	465a      	mov	r2, fp
 800c4d4:	4603      	mov	r3, r0
 800c4d6:	4650      	mov	r0, sl
 800c4d8:	f7ff ffb2 	bl	800c440 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c4dc:	6839      	ldr	r1, [r7, #0]
 800c4de:	9a05      	ldr	r2, [sp, #20]
 800c4e0:	9b03      	ldr	r3, [sp, #12]
 800c4e2:	4411      	add	r1, r2
 800c4e4:	fbb1 f2f4 	udiv	r2, r1, r4
 800c4e8:	18d3      	adds	r3, r2, r3
 800c4ea:	441e      	add	r6, r3
 800c4ec:	fb04 1412 	mls	r4, r4, r2, r1
 800c4f0:	4430      	add	r0, r6
 800c4f2:	603c      	str	r4, [r7, #0]
 800c4f4:	e7b6      	b.n	800c464 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c4f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c4f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4fa:	b085      	sub	sp, #20
 800c4fc:	f1b0 0900 	subs.w	r9, r0, #0
 800c500:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c502:	461d      	mov	r5, r3
 800c504:	bfbf      	itttt	lt
 800c506:	6823      	ldrlt	r3, [r4, #0]
 800c508:	425b      	neglt	r3, r3
 800c50a:	f1c9 0900 	rsblt	r9, r9, #0
 800c50e:	6023      	strlt	r3, [r4, #0]
 800c510:	bfb4      	ite	lt
 800c512:	f04f 36ff 	movlt.w	r6, #4294967295
 800c516:	2601      	movge	r6, #1
 800c518:	2a00      	cmp	r2, #0
 800c51a:	4617      	mov	r7, r2
 800c51c:	da04      	bge.n	800c528 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c51e:	6823      	ldr	r3, [r4, #0]
 800c520:	425b      	negs	r3, r3
 800c522:	4257      	negs	r7, r2
 800c524:	4276      	negs	r6, r6
 800c526:	6023      	str	r3, [r4, #0]
 800c528:	2d00      	cmp	r5, #0
 800c52a:	4638      	mov	r0, r7
 800c52c:	bfba      	itte	lt
 800c52e:	426d      	neglt	r5, r5
 800c530:	f04f 38ff 	movlt.w	r8, #4294967295
 800c534:	f04f 0801 	movge.w	r8, #1
 800c538:	f7ff ff64 	bl	800c404 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c53c:	ab03      	add	r3, sp, #12
 800c53e:	e9cd 5300 	strd	r5, r3, [sp]
 800c542:	463a      	mov	r2, r7
 800c544:	4603      	mov	r3, r0
 800c546:	4648      	mov	r0, r9
 800c548:	f7ff ff7a 	bl	800c440 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c54c:	6823      	ldr	r3, [r4, #0]
 800c54e:	9a03      	ldr	r2, [sp, #12]
 800c550:	4546      	cmp	r6, r8
 800c552:	441a      	add	r2, r3
 800c554:	fb92 f3f5 	sdiv	r3, r2, r5
 800c558:	4418      	add	r0, r3
 800c55a:	bf18      	it	ne
 800c55c:	4240      	negne	r0, r0
 800c55e:	fb05 2313 	mls	r3, r5, r3, r2
 800c562:	1c72      	adds	r2, r6, #1
 800c564:	6023      	str	r3, [r4, #0]
 800c566:	d105      	bne.n	800c574 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c568:	2b00      	cmp	r3, #0
 800c56a:	f1c3 0200 	rsb	r2, r3, #0
 800c56e:	db0b      	blt.n	800c588 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c570:	6022      	str	r2, [r4, #0]
 800c572:	e006      	b.n	800c582 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c574:	2e01      	cmp	r6, #1
 800c576:	d104      	bne.n	800c582 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c578:	2b00      	cmp	r3, #0
 800c57a:	da02      	bge.n	800c582 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c57c:	442b      	add	r3, r5
 800c57e:	3801      	subs	r0, #1
 800c580:	6023      	str	r3, [r4, #0]
 800c582:	b005      	add	sp, #20
 800c584:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c588:	3801      	subs	r0, #1
 800c58a:	1b52      	subs	r2, r2, r5
 800c58c:	e7f0      	b.n	800c570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c590 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c590:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c594:	4c1c      	ldr	r4, [pc, #112]	; (800c608 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c596:	6807      	ldr	r7, [r0, #0]
 800c598:	69a3      	ldr	r3, [r4, #24]
 800c59a:	4605      	mov	r5, r0
 800c59c:	b92b      	cbnz	r3, 800c5aa <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c59e:	6840      	ldr	r0, [r0, #4]
 800c5a0:	e9c5 7000 	strd	r7, r0, [r5]
 800c5a4:	b004      	add	sp, #16
 800c5a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5aa:	68a2      	ldr	r2, [r4, #8]
 800c5ac:	6820      	ldr	r0, [r4, #0]
 800c5ae:	ae04      	add	r6, sp, #16
 800c5b0:	f04f 0802 	mov.w	r8, #2
 800c5b4:	fb93 f1f8 	sdiv	r1, r3, r8
 800c5b8:	440a      	add	r2, r1
 800c5ba:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c5be:	69e1      	ldr	r1, [r4, #28]
 800c5c0:	9600      	str	r6, [sp, #0]
 800c5c2:	463a      	mov	r2, r7
 800c5c4:	f7ff ff97 	bl	800c4f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c5c8:	69a3      	ldr	r3, [r4, #24]
 800c5ca:	686a      	ldr	r2, [r5, #4]
 800c5cc:	6a21      	ldr	r1, [r4, #32]
 800c5ce:	9600      	str	r6, [sp, #0]
 800c5d0:	4607      	mov	r7, r0
 800c5d2:	6860      	ldr	r0, [r4, #4]
 800c5d4:	f7ff ff8f 	bl	800c4f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c5d8:	6962      	ldr	r2, [r4, #20]
 800c5da:	69a3      	ldr	r3, [r4, #24]
 800c5dc:	fb93 f8f8 	sdiv	r8, r3, r8
 800c5e0:	4442      	add	r2, r8
 800c5e2:	9203      	str	r2, [sp, #12]
 800c5e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c5e6:	682a      	ldr	r2, [r5, #0]
 800c5e8:	9600      	str	r6, [sp, #0]
 800c5ea:	4407      	add	r7, r0
 800c5ec:	68e0      	ldr	r0, [r4, #12]
 800c5ee:	f7ff ff82 	bl	800c4f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c5f2:	9600      	str	r6, [sp, #0]
 800c5f4:	4680      	mov	r8, r0
 800c5f6:	69a3      	ldr	r3, [r4, #24]
 800c5f8:	686a      	ldr	r2, [r5, #4]
 800c5fa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c5fc:	6920      	ldr	r0, [r4, #16]
 800c5fe:	f7ff ff7a 	bl	800c4f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c602:	4440      	add	r0, r8
 800c604:	e7cc      	b.n	800c5a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c606:	bf00      	nop
 800c608:	2000a2c4 	.word	0x2000a2c4

0800c60c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c60c:	4b07      	ldr	r3, [pc, #28]	; (800c62c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c60e:	781b      	ldrb	r3, [r3, #0]
 800c610:	2b01      	cmp	r3, #1
 800c612:	d109      	bne.n	800c628 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c614:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c618:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c61c:	8003      	strh	r3, [r0, #0]
 800c61e:	4b04      	ldr	r3, [pc, #16]	; (800c630 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c620:	881b      	ldrh	r3, [r3, #0]
 800c622:	3b01      	subs	r3, #1
 800c624:	1a9b      	subs	r3, r3, r2
 800c626:	800b      	strh	r3, [r1, #0]
 800c628:	4770      	bx	lr
 800c62a:	bf00      	nop
 800c62c:	2000a2b0 	.word	0x2000a2b0
 800c630:	2000a2b4 	.word	0x2000a2b4

0800c634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c634:	b510      	push	{r4, lr}
 800c636:	4b07      	ldr	r3, [pc, #28]	; (800c654 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c638:	781b      	ldrb	r3, [r3, #0]
 800c63a:	2b01      	cmp	r3, #1
 800c63c:	d108      	bne.n	800c650 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c63e:	4b06      	ldr	r3, [pc, #24]	; (800c658 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c640:	880c      	ldrh	r4, [r1, #0]
 800c642:	881b      	ldrh	r3, [r3, #0]
 800c644:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c648:	3b01      	subs	r3, #1
 800c64a:	1b1b      	subs	r3, r3, r4
 800c64c:	8003      	strh	r3, [r0, #0]
 800c64e:	800a      	strh	r2, [r1, #0]
 800c650:	bd10      	pop	{r4, pc}
 800c652:	bf00      	nop
 800c654:	2000a2b0 	.word	0x2000a2b0
 800c658:	2000a2b4 	.word	0x2000a2b4

0800c65c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c65c:	b510      	push	{r4, lr}
 800c65e:	4b0a      	ldr	r3, [pc, #40]	; (800c688 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c660:	781b      	ldrb	r3, [r3, #0]
 800c662:	2b01      	cmp	r3, #1
 800c664:	d10e      	bne.n	800c684 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c666:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c66a:	8843      	ldrh	r3, [r0, #2]
 800c66c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c670:	8044      	strh	r4, [r0, #2]
 800c672:	18ca      	adds	r2, r1, r3
 800c674:	4b05      	ldr	r3, [pc, #20]	; (800c68c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c676:	881b      	ldrh	r3, [r3, #0]
 800c678:	1a9b      	subs	r3, r3, r2
 800c67a:	8003      	strh	r3, [r0, #0]
 800c67c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c680:	80c3      	strh	r3, [r0, #6]
 800c682:	8081      	strh	r1, [r0, #4]
 800c684:	bd10      	pop	{r4, pc}
 800c686:	bf00      	nop
 800c688:	2000a2b0 	.word	0x2000a2b0
 800c68c:	2000a2b4 	.word	0x2000a2b4

0800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c690:	4b08      	ldr	r3, [pc, #32]	; (800c6b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c692:	781b      	ldrb	r3, [r3, #0]
 800c694:	2b01      	cmp	r3, #1
 800c696:	d10c      	bne.n	800c6b2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c698:	8803      	ldrh	r3, [r0, #0]
 800c69a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c69e:	8842      	ldrh	r2, [r0, #2]
 800c6a0:	8002      	strh	r2, [r0, #0]
 800c6a2:	185a      	adds	r2, r3, r1
 800c6a4:	4b04      	ldr	r3, [pc, #16]	; (800c6b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c6a6:	881b      	ldrh	r3, [r3, #0]
 800c6a8:	1a9b      	subs	r3, r3, r2
 800c6aa:	8043      	strh	r3, [r0, #2]
 800c6ac:	88c3      	ldrh	r3, [r0, #6]
 800c6ae:	8083      	strh	r3, [r0, #4]
 800c6b0:	80c1      	strh	r1, [r0, #6]
 800c6b2:	4770      	bx	lr
 800c6b4:	2000a2b0 	.word	0x2000a2b0
 800c6b8:	2000a2b4 	.word	0x2000a2b4

0800c6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c6bc:	b510      	push	{r4, lr}
 800c6be:	4b07      	ldr	r3, [pc, #28]	; (800c6dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c6c0:	781b      	ldrb	r3, [r3, #0]
 800c6c2:	2b01      	cmp	r3, #1
 800c6c4:	d108      	bne.n	800c6d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c6c6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c6ca:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c6ce:	8003      	strh	r3, [r0, #0]
 800c6d0:	8893      	ldrh	r3, [r2, #4]
 800c6d2:	3b01      	subs	r3, #1
 800c6d4:	1b1b      	subs	r3, r3, r4
 800c6d6:	800b      	strh	r3, [r1, #0]
 800c6d8:	bd10      	pop	{r4, pc}
 800c6da:	bf00      	nop
 800c6dc:	2000a2b0 	.word	0x2000a2b0

0800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c6e0:	b510      	push	{r4, lr}
 800c6e2:	4b0a      	ldr	r3, [pc, #40]	; (800c70c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c6e4:	781b      	ldrb	r3, [r3, #0]
 800c6e6:	2b01      	cmp	r3, #1
 800c6e8:	460a      	mov	r2, r1
 800c6ea:	d10d      	bne.n	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c6ec:	8881      	ldrh	r1, [r0, #4]
 800c6ee:	8803      	ldrh	r3, [r0, #0]
 800c6f0:	440b      	add	r3, r1
 800c6f2:	4601      	mov	r1, r0
 800c6f4:	3b01      	subs	r3, #1
 800c6f6:	f821 3b02 	strh.w	r3, [r1], #2
 800c6fa:	f7ff ffdf 	bl	800c6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c6fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c702:	88c2      	ldrh	r2, [r0, #6]
 800c704:	8082      	strh	r2, [r0, #4]
 800c706:	80c3      	strh	r3, [r0, #6]
 800c708:	bd10      	pop	{r4, pc}
 800c70a:	bf00      	nop
 800c70c:	2000a2b0 	.word	0x2000a2b0

0800c710 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c710:	4b06      	ldr	r3, [pc, #24]	; (800c72c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c712:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c716:	4b06      	ldr	r3, [pc, #24]	; (800c730 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c718:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c71c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c720:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c724:	2100      	movs	r1, #0
 800c726:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c72a:	4770      	bx	lr
 800c72c:	2000a2ac 	.word	0x2000a2ac
 800c730:	2000a2ae 	.word	0x2000a2ae

0800c734 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c734:	4b03      	ldr	r3, [pc, #12]	; (800c744 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c736:	6818      	ldr	r0, [r3, #0]
 800c738:	b110      	cbz	r0, 800c740 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c73a:	6803      	ldr	r3, [r0, #0]
 800c73c:	699b      	ldr	r3, [r3, #24]
 800c73e:	4718      	bx	r3
 800c740:	4770      	bx	lr
 800c742:	bf00      	nop
 800c744:	2000a2f4 	.word	0x2000a2f4

0800c748 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c748:	4770      	bx	lr
	...

0800c74c <_ZN8touchgfx11Application4drawEv>:
 800c74c:	b507      	push	{r0, r1, r2, lr}
 800c74e:	4b09      	ldr	r3, [pc, #36]	; (800c774 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c750:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c754:	4b08      	ldr	r3, [pc, #32]	; (800c778 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c756:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c75a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c75e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c762:	6803      	ldr	r3, [r0, #0]
 800c764:	2100      	movs	r1, #0
 800c766:	9100      	str	r1, [sp, #0]
 800c768:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c76a:	4669      	mov	r1, sp
 800c76c:	4798      	blx	r3
 800c76e:	b003      	add	sp, #12
 800c770:	f85d fb04 	ldr.w	pc, [sp], #4
 800c774:	2000a2ac 	.word	0x2000a2ac
 800c778:	2000a2ae 	.word	0x2000a2ae

0800c77c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c77c:	4b03      	ldr	r3, [pc, #12]	; (800c78c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c77e:	6818      	ldr	r0, [r3, #0]
 800c780:	b110      	cbz	r0, 800c788 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c782:	6803      	ldr	r3, [r0, #0]
 800c784:	69db      	ldr	r3, [r3, #28]
 800c786:	4718      	bx	r3
 800c788:	4770      	bx	lr
 800c78a:	bf00      	nop
 800c78c:	2000a2f4 	.word	0x2000a2f4

0800c790 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c790:	4b03      	ldr	r3, [pc, #12]	; (800c7a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c792:	6818      	ldr	r0, [r3, #0]
 800c794:	b110      	cbz	r0, 800c79c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c796:	6803      	ldr	r3, [r0, #0]
 800c798:	6a1b      	ldr	r3, [r3, #32]
 800c79a:	4718      	bx	r3
 800c79c:	4770      	bx	lr
 800c79e:	bf00      	nop
 800c7a0:	2000a2f4 	.word	0x2000a2f4

0800c7a4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c7a4:	4b03      	ldr	r3, [pc, #12]	; (800c7b4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c7a6:	6818      	ldr	r0, [r3, #0]
 800c7a8:	b110      	cbz	r0, 800c7b0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c7aa:	6803      	ldr	r3, [r0, #0]
 800c7ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c7ae:	4718      	bx	r3
 800c7b0:	4770      	bx	lr
 800c7b2:	bf00      	nop
 800c7b4:	2000a2f4 	.word	0x2000a2f4

0800c7b8 <_ZN8touchgfx11ApplicationD1Ev>:
 800c7b8:	4770      	bx	lr

0800c7ba <_ZN8touchgfx11ApplicationD0Ev>:
 800c7ba:	b510      	push	{r4, lr}
 800c7bc:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c7c0:	4604      	mov	r4, r0
 800c7c2:	f00f f95f 	bl	801ba84 <_ZdlPvj>
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	bd10      	pop	{r4, pc}
	...

0800c7cc <_ZN8touchgfx11Application15handleTickEventEv>:
 800c7cc:	b570      	push	{r4, r5, r6, lr}
 800c7ce:	4d38      	ldr	r5, [pc, #224]	; (800c8b0 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800c7d0:	4604      	mov	r4, r0
 800c7d2:	6828      	ldr	r0, [r5, #0]
 800c7d4:	b140      	cbz	r0, 800c7e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c7d6:	7a03      	ldrb	r3, [r0, #8]
 800c7d8:	b933      	cbnz	r3, 800c7e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c7da:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c7de:	6803      	ldr	r3, [r0, #0]
 800c7e0:	689b      	ldr	r3, [r3, #8]
 800c7e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7e6:	4718      	bx	r3
 800c7e8:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800c7ec:	b97b      	cbnz	r3, 800c80e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c7ee:	b170      	cbz	r0, 800c80e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c7f0:	7a03      	ldrb	r3, [r0, #8]
 800c7f2:	b163      	cbz	r3, 800c80e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c7f4:	4b2f      	ldr	r3, [pc, #188]	; (800c8b4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c7f6:	6818      	ldr	r0, [r3, #0]
 800c7f8:	b110      	cbz	r0, 800c800 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c7fa:	6803      	ldr	r3, [r0, #0]
 800c7fc:	691b      	ldr	r3, [r3, #16]
 800c7fe:	4798      	blx	r3
 800c800:	6828      	ldr	r0, [r5, #0]
 800c802:	6803      	ldr	r3, [r0, #0]
 800c804:	68db      	ldr	r3, [r3, #12]
 800c806:	4798      	blx	r3
 800c808:	2301      	movs	r3, #1
 800c80a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c80e:	2500      	movs	r5, #0
 800c810:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c814:	42a8      	cmp	r0, r5
 800c816:	dd0c      	ble.n	800c832 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c818:	1963      	adds	r3, r4, r5
 800c81a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c81e:	b132      	cbz	r2, 800c82e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c820:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c824:	4413      	add	r3, r2
 800c826:	6858      	ldr	r0, [r3, #4]
 800c828:	6803      	ldr	r3, [r0, #0]
 800c82a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c82c:	4798      	blx	r3
 800c82e:	3501      	adds	r5, #1
 800c830:	e7ee      	b.n	800c810 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c832:	2300      	movs	r3, #0
 800c834:	461a      	mov	r2, r3
 800c836:	4298      	cmp	r0, r3
 800c838:	d10f      	bne.n	800c85a <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800c83a:	1d25      	adds	r5, r4, #4
 800c83c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c840:	4291      	cmp	r1, r2
 800c842:	dd2d      	ble.n	800c8a0 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800c844:	1e48      	subs	r0, r1, #1
 800c846:	b280      	uxth	r0, r0
 800c848:	4288      	cmp	r0, r1
 800c84a:	d31a      	bcc.n	800c882 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800c84c:	4b1a      	ldr	r3, [pc, #104]	; (800c8b8 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800c84e:	4a1b      	ldr	r2, [pc, #108]	; (800c8bc <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800c850:	481b      	ldr	r0, [pc, #108]	; (800c8c0 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800c852:	f240 11a9 	movw	r1, #425	; 0x1a9
 800c856:	f00f f943 	bl	801bae0 <__assert_func>
 800c85a:	18e1      	adds	r1, r4, r3
 800c85c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c860:	b16d      	cbz	r5, 800c87e <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800c862:	429a      	cmp	r2, r3
 800c864:	d00a      	beq.n	800c87c <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800c866:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c86a:	4431      	add	r1, r6
 800c86c:	684e      	ldr	r6, [r1, #4]
 800c86e:	b291      	uxth	r1, r2
 800c870:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c874:	604e      	str	r6, [r1, #4]
 800c876:	18a1      	adds	r1, r4, r2
 800c878:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c87c:	3201      	adds	r2, #1
 800c87e:	3301      	adds	r3, #1
 800c880:	e7d9      	b.n	800c836 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c882:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c886:	3304      	adds	r3, #4
 800c888:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c88c:	428b      	cmp	r3, r1
 800c88e:	d004      	beq.n	800c89a <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800c890:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c894:	f843 6c04 	str.w	r6, [r3, #-4]
 800c898:	e7f8      	b.n	800c88c <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c89a:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c89e:	e7cd      	b.n	800c83c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c8a0:	4b04      	ldr	r3, [pc, #16]	; (800c8b4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c8a2:	6818      	ldr	r0, [r3, #0]
 800c8a4:	b110      	cbz	r0, 800c8ac <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800c8a6:	6803      	ldr	r3, [r0, #0]
 800c8a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8aa:	e79a      	b.n	800c7e2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c8ac:	bd70      	pop	{r4, r5, r6, pc}
 800c8ae:	bf00      	nop
 800c8b0:	2000a2f8 	.word	0x2000a2f8
 800c8b4:	2000a2f4 	.word	0x2000a2f4
 800c8b8:	0801eb76 	.word	0x0801eb76
 800c8bc:	0801ed60 	.word	0x0801ed60
 800c8c0:	0801eb84 	.word	0x0801eb84

0800c8c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c8c4:	b570      	push	{r4, r5, r6, lr}
 800c8c6:	4606      	mov	r6, r0
 800c8c8:	460c      	mov	r4, r1
 800c8ca:	b929      	cbnz	r1, 800c8d8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c8cc:	4b0c      	ldr	r3, [pc, #48]	; (800c900 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c8ce:	4a0d      	ldr	r2, [pc, #52]	; (800c904 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c8d0:	480d      	ldr	r0, [pc, #52]	; (800c908 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c8d2:	2167      	movs	r1, #103	; 0x67
 800c8d4:	f00f f904 	bl	801bae0 <__assert_func>
 800c8d8:	4d0c      	ldr	r5, [pc, #48]	; (800c90c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c8da:	2300      	movs	r3, #0
 800c8dc:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c8e0:	6828      	ldr	r0, [r5, #0]
 800c8e2:	b110      	cbz	r0, 800c8ea <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c8e4:	6803      	ldr	r3, [r0, #0]
 800c8e6:	695b      	ldr	r3, [r3, #20]
 800c8e8:	4798      	blx	r3
 800c8ea:	602c      	str	r4, [r5, #0]
 800c8ec:	6823      	ldr	r3, [r4, #0]
 800c8ee:	4620      	mov	r0, r4
 800c8f0:	68db      	ldr	r3, [r3, #12]
 800c8f2:	4798      	blx	r3
 800c8f4:	6833      	ldr	r3, [r6, #0]
 800c8f6:	4630      	mov	r0, r6
 800c8f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c8fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8fe:	4718      	bx	r3
 800c900:	0801eb42 	.word	0x0801eb42
 800c904:	0801ec20 	.word	0x0801ec20
 800c908:	0801eb4c 	.word	0x0801eb4c
 800c90c:	2000a2f4 	.word	0x2000a2f4

0800c910 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c910:	b510      	push	{r4, lr}
 800c912:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c916:	888a      	ldrh	r2, [r1, #4]
 800c918:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c91c:	4422      	add	r2, r4
 800c91e:	b212      	sxth	r2, r2
 800c920:	4293      	cmp	r3, r2
 800c922:	da15      	bge.n	800c950 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c924:	8882      	ldrh	r2, [r0, #4]
 800c926:	4413      	add	r3, r2
 800c928:	b21b      	sxth	r3, r3
 800c92a:	429c      	cmp	r4, r3
 800c92c:	da10      	bge.n	800c950 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c92e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c932:	88c9      	ldrh	r1, [r1, #6]
 800c934:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c938:	4419      	add	r1, r3
 800c93a:	b209      	sxth	r1, r1
 800c93c:	428a      	cmp	r2, r1
 800c93e:	da07      	bge.n	800c950 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c940:	88c0      	ldrh	r0, [r0, #6]
 800c942:	4410      	add	r0, r2
 800c944:	b200      	sxth	r0, r0
 800c946:	4283      	cmp	r3, r0
 800c948:	bfac      	ite	ge
 800c94a:	2000      	movge	r0, #0
 800c94c:	2001      	movlt	r0, #1
 800c94e:	bd10      	pop	{r4, pc}
 800c950:	2000      	movs	r0, #0
 800c952:	e7fc      	b.n	800c94e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c954 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c954:	b570      	push	{r4, r5, r6, lr}
 800c956:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c95a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c95e:	42ac      	cmp	r4, r5
 800c960:	db18      	blt.n	800c994 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c962:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c966:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c96a:	429a      	cmp	r2, r3
 800c96c:	db12      	blt.n	800c994 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c96e:	8886      	ldrh	r6, [r0, #4]
 800c970:	4435      	add	r5, r6
 800c972:	888e      	ldrh	r6, [r1, #4]
 800c974:	4434      	add	r4, r6
 800c976:	b22d      	sxth	r5, r5
 800c978:	b224      	sxth	r4, r4
 800c97a:	42a5      	cmp	r5, r4
 800c97c:	db0a      	blt.n	800c994 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c97e:	88c0      	ldrh	r0, [r0, #6]
 800c980:	4418      	add	r0, r3
 800c982:	88cb      	ldrh	r3, [r1, #6]
 800c984:	441a      	add	r2, r3
 800c986:	b200      	sxth	r0, r0
 800c988:	b212      	sxth	r2, r2
 800c98a:	4290      	cmp	r0, r2
 800c98c:	bfb4      	ite	lt
 800c98e:	2000      	movlt	r0, #0
 800c990:	2001      	movge	r0, #1
 800c992:	bd70      	pop	{r4, r5, r6, pc}
 800c994:	2000      	movs	r0, #0
 800c996:	e7fc      	b.n	800c992 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800c998 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c99a:	4604      	mov	r4, r0
 800c99c:	4608      	mov	r0, r1
 800c99e:	460d      	mov	r5, r1
 800c9a0:	f7fc fdfd 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c9a4:	b978      	cbnz	r0, 800c9c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c9a6:	4620      	mov	r0, r4
 800c9a8:	f7fc fdf9 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c9ac:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c9b0:	b150      	cbz	r0, 800c9c8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c9b2:	8026      	strh	r6, [r4, #0]
 800c9b4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c9b8:	8063      	strh	r3, [r4, #2]
 800c9ba:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c9be:	80a3      	strh	r3, [r4, #4]
 800c9c0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c9c4:	80e3      	strh	r3, [r4, #6]
 800c9c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c9c8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c9cc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c9d0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c9d4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c9d8:	88ed      	ldrh	r5, [r5, #6]
 800c9da:	42b1      	cmp	r1, r6
 800c9dc:	460f      	mov	r7, r1
 800c9de:	bfa8      	it	ge
 800c9e0:	4637      	movge	r7, r6
 800c9e2:	4293      	cmp	r3, r2
 800c9e4:	4618      	mov	r0, r3
 800c9e6:	4466      	add	r6, ip
 800c9e8:	bfa8      	it	ge
 800c9ea:	4610      	movge	r0, r2
 800c9ec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c9f0:	8027      	strh	r7, [r4, #0]
 800c9f2:	442a      	add	r2, r5
 800c9f4:	88e5      	ldrh	r5, [r4, #6]
 800c9f6:	8060      	strh	r0, [r4, #2]
 800c9f8:	4461      	add	r1, ip
 800c9fa:	442b      	add	r3, r5
 800c9fc:	b236      	sxth	r6, r6
 800c9fe:	b209      	sxth	r1, r1
 800ca00:	b212      	sxth	r2, r2
 800ca02:	b21b      	sxth	r3, r3
 800ca04:	428e      	cmp	r6, r1
 800ca06:	bfac      	ite	ge
 800ca08:	ebc7 0106 	rsbge	r1, r7, r6
 800ca0c:	ebc7 0101 	rsblt	r1, r7, r1
 800ca10:	429a      	cmp	r2, r3
 800ca12:	bfac      	ite	ge
 800ca14:	ebc0 0202 	rsbge	r2, r0, r2
 800ca18:	ebc0 0203 	rsblt	r2, r0, r3
 800ca1c:	80a1      	strh	r1, [r4, #4]
 800ca1e:	80e2      	strh	r2, [r4, #6]
 800ca20:	e7d1      	b.n	800c9c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ca24 <_ZN8touchgfx11Application11getInstanceEv>:
 800ca24:	4b01      	ldr	r3, [pc, #4]	; (800ca2c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ca26:	6818      	ldr	r0, [r3, #0]
 800ca28:	4770      	bx	lr
 800ca2a:	bf00      	nop
 800ca2c:	2000a304 	.word	0x2000a304

0800ca30 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ca30:	2300      	movs	r3, #0
 800ca32:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ca36:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ca3a:	30a8      	adds	r0, #168	; 0xa8
 800ca3c:	f802 3b01 	strb.w	r3, [r2], #1
 800ca40:	4282      	cmp	r2, r0
 800ca42:	d1fb      	bne.n	800ca3c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ca44:	4770      	bx	lr

0800ca46 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ca46:	4603      	mov	r3, r0
 800ca48:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ca4c:	2200      	movs	r2, #0
 800ca4e:	801a      	strh	r2, [r3, #0]
 800ca50:	805a      	strh	r2, [r3, #2]
 800ca52:	809a      	strh	r2, [r3, #4]
 800ca54:	80da      	strh	r2, [r3, #6]
 800ca56:	3308      	adds	r3, #8
 800ca58:	428b      	cmp	r3, r1
 800ca5a:	d1f8      	bne.n	800ca4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ca5c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ca60:	4770      	bx	lr
	...

0800ca64 <_ZN8touchgfx11ApplicationC1Ev>:
 800ca64:	b570      	push	{r4, r5, r6, lr}
 800ca66:	4b1a      	ldr	r3, [pc, #104]	; (800cad0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ca68:	6003      	str	r3, [r0, #0]
 800ca6a:	2500      	movs	r5, #0
 800ca6c:	4604      	mov	r4, r0
 800ca6e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ca72:	30a8      	adds	r0, #168	; 0xa8
 800ca74:	f7ff ffe7 	bl	800ca46 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ca78:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ca7c:	f7ff ffe3 	bl	800ca46 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ca80:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ca84:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ca88:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ca8c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ca90:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ca94:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800ca98:	490e      	ldr	r1, [pc, #56]	; (800cad4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ca9a:	480f      	ldr	r0, [pc, #60]	; (800cad8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ca9c:	4e0f      	ldr	r6, [pc, #60]	; (800cadc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ca9e:	f00e fec5 	bl	801b82c <CRC_Lock>
 800caa2:	4b0f      	ldr	r3, [pc, #60]	; (800cae0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800caa4:	b158      	cbz	r0, 800cabe <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800caa6:	801d      	strh	r5, [r3, #0]
 800caa8:	4a0e      	ldr	r2, [pc, #56]	; (800cae4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800caaa:	2300      	movs	r3, #0
 800caac:	6013      	str	r3, [r2, #0]
 800caae:	4a0e      	ldr	r2, [pc, #56]	; (800cae8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cab0:	6033      	str	r3, [r6, #0]
 800cab2:	4620      	mov	r0, r4
 800cab4:	6013      	str	r3, [r2, #0]
 800cab6:	f7ff ffbb 	bl	800ca30 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800caba:	4620      	mov	r0, r4
 800cabc:	bd70      	pop	{r4, r5, r6, pc}
 800cabe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cac2:	2002      	movs	r0, #2
 800cac4:	801a      	strh	r2, [r3, #0]
 800cac6:	6030      	str	r0, [r6, #0]
 800cac8:	f001 fa04 	bl	800ded4 <_ZN8touchgfx6Screen4drawEv>
 800cacc:	e7ec      	b.n	800caa8 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800cace:	bf00      	nop
 800cad0:	0801ebe4 	.word	0x0801ebe4
 800cad4:	b5e8b5cd 	.word	0xb5e8b5cd
 800cad8:	f407a5c2 	.word	0xf407a5c2
 800cadc:	2000a2f4 	.word	0x2000a2f4
 800cae0:	20000060 	.word	0x20000060
 800cae4:	2000a304 	.word	0x2000a304
 800cae8:	2000a2f8 	.word	0x2000a2f8

0800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800caec:	b510      	push	{r4, lr}
 800caee:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800caf2:	428b      	cmp	r3, r1
 800caf4:	d806      	bhi.n	800cb04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800caf6:	4b0b      	ldr	r3, [pc, #44]	; (800cb24 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800caf8:	4a0b      	ldr	r2, [pc, #44]	; (800cb28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800cafa:	480c      	ldr	r0, [pc, #48]	; (800cb2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800cafc:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 800cb00:	f00e ffee 	bl	801bae0 <__assert_func>
 800cb04:	3b01      	subs	r3, #1
 800cb06:	b29b      	uxth	r3, r3
 800cb08:	428b      	cmp	r3, r1
 800cb0a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800cb0e:	d908      	bls.n	800cb22 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800cb10:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800cb14:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800cb18:	681a      	ldr	r2, [r3, #0]
 800cb1a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800cb1e:	685a      	ldr	r2, [r3, #4]
 800cb20:	6062      	str	r2, [r4, #4]
 800cb22:	bd10      	pop	{r4, pc}
 800cb24:	0801eb76 	.word	0x0801eb76
 800cb28:	0801ec64 	.word	0x0801ec64
 800cb2c:	0801eb84 	.word	0x0801eb84

0800cb30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800cb30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb32:	466b      	mov	r3, sp
 800cb34:	e883 0006 	stmia.w	r3, {r1, r2}
 800cb38:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800cb3c:	2a07      	cmp	r2, #7
 800cb3e:	4604      	mov	r4, r0
 800cb40:	d906      	bls.n	800cb50 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800cb42:	4b09      	ldr	r3, [pc, #36]	; (800cb68 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800cb44:	4a09      	ldr	r2, [pc, #36]	; (800cb6c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800cb46:	480a      	ldr	r0, [pc, #40]	; (800cb70 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800cb48:	f44f 71c1 	mov.w	r1, #386	; 0x182
 800cb4c:	f00e ffc8 	bl	801bae0 <__assert_func>
 800cb50:	1c51      	adds	r1, r2, #1
 800cb52:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cb56:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800cb5a:	cb03      	ldmia	r3!, {r0, r1}
 800cb5c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800cb60:	6069      	str	r1, [r5, #4]
 800cb62:	b003      	add	sp, #12
 800cb64:	bd30      	pop	{r4, r5, pc}
 800cb66:	bf00      	nop
 800cb68:	0801ebad 	.word	0x0801ebad
 800cb6c:	0801ecfa 	.word	0x0801ecfa
 800cb70:	0801eb84 	.word	0x0801eb84

0800cb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cb74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb78:	b08d      	sub	sp, #52	; 0x34
 800cb7a:	ac08      	add	r4, sp, #32
 800cb7c:	4683      	mov	fp, r0
 800cb7e:	4620      	mov	r0, r4
 800cb80:	e884 0006 	stmia.w	r4, {r1, r2}
 800cb84:	f7fc fd0b 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb88:	2800      	cmp	r0, #0
 800cb8a:	d16a      	bne.n	800cc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cb8c:	9402      	str	r4, [sp, #8]
 800cb8e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cb92:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cb96:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800cb9a:	2400      	movs	r4, #0
 800cb9c:	9301      	str	r3, [sp, #4]
 800cb9e:	36a0      	adds	r6, #160	; 0xa0
 800cba0:	42a5      	cmp	r5, r4
 800cba2:	d00d      	beq.n	800cbc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800cba4:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800cba8:	9802      	ldr	r0, [sp, #8]
 800cbaa:	f7ff fed3 	bl	800c954 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cbae:	b128      	cbz	r0, 800cbbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800cbb0:	1e69      	subs	r1, r5, #1
 800cbb2:	1b09      	subs	r1, r1, r4
 800cbb4:	b289      	uxth	r1, r1
 800cbb6:	9801      	ldr	r0, [sp, #4]
 800cbb8:	f7ff ff98 	bl	800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cbbc:	3401      	adds	r4, #1
 800cbbe:	e7ef      	b.n	800cba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cbc0:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cbc4:	9703      	str	r7, [sp, #12]
 800cbc6:	1e7b      	subs	r3, r7, #1
 800cbc8:	9300      	str	r3, [sp, #0]
 800cbca:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800cbce:	2400      	movs	r4, #0
 800cbd0:	4655      	mov	r5, sl
 800cbd2:	9704      	str	r7, [sp, #16]
 800cbd4:	4626      	mov	r6, r4
 800cbd6:	9b04      	ldr	r3, [sp, #16]
 800cbd8:	2b00      	cmp	r3, #0
 800cbda:	d078      	beq.n	800ccce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800cbdc:	9902      	ldr	r1, [sp, #8]
 800cbde:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cbe2:	f7ff fe95 	bl	800c910 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cbe6:	b360      	cbz	r0, 800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cbe8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800cbec:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800cbf0:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800cbf4:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800cbf8:	45e6      	cmp	lr, ip
 800cbfa:	db35      	blt.n	800cc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cbfc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cc00:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cc04:	4472      	add	r2, lr
 800cc06:	4463      	add	r3, ip
 800cc08:	b212      	sxth	r2, r2
 800cc0a:	b21b      	sxth	r3, r3
 800cc0c:	429a      	cmp	r2, r3
 800cc0e:	dc2b      	bgt.n	800cc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cc10:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cc14:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cc18:	fa1f f288 	uxth.w	r2, r8
 800cc1c:	4413      	add	r3, r2
 800cc1e:	b29b      	uxth	r3, r3
 800cc20:	45c1      	cmp	r9, r8
 800cc22:	fa0f fe83 	sxth.w	lr, r3
 800cc26:	fa1f fc89 	uxth.w	ip, r9
 800cc2a:	db0f      	blt.n	800cc4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800cc2c:	eba3 030c 	sub.w	r3, r3, ip
 800cc30:	1ac9      	subs	r1, r1, r3
 800cc32:	b209      	sxth	r1, r1
 800cc34:	2900      	cmp	r1, #0
 800cc36:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cc3a:	dd12      	ble.n	800cc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cc3c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800cc40:	4604      	mov	r4, r0
 800cc42:	9b04      	ldr	r3, [sp, #16]
 800cc44:	3b01      	subs	r3, #1
 800cc46:	9304      	str	r3, [sp, #16]
 800cc48:	3d08      	subs	r5, #8
 800cc4a:	e7c4      	b.n	800cbd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800cc4c:	4461      	add	r1, ip
 800cc4e:	b209      	sxth	r1, r1
 800cc50:	4571      	cmp	r1, lr
 800cc52:	dc3a      	bgt.n	800ccca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cc54:	eba2 020c 	sub.w	r2, r2, ip
 800cc58:	b212      	sxth	r2, r2
 800cc5a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cc5e:	2a00      	cmp	r2, #0
 800cc60:	dcee      	bgt.n	800cc40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cc62:	b00d      	add	sp, #52	; 0x34
 800cc64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc68:	45c1      	cmp	r9, r8
 800cc6a:	db2e      	blt.n	800ccca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cc6c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800cc70:	4499      	add	r9, r3
 800cc72:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cc76:	4498      	add	r8, r3
 800cc78:	fa0f f989 	sxth.w	r9, r9
 800cc7c:	fa0f f888 	sxth.w	r8, r8
 800cc80:	45c1      	cmp	r9, r8
 800cc82:	dc22      	bgt.n	800ccca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cc84:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cc88:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800cc8c:	fa1f f28c 	uxth.w	r2, ip
 800cc90:	4413      	add	r3, r2
 800cc92:	b29b      	uxth	r3, r3
 800cc94:	45e6      	cmp	lr, ip
 800cc96:	fa1f f88e 	uxth.w	r8, lr
 800cc9a:	fa0f f983 	sxth.w	r9, r3
 800cc9e:	db0a      	blt.n	800ccb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800cca0:	eba3 0308 	sub.w	r3, r3, r8
 800cca4:	1ac9      	subs	r1, r1, r3
 800cca6:	b209      	sxth	r1, r1
 800cca8:	2900      	cmp	r1, #0
 800ccaa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800ccae:	ddd8      	ble.n	800cc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800ccb0:	f8ad 9020 	strh.w	r9, [sp, #32]
 800ccb4:	e7c4      	b.n	800cc40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800ccb6:	4441      	add	r1, r8
 800ccb8:	b209      	sxth	r1, r1
 800ccba:	4549      	cmp	r1, r9
 800ccbc:	dc05      	bgt.n	800ccca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800ccbe:	eba2 0208 	sub.w	r2, r2, r8
 800ccc2:	b212      	sxth	r2, r2
 800ccc4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800ccc8:	e7c9      	b.n	800cc5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800ccca:	4606      	mov	r6, r0
 800cccc:	e7b9      	b.n	800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800ccce:	2c00      	cmp	r4, #0
 800ccd0:	f47f af7d 	bne.w	800cbce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800ccd4:	2e00      	cmp	r6, #0
 800ccd6:	f000 81dd 	beq.w	800d094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800ccda:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800ccde:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800cce2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cce6:	b2b9      	uxth	r1, r7
 800cce8:	9104      	str	r1, [sp, #16]
 800ccea:	9804      	ldr	r0, [sp, #16]
 800ccec:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800ccf0:	4401      	add	r1, r0
 800ccf2:	b2b3      	uxth	r3, r6
 800ccf4:	b289      	uxth	r1, r1
 800ccf6:	441a      	add	r2, r3
 800ccf8:	9105      	str	r1, [sp, #20]
 800ccfa:	b292      	uxth	r2, r2
 800ccfc:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800cd00:	fa0f f882 	sxth.w	r8, r2
 800cd04:	4655      	mov	r5, sl
 800cd06:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800cd0a:	9b03      	ldr	r3, [sp, #12]
 800cd0c:	2b00      	cmp	r3, #0
 800cd0e:	d054      	beq.n	800cdba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800cd10:	9902      	ldr	r1, [sp, #8]
 800cd12:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cd16:	f7ff fdfb 	bl	800c910 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd1a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cd1e:	b1d8      	cbz	r0, 800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cd20:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800cd24:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800cd28:	4576      	cmp	r6, lr
 800cd2a:	dc26      	bgt.n	800cd7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800cd2c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800cd30:	44f4      	add	ip, lr
 800cd32:	fa0f fc8c 	sxth.w	ip, ip
 800cd36:	45e0      	cmp	r8, ip
 800cd38:	db1f      	blt.n	800cd7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800cd3a:	428f      	cmp	r7, r1
 800cd3c:	fa1f fc81 	uxth.w	ip, r1
 800cd40:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800cd44:	dc0f      	bgt.n	800cd66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800cd46:	9805      	ldr	r0, [sp, #20]
 800cd48:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800cd4c:	eba0 0c0c 	sub.w	ip, r0, ip
 800cd50:	eba1 010c 	sub.w	r1, r1, ip
 800cd54:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800cd58:	4620      	mov	r0, r4
 800cd5a:	9903      	ldr	r1, [sp, #12]
 800cd5c:	3901      	subs	r1, #1
 800cd5e:	9103      	str	r1, [sp, #12]
 800cd60:	3d08      	subs	r5, #8
 800cd62:	4604      	mov	r4, r0
 800cd64:	e7cf      	b.n	800cd06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800cd66:	4461      	add	r1, ip
 800cd68:	b209      	sxth	r1, r1
 800cd6a:	4549      	cmp	r1, r9
 800cd6c:	dcf5      	bgt.n	800cd5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cd6e:	9904      	ldr	r1, [sp, #16]
 800cd70:	eba1 0c0c 	sub.w	ip, r1, ip
 800cd74:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800cd78:	e7ee      	b.n	800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cd7a:	428f      	cmp	r7, r1
 800cd7c:	dced      	bgt.n	800cd5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cd7e:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800cd82:	4461      	add	r1, ip
 800cd84:	b209      	sxth	r1, r1
 800cd86:	4589      	cmp	r9, r1
 800cd88:	dbe7      	blt.n	800cd5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cd8a:	4576      	cmp	r6, lr
 800cd8c:	fa1f fc8e 	uxth.w	ip, lr
 800cd90:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800cd94:	dc08      	bgt.n	800cda8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800cd96:	eba2 0c0c 	sub.w	ip, r2, ip
 800cd9a:	eba1 010c 	sub.w	r1, r1, ip
 800cd9e:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800cda2:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800cda6:	e7d7      	b.n	800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cda8:	4461      	add	r1, ip
 800cdaa:	b209      	sxth	r1, r1
 800cdac:	4588      	cmp	r8, r1
 800cdae:	dbd4      	blt.n	800cd5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cdb0:	eba3 0c0c 	sub.w	ip, r3, ip
 800cdb4:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800cdb8:	e7ce      	b.n	800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cdba:	2c00      	cmp	r4, #0
 800cdbc:	f000 816a 	beq.w	800d094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cdc0:	9b00      	ldr	r3, [sp, #0]
 800cdc2:	3301      	adds	r3, #1
 800cdc4:	f000 8166 	beq.w	800d094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cdc8:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800cdcc:	4621      	mov	r1, r4
 800cdce:	9802      	ldr	r0, [sp, #8]
 800cdd0:	f7ff fdc0 	bl	800c954 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cdd4:	b120      	cbz	r0, 800cde0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800cdd6:	f8bd 1000 	ldrh.w	r1, [sp]
 800cdda:	9801      	ldr	r0, [sp, #4]
 800cddc:	f7ff fe86 	bl	800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cde0:	9902      	ldr	r1, [sp, #8]
 800cde2:	4620      	mov	r0, r4
 800cde4:	f7ff fd94 	bl	800c910 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cde8:	2800      	cmp	r0, #0
 800cdea:	f000 809b 	beq.w	800cf24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800cdee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800cdf2:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800cdf6:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800cdfa:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800cdfe:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ce02:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800ce06:	fa1f f288 	uxth.w	r2, r8
 800ce0a:	19d5      	adds	r5, r2, r7
 800ce0c:	fa1f f985 	uxth.w	r9, r5
 800ce10:	fa0f f589 	sxth.w	r5, r9
 800ce14:	b2a1      	uxth	r1, r4
 800ce16:	440b      	add	r3, r1
 800ce18:	9503      	str	r5, [sp, #12]
 800ce1a:	45a0      	cmp	r8, r4
 800ce1c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800ce20:	9507      	str	r5, [sp, #28]
 800ce22:	b29b      	uxth	r3, r3
 800ce24:	f340 809d 	ble.w	800cf62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800ce28:	1a52      	subs	r2, r2, r1
 800ce2a:	b292      	uxth	r2, r2
 800ce2c:	4584      	cmp	ip, r0
 800ce2e:	fa0f fe83 	sxth.w	lr, r3
 800ce32:	b215      	sxth	r5, r2
 800ce34:	dd2f      	ble.n	800ce96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800ce36:	9e00      	ldr	r6, [sp, #0]
 800ce38:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800ce3c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800ce40:	9e03      	ldr	r6, [sp, #12]
 800ce42:	eba6 060e 	sub.w	r6, r6, lr
 800ce46:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800ce4a:	fa1f fc8c 	uxth.w	ip, ip
 800ce4e:	b280      	uxth	r0, r0
 800ce50:	ebac 0300 	sub.w	r3, ip, r0
 800ce54:	448c      	add	ip, r1
 800ce56:	4470      	add	r0, lr
 800ce58:	b29b      	uxth	r3, r3
 800ce5a:	fa0f fc8c 	sxth.w	ip, ip
 800ce5e:	b200      	sxth	r0, r0
 800ce60:	b21c      	sxth	r4, r3
 800ce62:	ebac 0000 	sub.w	r0, ip, r0
 800ce66:	4366      	muls	r6, r4
 800ce68:	4368      	muls	r0, r5
 800ce6a:	4286      	cmp	r6, r0
 800ce6c:	db09      	blt.n	800ce82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800ce6e:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800ce72:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800ce76:	4417      	add	r7, r2
 800ce78:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ce7c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800ce80:	e685      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ce82:	440b      	add	r3, r1
 800ce84:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ce88:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800ce8c:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800ce90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ce94:	e67b      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ce96:	9e03      	ldr	r6, [sp, #12]
 800ce98:	45b6      	cmp	lr, r6
 800ce9a:	da28      	bge.n	800ceee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800ce9c:	9b00      	ldr	r3, [sp, #0]
 800ce9e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800cea2:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800cea6:	eb04 030c 	add.w	r3, r4, ip
 800ceaa:	fa1f f883 	uxth.w	r8, r3
 800ceae:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800ceb2:	4403      	add	r3, r0
 800ceb4:	eba3 0308 	sub.w	r3, r3, r8
 800ceb8:	b29b      	uxth	r3, r3
 800ceba:	fa0f f988 	sxth.w	r9, r8
 800cebe:	eba0 000c 	sub.w	r0, r0, ip
 800cec2:	fa0f f883 	sxth.w	r8, r3
 800cec6:	eba6 060e 	sub.w	r6, r6, lr
 800ceca:	4368      	muls	r0, r5
 800cecc:	fb08 f606 	mul.w	r6, r8, r6
 800ced0:	42b0      	cmp	r0, r6
 800ced2:	dc06      	bgt.n	800cee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800ced4:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800ced8:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800cedc:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800cee0:	e7c9      	b.n	800ce76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800cee2:	4423      	add	r3, r4
 800cee4:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800cee8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ceec:	e64f      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ceee:	9807      	ldr	r0, [sp, #28]
 800cef0:	eba3 0309 	sub.w	r3, r3, r9
 800cef4:	b29b      	uxth	r3, r3
 800cef6:	2806      	cmp	r0, #6
 800cef8:	fa0f fc83 	sxth.w	ip, r3
 800cefc:	d818      	bhi.n	800cf30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800cefe:	4652      	mov	r2, sl
 800cf00:	ab0a      	add	r3, sp, #40	; 0x28
 800cf02:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800cf06:	6851      	ldr	r1, [r2, #4]
 800cf08:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800cf0c:	c303      	stmia	r3!, {r0, r1}
 800cf0e:	9b03      	ldr	r3, [sp, #12]
 800cf10:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800cf14:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800cf18:	ab0a      	add	r3, sp, #40	; 0x28
 800cf1a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cf1e:	9801      	ldr	r0, [sp, #4]
 800cf20:	f7ff fe06 	bl	800cb30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cf24:	9b00      	ldr	r3, [sp, #0]
 800cf26:	3b01      	subs	r3, #1
 800cf28:	9300      	str	r3, [sp, #0]
 800cf2a:	f1aa 0a08 	sub.w	sl, sl, #8
 800cf2e:	e747      	b.n	800cdc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800cf30:	9800      	ldr	r0, [sp, #0]
 800cf32:	45ac      	cmp	ip, r5
 800cf34:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cf38:	db0c      	blt.n	800cf54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800cf3a:	4417      	add	r7, r2
 800cf3c:	b2bf      	uxth	r7, r7
 800cf3e:	4458      	add	r0, fp
 800cf40:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cf44:	440f      	add	r7, r1
 800cf46:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cf4a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cf4e:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800cf52:	e61c      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cf54:	4458      	add	r0, fp
 800cf56:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800cf5a:	443b      	add	r3, r7
 800cf5c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cf60:	e615      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cf62:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cf66:	fa1f f18c 	uxth.w	r1, ip
 800cf6a:	eb01 0e05 	add.w	lr, r1, r5
 800cf6e:	b282      	uxth	r2, r0
 800cf70:	fa1f fe8e 	uxth.w	lr, lr
 800cf74:	9204      	str	r2, [sp, #16]
 800cf76:	fa0f f28e 	sxth.w	r2, lr
 800cf7a:	9205      	str	r2, [sp, #20]
 800cf7c:	9e04      	ldr	r6, [sp, #16]
 800cf7e:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cf82:	4432      	add	r2, r6
 800cf84:	b292      	uxth	r2, r2
 800cf86:	4584      	cmp	ip, r0
 800cf88:	9206      	str	r2, [sp, #24]
 800cf8a:	da26      	bge.n	800cfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800cf8c:	eba3 0309 	sub.w	r3, r3, r9
 800cf90:	eba2 020e 	sub.w	r2, r2, lr
 800cf94:	b29b      	uxth	r3, r3
 800cf96:	b292      	uxth	r2, r2
 800cf98:	fa0f fa83 	sxth.w	sl, r3
 800cf9c:	b211      	sxth	r1, r2
 800cf9e:	eba0 000c 	sub.w	r0, r0, ip
 800cfa2:	eba4 0408 	sub.w	r4, r4, r8
 800cfa6:	fb0a f000 	mul.w	r0, sl, r0
 800cfaa:	434c      	muls	r4, r1
 800cfac:	42a0      	cmp	r0, r4
 800cfae:	9800      	ldr	r0, [sp, #0]
 800cfb0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cfb4:	dc06      	bgt.n	800cfc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800cfb6:	4458      	add	r0, fp
 800cfb8:	9a05      	ldr	r2, [sp, #20]
 800cfba:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800cfbe:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800cfc2:	e7ca      	b.n	800cf5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cfc4:	eb0b 0300 	add.w	r3, fp, r0
 800cfc8:	9903      	ldr	r1, [sp, #12]
 800cfca:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800cfce:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800cfd2:	442a      	add	r2, r5
 800cfd4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cfd8:	e5d9      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cfda:	9e04      	ldr	r6, [sp, #16]
 800cfdc:	9a03      	ldr	r2, [sp, #12]
 800cfde:	1b89      	subs	r1, r1, r6
 800cfe0:	b21e      	sxth	r6, r3
 800cfe2:	b289      	uxth	r1, r1
 800cfe4:	4296      	cmp	r6, r2
 800cfe6:	fa0f fc81 	sxth.w	ip, r1
 800cfea:	dd26      	ble.n	800d03a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800cfec:	eba3 0309 	sub.w	r3, r3, r9
 800cff0:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800cff4:	9e05      	ldr	r6, [sp, #20]
 800cff6:	b29b      	uxth	r3, r3
 800cff8:	eba6 0902 	sub.w	r9, r6, r2
 800cffc:	b218      	sxth	r0, r3
 800cffe:	eba4 0408 	sub.w	r4, r4, r8
 800d002:	fb0c f404 	mul.w	r4, ip, r4
 800d006:	fb00 f909 	mul.w	r9, r0, r9
 800d00a:	9a00      	ldr	r2, [sp, #0]
 800d00c:	454c      	cmp	r4, r9
 800d00e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d012:	db03      	blt.n	800d01c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800d014:	445a      	add	r2, fp
 800d016:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800d01a:	e79e      	b.n	800cf5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d01c:	eb0b 0302 	add.w	r3, fp, r2
 800d020:	9a03      	ldr	r2, [sp, #12]
 800d022:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800d026:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800d02a:	4429      	add	r1, r5
 800d02c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800d030:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d034:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d038:	e5a9      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d03a:	9b06      	ldr	r3, [sp, #24]
 800d03c:	9c07      	ldr	r4, [sp, #28]
 800d03e:	eba3 020e 	sub.w	r2, r3, lr
 800d042:	b292      	uxth	r2, r2
 800d044:	2c06      	cmp	r4, #6
 800d046:	b213      	sxth	r3, r2
 800d048:	d80d      	bhi.n	800d066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800d04a:	4651      	mov	r1, sl
 800d04c:	aa0a      	add	r2, sp, #40	; 0x28
 800d04e:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800d052:	6849      	ldr	r1, [r1, #4]
 800d054:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800d058:	9b05      	ldr	r3, [sp, #20]
 800d05a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d05e:	c203      	stmia	r2!, {r0, r1}
 800d060:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d064:	e758      	b.n	800cf18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800d066:	9c00      	ldr	r4, [sp, #0]
 800d068:	4563      	cmp	r3, ip
 800d06a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d06e:	db0d      	blt.n	800d08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800d070:	4429      	add	r1, r5
 800d072:	9a04      	ldr	r2, [sp, #16]
 800d074:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d078:	b289      	uxth	r1, r1
 800d07a:	445c      	add	r4, fp
 800d07c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d080:	4411      	add	r1, r2
 800d082:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d086:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d08a:	e580      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d08c:	445c      	add	r4, fp
 800d08e:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d092:	e79e      	b.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800d094:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d098:	2f07      	cmp	r7, #7
 800d09a:	d806      	bhi.n	800d0aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800d09c:	ab08      	add	r3, sp, #32
 800d09e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d0a2:	9801      	ldr	r0, [sp, #4]
 800d0a4:	f7ff fd44 	bl	800cb30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d0a8:	e5db      	b.n	800cc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d0aa:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d0ae:	f107 39ff 	add.w	r9, r7, #4294967295
 800d0b2:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d0b6:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d0ba:	f04f 35ff 	mov.w	r5, #4294967295
 800d0be:	2400      	movs	r4, #0
 800d0c0:	9304      	str	r3, [sp, #16]
 800d0c2:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d0c6:	9300      	str	r3, [sp, #0]
 800d0c8:	f109 32ff 	add.w	r2, r9, #4294967295
 800d0cc:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d0d0:	9303      	str	r3, [sp, #12]
 800d0d2:	4690      	mov	r8, r2
 800d0d4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d0d8:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d0dc:	bf14      	ite	ne
 800d0de:	9904      	ldrne	r1, [sp, #16]
 800d0e0:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d0e4:	6818      	ldr	r0, [r3, #0]
 800d0e6:	9206      	str	r2, [sp, #24]
 800d0e8:	bf18      	it	ne
 800d0ea:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d0ee:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d0f2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d0f6:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d0fa:	9305      	str	r3, [sp, #20]
 800d0fc:	fb16 f601 	smulbb	r6, r6, r1
 800d100:	6859      	ldr	r1, [r3, #4]
 800d102:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d106:	4671      	mov	r1, lr
 800d108:	a80a      	add	r0, sp, #40	; 0x28
 800d10a:	f7ff fc45 	bl	800c998 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d10e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d112:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d116:	9b03      	ldr	r3, [sp, #12]
 800d118:	9a00      	ldr	r2, [sp, #0]
 800d11a:	fb11 f100 	smulbb	r1, r1, r0
 800d11e:	fb02 6603 	mla	r6, r2, r3, r6
 800d122:	1b8e      	subs	r6, r1, r6
 800d124:	2008      	movs	r0, #8
 800d126:	fb91 f1f0 	sdiv	r1, r1, r0
 800d12a:	42b1      	cmp	r1, r6
 800d12c:	dc21      	bgt.n	800d172 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d12e:	4556      	cmp	r6, sl
 800d130:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d134:	da03      	bge.n	800d13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d136:	b1e6      	cbz	r6, 800d172 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d138:	46b2      	mov	sl, r6
 800d13a:	4645      	mov	r5, r8
 800d13c:	464c      	mov	r4, r9
 800d13e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d142:	f118 0f02 	cmn.w	r8, #2
 800d146:	d1c7      	bne.n	800d0d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800d148:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d14c:	f1a7 0708 	sub.w	r7, r7, #8
 800d150:	4691      	mov	r9, r2
 800d152:	d1b6      	bne.n	800d0c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800d154:	9b01      	ldr	r3, [sp, #4]
 800d156:	b2a6      	uxth	r6, r4
 800d158:	00e4      	lsls	r4, r4, #3
 800d15a:	1918      	adds	r0, r3, r4
 800d15c:	1c6b      	adds	r3, r5, #1
 800d15e:	d10b      	bne.n	800d178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d160:	4601      	mov	r1, r0
 800d162:	9802      	ldr	r0, [sp, #8]
 800d164:	f7ff fc18 	bl	800c998 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d168:	4631      	mov	r1, r6
 800d16a:	9801      	ldr	r0, [sp, #4]
 800d16c:	f7ff fcbe 	bl	800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d170:	e50d      	b.n	800cb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d172:	4645      	mov	r5, r8
 800d174:	464c      	mov	r4, r9
 800d176:	e7ed      	b.n	800d154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800d178:	9b01      	ldr	r3, [sp, #4]
 800d17a:	00ed      	lsls	r5, r5, #3
 800d17c:	1959      	adds	r1, r3, r5
 800d17e:	f7ff fc0b 	bl	800c998 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d182:	9b02      	ldr	r3, [sp, #8]
 800d184:	cb03      	ldmia	r3!, {r0, r1}
 800d186:	445d      	add	r5, fp
 800d188:	445c      	add	r4, fp
 800d18a:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d18e:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d192:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d196:	9b02      	ldr	r3, [sp, #8]
 800d198:	6861      	ldr	r1, [r4, #4]
 800d19a:	c303      	stmia	r3!, {r0, r1}
 800d19c:	e7e4      	b.n	800d168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800d1a0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d1a0:	b530      	push	{r4, r5, lr}
 800d1a2:	4b1d      	ldr	r3, [pc, #116]	; (800d218 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d1a4:	b085      	sub	sp, #20
 800d1a6:	460c      	mov	r4, r1
 800d1a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d1ac:	4b1b      	ldr	r3, [pc, #108]	; (800d21c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d1ae:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d1b2:	2100      	movs	r1, #0
 800d1b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d1b8:	9100      	str	r1, [sp, #0]
 800d1ba:	4605      	mov	r5, r0
 800d1bc:	6861      	ldr	r1, [r4, #4]
 800d1be:	6820      	ldr	r0, [r4, #0]
 800d1c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d1c4:	ab02      	add	r3, sp, #8
 800d1c6:	c303      	stmia	r3!, {r0, r1}
 800d1c8:	4669      	mov	r1, sp
 800d1ca:	a802      	add	r0, sp, #8
 800d1cc:	f7fc f9a4 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800d1d0:	ab02      	add	r3, sp, #8
 800d1d2:	cb03      	ldmia	r3!, {r0, r1}
 800d1d4:	4b12      	ldr	r3, [pc, #72]	; (800d220 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d1d6:	6020      	str	r0, [r4, #0]
 800d1d8:	6818      	ldr	r0, [r3, #0]
 800d1da:	6061      	str	r1, [r4, #4]
 800d1dc:	b138      	cbz	r0, 800d1ee <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d1de:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d1e2:	b133      	cbz	r3, 800d1f2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d1e4:	6821      	ldr	r1, [r4, #0]
 800d1e6:	6862      	ldr	r2, [r4, #4]
 800d1e8:	4628      	mov	r0, r5
 800d1ea:	f7ff fcc3 	bl	800cb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d1ee:	b005      	add	sp, #20
 800d1f0:	bd30      	pop	{r4, r5, pc}
 800d1f2:	6803      	ldr	r3, [r0, #0]
 800d1f4:	4621      	mov	r1, r4
 800d1f6:	689b      	ldr	r3, [r3, #8]
 800d1f8:	4798      	blx	r3
 800d1fa:	4b0a      	ldr	r3, [pc, #40]	; (800d224 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d1fc:	6818      	ldr	r0, [r3, #0]
 800d1fe:	b118      	cbz	r0, 800d208 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d200:	6803      	ldr	r3, [r0, #0]
 800d202:	4621      	mov	r1, r4
 800d204:	689b      	ldr	r3, [r3, #8]
 800d206:	4798      	blx	r3
 800d208:	4b07      	ldr	r3, [pc, #28]	; (800d228 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d20a:	6818      	ldr	r0, [r3, #0]
 800d20c:	6803      	ldr	r3, [r0, #0]
 800d20e:	4621      	mov	r1, r4
 800d210:	69db      	ldr	r3, [r3, #28]
 800d212:	4798      	blx	r3
 800d214:	e7eb      	b.n	800d1ee <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d216:	bf00      	nop
 800d218:	2000a2ac 	.word	0x2000a2ac
 800d21c:	2000a2ae 	.word	0x2000a2ae
 800d220:	2000a2f4 	.word	0x2000a2f4
 800d224:	2000a2f0 	.word	0x2000a2f0
 800d228:	2000a2b8 	.word	0x2000a2b8

0800d22c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d230:	4604      	mov	r4, r0
 800d232:	b09b      	sub	sp, #108	; 0x6c
 800d234:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d238:	b129      	cbz	r1, 800d246 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d23a:	2300      	movs	r3, #0
 800d23c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d240:	b01b      	add	sp, #108	; 0x6c
 800d242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d246:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d24a:	4630      	mov	r0, r6
 800d24c:	f7fc f9a7 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d250:	4605      	mov	r5, r0
 800d252:	b940      	cbnz	r0, 800d266 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d254:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d258:	4620      	mov	r0, r4
 800d25a:	f7ff fc8b 	bl	800cb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d25e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d262:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d266:	4ba7      	ldr	r3, [pc, #668]	; (800d504 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d268:	681b      	ldr	r3, [r3, #0]
 800d26a:	b33b      	cbz	r3, 800d2bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d26c:	4da6      	ldr	r5, [pc, #664]	; (800d508 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d26e:	4628      	mov	r0, r5
 800d270:	f7fc f995 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d274:	4606      	mov	r6, r0
 800d276:	bb08      	cbnz	r0, 800d2bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d278:	4628      	mov	r0, r5
 800d27a:	f7ff f9ef 	bl	800c65c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d27e:	6829      	ldr	r1, [r5, #0]
 800d280:	686a      	ldr	r2, [r5, #4]
 800d282:	4620      	mov	r0, r4
 800d284:	f7ff fc76 	bl	800cb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d288:	802e      	strh	r6, [r5, #0]
 800d28a:	806e      	strh	r6, [r5, #2]
 800d28c:	80ae      	strh	r6, [r5, #4]
 800d28e:	80ee      	strh	r6, [r5, #6]
 800d290:	4f9e      	ldr	r7, [pc, #632]	; (800d50c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d292:	a809      	add	r0, sp, #36	; 0x24
 800d294:	f7ff fbd7 	bl	800ca46 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d298:	883d      	ldrh	r5, [r7, #0]
 800d29a:	462e      	mov	r6, r5
 800d29c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d2a0:	42b3      	cmp	r3, r6
 800d2a2:	d910      	bls.n	800d2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d2a4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d2a8:	a809      	add	r0, sp, #36	; 0x24
 800d2aa:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d2ae:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d2b2:	3601      	adds	r6, #1
 800d2b4:	f7ff fc3c 	bl	800cb30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d2b8:	b2b6      	uxth	r6, r6
 800d2ba:	e7ef      	b.n	800d29c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d2bc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d2c0:	2b00      	cmp	r3, #0
 800d2c2:	d1e5      	bne.n	800d290 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d2c4:	e7bc      	b.n	800d240 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d2c6:	462e      	mov	r6, r5
 800d2c8:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d2cc:	42b3      	cmp	r3, r6
 800d2ce:	d90b      	bls.n	800d2e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d2d0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d2d4:	4620      	mov	r0, r4
 800d2d6:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d2da:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d2de:	3601      	adds	r6, #1
 800d2e0:	f7ff fc48 	bl	800cb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d2e4:	b2b6      	uxth	r6, r6
 800d2e6:	e7ef      	b.n	800d2c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d2e8:	4a89      	ldr	r2, [pc, #548]	; (800d510 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d2ea:	6813      	ldr	r3, [r2, #0]
 800d2ec:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d2f0:	2b01      	cmp	r3, #1
 800d2f2:	4690      	mov	r8, r2
 800d2f4:	f040 8094 	bne.w	800d420 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800d2f8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d2fc:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d300:	33aa      	adds	r3, #170	; 0xaa
 800d302:	f04f 0900 	mov.w	r9, #0
 800d306:	42a8      	cmp	r0, r5
 800d308:	f103 0308 	add.w	r3, r3, #8
 800d30c:	dd0a      	ble.n	800d324 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d30e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d312:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d316:	440a      	add	r2, r1
 800d318:	b212      	sxth	r2, r2
 800d31a:	4591      	cmp	r9, r2
 800d31c:	bfb8      	it	lt
 800d31e:	4691      	movlt	r9, r2
 800d320:	3501      	adds	r5, #1
 800d322:	e7f0      	b.n	800d306 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d324:	4b7b      	ldr	r3, [pc, #492]	; (800d514 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d326:	4e7c      	ldr	r6, [pc, #496]	; (800d518 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d328:	881d      	ldrh	r5, [r3, #0]
 800d32a:	2300      	movs	r3, #0
 800d32c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d330:	2d0f      	cmp	r5, #15
 800d332:	bf8c      	ite	hi
 800d334:	08ed      	lsrhi	r5, r5, #3
 800d336:	2501      	movls	r5, #1
 800d338:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d33c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d340:	f8d8 0000 	ldr.w	r0, [r8]
 800d344:	440b      	add	r3, r1
 800d346:	b21b      	sxth	r3, r3
 800d348:	4599      	cmp	r9, r3
 800d34a:	6802      	ldr	r2, [r0, #0]
 800d34c:	dd4b      	ble.n	800d3e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800d34e:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 800d352:	4798      	blx	r3
 800d354:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d358:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d35c:	4413      	add	r3, r2
 800d35e:	b21b      	sxth	r3, r3
 800d360:	195a      	adds	r2, r3, r5
 800d362:	4290      	cmp	r0, r2
 800d364:	da07      	bge.n	800d376 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d366:	4581      	cmp	r9, r0
 800d368:	dd05      	ble.n	800d376 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d36a:	4298      	cmp	r0, r3
 800d36c:	da33      	bge.n	800d3d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d36e:	2b00      	cmp	r3, #0
 800d370:	dd31      	ble.n	800d3d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d372:	4648      	mov	r0, r9
 800d374:	e004      	b.n	800d380 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d376:	4298      	cmp	r0, r3
 800d378:	dbfb      	blt.n	800d372 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d37a:	4548      	cmp	r0, r9
 800d37c:	bfa8      	it	ge
 800d37e:	4648      	movge	r0, r9
 800d380:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d384:	f8b7 a000 	ldrh.w	sl, [r7]
 800d388:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d38c:	2100      	movs	r1, #0
 800d38e:	1ac0      	subs	r0, r0, r3
 800d390:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d394:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d398:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d39c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d3a0:	4553      	cmp	r3, sl
 800d3a2:	d9c9      	bls.n	800d338 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d3a4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d3a8:	ab07      	add	r3, sp, #28
 800d3aa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d3ae:	6851      	ldr	r1, [r2, #4]
 800d3b0:	c303      	stmia	r3!, {r0, r1}
 800d3b2:	a807      	add	r0, sp, #28
 800d3b4:	a905      	add	r1, sp, #20
 800d3b6:	f7fc f8af 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800d3ba:	a807      	add	r0, sp, #28
 800d3bc:	f7fc f8ef 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3c0:	b920      	cbnz	r0, 800d3cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d3c2:	6823      	ldr	r3, [r4, #0]
 800d3c4:	a907      	add	r1, sp, #28
 800d3c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d3c8:	4620      	mov	r0, r4
 800d3ca:	4798      	blx	r3
 800d3cc:	f10a 0a01 	add.w	sl, sl, #1
 800d3d0:	fa1f fa8a 	uxth.w	sl, sl
 800d3d4:	e7e2      	b.n	800d39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d3d6:	f8d8 0000 	ldr.w	r0, [r8]
 800d3da:	6803      	ldr	r3, [r0, #0]
 800d3dc:	2101      	movs	r1, #1
 800d3de:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d3e2:	4798      	blx	r3
 800d3e4:	e7a8      	b.n	800d338 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d3e6:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800d3e8:	4798      	blx	r3
 800d3ea:	4b4c      	ldr	r3, [pc, #304]	; (800d51c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800d3ec:	781b      	ldrb	r3, [r3, #0]
 800d3ee:	2b00      	cmp	r3, #0
 800d3f0:	f43f af26 	beq.w	800d240 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d3f4:	2300      	movs	r3, #0
 800d3f6:	883d      	ldrh	r5, [r7, #0]
 800d3f8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d3fc:	34ea      	adds	r4, #234	; 0xea
 800d3fe:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d402:	42ab      	cmp	r3, r5
 800d404:	f67f af1c 	bls.w	800d240 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d408:	ab1a      	add	r3, sp, #104	; 0x68
 800d40a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d40e:	3b44      	subs	r3, #68	; 0x44
 800d410:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d414:	4620      	mov	r0, r4
 800d416:	3501      	adds	r5, #1
 800d418:	f7ff fb8a 	bl	800cb30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d41c:	b2ad      	uxth	r5, r5
 800d41e:	e7ee      	b.n	800d3fe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800d420:	2b02      	cmp	r3, #2
 800d422:	f040 813e 	bne.w	800d6a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d426:	4b3e      	ldr	r3, [pc, #248]	; (800d520 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800d428:	781b      	ldrb	r3, [r3, #0]
 800d42a:	2b01      	cmp	r3, #1
 800d42c:	d02c      	beq.n	800d488 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800d42e:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d432:	883a      	ldrh	r2, [r7, #0]
 800d434:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d438:	3201      	adds	r2, #1
 800d43a:	b292      	uxth	r2, r2
 800d43c:	2900      	cmp	r1, #0
 800d43e:	d0d4      	beq.n	800d3ea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d440:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d444:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d448:	441d      	add	r5, r3
 800d44a:	b22d      	sxth	r5, r5
 800d44c:	4610      	mov	r0, r2
 800d44e:	f04f 0a00 	mov.w	sl, #0
 800d452:	b283      	uxth	r3, r0
 800d454:	4299      	cmp	r1, r3
 800d456:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d45a:	f240 80c5 	bls.w	800d5e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800d45e:	4426      	add	r6, r4
 800d460:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d464:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d468:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d46c:	4573      	cmp	r3, lr
 800d46e:	4684      	mov	ip, r0
 800d470:	f340 80a7 	ble.w	800d5c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800d474:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d478:	4475      	add	r5, lr
 800d47a:	b22d      	sxth	r5, r5
 800d47c:	429d      	cmp	r5, r3
 800d47e:	bfa8      	it	ge
 800d480:	461d      	movge	r5, r3
 800d482:	3001      	adds	r0, #1
 800d484:	46e2      	mov	sl, ip
 800d486:	e7e4      	b.n	800d452 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800d488:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d48c:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d490:	f1bb 0f00 	cmp.w	fp, #0
 800d494:	d0a9      	beq.n	800d3ea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d496:	883b      	ldrh	r3, [r7, #0]
 800d498:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d49c:	3301      	adds	r3, #1
 800d49e:	b29b      	uxth	r3, r3
 800d4a0:	2600      	movs	r6, #0
 800d4a2:	b299      	uxth	r1, r3
 800d4a4:	458b      	cmp	fp, r1
 800d4a6:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d4aa:	d93b      	bls.n	800d524 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800d4ac:	4425      	add	r5, r4
 800d4ae:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d4b2:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d4b6:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d4ba:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d4be:	4408      	add	r0, r1
 800d4c0:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d4c4:	4471      	add	r1, lr
 800d4c6:	b200      	sxth	r0, r0
 800d4c8:	b209      	sxth	r1, r1
 800d4ca:	4288      	cmp	r0, r1
 800d4cc:	469c      	mov	ip, r3
 800d4ce:	da06      	bge.n	800d4de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800d4d0:	4586      	cmp	lr, r0
 800d4d2:	4672      	mov	r2, lr
 800d4d4:	bfb8      	it	lt
 800d4d6:	4602      	movlt	r2, r0
 800d4d8:	3301      	adds	r3, #1
 800d4da:	4666      	mov	r6, ip
 800d4dc:	e7e1      	b.n	800d4a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d4de:	d10b      	bne.n	800d4f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800d4e0:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d4e4:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d4e8:	458c      	cmp	ip, r1
 800d4ea:	bfb4      	ite	lt
 800d4ec:	469c      	movlt	ip, r3
 800d4ee:	46b4      	movge	ip, r6
 800d4f0:	4572      	cmp	r2, lr
 800d4f2:	bfb8      	it	lt
 800d4f4:	4672      	movlt	r2, lr
 800d4f6:	e7ef      	b.n	800d4d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d4f8:	428a      	cmp	r2, r1
 800d4fa:	bfb8      	it	lt
 800d4fc:	460a      	movlt	r2, r1
 800d4fe:	46b4      	mov	ip, r6
 800d500:	e7ea      	b.n	800d4d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d502:	bf00      	nop
 800d504:	2000a2f0 	.word	0x2000a2f0
 800d508:	2000a2fc 	.word	0x2000a2fc
 800d50c:	20000060 	.word	0x20000060
 800d510:	2000a2b8 	.word	0x2000a2b8
 800d514:	2000a2ae 	.word	0x2000a2ae
 800d518:	2000a2ac 	.word	0x2000a2ac
 800d51c:	2000a2b6 	.word	0x2000a2b6
 800d520:	2000a2b0 	.word	0x2000a2b0
 800d524:	1961      	adds	r1, r4, r5
 800d526:	ab07      	add	r3, sp, #28
 800d528:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d52c:	6849      	ldr	r1, [r1, #4]
 800d52e:	c303      	stmia	r3!, {r0, r1}
 800d530:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d534:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d538:	2b13      	cmp	r3, #19
 800d53a:	bfd8      	it	le
 800d53c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d540:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d544:	440b      	add	r3, r1
 800d546:	1a9b      	subs	r3, r3, r2
 800d548:	a807      	add	r0, sp, #28
 800d54a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d54e:	f7ff f89f 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d552:	a807      	add	r0, sp, #28
 800d554:	f7fc f823 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d558:	2800      	cmp	r0, #0
 800d55a:	d197      	bne.n	800d48c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d55c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d560:	f8d8 0000 	ldr.w	r0, [r8]
 800d564:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d568:	f8d0 e000 	ldr.w	lr, [r0]
 800d56c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d570:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d574:	f1bc 0f14 	cmp.w	ip, #20
 800d578:	bfa8      	it	ge
 800d57a:	f04f 0c14 	movge.w	ip, #20
 800d57e:	fa1f fc8c 	uxth.w	ip, ip
 800d582:	f8cd c000 	str.w	ip, [sp]
 800d586:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 800d58a:	47d0      	blx	sl
 800d58c:	4682      	mov	sl, r0
 800d58e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d592:	a807      	add	r0, sp, #28
 800d594:	f7ff f862 	bl	800c65c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d598:	6823      	ldr	r3, [r4, #0]
 800d59a:	4425      	add	r5, r4
 800d59c:	4620      	mov	r0, r4
 800d59e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5a0:	a907      	add	r1, sp, #28
 800d5a2:	4798      	blx	r3
 800d5a4:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d5a8:	eba0 000a 	sub.w	r0, r0, sl
 800d5ac:	b200      	sxth	r0, r0
 800d5ae:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d5b2:	2800      	cmp	r0, #0
 800d5b4:	f47f af6a 	bne.w	800d48c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d5b8:	b2b1      	uxth	r1, r6
 800d5ba:	4648      	mov	r0, r9
 800d5bc:	f7ff fa96 	bl	800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d5c0:	e764      	b.n	800d48c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d5c2:	d10c      	bne.n	800d5de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800d5c4:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d5c8:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d5cc:	45b4      	cmp	ip, r6
 800d5ce:	bfb4      	ite	lt
 800d5d0:	4684      	movlt	ip, r0
 800d5d2:	46d4      	movge	ip, sl
 800d5d4:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d5d8:	4433      	add	r3, r6
 800d5da:	b21b      	sxth	r3, r3
 800d5dc:	e74e      	b.n	800d47c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800d5de:	4575      	cmp	r5, lr
 800d5e0:	bfa8      	it	ge
 800d5e2:	4675      	movge	r5, lr
 800d5e4:	46d4      	mov	ip, sl
 800d5e6:	e74c      	b.n	800d482 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800d5e8:	eb0b 0006 	add.w	r0, fp, r6
 800d5ec:	4426      	add	r6, r4
 800d5ee:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d5f2:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d5f6:	f1b9 0f13 	cmp.w	r9, #19
 800d5fa:	bfde      	ittt	le
 800d5fc:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d600:	444d      	addle	r5, r9
 800d602:	b22d      	sxthle	r5, r5
 800d604:	f7fb ffcb 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d608:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d60c:	2800      	cmp	r0, #0
 800d60e:	f47f af15 	bne.w	800d43c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800d612:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d616:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d61a:	eba5 050c 	sub.w	r5, r5, ip
 800d61e:	fa1f f28c 	uxth.w	r2, ip
 800d622:	fa1f f989 	uxth.w	r9, r9
 800d626:	eb02 0009 	add.w	r0, r2, r9
 800d62a:	2d14      	cmp	r5, #20
 800d62c:	bfa8      	it	ge
 800d62e:	2514      	movge	r5, #20
 800d630:	b200      	sxth	r0, r0
 800d632:	fa1f fe85 	uxth.w	lr, r5
 800d636:	eba0 000c 	sub.w	r0, r0, ip
 800d63a:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d63e:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d642:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d646:	4586      	cmp	lr, r0
 800d648:	f8d8 0000 	ldr.w	r0, [r8]
 800d64c:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d650:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d654:	bfb8      	it	lt
 800d656:	46f1      	movlt	r9, lr
 800d658:	6805      	ldr	r5, [r0, #0]
 800d65a:	f8cd 9000 	str.w	r9, [sp]
 800d65e:	b29b      	uxth	r3, r3
 800d660:	b289      	uxth	r1, r1
 800d662:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 800d666:	47a8      	blx	r5
 800d668:	6823      	ldr	r3, [r4, #0]
 800d66a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d66e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d670:	a907      	add	r1, sp, #28
 800d672:	4620      	mov	r0, r4
 800d674:	4798      	blx	r3
 800d676:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d67a:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d67e:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d682:	1a5b      	subs	r3, r3, r1
 800d684:	440a      	add	r2, r1
 800d686:	b21b      	sxth	r3, r3
 800d688:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d68c:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d690:	2b00      	cmp	r3, #0
 800d692:	f47f aece 	bne.w	800d432 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d696:	fa1f f18a 	uxth.w	r1, sl
 800d69a:	4658      	mov	r0, fp
 800d69c:	f7ff fa26 	bl	800caec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d6a0:	e6c7      	b.n	800d432 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d6a2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d6a6:	42ab      	cmp	r3, r5
 800d6a8:	f67f ae9f 	bls.w	800d3ea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d6ac:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d6b0:	ab07      	add	r3, sp, #28
 800d6b2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d6b6:	6851      	ldr	r1, [r2, #4]
 800d6b8:	c303      	stmia	r3!, {r0, r1}
 800d6ba:	a807      	add	r0, sp, #28
 800d6bc:	f7fb ff6f 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d6c0:	b920      	cbnz	r0, 800d6cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800d6c2:	6823      	ldr	r3, [r4, #0]
 800d6c4:	a907      	add	r1, sp, #28
 800d6c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d6c8:	4620      	mov	r0, r4
 800d6ca:	4798      	blx	r3
 800d6cc:	3501      	adds	r5, #1
 800d6ce:	b2ad      	uxth	r5, r5
 800d6d0:	e7e7      	b.n	800d6a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d6d2:	bf00      	nop

0800d6d4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d6d4:	4b03      	ldr	r3, [pc, #12]	; (800d6e4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d6d6:	2200      	movs	r2, #0
 800d6d8:	801a      	strh	r2, [r3, #0]
 800d6da:	805a      	strh	r2, [r3, #2]
 800d6dc:	809a      	strh	r2, [r3, #4]
 800d6de:	80da      	strh	r2, [r3, #6]
 800d6e0:	4770      	bx	lr
 800d6e2:	bf00      	nop
 800d6e4:	2000a2fc 	.word	0x2000a2fc

0800d6e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6ec:	4606      	mov	r6, r0
 800d6ee:	b09d      	sub	sp, #116	; 0x74
 800d6f0:	a803      	add	r0, sp, #12
 800d6f2:	4614      	mov	r4, r2
 800d6f4:	468a      	mov	sl, r1
 800d6f6:	461d      	mov	r5, r3
 800d6f8:	f000 fd66 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800d6fc:	6833      	ldr	r3, [r6, #0]
 800d6fe:	4630      	mov	r0, r6
 800d700:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d702:	4798      	blx	r3
 800d704:	6833      	ldr	r3, [r6, #0]
 800d706:	4607      	mov	r7, r0
 800d708:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d70a:	4630      	mov	r0, r6
 800d70c:	4798      	blx	r3
 800d70e:	462a      	mov	r2, r5
 800d710:	9000      	str	r0, [sp, #0]
 800d712:	4621      	mov	r1, r4
 800d714:	463b      	mov	r3, r7
 800d716:	a803      	add	r0, sp, #12
 800d718:	f000 fda9 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d71c:	2500      	movs	r5, #0
 800d71e:	462c      	mov	r4, r5
 800d720:	46a9      	mov	r9, r5
 800d722:	46a8      	mov	r8, r5
 800d724:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d728:	2300      	movs	r3, #0
 800d72a:	9302      	str	r3, [sp, #8]
 800d72c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d730:	429c      	cmp	r4, r3
 800d732:	d002      	beq.n	800d73a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d734:	455c      	cmp	r4, fp
 800d736:	bf18      	it	ne
 800d738:	4625      	movne	r5, r4
 800d73a:	ab02      	add	r3, sp, #8
 800d73c:	4632      	mov	r2, r6
 800d73e:	4651      	mov	r1, sl
 800d740:	a803      	add	r0, sp, #12
 800d742:	f001 f893 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d746:	4604      	mov	r4, r0
 800d748:	b108      	cbz	r0, 800d74e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d74a:	280a      	cmp	r0, #10
 800d74c:	d10a      	bne.n	800d764 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d74e:	45c1      	cmp	r9, r8
 800d750:	bf38      	it	cc
 800d752:	46c1      	movcc	r9, r8
 800d754:	f04f 0800 	mov.w	r8, #0
 800d758:	2c00      	cmp	r4, #0
 800d75a:	d1e5      	bne.n	800d728 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d75c:	4648      	mov	r0, r9
 800d75e:	b01d      	add	sp, #116	; 0x74
 800d760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d764:	9a02      	ldr	r2, [sp, #8]
 800d766:	2a00      	cmp	r2, #0
 800d768:	d0de      	beq.n	800d728 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d76a:	7b57      	ldrb	r7, [r2, #13]
 800d76c:	6833      	ldr	r3, [r6, #0]
 800d76e:	8894      	ldrh	r4, [r2, #4]
 800d770:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d772:	007f      	lsls	r7, r7, #1
 800d774:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d778:	7a97      	ldrb	r7, [r2, #10]
 800d77a:	4629      	mov	r1, r5
 800d77c:	4307      	orrs	r7, r0
 800d77e:	4630      	mov	r0, r6
 800d780:	4798      	blx	r3
 800d782:	4438      	add	r0, r7
 800d784:	4480      	add	r8, r0
 800d786:	fa1f f888 	uxth.w	r8, r8
 800d78a:	e7e5      	b.n	800d758 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d78c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d78c:	b508      	push	{r3, lr}
 800d78e:	6803      	ldr	r3, [r0, #0]
 800d790:	68db      	ldr	r3, [r3, #12]
 800d792:	4798      	blx	r3
 800d794:	b128      	cbz	r0, 800d7a2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d796:	7b43      	ldrb	r3, [r0, #13]
 800d798:	7a80      	ldrb	r0, [r0, #10]
 800d79a:	005b      	lsls	r3, r3, #1
 800d79c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d7a0:	4318      	orrs	r0, r3
 800d7a2:	bd08      	pop	{r3, pc}

0800d7a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d7a4:	b40e      	push	{r1, r2, r3}
 800d7a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7a8:	b09e      	sub	sp, #120	; 0x78
 800d7aa:	ab23      	add	r3, sp, #140	; 0x8c
 800d7ac:	4605      	mov	r5, r0
 800d7ae:	f853 4b04 	ldr.w	r4, [r3], #4
 800d7b2:	9303      	str	r3, [sp, #12]
 800d7b4:	a805      	add	r0, sp, #20
 800d7b6:	f000 fd07 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800d7ba:	682b      	ldr	r3, [r5, #0]
 800d7bc:	4628      	mov	r0, r5
 800d7be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7c0:	4798      	blx	r3
 800d7c2:	682b      	ldr	r3, [r5, #0]
 800d7c4:	4606      	mov	r6, r0
 800d7c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d7c8:	4628      	mov	r0, r5
 800d7ca:	4798      	blx	r3
 800d7cc:	4633      	mov	r3, r6
 800d7ce:	ae1e      	add	r6, sp, #120	; 0x78
 800d7d0:	4621      	mov	r1, r4
 800d7d2:	9000      	str	r0, [sp, #0]
 800d7d4:	9a03      	ldr	r2, [sp, #12]
 800d7d6:	2400      	movs	r4, #0
 800d7d8:	a805      	add	r0, sp, #20
 800d7da:	f000 fd48 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d7de:	f846 4d68 	str.w	r4, [r6, #-104]!
 800d7e2:	462a      	mov	r2, r5
 800d7e4:	4633      	mov	r3, r6
 800d7e6:	4621      	mov	r1, r4
 800d7e8:	a805      	add	r0, sp, #20
 800d7ea:	f001 f83f 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d7ee:	b1f0      	cbz	r0, 800d82e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d7f0:	280a      	cmp	r0, #10
 800d7f2:	d018      	beq.n	800d826 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d7f4:	9f04      	ldr	r7, [sp, #16]
 800d7f6:	b1b7      	cbz	r7, 800d826 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d7f8:	7b78      	ldrb	r0, [r7, #13]
 800d7fa:	7a3b      	ldrb	r3, [r7, #8]
 800d7fc:	88aa      	ldrh	r2, [r5, #4]
 800d7fe:	00c1      	lsls	r1, r0, #3
 800d800:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d804:	4319      	orrs	r1, r3
 800d806:	0643      	lsls	r3, r0, #25
 800d808:	bf44      	itt	mi
 800d80a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d80e:	b219      	sxthmi	r1, r3
 800d810:	0100      	lsls	r0, r0, #4
 800d812:	79fb      	ldrb	r3, [r7, #7]
 800d814:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d818:	4303      	orrs	r3, r0
 800d81a:	4413      	add	r3, r2
 800d81c:	1a5b      	subs	r3, r3, r1
 800d81e:	b29b      	uxth	r3, r3
 800d820:	42a3      	cmp	r3, r4
 800d822:	bfc8      	it	gt
 800d824:	b21c      	sxthgt	r4, r3
 800d826:	4633      	mov	r3, r6
 800d828:	462a      	mov	r2, r5
 800d82a:	2100      	movs	r1, #0
 800d82c:	e7dc      	b.n	800d7e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d82e:	b2a0      	uxth	r0, r4
 800d830:	b01e      	add	sp, #120	; 0x78
 800d832:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d836:	b003      	add	sp, #12
 800d838:	4770      	bx	lr

0800d83a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d83a:	b40e      	push	{r1, r2, r3}
 800d83c:	b570      	push	{r4, r5, r6, lr}
 800d83e:	b09d      	sub	sp, #116	; 0x74
 800d840:	ab21      	add	r3, sp, #132	; 0x84
 800d842:	4604      	mov	r4, r0
 800d844:	f853 5b04 	ldr.w	r5, [r3], #4
 800d848:	9302      	str	r3, [sp, #8]
 800d84a:	a803      	add	r0, sp, #12
 800d84c:	f000 fcbc 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800d850:	6823      	ldr	r3, [r4, #0]
 800d852:	4620      	mov	r0, r4
 800d854:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d856:	4798      	blx	r3
 800d858:	6823      	ldr	r3, [r4, #0]
 800d85a:	4606      	mov	r6, r0
 800d85c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d85e:	4620      	mov	r0, r4
 800d860:	4798      	blx	r3
 800d862:	4633      	mov	r3, r6
 800d864:	9000      	str	r0, [sp, #0]
 800d866:	9a02      	ldr	r2, [sp, #8]
 800d868:	4629      	mov	r1, r5
 800d86a:	a803      	add	r0, sp, #12
 800d86c:	f000 fcff 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d870:	a803      	add	r0, sp, #12
 800d872:	f001 f8f5 	bl	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d876:	2401      	movs	r4, #1
 800d878:	b2a3      	uxth	r3, r4
 800d87a:	b140      	cbz	r0, 800d88e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d87c:	280a      	cmp	r0, #10
 800d87e:	bf08      	it	eq
 800d880:	3301      	addeq	r3, #1
 800d882:	a803      	add	r0, sp, #12
 800d884:	bf08      	it	eq
 800d886:	b21c      	sxtheq	r4, r3
 800d888:	f001 f8ea 	bl	800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d88c:	e7f4      	b.n	800d878 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d88e:	4618      	mov	r0, r3
 800d890:	b01d      	add	sp, #116	; 0x74
 800d892:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d896:	b003      	add	sp, #12
 800d898:	4770      	bx	lr

0800d89a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d89a:	b40e      	push	{r1, r2, r3}
 800d89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d89e:	b09e      	sub	sp, #120	; 0x78
 800d8a0:	ab23      	add	r3, sp, #140	; 0x8c
 800d8a2:	4604      	mov	r4, r0
 800d8a4:	f853 5b04 	ldr.w	r5, [r3], #4
 800d8a8:	9303      	str	r3, [sp, #12]
 800d8aa:	a805      	add	r0, sp, #20
 800d8ac:	f000 fc8c 	bl	800e1c8 <_ZN8touchgfx12TextProviderC1Ev>
 800d8b0:	6823      	ldr	r3, [r4, #0]
 800d8b2:	4620      	mov	r0, r4
 800d8b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d8b6:	4798      	blx	r3
 800d8b8:	6823      	ldr	r3, [r4, #0]
 800d8ba:	4606      	mov	r6, r0
 800d8bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d8be:	4620      	mov	r0, r4
 800d8c0:	4798      	blx	r3
 800d8c2:	4633      	mov	r3, r6
 800d8c4:	4629      	mov	r1, r5
 800d8c6:	9000      	str	r0, [sp, #0]
 800d8c8:	9a03      	ldr	r2, [sp, #12]
 800d8ca:	a805      	add	r0, sp, #20
 800d8cc:	ad1e      	add	r5, sp, #120	; 0x78
 800d8ce:	f000 fcce 	bl	800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d8d2:	2100      	movs	r1, #0
 800d8d4:	f845 1d68 	str.w	r1, [r5, #-104]!
 800d8d8:	4622      	mov	r2, r4
 800d8da:	462b      	mov	r3, r5
 800d8dc:	a805      	add	r0, sp, #20
 800d8de:	f000 ffc5 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d8e2:	26ff      	movs	r6, #255	; 0xff
 800d8e4:	b1d8      	cbz	r0, 800d91e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d8e6:	280a      	cmp	r0, #10
 800d8e8:	d012      	beq.n	800d910 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d8ea:	9804      	ldr	r0, [sp, #16]
 800d8ec:	b180      	cbz	r0, 800d910 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d8ee:	7b47      	ldrb	r7, [r0, #13]
 800d8f0:	7922      	ldrb	r2, [r4, #4]
 800d8f2:	00fb      	lsls	r3, r7, #3
 800d8f4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d8f8:	7a03      	ldrb	r3, [r0, #8]
 800d8fa:	430b      	orrs	r3, r1
 800d8fc:	0679      	lsls	r1, r7, #25
 800d8fe:	bf44      	itt	mi
 800d900:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d904:	b21b      	sxthmi	r3, r3
 800d906:	1ad3      	subs	r3, r2, r3
 800d908:	b2db      	uxtb	r3, r3
 800d90a:	429e      	cmp	r6, r3
 800d90c:	bf28      	it	cs
 800d90e:	461e      	movcs	r6, r3
 800d910:	462b      	mov	r3, r5
 800d912:	4622      	mov	r2, r4
 800d914:	2100      	movs	r1, #0
 800d916:	a805      	add	r0, sp, #20
 800d918:	f000 ffa8 	bl	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d91c:	e7e2      	b.n	800d8e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d91e:	4630      	mov	r0, r6
 800d920:	b01e      	add	sp, #120	; 0x78
 800d922:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d926:	b003      	add	sp, #12
 800d928:	4770      	bx	lr

0800d92a <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d92a:	b513      	push	{r0, r1, r4, lr}
 800d92c:	6803      	ldr	r3, [r0, #0]
 800d92e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d932:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d936:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d93a:	2400      	movs	r4, #0
 800d93c:	9400      	str	r4, [sp, #0]
 800d93e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d942:	691b      	ldr	r3, [r3, #16]
 800d944:	4669      	mov	r1, sp
 800d946:	4798      	blx	r3
 800d948:	b002      	add	sp, #8
 800d94a:	bd10      	pop	{r4, pc}

0800d94c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d94c:	b538      	push	{r3, r4, r5, lr}
 800d94e:	680b      	ldr	r3, [r1, #0]
 800d950:	460c      	mov	r4, r1
 800d952:	68db      	ldr	r3, [r3, #12]
 800d954:	4605      	mov	r5, r0
 800d956:	4798      	blx	r3
 800d958:	6823      	ldr	r3, [r4, #0]
 800d95a:	4620      	mov	r0, r4
 800d95c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d95e:	4629      	mov	r1, r5
 800d960:	4798      	blx	r3
 800d962:	4628      	mov	r0, r5
 800d964:	bd38      	pop	{r3, r4, r5, pc}

0800d966 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d966:	b410      	push	{r4}
 800d968:	880a      	ldrh	r2, [r1, #0]
 800d96a:	8884      	ldrh	r4, [r0, #4]
 800d96c:	4422      	add	r2, r4
 800d96e:	800a      	strh	r2, [r1, #0]
 800d970:	88c4      	ldrh	r4, [r0, #6]
 800d972:	884a      	ldrh	r2, [r1, #2]
 800d974:	4422      	add	r2, r4
 800d976:	804a      	strh	r2, [r1, #2]
 800d978:	6940      	ldr	r0, [r0, #20]
 800d97a:	b120      	cbz	r0, 800d986 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d97c:	6803      	ldr	r3, [r0, #0]
 800d97e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d982:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d984:	4718      	bx	r3
 800d986:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d98a:	4770      	bx	lr

0800d98c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d98c:	b570      	push	{r4, r5, r6, lr}
 800d98e:	8882      	ldrh	r2, [r0, #4]
 800d990:	880b      	ldrh	r3, [r1, #0]
 800d992:	4413      	add	r3, r2
 800d994:	800b      	strh	r3, [r1, #0]
 800d996:	88c2      	ldrh	r2, [r0, #6]
 800d998:	884b      	ldrh	r3, [r1, #2]
 800d99a:	460c      	mov	r4, r1
 800d99c:	4413      	add	r3, r2
 800d99e:	804b      	strh	r3, [r1, #2]
 800d9a0:	4605      	mov	r5, r0
 800d9a2:	1d01      	adds	r1, r0, #4
 800d9a4:	4620      	mov	r0, r4
 800d9a6:	f7fb fdb7 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800d9aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d9ae:	2b00      	cmp	r3, #0
 800d9b0:	dd0b      	ble.n	800d9ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d9b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d9b6:	2b00      	cmp	r3, #0
 800d9b8:	dd07      	ble.n	800d9ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d9ba:	6968      	ldr	r0, [r5, #20]
 800d9bc:	b128      	cbz	r0, 800d9ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d9be:	6803      	ldr	r3, [r0, #0]
 800d9c0:	4621      	mov	r1, r4
 800d9c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d9c8:	4718      	bx	r3
 800d9ca:	bd70      	pop	{r4, r5, r6, pc}

0800d9cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d9cc:	b570      	push	{r4, r5, r6, lr}
 800d9ce:	8882      	ldrh	r2, [r0, #4]
 800d9d0:	880b      	ldrh	r3, [r1, #0]
 800d9d2:	4413      	add	r3, r2
 800d9d4:	800b      	strh	r3, [r1, #0]
 800d9d6:	88c2      	ldrh	r2, [r0, #6]
 800d9d8:	884b      	ldrh	r3, [r1, #2]
 800d9da:	460c      	mov	r4, r1
 800d9dc:	4413      	add	r3, r2
 800d9de:	804b      	strh	r3, [r1, #2]
 800d9e0:	4605      	mov	r5, r0
 800d9e2:	1d01      	adds	r1, r0, #4
 800d9e4:	4620      	mov	r0, r4
 800d9e6:	f7fb fd97 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800d9ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d9ee:	2b00      	cmp	r3, #0
 800d9f0:	dd15      	ble.n	800da1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800d9f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d9f6:	2b00      	cmp	r3, #0
 800d9f8:	dd11      	ble.n	800da1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800d9fa:	6968      	ldr	r0, [r5, #20]
 800d9fc:	b128      	cbz	r0, 800da0a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d9fe:	6803      	ldr	r3, [r0, #0]
 800da00:	691b      	ldr	r3, [r3, #16]
 800da02:	4621      	mov	r1, r4
 800da04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da08:	4718      	bx	r3
 800da0a:	4b05      	ldr	r3, [pc, #20]	; (800da20 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 800da0c:	681b      	ldr	r3, [r3, #0]
 800da0e:	3304      	adds	r3, #4
 800da10:	429d      	cmp	r5, r3
 800da12:	d104      	bne.n	800da1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800da14:	f7ff f806 	bl	800ca24 <_ZN8touchgfx11Application11getInstanceEv>
 800da18:	6803      	ldr	r3, [r0, #0]
 800da1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800da1c:	e7f1      	b.n	800da02 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 800da1e:	bd70      	pop	{r4, r5, r6, pc}
 800da20:	2000a2f4 	.word	0x2000a2f4

0800da24 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800da24:	b570      	push	{r4, r5, r6, lr}
 800da26:	4604      	mov	r4, r0
 800da28:	4616      	mov	r6, r2
 800da2a:	460d      	mov	r5, r1
 800da2c:	b901      	cbnz	r1, 800da30 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800da2e:	b192      	cbz	r2, 800da56 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800da30:	6823      	ldr	r3, [r4, #0]
 800da32:	4620      	mov	r0, r4
 800da34:	695b      	ldr	r3, [r3, #20]
 800da36:	4798      	blx	r3
 800da38:	88e2      	ldrh	r2, [r4, #6]
 800da3a:	88a1      	ldrh	r1, [r4, #4]
 800da3c:	4432      	add	r2, r6
 800da3e:	4429      	add	r1, r5
 800da40:	4620      	mov	r0, r4
 800da42:	b212      	sxth	r2, r2
 800da44:	b209      	sxth	r1, r1
 800da46:	f7f4 fd55 	bl	80024f4 <_ZN8touchgfx8Drawable5setXYEss>
 800da4a:	6823      	ldr	r3, [r4, #0]
 800da4c:	4620      	mov	r0, r4
 800da4e:	695b      	ldr	r3, [r3, #20]
 800da50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da54:	4718      	bx	r3
 800da56:	bd70      	pop	{r4, r5, r6, pc}

0800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800da58:	b510      	push	{r4, lr}
 800da5a:	4604      	mov	r4, r0
 800da5c:	4608      	mov	r0, r1
 800da5e:	2300      	movs	r3, #0
 800da60:	8023      	strh	r3, [r4, #0]
 800da62:	8063      	strh	r3, [r4, #2]
 800da64:	6803      	ldr	r3, [r0, #0]
 800da66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800da6a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800da6e:	80a1      	strh	r1, [r4, #4]
 800da70:	80e2      	strh	r2, [r4, #6]
 800da72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800da74:	4621      	mov	r1, r4
 800da76:	4798      	blx	r3
 800da78:	4620      	mov	r0, r4
 800da7a:	bd10      	pop	{r4, pc}

0800da7c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800da7c:	b530      	push	{r4, r5, lr}
 800da7e:	8083      	strh	r3, [r0, #4]
 800da80:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800da84:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800da88:	7183      	strb	r3, [r0, #6]
 800da8a:	79c3      	ldrb	r3, [r0, #7]
 800da8c:	6101      	str	r1, [r0, #16]
 800da8e:	f365 0306 	bfi	r3, r5, #0, #7
 800da92:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800da96:	8282      	strh	r2, [r0, #20]
 800da98:	f365 13c7 	bfi	r3, r5, #7, #1
 800da9c:	71c3      	strb	r3, [r0, #7]
 800da9e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800daa2:	7203      	strb	r3, [r0, #8]
 800daa4:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800daa8:	7243      	strb	r3, [r0, #9]
 800daaa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800daae:	8143      	strh	r3, [r0, #10]
 800dab0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800dab4:	8183      	strh	r3, [r0, #12]
 800dab6:	4b01      	ldr	r3, [pc, #4]	; (800dabc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800dab8:	6003      	str	r3, [r0, #0]
 800daba:	bd30      	pop	{r4, r5, pc}
 800dabc:	0801edfc 	.word	0x0801edfc

0800dac0 <_ZNK8touchgfx9ConstFont4findEt>:
 800dac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dac2:	6904      	ldr	r4, [r0, #16]
 800dac4:	b3bc      	cbz	r4, 800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dac6:	88a3      	ldrh	r3, [r4, #4]
 800dac8:	8a82      	ldrh	r2, [r0, #20]
 800daca:	1acb      	subs	r3, r1, r3
 800dacc:	f102 32ff 	add.w	r2, r2, #4294967295
 800dad0:	d431      	bmi.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dad2:	4293      	cmp	r3, r2
 800dad4:	dd0c      	ble.n	800daf0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800dad6:	230e      	movs	r3, #14
 800dad8:	fb03 4302 	mla	r3, r3, r2, r4
 800dadc:	889b      	ldrh	r3, [r3, #4]
 800dade:	1a5b      	subs	r3, r3, r1
 800dae0:	1ad3      	subs	r3, r2, r3
 800dae2:	429a      	cmp	r2, r3
 800dae4:	db27      	blt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dae6:	2b00      	cmp	r3, #0
 800dae8:	bfbc      	itt	lt
 800daea:	2302      	movlt	r3, #2
 800daec:	fb92 f3f3 	sdivlt	r3, r2, r3
 800daf0:	2500      	movs	r5, #0
 800daf2:	260e      	movs	r6, #14
 800daf4:	4295      	cmp	r5, r2
 800daf6:	dc1e      	bgt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800daf8:	fb06 4003 	mla	r0, r6, r3, r4
 800dafc:	8887      	ldrh	r7, [r0, #4]
 800dafe:	42b9      	cmp	r1, r7
 800db00:	d01a      	beq.n	800db38 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800db02:	d20d      	bcs.n	800db20 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800db04:	1e5a      	subs	r2, r3, #1
 800db06:	4295      	cmp	r5, r2
 800db08:	dc15      	bgt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db0a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800db0e:	1a5b      	subs	r3, r3, r1
 800db10:	1ad3      	subs	r3, r2, r3
 800db12:	429a      	cmp	r2, r3
 800db14:	db0f      	blt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db16:	429d      	cmp	r5, r3
 800db18:	ddec      	ble.n	800daf4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800db1a:	1953      	adds	r3, r2, r5
 800db1c:	105b      	asrs	r3, r3, #1
 800db1e:	e7e9      	b.n	800daf4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800db20:	1c5d      	adds	r5, r3, #1
 800db22:	42aa      	cmp	r2, r5
 800db24:	db07      	blt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db26:	8a43      	ldrh	r3, [r0, #18]
 800db28:	1acb      	subs	r3, r1, r3
 800db2a:	442b      	add	r3, r5
 800db2c:	429d      	cmp	r5, r3
 800db2e:	dc02      	bgt.n	800db36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db30:	429a      	cmp	r2, r3
 800db32:	dadf      	bge.n	800daf4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800db34:	e7f1      	b.n	800db1a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800db36:	2000      	movs	r0, #0
 800db38:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800db3a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800db3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db3c:	4604      	mov	r4, r0
 800db3e:	4617      	mov	r7, r2
 800db40:	461e      	mov	r6, r3
 800db42:	b911      	cbnz	r1, 800db4a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800db44:	2500      	movs	r5, #0
 800db46:	4628      	mov	r0, r5
 800db48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db4a:	290a      	cmp	r1, #10
 800db4c:	d0fa      	beq.n	800db44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db4e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800db52:	4291      	cmp	r1, r2
 800db54:	d0f6      	beq.n	800db44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db56:	f242 020b 	movw	r2, #8203	; 0x200b
 800db5a:	4291      	cmp	r1, r2
 800db5c:	d0f2      	beq.n	800db44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db5e:	f7ff ffaf 	bl	800dac0 <_ZNK8touchgfx9ConstFont4findEt>
 800db62:	4605      	mov	r5, r0
 800db64:	b950      	cbnz	r0, 800db7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800db66:	6823      	ldr	r3, [r4, #0]
 800db68:	4620      	mov	r0, r4
 800db6a:	691b      	ldr	r3, [r3, #16]
 800db6c:	4798      	blx	r3
 800db6e:	4601      	mov	r1, r0
 800db70:	4620      	mov	r0, r4
 800db72:	f7ff ffa5 	bl	800dac0 <_ZNK8touchgfx9ConstFont4findEt>
 800db76:	4605      	mov	r5, r0
 800db78:	2800      	cmp	r0, #0
 800db7a:	d0e3      	beq.n	800db44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db7c:	6823      	ldr	r3, [r4, #0]
 800db7e:	4629      	mov	r1, r5
 800db80:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800db82:	4620      	mov	r0, r4
 800db84:	4798      	blx	r3
 800db86:	6038      	str	r0, [r7, #0]
 800db88:	6823      	ldr	r3, [r4, #0]
 800db8a:	4620      	mov	r0, r4
 800db8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800db8e:	4798      	blx	r3
 800db90:	7030      	strb	r0, [r6, #0]
 800db92:	e7d8      	b.n	800db46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800db94 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800db94:	2000      	movs	r0, #0
 800db96:	4770      	bx	lr

0800db98 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800db98:	2001      	movs	r0, #1
 800db9a:	4770      	bx	lr

0800db9c <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800db9c:	2002      	movs	r0, #2
 800db9e:	4770      	bx	lr

0800dba0 <_ZN8touchgfx6ScreenD1Ev>:
 800dba0:	4770      	bx	lr

0800dba2 <_ZN8touchgfx12GestureEventD1Ev>:
 800dba2:	4770      	bx	lr

0800dba4 <_ZN8touchgfx9DragEventD1Ev>:
 800dba4:	4770      	bx	lr

0800dba6 <_ZN8touchgfx10ClickEventD1Ev>:
 800dba6:	4770      	bx	lr

0800dba8 <_ZN8touchgfx10ClickEventD0Ev>:
 800dba8:	b510      	push	{r4, lr}
 800dbaa:	210c      	movs	r1, #12
 800dbac:	4604      	mov	r4, r0
 800dbae:	f00d ff69 	bl	801ba84 <_ZdlPvj>
 800dbb2:	4620      	mov	r0, r4
 800dbb4:	bd10      	pop	{r4, pc}

0800dbb6 <_ZN8touchgfx9DragEventD0Ev>:
 800dbb6:	b510      	push	{r4, lr}
 800dbb8:	2110      	movs	r1, #16
 800dbba:	4604      	mov	r4, r0
 800dbbc:	f00d ff62 	bl	801ba84 <_ZdlPvj>
 800dbc0:	4620      	mov	r0, r4
 800dbc2:	bd10      	pop	{r4, pc}

0800dbc4 <_ZN8touchgfx12GestureEventD0Ev>:
 800dbc4:	b510      	push	{r4, lr}
 800dbc6:	210c      	movs	r1, #12
 800dbc8:	4604      	mov	r4, r0
 800dbca:	f00d ff5b 	bl	801ba84 <_ZdlPvj>
 800dbce:	4620      	mov	r0, r4
 800dbd0:	bd10      	pop	{r4, pc}

0800dbd2 <_ZN8touchgfx6ScreenD0Ev>:
 800dbd2:	b510      	push	{r4, lr}
 800dbd4:	213c      	movs	r1, #60	; 0x3c
 800dbd6:	4604      	mov	r4, r0
 800dbd8:	f00d ff54 	bl	801ba84 <_ZdlPvj>
 800dbdc:	4620      	mov	r0, r4
 800dbde:	bd10      	pop	{r4, pc}

0800dbe0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800dbe0:	b530      	push	{r4, r5, lr}
 800dbe2:	460d      	mov	r5, r1
 800dbe4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dbe6:	b087      	sub	sp, #28
 800dbe8:	4604      	mov	r4, r0
 800dbea:	b301      	cbz	r1, 800dc2e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800dbec:	a801      	add	r0, sp, #4
 800dbee:	f7ff ff33 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbf2:	892a      	ldrh	r2, [r5, #8]
 800dbf4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dbf8:	7928      	ldrb	r0, [r5, #4]
 800dbfa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dbfe:	f88d 0010 	strb.w	r0, [sp, #16]
 800dc02:	1ad2      	subs	r2, r2, r3
 800dc04:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dc06:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc08:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dc0c:	441a      	add	r2, r3
 800dc0e:	896b      	ldrh	r3, [r5, #10]
 800dc10:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800dc14:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dc18:	1b5b      	subs	r3, r3, r5
 800dc1a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800dc1c:	442b      	add	r3, r5
 800dc1e:	4d05      	ldr	r5, [pc, #20]	; (800dc34 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800dc20:	9503      	str	r5, [sp, #12]
 800dc22:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dc26:	6803      	ldr	r3, [r0, #0]
 800dc28:	a903      	add	r1, sp, #12
 800dc2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc2c:	4798      	blx	r3
 800dc2e:	b007      	add	sp, #28
 800dc30:	bd30      	pop	{r4, r5, pc}
 800dc32:	bf00      	nop
 800dc34:	0801ee7c 	.word	0x0801ee7c

0800dc38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dc38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc3c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dc3e:	b08a      	sub	sp, #40	; 0x28
 800dc40:	4604      	mov	r4, r0
 800dc42:	460d      	mov	r5, r1
 800dc44:	b113      	cbz	r3, 800dc4c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800dc46:	790b      	ldrb	r3, [r1, #4]
 800dc48:	2b00      	cmp	r3, #0
 800dc4a:	d044      	beq.n	800dcd6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc4c:	f104 0804 	add.w	r8, r4, #4
 800dc50:	4641      	mov	r1, r8
 800dc52:	a803      	add	r0, sp, #12
 800dc54:	f7ff ff00 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc58:	792b      	ldrb	r3, [r5, #4]
 800dc5a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800dc5e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800dc62:	b983      	cbnz	r3, 800dc86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800dc64:	892a      	ldrh	r2, [r5, #8]
 800dc66:	88e9      	ldrh	r1, [r5, #6]
 800dc68:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800dc6c:	1b92      	subs	r2, r2, r6
 800dc6e:	1bc9      	subs	r1, r1, r7
 800dc70:	9301      	str	r3, [sp, #4]
 800dc72:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800dc76:	9300      	str	r3, [sp, #0]
 800dc78:	b212      	sxth	r2, r2
 800dc7a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dc7e:	b209      	sxth	r1, r1
 800dc80:	4640      	mov	r0, r8
 800dc82:	f7fb fb65 	bl	8009350 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800dc86:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dc88:	b329      	cbz	r1, 800dcd6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc8a:	a805      	add	r0, sp, #20
 800dc8c:	f7ff fee4 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc90:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc94:	792b      	ldrb	r3, [r5, #4]
 800dc96:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc98:	f88d 3020 	strb.w	r3, [sp, #32]
 800dc9c:	1abf      	subs	r7, r7, r2
 800dc9e:	88ea      	ldrh	r2, [r5, #6]
 800dca0:	4417      	add	r7, r2
 800dca2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800dca4:	4417      	add	r7, r2
 800dca6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dcaa:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dcae:	1ab6      	subs	r6, r6, r2
 800dcb0:	892a      	ldrh	r2, [r5, #8]
 800dcb2:	4416      	add	r6, r2
 800dcb4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800dcb6:	4416      	add	r6, r2
 800dcb8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800dcbc:	4a07      	ldr	r2, [pc, #28]	; (800dcdc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800dcbe:	9207      	str	r2, [sp, #28]
 800dcc0:	2600      	movs	r6, #0
 800dcc2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800dcc6:	6803      	ldr	r3, [r0, #0]
 800dcc8:	a907      	add	r1, sp, #28
 800dcca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dccc:	4798      	blx	r3
 800dcce:	792b      	ldrb	r3, [r5, #4]
 800dcd0:	b10b      	cbz	r3, 800dcd6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dcd2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dcd6:	b00a      	add	sp, #40	; 0x28
 800dcd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dcdc:	0801ee54 	.word	0x0801ee54

0800dce0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dce4:	460c      	mov	r4, r1
 800dce6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dce8:	b088      	sub	sp, #32
 800dcea:	4605      	mov	r5, r0
 800dcec:	2900      	cmp	r1, #0
 800dcee:	d06d      	beq.n	800ddcc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800dcf0:	4668      	mov	r0, sp
 800dcf2:	f7ff feb1 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcf6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800dcf8:	88e3      	ldrh	r3, [r4, #6]
 800dcfa:	f9bd 8000 	ldrsh.w	r8, [sp]
 800dcfe:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800dd02:	440b      	add	r3, r1
 800dd04:	b21b      	sxth	r3, r3
 800dd06:	4543      	cmp	r3, r8
 800dd08:	db31      	blt.n	800dd6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd0a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800dd0e:	44c4      	add	ip, r8
 800dd10:	fa0f fc8c 	sxth.w	ip, ip
 800dd14:	4563      	cmp	r3, ip
 800dd16:	da2a      	bge.n	800dd6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd18:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800dd1a:	8926      	ldrh	r6, [r4, #8]
 800dd1c:	4416      	add	r6, r2
 800dd1e:	b236      	sxth	r6, r6
 800dd20:	42be      	cmp	r6, r7
 800dd22:	db24      	blt.n	800dd6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd24:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800dd28:	4438      	add	r0, r7
 800dd2a:	b200      	sxth	r0, r0
 800dd2c:	4286      	cmp	r6, r0
 800dd2e:	da1e      	bge.n	800dd6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd30:	8963      	ldrh	r3, [r4, #10]
 800dd32:	4419      	add	r1, r3
 800dd34:	b209      	sxth	r1, r1
 800dd36:	4541      	cmp	r1, r8
 800dd38:	db08      	blt.n	800dd4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dd3a:	4561      	cmp	r1, ip
 800dd3c:	da06      	bge.n	800dd4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dd3e:	89a3      	ldrh	r3, [r4, #12]
 800dd40:	441a      	add	r2, r3
 800dd42:	b212      	sxth	r2, r2
 800dd44:	42ba      	cmp	r2, r7
 800dd46:	db01      	blt.n	800dd4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dd48:	4282      	cmp	r2, r0
 800dd4a:	db10      	blt.n	800dd6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd4c:	4b21      	ldr	r3, [pc, #132]	; (800ddd4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800dd4e:	9304      	str	r3, [sp, #16]
 800dd50:	2302      	movs	r3, #2
 800dd52:	f88d 3014 	strb.w	r3, [sp, #20]
 800dd56:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dd58:	2300      	movs	r3, #0
 800dd5a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dd5e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dd62:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dd66:	6803      	ldr	r3, [r0, #0]
 800dd68:	a904      	add	r1, sp, #16
 800dd6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dd6c:	4798      	blx	r3
 800dd6e:	1d29      	adds	r1, r5, #4
 800dd70:	a802      	add	r0, sp, #8
 800dd72:	f7ff fe71 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd76:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800dd7a:	88e0      	ldrh	r0, [r4, #6]
 800dd7c:	7921      	ldrb	r1, [r4, #4]
 800dd7e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800dd82:	8922      	ldrh	r2, [r4, #8]
 800dd84:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800dd86:	f88d 1014 	strb.w	r1, [sp, #20]
 800dd8a:	eba3 0808 	sub.w	r8, r3, r8
 800dd8e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dd92:	1bdf      	subs	r7, r3, r7
 800dd94:	b2bb      	uxth	r3, r7
 800dd96:	fa1f f888 	uxth.w	r8, r8
 800dd9a:	8967      	ldrh	r7, [r4, #10]
 800dd9c:	89a4      	ldrh	r4, [r4, #12]
 800dd9e:	4440      	add	r0, r8
 800dda0:	4460      	add	r0, ip
 800dda2:	441a      	add	r2, r3
 800dda4:	44b8      	add	r8, r7
 800dda6:	4423      	add	r3, r4
 800dda8:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ddac:	4433      	add	r3, r6
 800ddae:	4432      	add	r2, r6
 800ddb0:	44e0      	add	r8, ip
 800ddb2:	4c09      	ldr	r4, [pc, #36]	; (800ddd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800ddb4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800ddb6:	9404      	str	r4, [sp, #16]
 800ddb8:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ddbc:	f8ad 801a 	strh.w	r8, [sp, #26]
 800ddc0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ddc4:	6803      	ldr	r3, [r0, #0]
 800ddc6:	a904      	add	r1, sp, #16
 800ddc8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ddca:	4798      	blx	r3
 800ddcc:	b008      	add	sp, #32
 800ddce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ddd2:	bf00      	nop
 800ddd4:	0801ee54 	.word	0x0801ee54
 800ddd8:	0801ee68 	.word	0x0801ee68

0800dddc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800dddc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ddde:	4604      	mov	r4, r0
 800dde0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800dde4:	3201      	adds	r2, #1
 800dde6:	d112      	bne.n	800de0e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800dde8:	6803      	ldr	r3, [r0, #0]
 800ddea:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ddee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ddf2:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ddf6:	2500      	movs	r5, #0
 800ddf8:	9500      	str	r5, [sp, #0]
 800ddfa:	466d      	mov	r5, sp
 800ddfc:	4629      	mov	r1, r5
 800ddfe:	f8ad 2006 	strh.w	r2, [sp, #6]
 800de02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de04:	4798      	blx	r3
 800de06:	e895 0003 	ldmia.w	r5, {r0, r1}
 800de0a:	e884 0003 	stmia.w	r4, {r0, r1}
 800de0e:	4620      	mov	r0, r4
 800de10:	b003      	add	sp, #12
 800de12:	bd30      	pop	{r4, r5, pc}

0800de14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800de14:	b513      	push	{r0, r1, r4, lr}
 800de16:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800de1a:	3301      	adds	r3, #1
 800de1c:	4604      	mov	r4, r0
 800de1e:	d109      	bne.n	800de34 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800de20:	4601      	mov	r1, r0
 800de22:	4668      	mov	r0, sp
 800de24:	f7ff fe18 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de28:	f8bd 3000 	ldrh.w	r3, [sp]
 800de2c:	8423      	strh	r3, [r4, #32]
 800de2e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de32:	8463      	strh	r3, [r4, #34]	; 0x22
 800de34:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800de38:	b002      	add	sp, #8
 800de3a:	bd10      	pop	{r4, pc}

0800de3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800de3c:	b513      	push	{r0, r1, r4, lr}
 800de3e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800de42:	3301      	adds	r3, #1
 800de44:	4604      	mov	r4, r0
 800de46:	d109      	bne.n	800de5c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800de48:	4601      	mov	r1, r0
 800de4a:	4668      	mov	r0, sp
 800de4c:	f7ff fe04 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de50:	f8bd 3000 	ldrh.w	r3, [sp]
 800de54:	8423      	strh	r3, [r4, #32]
 800de56:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de5a:	8463      	strh	r3, [r4, #34]	; 0x22
 800de5c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800de60:	b002      	add	sp, #8
 800de62:	bd10      	pop	{r4, pc}

0800de64 <_ZN8touchgfx6ScreenC1Ev>:
 800de64:	b570      	push	{r4, r5, r6, lr}
 800de66:	4605      	mov	r5, r0
 800de68:	4b16      	ldr	r3, [pc, #88]	; (800dec4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800de6a:	f845 3b04 	str.w	r3, [r5], #4
 800de6e:	2300      	movs	r3, #0
 800de70:	8103      	strh	r3, [r0, #8]
 800de72:	8143      	strh	r3, [r0, #10]
 800de74:	8183      	strh	r3, [r0, #12]
 800de76:	81c3      	strh	r3, [r0, #14]
 800de78:	8203      	strh	r3, [r0, #16]
 800de7a:	8243      	strh	r3, [r0, #18]
 800de7c:	8283      	strh	r3, [r0, #20]
 800de7e:	82c3      	strh	r3, [r0, #22]
 800de80:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800de84:	6203      	str	r3, [r0, #32]
 800de86:	8483      	strh	r3, [r0, #36]	; 0x24
 800de88:	84c3      	strh	r3, [r0, #38]	; 0x26
 800de8a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800de8e:	4a0e      	ldr	r2, [pc, #56]	; (800dec8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800de90:	6343      	str	r3, [r0, #52]	; 0x34
 800de92:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800de96:	4b0d      	ldr	r3, [pc, #52]	; (800decc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800de98:	6042      	str	r2, [r0, #4]
 800de9a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800de9e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800dea0:	4a0b      	ldr	r2, [pc, #44]	; (800ded0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800dea2:	4604      	mov	r4, r0
 800dea4:	2101      	movs	r1, #1
 800dea6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800deaa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800deae:	f9b2 1000 	ldrsh.w	r1, [r2]
 800deb2:	4628      	mov	r0, r5
 800deb4:	4798      	blx	r3
 800deb6:	6863      	ldr	r3, [r4, #4]
 800deb8:	4628      	mov	r0, r5
 800deba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800debc:	4631      	mov	r1, r6
 800debe:	4798      	blx	r3
 800dec0:	4620      	mov	r0, r4
 800dec2:	bd70      	pop	{r4, r5, r6, pc}
 800dec4:	0801ee90 	.word	0x0801ee90
 800dec8:	0801dfe0 	.word	0x0801dfe0
 800decc:	2000a2ae 	.word	0x2000a2ae
 800ded0:	2000a2ac 	.word	0x2000a2ac

0800ded4 <_ZN8touchgfx6Screen4drawEv>:
 800ded4:	b507      	push	{r0, r1, r2, lr}
 800ded6:	4b09      	ldr	r3, [pc, #36]	; (800defc <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ded8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dedc:	4b08      	ldr	r3, [pc, #32]	; (800df00 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800dede:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dee2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dee6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800deea:	6803      	ldr	r3, [r0, #0]
 800deec:	2100      	movs	r1, #0
 800deee:	9100      	str	r1, [sp, #0]
 800def0:	689b      	ldr	r3, [r3, #8]
 800def2:	4669      	mov	r1, sp
 800def4:	4798      	blx	r3
 800def6:	b003      	add	sp, #12
 800def8:	f85d fb04 	ldr.w	pc, [sp], #4
 800defc:	2000a2ac 	.word	0x2000a2ac
 800df00:	2000a2ae 	.word	0x2000a2ae

0800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800df04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df08:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800df0c:	2b00      	cmp	r3, #0
 800df0e:	b089      	sub	sp, #36	; 0x24
 800df10:	4680      	mov	r8, r0
 800df12:	460c      	mov	r4, r1
 800df14:	4615      	mov	r5, r2
 800df16:	dd0e      	ble.n	800df36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df18:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800df1c:	2b00      	cmp	r3, #0
 800df1e:	dd0a      	ble.n	800df36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df20:	4628      	mov	r0, r5
 800df22:	f7ff ff5b 	bl	800dddc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df26:	4621      	mov	r1, r4
 800df28:	f7fe fcf2 	bl	800c910 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800df2c:	69eb      	ldr	r3, [r5, #28]
 800df2e:	b928      	cbnz	r0, 800df3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800df30:	461d      	mov	r5, r3
 800df32:	2b00      	cmp	r3, #0
 800df34:	d1f4      	bne.n	800df20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800df36:	b009      	add	sp, #36	; 0x24
 800df38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df3c:	ae04      	add	r6, sp, #16
 800df3e:	2b00      	cmp	r3, #0
 800df40:	f000 80b5 	beq.w	800e0ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800df44:	682b      	ldr	r3, [r5, #0]
 800df46:	4629      	mov	r1, r5
 800df48:	68db      	ldr	r3, [r3, #12]
 800df4a:	a802      	add	r0, sp, #8
 800df4c:	4798      	blx	r3
 800df4e:	4628      	mov	r0, r5
 800df50:	f7ff ff60 	bl	800de14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800df54:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800df58:	4407      	add	r7, r0
 800df5a:	4628      	mov	r0, r5
 800df5c:	f7ff ff6e 	bl	800de3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800df60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800df64:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800df68:	f8ad 2014 	strh.w	r2, [sp, #20]
 800df6c:	4418      	add	r0, r3
 800df6e:	4621      	mov	r1, r4
 800df70:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800df74:	f8ad 0012 	strh.w	r0, [sp, #18]
 800df78:	b23f      	sxth	r7, r7
 800df7a:	4630      	mov	r0, r6
 800df7c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df80:	f8ad 7010 	strh.w	r7, [sp, #16]
 800df84:	f7fb fac8 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800df88:	4628      	mov	r0, r5
 800df8a:	f7ff ff27 	bl	800dddc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df8e:	4602      	mov	r2, r0
 800df90:	e896 0003 	ldmia.w	r6, {r0, r1}
 800df94:	ab06      	add	r3, sp, #24
 800df96:	e883 0003 	stmia.w	r3, {r0, r1}
 800df9a:	4611      	mov	r1, r2
 800df9c:	4618      	mov	r0, r3
 800df9e:	f7fb fabb 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800dfa2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dfa6:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dfaa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800dfae:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800dfb2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800dfb6:	4299      	cmp	r1, r3
 800dfb8:	d10b      	bne.n	800dfd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dfba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dfbe:	4552      	cmp	r2, sl
 800dfc0:	d107      	bne.n	800dfd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dfc2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800dfc6:	455a      	cmp	r2, fp
 800dfc8:	d103      	bne.n	800dfd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dfca:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800dfce:	454a      	cmp	r2, r9
 800dfd0:	d06d      	beq.n	800e0ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dfd2:	f1bb 0f00 	cmp.w	fp, #0
 800dfd6:	dd65      	ble.n	800e0a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dfd8:	f1b9 0f00 	cmp.w	r9, #0
 800dfdc:	dd62      	ble.n	800e0a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dfde:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dfe2:	fa1f f08a 	uxth.w	r0, sl
 800dfe6:	4552      	cmp	r2, sl
 800dfe8:	9000      	str	r0, [sp, #0]
 800dfea:	da12      	bge.n	800e012 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800dfec:	9301      	str	r3, [sp, #4]
 800dfee:	9b00      	ldr	r3, [sp, #0]
 800dff0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800dff4:	f8ad 2012 	strh.w	r2, [sp, #18]
 800dff8:	1a9a      	subs	r2, r3, r2
 800dffa:	f8ad 1010 	strh.w	r1, [sp, #16]
 800dffe:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e002:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e006:	69ea      	ldr	r2, [r5, #28]
 800e008:	4631      	mov	r1, r6
 800e00a:	4640      	mov	r0, r8
 800e00c:	f7ff ff7a 	bl	800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e010:	9b01      	ldr	r3, [sp, #4]
 800e012:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e016:	429a      	cmp	r2, r3
 800e018:	b29f      	uxth	r7, r3
 800e01a:	da0d      	bge.n	800e038 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e01c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e020:	1aba      	subs	r2, r7, r2
 800e022:	f8ad a012 	strh.w	sl, [sp, #18]
 800e026:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e02a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e02e:	69ea      	ldr	r2, [r5, #28]
 800e030:	4631      	mov	r1, r6
 800e032:	4640      	mov	r0, r8
 800e034:	f7ff ff66 	bl	800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e038:	8822      	ldrh	r2, [r4, #0]
 800e03a:	88a3      	ldrh	r3, [r4, #4]
 800e03c:	445f      	add	r7, fp
 800e03e:	4413      	add	r3, r2
 800e040:	b29b      	uxth	r3, r3
 800e042:	b2bf      	uxth	r7, r7
 800e044:	b23a      	sxth	r2, r7
 800e046:	b219      	sxth	r1, r3
 800e048:	4291      	cmp	r1, r2
 800e04a:	dd0d      	ble.n	800e068 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e04c:	1bdb      	subs	r3, r3, r7
 800e04e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e052:	f8ad a012 	strh.w	sl, [sp, #18]
 800e056:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e05a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e05e:	69ea      	ldr	r2, [r5, #28]
 800e060:	4631      	mov	r1, r6
 800e062:	4640      	mov	r0, r8
 800e064:	f7ff ff4e 	bl	800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e068:	88e2      	ldrh	r2, [r4, #6]
 800e06a:	8863      	ldrh	r3, [r4, #2]
 800e06c:	4413      	add	r3, r2
 800e06e:	9a00      	ldr	r2, [sp, #0]
 800e070:	444a      	add	r2, r9
 800e072:	b29b      	uxth	r3, r3
 800e074:	fa1f f982 	uxth.w	r9, r2
 800e078:	fa0f f289 	sxth.w	r2, r9
 800e07c:	b219      	sxth	r1, r3
 800e07e:	428a      	cmp	r2, r1
 800e080:	da15      	bge.n	800e0ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e082:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e086:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e08a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e08e:	eba3 0309 	sub.w	r3, r3, r9
 800e092:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e096:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e09a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e09e:	69ea      	ldr	r2, [r5, #28]
 800e0a0:	4631      	mov	r1, r6
 800e0a2:	e001      	b.n	800e0a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e0a4:	69ea      	ldr	r2, [r5, #28]
 800e0a6:	4621      	mov	r1, r4
 800e0a8:	4640      	mov	r0, r8
 800e0aa:	f7ff ff2b 	bl	800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0ae:	4628      	mov	r0, r5
 800e0b0:	f7ff fe94 	bl	800dddc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e0b4:	6861      	ldr	r1, [r4, #4]
 800e0b6:	4602      	mov	r2, r0
 800e0b8:	6820      	ldr	r0, [r4, #0]
 800e0ba:	4633      	mov	r3, r6
 800e0bc:	c303      	stmia	r3!, {r0, r1}
 800e0be:	4611      	mov	r1, r2
 800e0c0:	4630      	mov	r0, r6
 800e0c2:	f7fb fa29 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800e0c6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e0ca:	2b00      	cmp	r3, #0
 800e0cc:	f77f af33 	ble.w	800df36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e0d0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e0d4:	2b00      	cmp	r3, #0
 800e0d6:	f77f af2e 	ble.w	800df36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e0da:	4628      	mov	r0, r5
 800e0dc:	f7ff fe9a 	bl	800de14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e0e0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e0e4:	1a18      	subs	r0, r3, r0
 800e0e6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e0ea:	4628      	mov	r0, r5
 800e0ec:	f7ff fea6 	bl	800de3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e0f0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e0f4:	1a18      	subs	r0, r3, r0
 800e0f6:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e0fa:	682b      	ldr	r3, [r5, #0]
 800e0fc:	4631      	mov	r1, r6
 800e0fe:	689b      	ldr	r3, [r3, #8]
 800e100:	4628      	mov	r0, r5
 800e102:	4798      	blx	r3
 800e104:	e717      	b.n	800df36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e106 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e106:	b570      	push	{r4, r5, r6, lr}
 800e108:	460c      	mov	r4, r1
 800e10a:	b086      	sub	sp, #24
 800e10c:	1d06      	adds	r6, r0, #4
 800e10e:	2300      	movs	r3, #0
 800e110:	4631      	mov	r1, r6
 800e112:	4605      	mov	r5, r0
 800e114:	a802      	add	r0, sp, #8
 800e116:	9301      	str	r3, [sp, #4]
 800e118:	f7ff fc9e 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e11c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e120:	8822      	ldrh	r2, [r4, #0]
 800e122:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e126:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e12a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e12e:	1ad2      	subs	r2, r2, r3
 800e130:	8863      	ldrh	r3, [r4, #2]
 800e132:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e136:	1a5b      	subs	r3, r3, r1
 800e138:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e13c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e140:	aa01      	add	r2, sp, #4
 800e142:	a904      	add	r1, sp, #16
 800e144:	4630      	mov	r0, r6
 800e146:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e14a:	f7fb fabd 	bl	80096c8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e14e:	9a01      	ldr	r2, [sp, #4]
 800e150:	b11a      	cbz	r2, 800e15a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e152:	4621      	mov	r1, r4
 800e154:	4628      	mov	r0, r5
 800e156:	f7ff fed5 	bl	800df04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e15a:	b006      	add	sp, #24
 800e15c:	bd70      	pop	{r4, r5, r6, pc}

0800e15e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e15e:	b530      	push	{r4, r5, lr}
 800e160:	4602      	mov	r2, r0
 800e162:	4604      	mov	r4, r0
 800e164:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e168:	b085      	sub	sp, #20
 800e16a:	460d      	mov	r5, r1
 800e16c:	6851      	ldr	r1, [r2, #4]
 800e16e:	466b      	mov	r3, sp
 800e170:	c303      	stmia	r3!, {r0, r1}
 800e172:	4629      	mov	r1, r5
 800e174:	4668      	mov	r0, sp
 800e176:	f7fb f9cf 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 800e17a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e17e:	b12b      	cbz	r3, 800e18c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e180:	4669      	mov	r1, sp
 800e182:	4620      	mov	r0, r4
 800e184:	f7ff ffbf 	bl	800e106 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e188:	b005      	add	sp, #20
 800e18a:	bd30      	pop	{r4, r5, pc}
 800e18c:	3404      	adds	r4, #4
 800e18e:	4621      	mov	r1, r4
 800e190:	a802      	add	r0, sp, #8
 800e192:	f7ff fc61 	bl	800da58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e196:	f8bd 3000 	ldrh.w	r3, [sp]
 800e19a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e19e:	1a9b      	subs	r3, r3, r2
 800e1a0:	f8ad 3000 	strh.w	r3, [sp]
 800e1a4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e1a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e1ac:	4669      	mov	r1, sp
 800e1ae:	1a9b      	subs	r3, r3, r2
 800e1b0:	4620      	mov	r0, r4
 800e1b2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e1b6:	f7fb fa4e 	bl	8009656 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e1ba:	e7e5      	b.n	800e188 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e1bc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e1bc:	680a      	ldr	r2, [r1, #0]
 800e1be:	460b      	mov	r3, r1
 800e1c0:	6992      	ldr	r2, [r2, #24]
 800e1c2:	1d01      	adds	r1, r0, #4
 800e1c4:	4618      	mov	r0, r3
 800e1c6:	4710      	bx	r2

0800e1c8 <_ZN8touchgfx12TextProviderC1Ev>:
 800e1c8:	b538      	push	{r3, r4, r5, lr}
 800e1ca:	2500      	movs	r5, #0
 800e1cc:	2302      	movs	r3, #2
 800e1ce:	4604      	mov	r4, r0
 800e1d0:	e9c0 5500 	strd	r5, r5, [r0]
 800e1d4:	7403      	strb	r3, [r0, #16]
 800e1d6:	6145      	str	r5, [r0, #20]
 800e1d8:	7605      	strb	r5, [r0, #24]
 800e1da:	83c5      	strh	r5, [r0, #30]
 800e1dc:	8405      	strh	r5, [r0, #32]
 800e1de:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e1e0:	8705      	strh	r5, [r0, #56]	; 0x38
 800e1e2:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e1e4:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e1e8:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e1ec:	220e      	movs	r2, #14
 800e1ee:	4629      	mov	r1, r5
 800e1f0:	304c      	adds	r0, #76	; 0x4c
 800e1f2:	f00d fd01 	bl	801bbf8 <memset>
 800e1f6:	2301      	movs	r3, #1
 800e1f8:	4620      	mov	r0, r4
 800e1fa:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e1fe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e202:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e206:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e20a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e20e:	f7f4 fd09 	bl	8002c24 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e212:	4620      	mov	r0, r4
 800e214:	bd38      	pop	{r3, r4, r5, pc}

0800e216 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e216:	b530      	push	{r4, r5, lr}
 800e218:	2500      	movs	r5, #0
 800e21a:	2401      	movs	r4, #1
 800e21c:	6843      	ldr	r3, [r0, #4]
 800e21e:	b913      	cbnz	r3, 800e226 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e220:	6803      	ldr	r3, [r0, #0]
 800e222:	b313      	cbz	r3, 800e26a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e224:	6043      	str	r3, [r0, #4]
 800e226:	7e03      	ldrb	r3, [r0, #24]
 800e228:	b143      	cbz	r3, 800e23c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e22a:	6943      	ldr	r3, [r0, #20]
 800e22c:	b12b      	cbz	r3, 800e23a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e22e:	881a      	ldrh	r2, [r3, #0]
 800e230:	b11a      	cbz	r2, 800e23a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e232:	1c9a      	adds	r2, r3, #2
 800e234:	6142      	str	r2, [r0, #20]
 800e236:	8818      	ldrh	r0, [r3, #0]
 800e238:	bd30      	pop	{r4, r5, pc}
 800e23a:	7605      	strb	r5, [r0, #24]
 800e23c:	6843      	ldr	r3, [r0, #4]
 800e23e:	8819      	ldrh	r1, [r3, #0]
 800e240:	b199      	cbz	r1, 800e26a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e242:	1c9a      	adds	r2, r3, #2
 800e244:	2902      	cmp	r1, #2
 800e246:	6042      	str	r2, [r0, #4]
 800e248:	d1f5      	bne.n	800e236 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e24a:	7c03      	ldrb	r3, [r0, #16]
 800e24c:	2b01      	cmp	r3, #1
 800e24e:	d8e5      	bhi.n	800e21c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e250:	1c5a      	adds	r2, r3, #1
 800e252:	3302      	adds	r3, #2
 800e254:	7402      	strb	r2, [r0, #16]
 800e256:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e25a:	6143      	str	r3, [r0, #20]
 800e25c:	2b00      	cmp	r3, #0
 800e25e:	d0dd      	beq.n	800e21c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e260:	881b      	ldrh	r3, [r3, #0]
 800e262:	2b00      	cmp	r3, #0
 800e264:	d0da      	beq.n	800e21c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e266:	7604      	strb	r4, [r0, #24]
 800e268:	e7d8      	b.n	800e21c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e26a:	2000      	movs	r0, #0
 800e26c:	e7e4      	b.n	800e238 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e26e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e26e:	b430      	push	{r4, r5}
 800e270:	6815      	ldr	r5, [r2, #0]
 800e272:	6085      	str	r5, [r0, #8]
 800e274:	6852      	ldr	r2, [r2, #4]
 800e276:	60c2      	str	r2, [r0, #12]
 800e278:	6443      	str	r3, [r0, #68]	; 0x44
 800e27a:	2200      	movs	r2, #0
 800e27c:	9b02      	ldr	r3, [sp, #8]
 800e27e:	7402      	strb	r2, [r0, #16]
 800e280:	6001      	str	r1, [r0, #0]
 800e282:	6483      	str	r3, [r0, #72]	; 0x48
 800e284:	6042      	str	r2, [r0, #4]
 800e286:	6142      	str	r2, [r0, #20]
 800e288:	7602      	strb	r2, [r0, #24]
 800e28a:	8702      	strh	r2, [r0, #56]	; 0x38
 800e28c:	8402      	strh	r2, [r0, #32]
 800e28e:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e292:	bc30      	pop	{r4, r5}
 800e294:	f7f4 bcc6 	b.w	8002c24 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e298 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e29a:	4605      	mov	r5, r0
 800e29c:	4608      	mov	r0, r1
 800e29e:	b1e9      	cbz	r1, 800e2dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e2a0:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e2a4:	460b      	mov	r3, r1
 800e2a6:	f101 0708 	add.w	r7, r1, #8
 800e2aa:	4622      	mov	r2, r4
 800e2ac:	6818      	ldr	r0, [r3, #0]
 800e2ae:	6859      	ldr	r1, [r3, #4]
 800e2b0:	4626      	mov	r6, r4
 800e2b2:	c603      	stmia	r6!, {r0, r1}
 800e2b4:	3308      	adds	r3, #8
 800e2b6:	42bb      	cmp	r3, r7
 800e2b8:	4634      	mov	r4, r6
 800e2ba:	d1f7      	bne.n	800e2ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e2bc:	6818      	ldr	r0, [r3, #0]
 800e2be:	6030      	str	r0, [r6, #0]
 800e2c0:	889b      	ldrh	r3, [r3, #4]
 800e2c2:	80b3      	strh	r3, [r6, #4]
 800e2c4:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e2c8:	015b      	lsls	r3, r3, #5
 800e2ca:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e2ce:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e2d2:	430b      	orrs	r3, r1
 800e2d4:	425b      	negs	r3, r3
 800e2d6:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e2da:	4610      	mov	r0, r2
 800e2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2de <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e2de:	b538      	push	{r3, r4, r5, lr}
 800e2e0:	460c      	mov	r4, r1
 800e2e2:	6811      	ldr	r1, [r2, #0]
 800e2e4:	4610      	mov	r0, r2
 800e2e6:	68cd      	ldr	r5, [r1, #12]
 800e2e8:	4619      	mov	r1, r3
 800e2ea:	47a8      	blx	r5
 800e2ec:	2800      	cmp	r0, #0
 800e2ee:	bf08      	it	eq
 800e2f0:	4620      	moveq	r0, r4
 800e2f2:	bd38      	pop	{r3, r4, r5, pc}

0800e2f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e2f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e2f6:	4604      	mov	r4, r0
 800e2f8:	4615      	mov	r5, r2
 800e2fa:	4608      	mov	r0, r1
 800e2fc:	b93a      	cbnz	r2, 800e30e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e2fe:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e302:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e306:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e30a:	4628      	mov	r0, r5
 800e30c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e30e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e312:	8893      	ldrh	r3, [r2, #4]
 800e314:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e318:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e31c:	79ee      	ldrb	r6, [r5, #7]
 800e31e:	4316      	orrs	r6, r2
 800e320:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e324:	189a      	adds	r2, r3, r2
 800e326:	b291      	uxth	r1, r2
 800e328:	291d      	cmp	r1, #29
 800e32a:	b2b7      	uxth	r7, r6
 800e32c:	f200 8083 	bhi.w	800e436 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e330:	2201      	movs	r2, #1
 800e332:	408a      	lsls	r2, r1
 800e334:	4978      	ldr	r1, [pc, #480]	; (800e518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e336:	420a      	tst	r2, r1
 800e338:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e33c:	d12d      	bne.n	800e39a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e33e:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e342:	d078      	beq.n	800e436 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e344:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e348:	462b      	mov	r3, r5
 800e34a:	f105 0e08 	add.w	lr, r5, #8
 800e34e:	4615      	mov	r5, r2
 800e350:	6818      	ldr	r0, [r3, #0]
 800e352:	6859      	ldr	r1, [r3, #4]
 800e354:	4694      	mov	ip, r2
 800e356:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e35a:	3308      	adds	r3, #8
 800e35c:	4573      	cmp	r3, lr
 800e35e:	4662      	mov	r2, ip
 800e360:	d1f6      	bne.n	800e350 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e362:	6818      	ldr	r0, [r3, #0]
 800e364:	f8cc 0000 	str.w	r0, [ip]
 800e368:	889b      	ldrh	r3, [r3, #4]
 800e36a:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e36e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e372:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e376:	b2b3      	uxth	r3, r6
 800e378:	1aca      	subs	r2, r1, r3
 800e37a:	b292      	uxth	r2, r2
 800e37c:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e380:	10d2      	asrs	r2, r2, #3
 800e382:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e386:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e38a:	4302      	orrs	r2, r0
 800e38c:	1bcf      	subs	r7, r1, r7
 800e38e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e392:	1afb      	subs	r3, r7, r3
 800e394:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e398:	e7b7      	b.n	800e30a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e39a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e39c:	b92b      	cbnz	r3, 800e3aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e39e:	4b5f      	ldr	r3, [pc, #380]	; (800e51c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e3a0:	4a5f      	ldr	r2, [pc, #380]	; (800e520 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e3a2:	4860      	ldr	r0, [pc, #384]	; (800e524 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e3a4:	21c0      	movs	r1, #192	; 0xc0
 800e3a6:	f00d fb9b 	bl	801bae0 <__assert_func>
 800e3aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e3ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e3b0:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e3b2:	f640 6333 	movw	r3, #3635	; 0xe33
 800e3b6:	4299      	cmp	r1, r3
 800e3b8:	d110      	bne.n	800e3dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e3ba:	6803      	ldr	r3, [r0, #0]
 800e3bc:	68db      	ldr	r3, [r3, #12]
 800e3be:	4798      	blx	r3
 800e3c0:	7b41      	ldrb	r1, [r0, #13]
 800e3c2:	00cb      	lsls	r3, r1, #3
 800e3c4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e3c8:	7a03      	ldrb	r3, [r0, #8]
 800e3ca:	0648      	lsls	r0, r1, #25
 800e3cc:	ea43 0302 	orr.w	r3, r3, r2
 800e3d0:	bf44      	itt	mi
 800e3d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e3d6:	b21b      	sxthmi	r3, r3
 800e3d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e3dc:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e3e0:	443b      	add	r3, r7
 800e3e2:	4433      	add	r3, r6
 800e3e4:	b29b      	uxth	r3, r3
 800e3e6:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e3ea:	462a      	mov	r2, r5
 800e3ec:	f105 0c08 	add.w	ip, r5, #8
 800e3f0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e3f4:	4635      	mov	r5, r6
 800e3f6:	6810      	ldr	r0, [r2, #0]
 800e3f8:	6851      	ldr	r1, [r2, #4]
 800e3fa:	4637      	mov	r7, r6
 800e3fc:	c703      	stmia	r7!, {r0, r1}
 800e3fe:	3208      	adds	r2, #8
 800e400:	4562      	cmp	r2, ip
 800e402:	463e      	mov	r6, r7
 800e404:	d1f7      	bne.n	800e3f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e406:	6810      	ldr	r0, [r2, #0]
 800e408:	6038      	str	r0, [r7, #0]
 800e40a:	8892      	ldrh	r2, [r2, #4]
 800e40c:	80ba      	strh	r2, [r7, #4]
 800e40e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e412:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e416:	10db      	asrs	r3, r3, #3
 800e418:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e41c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e420:	4313      	orrs	r3, r2
 800e422:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e426:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e42a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e42e:	1a9b      	subs	r3, r3, r2
 800e430:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e434:	e769      	b.n	800e30a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e436:	f023 0204 	bic.w	r2, r3, #4
 800e43a:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e43e:	428a      	cmp	r2, r1
 800e440:	d003      	beq.n	800e44a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e442:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e446:	4293      	cmp	r3, r2
 800e448:	d120      	bne.n	800e48c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e44a:	3b01      	subs	r3, #1
 800e44c:	4602      	mov	r2, r0
 800e44e:	b29b      	uxth	r3, r3
 800e450:	4629      	mov	r1, r5
 800e452:	4620      	mov	r0, r4
 800e454:	f7ff ff43 	bl	800e2de <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e458:	7b41      	ldrb	r1, [r0, #13]
 800e45a:	00cb      	lsls	r3, r1, #3
 800e45c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e460:	7a03      	ldrb	r3, [r0, #8]
 800e462:	0649      	lsls	r1, r1, #25
 800e464:	ea43 0302 	orr.w	r3, r3, r2
 800e468:	bf44      	itt	mi
 800e46a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e46e:	b21b      	sxthmi	r3, r3
 800e470:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e474:	7b6b      	ldrb	r3, [r5, #13]
 800e476:	7aaa      	ldrb	r2, [r5, #10]
 800e478:	005b      	lsls	r3, r3, #1
 800e47a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e47e:	4313      	orrs	r3, r2
 800e480:	115a      	asrs	r2, r3, #5
 800e482:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e486:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e48a:	e036      	b.n	800e4fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e48c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e490:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e494:	7a2a      	ldrb	r2, [r5, #8]
 800e496:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e49a:	ea42 0201 	orr.w	r2, r2, r1
 800e49e:	bf1c      	itt	ne
 800e4a0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e4a4:	b212      	sxthne	r2, r2
 800e4a6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e4aa:	f640 6109 	movw	r1, #3593	; 0xe09
 800e4ae:	f023 0210 	bic.w	r2, r3, #16
 800e4b2:	428a      	cmp	r2, r1
 800e4b4:	d003      	beq.n	800e4be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e4b6:	f640 6213 	movw	r2, #3603	; 0xe13
 800e4ba:	4293      	cmp	r3, r2
 800e4bc:	d12a      	bne.n	800e514 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e4be:	7b6e      	ldrb	r6, [r5, #13]
 800e4c0:	0076      	lsls	r6, r6, #1
 800e4c2:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e4c6:	7aae      	ldrb	r6, [r5, #10]
 800e4c8:	4316      	orrs	r6, r2
 800e4ca:	f640 6213 	movw	r2, #3603	; 0xe13
 800e4ce:	4293      	cmp	r3, r2
 800e4d0:	bf18      	it	ne
 800e4d2:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e4d6:	4602      	mov	r2, r0
 800e4d8:	bf14      	ite	ne
 800e4da:	b29b      	uxthne	r3, r3
 800e4dc:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e4e0:	4629      	mov	r1, r5
 800e4e2:	4620      	mov	r0, r4
 800e4e4:	f7ff fefb 	bl	800e2de <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e4e8:	7b43      	ldrb	r3, [r0, #13]
 800e4ea:	7a82      	ldrb	r2, [r0, #10]
 800e4ec:	005b      	lsls	r3, r3, #1
 800e4ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e4f2:	4313      	orrs	r3, r2
 800e4f4:	1af6      	subs	r6, r6, r3
 800e4f6:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800e4fa:	7b69      	ldrb	r1, [r5, #13]
 800e4fc:	00cb      	lsls	r3, r1, #3
 800e4fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e502:	7a2b      	ldrb	r3, [r5, #8]
 800e504:	4313      	orrs	r3, r2
 800e506:	064a      	lsls	r2, r1, #25
 800e508:	bf44      	itt	mi
 800e50a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e50e:	b21b      	sxthmi	r3, r3
 800e510:	1bdb      	subs	r3, r3, r7
 800e512:	e73f      	b.n	800e394 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e514:	2300      	movs	r3, #0
 800e516:	e7b6      	b.n	800e486 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e518:	3fc00079 	.word	0x3fc00079
 800e51c:	0801d8c0 	.word	0x0801d8c0
 800e520:	0801f0eb 	.word	0x0801f0eb
 800e524:	0801d992 	.word	0x0801d992

0800e528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e52c:	4604      	mov	r4, r0
 800e52e:	b942      	cbnz	r2, 800e542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e530:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e534:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800e538:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800e53c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e540:	e046      	b.n	800e5d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e542:	7b51      	ldrb	r1, [r2, #13]
 800e544:	8893      	ldrh	r3, [r2, #4]
 800e546:	010f      	lsls	r7, r1, #4
 800e548:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e54c:	79d7      	ldrb	r7, [r2, #7]
 800e54e:	4307      	orrs	r7, r0
 800e550:	2f04      	cmp	r7, #4
 800e552:	b2bd      	uxth	r5, r7
 800e554:	bfcc      	ite	gt
 800e556:	08bf      	lsrgt	r7, r7, #2
 800e558:	2701      	movle	r7, #1
 800e55a:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e55e:	f200 80ab 	bhi.w	800e6b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e562:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e566:	4283      	cmp	r3, r0
 800e568:	d216      	bcs.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e56a:	f240 605b 	movw	r0, #1627	; 0x65b
 800e56e:	4283      	cmp	r3, r0
 800e570:	d859      	bhi.n	800e626 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e572:	f240 6057 	movw	r0, #1623	; 0x657
 800e576:	4283      	cmp	r3, r0
 800e578:	d20e      	bcs.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e57a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e57e:	d24a      	bcs.n	800e616 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e580:	f240 604e 	movw	r0, #1614	; 0x64e
 800e584:	4283      	cmp	r3, r0
 800e586:	d207      	bcs.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e588:	f240 601a 	movw	r0, #1562	; 0x61a
 800e58c:	4283      	cmp	r3, r0
 800e58e:	d02a      	beq.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e590:	d821      	bhi.n	800e5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e592:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e596:	d35b      	bcc.n	800e650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e598:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800e59c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e5a0:	f040 80d0 	bne.w	800e744 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e5a4:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800e5a8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e5ac:	f040 80ca 	bne.w	800e744 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e5b0:	00cb      	lsls	r3, r1, #3
 800e5b2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e5b6:	7a13      	ldrb	r3, [r2, #8]
 800e5b8:	0649      	lsls	r1, r1, #25
 800e5ba:	ea43 0300 	orr.w	r3, r3, r0
 800e5be:	bf44      	itt	mi
 800e5c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5c4:	b21b      	sxthmi	r3, r3
 800e5c6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e5ca:	1b5d      	subs	r5, r3, r5
 800e5cc:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e5d0:	4610      	mov	r0, r2
 800e5d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5d6:	f240 604b 	movw	r0, #1611	; 0x64b
 800e5da:	4283      	cmp	r3, r0
 800e5dc:	d338      	bcc.n	800e650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e5de:	f240 604c 	movw	r0, #1612	; 0x64c
 800e5e2:	4283      	cmp	r3, r0
 800e5e4:	d9d8      	bls.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5e6:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800e5ea:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800e5ee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e5f2:	f040 80f1 	bne.w	800e7d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5f6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e5fa:	f040 80ed 	bne.w	800e7d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5fe:	00cb      	lsls	r3, r1, #3
 800e600:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e604:	7a13      	ldrb	r3, [r2, #8]
 800e606:	064e      	lsls	r6, r1, #25
 800e608:	ea43 0300 	orr.w	r3, r3, r0
 800e60c:	bf44      	itt	mi
 800e60e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e612:	b21b      	sxthmi	r3, r3
 800e614:	e7d9      	b.n	800e5ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e616:	f240 6054 	movw	r0, #1620	; 0x654
 800e61a:	4283      	cmp	r3, r0
 800e61c:	d8e3      	bhi.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e61e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e622:	d9e0      	bls.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e624:	e7b8      	b.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e626:	f240 6074 	movw	r0, #1652	; 0x674
 800e62a:	4283      	cmp	r3, r0
 800e62c:	d0b4      	beq.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e62e:	d82d      	bhi.n	800e68c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e630:	f240 605e 	movw	r0, #1630	; 0x65e
 800e634:	4283      	cmp	r3, r0
 800e636:	d804      	bhi.n	800e642 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e638:	f240 605d 	movw	r0, #1629	; 0x65d
 800e63c:	4283      	cmp	r3, r0
 800e63e:	d3d2      	bcc.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e640:	e7aa      	b.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e642:	f240 605f 	movw	r0, #1631	; 0x65f
 800e646:	4283      	cmp	r3, r0
 800e648:	d0cd      	beq.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e64a:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e64e:	d0a3      	beq.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e650:	00cb      	lsls	r3, r1, #3
 800e652:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e656:	7a13      	ldrb	r3, [r2, #8]
 800e658:	0649      	lsls	r1, r1, #25
 800e65a:	ea43 0300 	orr.w	r3, r3, r0
 800e65e:	bf44      	itt	mi
 800e660:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e664:	b21b      	sxthmi	r3, r3
 800e666:	1b5d      	subs	r5, r3, r5
 800e668:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e66c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e670:	7b53      	ldrb	r3, [r2, #13]
 800e672:	015b      	lsls	r3, r3, #5
 800e674:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e678:	7993      	ldrb	r3, [r2, #6]
 800e67a:	430b      	orrs	r3, r1
 800e67c:	005b      	lsls	r3, r3, #1
 800e67e:	2105      	movs	r1, #5
 800e680:	fb93 f3f1 	sdiv	r3, r3, r1
 800e684:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e688:	440b      	add	r3, r1
 800e68a:	e757      	b.n	800e53c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e68c:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e690:	4283      	cmp	r3, r0
 800e692:	d809      	bhi.n	800e6a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e694:	f240 60df 	movw	r0, #1759	; 0x6df
 800e698:	4283      	cmp	r3, r0
 800e69a:	f4bf af7d 	bcs.w	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e69e:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e6a2:	2b05      	cmp	r3, #5
 800e6a4:	d8d4      	bhi.n	800e650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e6a6:	e777      	b.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6a8:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e6ac:	4283      	cmp	r3, r0
 800e6ae:	d09a      	beq.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6b0:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e6b4:	4283      	cmp	r3, r0
 800e6b6:	e7ca      	b.n	800e64e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e6b8:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e6bc:	d22b      	bcs.n	800e716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e6be:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e6c2:	4283      	cmp	r3, r0
 800e6c4:	d28f      	bcs.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6c6:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e6ca:	4283      	cmp	r3, r0
 800e6cc:	d816      	bhi.n	800e6fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e6ce:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e6d2:	4283      	cmp	r3, r0
 800e6d4:	f4bf af60 	bcs.w	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6d8:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e6dc:	4283      	cmp	r3, r0
 800e6de:	d80a      	bhi.n	800e6f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e6e0:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e6e4:	4283      	cmp	r3, r0
 800e6e6:	f4bf af57 	bcs.w	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6ea:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e6ee:	4283      	cmp	r3, r0
 800e6f0:	f43f af79 	beq.w	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6f4:	e7ac      	b.n	800e650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e6f6:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e6fa:	e7f8      	b.n	800e6ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e6fc:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e700:	4283      	cmp	r3, r0
 800e702:	d802      	bhi.n	800e70a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e704:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e708:	e798      	b.n	800e63c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e70a:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e70e:	4283      	cmp	r3, r0
 800e710:	f47f af42 	bne.w	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e714:	e767      	b.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e716:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e71a:	4283      	cmp	r3, r0
 800e71c:	f43f af63 	beq.w	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e720:	d802      	bhi.n	800e728 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e722:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e726:	e7f2      	b.n	800e70e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e728:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e72c:	4283      	cmp	r3, r0
 800e72e:	d805      	bhi.n	800e73c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e730:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e734:	4283      	cmp	r3, r0
 800e736:	f4ff af2f 	bcc.w	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e73a:	e754      	b.n	800e5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e73c:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e740:	4283      	cmp	r3, r0
 800e742:	e7af      	b.n	800e6a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e744:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800e748:	4617      	mov	r7, r2
 800e74a:	f102 0808 	add.w	r8, r2, #8
 800e74e:	4666      	mov	r6, ip
 800e750:	6838      	ldr	r0, [r7, #0]
 800e752:	6879      	ldr	r1, [r7, #4]
 800e754:	46e6      	mov	lr, ip
 800e756:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e75a:	3708      	adds	r7, #8
 800e75c:	4547      	cmp	r7, r8
 800e75e:	46f4      	mov	ip, lr
 800e760:	d1f6      	bne.n	800e750 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e762:	6838      	ldr	r0, [r7, #0]
 800e764:	f8ce 0000 	str.w	r0, [lr]
 800e768:	88b9      	ldrh	r1, [r7, #4]
 800e76a:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e76e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e772:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e776:	d009      	beq.n	800e78c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e778:	7b51      	ldrb	r1, [r2, #13]
 800e77a:	7992      	ldrb	r2, [r2, #6]
 800e77c:	0149      	lsls	r1, r1, #5
 800e77e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e782:	4311      	orrs	r1, r2
 800e784:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e788:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e78c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e790:	d00d      	beq.n	800e7ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e792:	442b      	add	r3, r5
 800e794:	b29b      	uxth	r3, r3
 800e796:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e79a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e79e:	10db      	asrs	r3, r3, #3
 800e7a0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e7a4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e7a8:	4313      	orrs	r3, r2
 800e7aa:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e7ae:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e7b2:	00cb      	lsls	r3, r1, #3
 800e7b4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e7b8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e7bc:	064f      	lsls	r7, r1, #25
 800e7be:	ea43 0302 	orr.w	r3, r3, r2
 800e7c2:	bf44      	itt	mi
 800e7c4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e7c8:	b21b      	sxthmi	r3, r3
 800e7ca:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e7ce:	1b5d      	subs	r5, r3, r5
 800e7d0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e7d4:	4632      	mov	r2, r6
 800e7d6:	e6fb      	b.n	800e5d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e7d8:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800e7dc:	4694      	mov	ip, r2
 800e7de:	f102 0908 	add.w	r9, r2, #8
 800e7e2:	4676      	mov	r6, lr
 800e7e4:	f8dc 0000 	ldr.w	r0, [ip]
 800e7e8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e7ec:	46f0      	mov	r8, lr
 800e7ee:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e7f2:	f10c 0c08 	add.w	ip, ip, #8
 800e7f6:	45cc      	cmp	ip, r9
 800e7f8:	46c6      	mov	lr, r8
 800e7fa:	d1f3      	bne.n	800e7e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e7fc:	f8dc 0000 	ldr.w	r0, [ip]
 800e800:	f8c8 0000 	str.w	r0, [r8]
 800e804:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e808:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e80c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e810:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e814:	d009      	beq.n	800e82a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e816:	7b51      	ldrb	r1, [r2, #13]
 800e818:	7992      	ldrb	r2, [r2, #6]
 800e81a:	0149      	lsls	r1, r1, #5
 800e81c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e820:	4311      	orrs	r1, r2
 800e822:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e826:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e82a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e82e:	d00d      	beq.n	800e84c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e830:	1bdb      	subs	r3, r3, r7
 800e832:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e836:	b29b      	uxth	r3, r3
 800e838:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e83c:	10db      	asrs	r3, r3, #3
 800e83e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e842:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e846:	4313      	orrs	r3, r2
 800e848:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e84c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e850:	00cb      	lsls	r3, r1, #3
 800e852:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e856:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e85a:	0648      	lsls	r0, r1, #25
 800e85c:	ea43 0302 	orr.w	r3, r3, r2
 800e860:	bf44      	itt	mi
 800e862:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e866:	b21b      	sxthmi	r3, r3
 800e868:	e7b1      	b.n	800e7ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e870:	461e      	mov	r6, r3
 800e872:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e874:	4604      	mov	r4, r0
 800e876:	4617      	mov	r7, r2
 800e878:	b92b      	cbnz	r3, 800e886 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e87a:	4b25      	ldr	r3, [pc, #148]	; (800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e87c:	4a25      	ldr	r2, [pc, #148]	; (800e914 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e87e:	4826      	ldr	r0, [pc, #152]	; (800e918 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e880:	21c0      	movs	r1, #192	; 0xc0
 800e882:	f00d f92d 	bl	801bae0 <__assert_func>
 800e886:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e888:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e88c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e890:	f7f4 f986 	bl	8002ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e894:	4605      	mov	r5, r0
 800e896:	b918      	cbnz	r0, 800e8a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e898:	6030      	str	r0, [r6, #0]
 800e89a:	4628      	mov	r0, r5
 800e89c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e8a0:	683b      	ldr	r3, [r7, #0]
 800e8a2:	4601      	mov	r1, r0
 800e8a4:	68db      	ldr	r3, [r3, #12]
 800e8a6:	4638      	mov	r0, r7
 800e8a8:	4798      	blx	r3
 800e8aa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e8ae:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e8b2:	4602      	mov	r2, r0
 800e8b4:	6030      	str	r0, [r6, #0]
 800e8b6:	d213      	bcs.n	800e8e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e8b8:	4643      	mov	r3, r8
 800e8ba:	4639      	mov	r1, r7
 800e8bc:	4620      	mov	r0, r4
 800e8be:	f7ff fe33 	bl	800e528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e8c2:	6030      	str	r0, [r6, #0]
 800e8c4:	6833      	ldr	r3, [r6, #0]
 800e8c6:	b143      	cbz	r3, 800e8da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e8c8:	7b5a      	ldrb	r2, [r3, #13]
 800e8ca:	7a9b      	ldrb	r3, [r3, #10]
 800e8cc:	0052      	lsls	r2, r2, #1
 800e8ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e8d2:	4313      	orrs	r3, r2
 800e8d4:	bf0c      	ite	eq
 800e8d6:	2301      	moveq	r3, #1
 800e8d8:	2300      	movne	r3, #0
 800e8da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e8de:	e7dc      	b.n	800e89a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e8e0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e8e4:	b29b      	uxth	r3, r3
 800e8e6:	2b7f      	cmp	r3, #127	; 0x7f
 800e8e8:	d804      	bhi.n	800e8f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e8ea:	4639      	mov	r1, r7
 800e8ec:	4620      	mov	r0, r4
 800e8ee:	f7ff fd01 	bl	800e2f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e8f2:	e7e6      	b.n	800e8c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e8f4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e8f8:	2b00      	cmp	r3, #0
 800e8fa:	d0e3      	beq.n	800e8c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e8fc:	f640 1302 	movw	r3, #2306	; 0x902
 800e900:	429d      	cmp	r5, r3
 800e902:	d1df      	bne.n	800e8c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e904:	4601      	mov	r1, r0
 800e906:	4620      	mov	r0, r4
 800e908:	f7ff fcc6 	bl	800e298 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e90c:	e7d9      	b.n	800e8c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e90e:	bf00      	nop
 800e910:	0801d8c0 	.word	0x0801d8c0
 800e914:	0801f0eb 	.word	0x0801f0eb
 800e918:	0801d992 	.word	0x0801d992

0800e91c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e91c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e920:	461e      	mov	r6, r3
 800e922:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e924:	4604      	mov	r4, r0
 800e926:	4617      	mov	r7, r2
 800e928:	b92b      	cbnz	r3, 800e936 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e92a:	4b26      	ldr	r3, [pc, #152]	; (800e9c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e92c:	4a26      	ldr	r2, [pc, #152]	; (800e9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e92e:	4827      	ldr	r0, [pc, #156]	; (800e9cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e930:	21c0      	movs	r1, #192	; 0xc0
 800e932:	f00d f8d5 	bl	801bae0 <__assert_func>
 800e936:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e938:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e93c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e940:	f7f4 f92e 	bl	8002ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e944:	4605      	mov	r5, r0
 800e946:	b918      	cbnz	r0, 800e950 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e948:	6030      	str	r0, [r6, #0]
 800e94a:	4628      	mov	r0, r5
 800e94c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e950:	683b      	ldr	r3, [r7, #0]
 800e952:	4601      	mov	r1, r0
 800e954:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e958:	4638      	mov	r0, r7
 800e95a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e95e:	47c8      	blx	r9
 800e960:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e964:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e968:	4602      	mov	r2, r0
 800e96a:	6030      	str	r0, [r6, #0]
 800e96c:	d213      	bcs.n	800e996 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e96e:	4643      	mov	r3, r8
 800e970:	4639      	mov	r1, r7
 800e972:	4620      	mov	r0, r4
 800e974:	f7ff fdd8 	bl	800e528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e978:	6030      	str	r0, [r6, #0]
 800e97a:	6833      	ldr	r3, [r6, #0]
 800e97c:	b143      	cbz	r3, 800e990 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e97e:	7b5a      	ldrb	r2, [r3, #13]
 800e980:	7a9b      	ldrb	r3, [r3, #10]
 800e982:	0052      	lsls	r2, r2, #1
 800e984:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e988:	4313      	orrs	r3, r2
 800e98a:	bf0c      	ite	eq
 800e98c:	2301      	moveq	r3, #1
 800e98e:	2300      	movne	r3, #0
 800e990:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e994:	e7d9      	b.n	800e94a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e996:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e99a:	b29b      	uxth	r3, r3
 800e99c:	2b7f      	cmp	r3, #127	; 0x7f
 800e99e:	d804      	bhi.n	800e9aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e9a0:	4639      	mov	r1, r7
 800e9a2:	4620      	mov	r0, r4
 800e9a4:	f7ff fca6 	bl	800e2f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e9a8:	e7e6      	b.n	800e978 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e9aa:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	d0e3      	beq.n	800e97a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e9b2:	f640 1302 	movw	r3, #2306	; 0x902
 800e9b6:	429d      	cmp	r5, r3
 800e9b8:	d1df      	bne.n	800e97a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e9ba:	4601      	mov	r1, r0
 800e9bc:	4620      	mov	r0, r4
 800e9be:	f7ff fc6b 	bl	800e298 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e9c2:	e7d9      	b.n	800e978 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e9c4:	0801d8c0 	.word	0x0801d8c0
 800e9c8:	0801f0eb 	.word	0x0801f0eb
 800e9cc:	0801d992 	.word	0x0801d992

0800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e9d0:	b510      	push	{r4, lr}
 800e9d2:	4604      	mov	r4, r0
 800e9d4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e9d8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9da:	b9d9      	cbnz	r1, 800ea14 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800e9dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9de:	2b0a      	cmp	r3, #10
 800e9e0:	d037      	beq.n	800ea52 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e9e2:	4620      	mov	r0, r4
 800e9e4:	f7ff fc17 	bl	800e216 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e9e8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9ea:	2b09      	cmp	r3, #9
 800e9ec:	d906      	bls.n	800e9fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e9ee:	4b19      	ldr	r3, [pc, #100]	; (800ea54 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e9f0:	4a19      	ldr	r2, [pc, #100]	; (800ea58 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e9f2:	481a      	ldr	r0, [pc, #104]	; (800ea5c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800e9f4:	f44f 7182 	mov.w	r1, #260	; 0x104
 800e9f8:	f00d f872 	bl	801bae0 <__assert_func>
 800e9fc:	1c5a      	adds	r2, r3, #1
 800e9fe:	8722      	strh	r2, [r4, #56]	; 0x38
 800ea00:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea02:	4413      	add	r3, r2
 800ea04:	b29b      	uxth	r3, r3
 800ea06:	2b09      	cmp	r3, #9
 800ea08:	bf88      	it	hi
 800ea0a:	3b0a      	subhi	r3, #10
 800ea0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea10:	8458      	strh	r0, [r3, #34]	; 0x22
 800ea12:	e7e3      	b.n	800e9dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800ea14:	2b0a      	cmp	r3, #10
 800ea16:	d01c      	beq.n	800ea52 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ea18:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ea1a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ea1e:	3901      	subs	r1, #1
 800ea20:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ea22:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ea26:	1c51      	adds	r1, r2, #1
 800ea28:	b289      	uxth	r1, r1
 800ea2a:	2901      	cmp	r1, #1
 800ea2c:	bf8a      	itet	hi
 800ea2e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ea32:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800ea34:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800ea36:	2b09      	cmp	r3, #9
 800ea38:	d8d9      	bhi.n	800e9ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800ea3a:	1c5a      	adds	r2, r3, #1
 800ea3c:	8722      	strh	r2, [r4, #56]	; 0x38
 800ea3e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea40:	4413      	add	r3, r2
 800ea42:	b29b      	uxth	r3, r3
 800ea44:	2b09      	cmp	r3, #9
 800ea46:	bf88      	it	hi
 800ea48:	3b0a      	subhi	r3, #10
 800ea4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea4e:	8458      	strh	r0, [r3, #34]	; 0x22
 800ea50:	e7c0      	b.n	800e9d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ea52:	bd10      	pop	{r4, pc}
 800ea54:	0801eebc 	.word	0x0801eebc
 800ea58:	0801f241 	.word	0x0801f241
 800ea5c:	0801d992 	.word	0x0801d992

0800ea60 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ea60:	b538      	push	{r3, r4, r5, lr}
 800ea62:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800ea64:	4604      	mov	r4, r0
 800ea66:	b92a      	cbnz	r2, 800ea74 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ea68:	4b13      	ldr	r3, [pc, #76]	; (800eab8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ea6a:	4a14      	ldr	r2, [pc, #80]	; (800eabc <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ea6c:	4814      	ldr	r0, [pc, #80]	; (800eac0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ea6e:	21d5      	movs	r1, #213	; 0xd5
 800ea70:	f00d f836 	bl	801bae0 <__assert_func>
 800ea74:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ea76:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ea7a:	3a01      	subs	r2, #1
 800ea7c:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800ea7e:	8702      	strh	r2, [r0, #56]	; 0x38
 800ea80:	1c5a      	adds	r2, r3, #1
 800ea82:	b292      	uxth	r2, r2
 800ea84:	2a09      	cmp	r2, #9
 800ea86:	bf86      	itte	hi
 800ea88:	3b09      	subhi	r3, #9
 800ea8a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800ea8c:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800ea8e:	f7ff ff9f 	bl	800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ea92:	8c23      	ldrh	r3, [r4, #32]
 800ea94:	2b01      	cmp	r3, #1
 800ea96:	bf9c      	itt	ls
 800ea98:	3301      	addls	r3, #1
 800ea9a:	8423      	strhls	r3, [r4, #32]
 800ea9c:	8be3      	ldrh	r3, [r4, #30]
 800ea9e:	b90b      	cbnz	r3, 800eaa4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800eaa0:	2302      	movs	r3, #2
 800eaa2:	83e3      	strh	r3, [r4, #30]
 800eaa4:	8be3      	ldrh	r3, [r4, #30]
 800eaa6:	3b01      	subs	r3, #1
 800eaa8:	b29b      	uxth	r3, r3
 800eaaa:	83e3      	strh	r3, [r4, #30]
 800eaac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eab0:	4628      	mov	r0, r5
 800eab2:	8365      	strh	r5, [r4, #26]
 800eab4:	bd38      	pop	{r3, r4, r5, pc}
 800eab6:	bf00      	nop
 800eab8:	0801d8c0 	.word	0x0801d8c0
 800eabc:	0801f196 	.word	0x0801f196
 800eac0:	0801d992 	.word	0x0801d992

0800eac4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800eac4:	b538      	push	{r3, r4, r5, lr}
 800eac6:	428a      	cmp	r2, r1
 800eac8:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800eaca:	d90c      	bls.n	800eae6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800eacc:	b92c      	cbnz	r4, 800eada <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800eace:	4b1c      	ldr	r3, [pc, #112]	; (800eb40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ead0:	4a1c      	ldr	r2, [pc, #112]	; (800eb44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ead2:	21e1      	movs	r1, #225	; 0xe1
 800ead4:	481c      	ldr	r0, [pc, #112]	; (800eb48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ead6:	f00d f803 	bl	801bae0 <__assert_func>
 800eada:	3c01      	subs	r4, #1
 800eadc:	8704      	strh	r4, [r0, #56]	; 0x38
 800eade:	4b1b      	ldr	r3, [pc, #108]	; (800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800eae0:	4a1b      	ldr	r2, [pc, #108]	; (800eb50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800eae2:	21c5      	movs	r1, #197	; 0xc5
 800eae4:	e7f6      	b.n	800ead4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eae6:	428c      	cmp	r4, r1
 800eae8:	d203      	bcs.n	800eaf2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800eaea:	4b1a      	ldr	r3, [pc, #104]	; (800eb54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800eaec:	4a1a      	ldr	r2, [pc, #104]	; (800eb58 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800eaee:	21cb      	movs	r1, #203	; 0xcb
 800eaf0:	e7f0      	b.n	800ead4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eaf2:	1a64      	subs	r4, r4, r1
 800eaf4:	8704      	strh	r4, [r0, #56]	; 0x38
 800eaf6:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800eaf8:	4421      	add	r1, r4
 800eafa:	b289      	uxth	r1, r1
 800eafc:	2909      	cmp	r1, #9
 800eafe:	bf88      	it	hi
 800eb00:	390a      	subhi	r1, #10
 800eb02:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eb04:	250a      	movs	r5, #10
 800eb06:	b1ba      	cbz	r2, 800eb38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800eb08:	3a01      	subs	r2, #1
 800eb0a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800eb0c:	b292      	uxth	r2, r2
 800eb0e:	2909      	cmp	r1, #9
 800eb10:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800eb14:	d903      	bls.n	800eb1e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800eb16:	4b11      	ldr	r3, [pc, #68]	; (800eb5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800eb18:	4a11      	ldr	r2, [pc, #68]	; (800eb60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800eb1a:	21e6      	movs	r1, #230	; 0xe6
 800eb1c:	e7da      	b.n	800ead4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eb1e:	3101      	adds	r1, #1
 800eb20:	8701      	strh	r1, [r0, #56]	; 0x38
 800eb22:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eb24:	b901      	cbnz	r1, 800eb28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800eb26:	86c5      	strh	r5, [r0, #54]	; 0x36
 800eb28:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eb2a:	3901      	subs	r1, #1
 800eb2c:	b289      	uxth	r1, r1
 800eb2e:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eb30:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eb34:	844c      	strh	r4, [r1, #34]	; 0x22
 800eb36:	e7e6      	b.n	800eb06 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800eb38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb3c:	f7ff bf48 	b.w	800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb40:	0801d8c0 	.word	0x0801d8c0
 800eb44:	0801ef6f 	.word	0x0801ef6f
 800eb48:	0801d992 	.word	0x0801d992
 800eb4c:	0801d9be 	.word	0x0801d9be
 800eb50:	0801f019 	.word	0x0801f019
 800eb54:	0801eec8 	.word	0x0801eec8
 800eb58:	0801f2f0 	.word	0x0801f2f0
 800eb5c:	0801eed4 	.word	0x0801eed4
 800eb60:	0801eee7 	.word	0x0801eee7

0800eb64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eb64:	3a01      	subs	r2, #1
 800eb66:	b570      	push	{r4, r5, r6, lr}
 800eb68:	b292      	uxth	r2, r2
 800eb6a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800eb6e:	42b2      	cmp	r2, r6
 800eb70:	d019      	beq.n	800eba6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800eb72:	8c04      	ldrh	r4, [r0, #32]
 800eb74:	f831 5b02 	ldrh.w	r5, [r1], #2
 800eb78:	4294      	cmp	r4, r2
 800eb7a:	d805      	bhi.n	800eb88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800eb7c:	4b19      	ldr	r3, [pc, #100]	; (800ebe4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eb7e:	4a1a      	ldr	r2, [pc, #104]	; (800ebe8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800eb80:	481a      	ldr	r0, [pc, #104]	; (800ebec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800eb82:	21c5      	movs	r1, #197	; 0xc5
 800eb84:	f00c ffac 	bl	801bae0 <__assert_func>
 800eb88:	8bc4      	ldrh	r4, [r0, #30]
 800eb8a:	4414      	add	r4, r2
 800eb8c:	b2a4      	uxth	r4, r4
 800eb8e:	2c01      	cmp	r4, #1
 800eb90:	bf88      	it	hi
 800eb92:	3c02      	subhi	r4, #2
 800eb94:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eb98:	3a01      	subs	r2, #1
 800eb9a:	8b64      	ldrh	r4, [r4, #26]
 800eb9c:	42ac      	cmp	r4, r5
 800eb9e:	b292      	uxth	r2, r2
 800eba0:	d0e5      	beq.n	800eb6e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800eba2:	2000      	movs	r0, #0
 800eba4:	bd70      	pop	{r4, r5, r6, pc}
 800eba6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800ebaa:	2400      	movs	r4, #0
 800ebac:	4413      	add	r3, r2
 800ebae:	b2a2      	uxth	r2, r4
 800ebb0:	429a      	cmp	r2, r3
 800ebb2:	da14      	bge.n	800ebde <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800ebb4:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800ebb6:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800ebba:	4296      	cmp	r6, r2
 800ebbc:	d802      	bhi.n	800ebc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800ebbe:	4b09      	ldr	r3, [pc, #36]	; (800ebe4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ebc0:	4a0b      	ldr	r2, [pc, #44]	; (800ebf0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800ebc2:	e7dd      	b.n	800eb80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800ebc4:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800ebc6:	4432      	add	r2, r6
 800ebc8:	b292      	uxth	r2, r2
 800ebca:	2a09      	cmp	r2, #9
 800ebcc:	bf88      	it	hi
 800ebce:	3a0a      	subhi	r2, #10
 800ebd0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800ebd4:	3401      	adds	r4, #1
 800ebd6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800ebd8:	42aa      	cmp	r2, r5
 800ebda:	d0e8      	beq.n	800ebae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800ebdc:	e7e1      	b.n	800eba2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800ebde:	2001      	movs	r0, #1
 800ebe0:	e7e0      	b.n	800eba4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800ebe2:	bf00      	nop
 800ebe4:	0801d9be 	.word	0x0801d9be
 800ebe8:	0801f374 	.word	0x0801f374
 800ebec:	0801d992 	.word	0x0801d992
 800ebf0:	0801f019 	.word	0x0801f019

0800ebf4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ebf4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebf8:	4605      	mov	r5, r0
 800ebfa:	4616      	mov	r6, r2
 800ebfc:	1c8c      	adds	r4, r1, #2
 800ebfe:	8809      	ldrh	r1, [r1, #0]
 800ec00:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ec04:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ec08:	42b3      	cmp	r3, r6
 800ec0a:	d124      	bne.n	800ec56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ec0c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ec10:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ec14:	f001 070f 	and.w	r7, r1, #15
 800ec18:	f8cd 8000 	str.w	r8, [sp]
 800ec1c:	464b      	mov	r3, r9
 800ec1e:	4652      	mov	r2, sl
 800ec20:	4621      	mov	r1, r4
 800ec22:	4628      	mov	r0, r5
 800ec24:	f7ff ff9e 	bl	800eb64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ec28:	4683      	mov	fp, r0
 800ec2a:	b168      	cbz	r0, 800ec48 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ec2c:	eb0a 0109 	add.w	r1, sl, r9
 800ec30:	4441      	add	r1, r8
 800ec32:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ec36:	463a      	mov	r2, r7
 800ec38:	4649      	mov	r1, r9
 800ec3a:	4628      	mov	r0, r5
 800ec3c:	f7ff ff42 	bl	800eac4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ec40:	4658      	mov	r0, fp
 800ec42:	b003      	add	sp, #12
 800ec44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec48:	eb07 010a 	add.w	r1, r7, sl
 800ec4c:	4449      	add	r1, r9
 800ec4e:	4441      	add	r1, r8
 800ec50:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ec54:	e7d2      	b.n	800ebfc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ec56:	f04f 0b00 	mov.w	fp, #0
 800ec5a:	e7f1      	b.n	800ec40 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ec5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ec5c:	b570      	push	{r4, r5, r6, lr}
 800ec5e:	8810      	ldrh	r0, [r2, #0]
 800ec60:	4298      	cmp	r0, r3
 800ec62:	d817      	bhi.n	800ec94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec64:	1e48      	subs	r0, r1, #1
 800ec66:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ec6a:	4298      	cmp	r0, r3
 800ec6c:	d312      	bcc.n	800ec94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec6e:	2400      	movs	r4, #0
 800ec70:	428c      	cmp	r4, r1
 800ec72:	d20f      	bcs.n	800ec94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec74:	1860      	adds	r0, r4, r1
 800ec76:	1040      	asrs	r0, r0, #1
 800ec78:	0085      	lsls	r5, r0, #2
 800ec7a:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ec7e:	42b3      	cmp	r3, r6
 800ec80:	d902      	bls.n	800ec88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ec82:	3001      	adds	r0, #1
 800ec84:	b284      	uxth	r4, r0
 800ec86:	e7f3      	b.n	800ec70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec88:	d201      	bcs.n	800ec8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ec8a:	b281      	uxth	r1, r0
 800ec8c:	e7f0      	b.n	800ec70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec8e:	442a      	add	r2, r5
 800ec90:	8850      	ldrh	r0, [r2, #2]
 800ec92:	bd70      	pop	{r4, r5, r6, pc}
 800ec94:	2000      	movs	r0, #0
 800ec96:	e7fc      	b.n	800ec92 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800ec98 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ec98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec9c:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800ec9e:	886f      	ldrh	r7, [r5, #2]
 800eca0:	4604      	mov	r4, r0
 800eca2:	087f      	lsrs	r7, r7, #1
 800eca4:	260b      	movs	r6, #11
 800eca6:	3e01      	subs	r6, #1
 800eca8:	d01b      	beq.n	800ece2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ecaa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ecac:	b92b      	cbnz	r3, 800ecba <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800ecae:	4b0e      	ldr	r3, [pc, #56]	; (800ece8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800ecb0:	4a0e      	ldr	r2, [pc, #56]	; (800ecec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800ecb2:	480f      	ldr	r0, [pc, #60]	; (800ecf0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800ecb4:	21c0      	movs	r1, #192	; 0xc0
 800ecb6:	f00c ff13 	bl	801bae0 <__assert_func>
 800ecba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ecbc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ecc0:	462a      	mov	r2, r5
 800ecc2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ecc6:	4639      	mov	r1, r7
 800ecc8:	4643      	mov	r3, r8
 800ecca:	4620      	mov	r0, r4
 800eccc:	f7ff ffc6 	bl	800ec5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ecd0:	b138      	cbz	r0, 800ece2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ecd2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ecd6:	4642      	mov	r2, r8
 800ecd8:	4620      	mov	r0, r4
 800ecda:	f7ff ff8b 	bl	800ebf4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ecde:	2800      	cmp	r0, #0
 800ece0:	d1e1      	bne.n	800eca6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800ece2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ece6:	bf00      	nop
 800ece8:	0801d8c0 	.word	0x0801d8c0
 800ecec:	0801f0eb 	.word	0x0801f0eb
 800ecf0:	0801d992 	.word	0x0801d992

0800ecf4 <_ZN8touchgfx8ceil28_4El>:
 800ecf4:	f110 030f 	adds.w	r3, r0, #15
 800ecf8:	d401      	bmi.n	800ecfe <_ZN8touchgfx8ceil28_4El+0xa>
 800ecfa:	1118      	asrs	r0, r3, #4
 800ecfc:	4770      	bx	lr
 800ecfe:	f1c0 0001 	rsb	r0, r0, #1
 800ed02:	f010 000f 	ands.w	r0, r0, #15
 800ed06:	bf18      	it	ne
 800ed08:	2001      	movne	r0, #1
 800ed0a:	2210      	movs	r2, #16
 800ed0c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ed10:	1a18      	subs	r0, r3, r0
 800ed12:	4770      	bx	lr

0800ed14 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800ed14:	2900      	cmp	r1, #0
 800ed16:	b538      	push	{r3, r4, r5, lr}
 800ed18:	dc05      	bgt.n	800ed26 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800ed1a:	4b0f      	ldr	r3, [pc, #60]	; (800ed58 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800ed1c:	4a0f      	ldr	r2, [pc, #60]	; (800ed5c <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800ed1e:	4810      	ldr	r0, [pc, #64]	; (800ed60 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800ed20:	21f7      	movs	r1, #247	; 0xf7
 800ed22:	f00c fedd 	bl	801bae0 <__assert_func>
 800ed26:	2800      	cmp	r0, #0
 800ed28:	db06      	blt.n	800ed38 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800ed2a:	fb90 f4f1 	sdiv	r4, r0, r1
 800ed2e:	6014      	str	r4, [r2, #0]
 800ed30:	fb01 0114 	mls	r1, r1, r4, r0
 800ed34:	6019      	str	r1, [r3, #0]
 800ed36:	bd38      	pop	{r3, r4, r5, pc}
 800ed38:	4240      	negs	r0, r0
 800ed3a:	fb90 f4f1 	sdiv	r4, r0, r1
 800ed3e:	4265      	negs	r5, r4
 800ed40:	fb01 0014 	mls	r0, r1, r4, r0
 800ed44:	6015      	str	r5, [r2, #0]
 800ed46:	6018      	str	r0, [r3, #0]
 800ed48:	2800      	cmp	r0, #0
 800ed4a:	d0f4      	beq.n	800ed36 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800ed4c:	6810      	ldr	r0, [r2, #0]
 800ed4e:	3801      	subs	r0, #1
 800ed50:	6010      	str	r0, [r2, #0]
 800ed52:	6818      	ldr	r0, [r3, #0]
 800ed54:	1a09      	subs	r1, r1, r0
 800ed56:	e7ed      	b.n	800ed34 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800ed58:	0801f445 	.word	0x0801f445
 800ed5c:	0801f484 	.word	0x0801f484
 800ed60:	0801f455 	.word	0x0801f455

0800ed64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800ed64:	b570      	push	{r4, r5, r6, lr}
 800ed66:	694a      	ldr	r2, [r1, #20]
 800ed68:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ed6a:	684b      	ldr	r3, [r1, #4]
 800ed6c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800ed6e:	1b54      	subs	r4, r2, r5
 800ed70:	f000 8106 	beq.w	800ef80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800ed74:	1b9b      	subs	r3, r3, r6
 800ed76:	d003      	beq.n	800ed80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ed78:	4363      	muls	r3, r4
 800ed7a:	2210      	movs	r2, #16
 800ed7c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ed80:	680c      	ldr	r4, [r1, #0]
 800ed82:	698a      	ldr	r2, [r1, #24]
 800ed84:	1b65      	subs	r5, r4, r5
 800ed86:	f000 80fd 	beq.w	800ef84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800ed8a:	1b92      	subs	r2, r2, r6
 800ed8c:	d003      	beq.n	800ed96 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ed8e:	436a      	muls	r2, r5
 800ed90:	2410      	movs	r4, #16
 800ed92:	fb92 f2f4 	sdiv	r2, r2, r4
 800ed96:	1a9b      	subs	r3, r3, r2
 800ed98:	ee07 3a90 	vmov	s15, r3
 800ed9c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800efc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800eda0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eda4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800eda8:	ee67 7a84 	vmul.f32	s15, s15, s8
 800edac:	460a      	mov	r2, r1
 800edae:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800edb2:	4603      	mov	r3, r0
 800edb4:	f100 040c 	add.w	r4, r0, #12
 800edb8:	eeb1 6a43 	vneg.f32	s12, s6
 800edbc:	edd2 7a02 	vldr	s15, [r2, #8]
 800edc0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800edc4:	3214      	adds	r2, #20
 800edc6:	ece3 6a01 	vstmia	r3!, {s13}
 800edca:	ed52 7a02 	vldr	s15, [r2, #-8]
 800edce:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800edd2:	429c      	cmp	r4, r3
 800edd4:	edc3 7a02 	vstr	s15, [r3, #8]
 800edd8:	ed52 7a01 	vldr	s15, [r2, #-4]
 800eddc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ede0:	edc3 7a05 	vstr	s15, [r3, #20]
 800ede4:	d1ea      	bne.n	800edbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ede6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ede8:	698b      	ldr	r3, [r1, #24]
 800edea:	edd0 4a02 	vldr	s9, [r0, #8]
 800edee:	edd0 3a00 	vldr	s7, [r0]
 800edf2:	edd0 6a01 	vldr	s13, [r0, #4]
 800edf6:	ed90 5a05 	vldr	s10, [r0, #20]
 800edfa:	ed90 2a03 	vldr	s4, [r0, #12]
 800edfe:	edd0 5a04 	vldr	s11, [r0, #16]
 800ee02:	ed90 1a07 	vldr	s2, [r0, #28]
 800ee06:	edd0 2a06 	vldr	s5, [r0, #24]
 800ee0a:	1a9b      	subs	r3, r3, r2
 800ee0c:	ee07 3a90 	vmov	s15, r3
 800ee10:	684b      	ldr	r3, [r1, #4]
 800ee12:	1a9b      	subs	r3, r3, r2
 800ee14:	ee07 3a10 	vmov	s14, r3
 800ee18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ee1c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ee20:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ee24:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800ee28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee2c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800ee30:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee34:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800ee38:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ee3c:	ee32 5a45 	vsub.f32	s10, s4, s10
 800ee40:	ee67 7a83 	vmul.f32	s15, s15, s6
 800ee44:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800ee48:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ee4a:	694a      	ldr	r2, [r1, #20]
 800ee4c:	1b13      	subs	r3, r2, r4
 800ee4e:	ee07 3a10 	vmov	s14, r3
 800ee52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee56:	680b      	ldr	r3, [r1, #0]
 800ee58:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee5c:	1b1b      	subs	r3, r3, r4
 800ee5e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800ee62:	ee07 3a10 	vmov	s14, r3
 800ee66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee6a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee6e:	eee6 4a87 	vfma.f32	s9, s13, s14
 800ee72:	ee64 4a86 	vmul.f32	s9, s9, s12
 800ee76:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800ee7a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee7c:	698b      	ldr	r3, [r1, #24]
 800ee7e:	1a9b      	subs	r3, r3, r2
 800ee80:	ee06 3a90 	vmov	s13, r3
 800ee84:	684b      	ldr	r3, [r1, #4]
 800ee86:	1a9b      	subs	r3, r3, r2
 800ee88:	ee07 3a10 	vmov	s14, r3
 800ee8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ee90:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee94:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ee98:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee9c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800eea0:	eee5 6a87 	vfma.f32	s13, s11, s14
 800eea4:	ee66 6a83 	vmul.f32	s13, s13, s6
 800eea8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800eeac:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800eeae:	694a      	ldr	r2, [r1, #20]
 800eeb0:	1b13      	subs	r3, r2, r4
 800eeb2:	ee07 3a10 	vmov	s14, r3
 800eeb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eeba:	680b      	ldr	r3, [r1, #0]
 800eebc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eec0:	1b1b      	subs	r3, r3, r4
 800eec2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800eec6:	ee07 3a10 	vmov	s14, r3
 800eeca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eece:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eed2:	eea5 5a87 	vfma.f32	s10, s11, s14
 800eed6:	edd0 5a08 	vldr	s11, [r0, #32]
 800eeda:	ee25 5a06 	vmul.f32	s10, s10, s12
 800eede:	ee31 1a65 	vsub.f32	s2, s2, s11
 800eee2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800eee6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800eee8:	698b      	ldr	r3, [r1, #24]
 800eeea:	1a9b      	subs	r3, r3, r2
 800eeec:	ee07 3a10 	vmov	s14, r3
 800eef0:	684b      	ldr	r3, [r1, #4]
 800eef2:	1a9b      	subs	r3, r3, r2
 800eef4:	ee01 3a90 	vmov	s3, r3
 800eef8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eefc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ef00:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ef04:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ef08:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ef0c:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ef10:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ef14:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ef18:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ef1c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ef1e:	694a      	ldr	r2, [r1, #20]
 800ef20:	1b13      	subs	r3, r2, r4
 800ef22:	ee03 3a10 	vmov	s6, r3
 800ef26:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ef2a:	680b      	ldr	r3, [r1, #0]
 800ef2c:	ee23 3a04 	vmul.f32	s6, s6, s8
 800ef30:	1b1b      	subs	r3, r3, r4
 800ef32:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800ef36:	ee03 3a10 	vmov	s6, r3
 800ef3a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ef3e:	ee23 4a04 	vmul.f32	s8, s6, s8
 800ef42:	eee1 5a04 	vfma.f32	s11, s2, s8
 800ef46:	ee25 6a86 	vmul.f32	s12, s11, s12
 800ef4a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800ef4e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800ef52:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800ef56:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800ef5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef5e:	dd13      	ble.n	800ef88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800ef60:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ef64:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800ef68:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ef6a:	eee3 7a87 	vfma.f32	s15, s7, s14
 800ef6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ef72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef76:	dd15      	ble.n	800efa4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800ef78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ef7c:	6403      	str	r3, [r0, #64]	; 0x40
 800ef7e:	bd70      	pop	{r4, r5, r6, pc}
 800ef80:	4623      	mov	r3, r4
 800ef82:	e6fd      	b.n	800ed80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ef84:	462a      	mov	r2, r5
 800ef86:	e706      	b.n	800ed96 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ef88:	d502      	bpl.n	800ef90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ef8a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ef8e:	e7e9      	b.n	800ef64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800ef90:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800ef94:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ef98:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ef9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efa0:	dade      	bge.n	800ef60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800efa2:	e7f2      	b.n	800ef8a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800efa4:	d502      	bpl.n	800efac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800efa6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800efaa:	e7e7      	b.n	800ef7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800efac:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800efb0:	eee3 4a86 	vfma.f32	s9, s7, s12
 800efb4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800efb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efbc:	dadc      	bge.n	800ef78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800efbe:	e7f2      	b.n	800efa6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800efc0:	3d800000 	.word	0x3d800000

0800efc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800efc4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efc8:	f04f 0814 	mov.w	r8, #20
 800efcc:	fb08 f903 	mul.w	r9, r8, r3
 800efd0:	eb02 0a09 	add.w	sl, r2, r9
 800efd4:	4604      	mov	r4, r0
 800efd6:	f8da 0004 	ldr.w	r0, [sl, #4]
 800efda:	4617      	mov	r7, r2
 800efdc:	460d      	mov	r5, r1
 800efde:	461e      	mov	r6, r3
 800efe0:	f7ff fe88 	bl	800ecf4 <_ZN8touchgfx8ceil28_4El>
 800efe4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800efe6:	6160      	str	r0, [r4, #20]
 800efe8:	fb08 f803 	mul.w	r8, r8, r3
 800efec:	eb07 0b08 	add.w	fp, r7, r8
 800eff0:	9001      	str	r0, [sp, #4]
 800eff2:	f8db 0004 	ldr.w	r0, [fp, #4]
 800eff6:	f7ff fe7d 	bl	800ecf4 <_ZN8touchgfx8ceil28_4El>
 800effa:	9a01      	ldr	r2, [sp, #4]
 800effc:	1a80      	subs	r0, r0, r2
 800effe:	61a0      	str	r0, [r4, #24]
 800f000:	2800      	cmp	r0, #0
 800f002:	f000 8088 	beq.w	800f116 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800f006:	f857 3009 	ldr.w	r3, [r7, r9]
 800f00a:	f857 c008 	ldr.w	ip, [r7, r8]
 800f00e:	f8da 1004 	ldr.w	r1, [sl, #4]
 800f012:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f016:	ebac 0c03 	sub.w	ip, ip, r3
 800f01a:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800f01e:	fb0b f202 	mul.w	r2, fp, r2
 800f022:	fb0c 2211 	mls	r2, ip, r1, r2
 800f026:	1a40      	subs	r0, r0, r1
 800f028:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800f02c:	fb00 2003 	mla	r0, r0, r3, r2
 800f030:	3801      	subs	r0, #1
 800f032:	f104 0310 	add.w	r3, r4, #16
 800f036:	4622      	mov	r2, r4
 800f038:	4641      	mov	r1, r8
 800f03a:	4440      	add	r0, r8
 800f03c:	f7ff fe6a 	bl	800ed14 <_ZN8touchgfx11floorDivModEllRlS0_>
 800f040:	f104 0308 	add.w	r3, r4, #8
 800f044:	1d22      	adds	r2, r4, #4
 800f046:	4641      	mov	r1, r8
 800f048:	4658      	mov	r0, fp
 800f04a:	f7ff fe63 	bl	800ed14 <_ZN8touchgfx11floorDivModEllRlS0_>
 800f04e:	f8c4 800c 	str.w	r8, [r4, #12]
 800f052:	f8da 3004 	ldr.w	r3, [sl, #4]
 800f056:	6962      	ldr	r2, [r4, #20]
 800f058:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f120 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f05c:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f060:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f064:	ee07 3a10 	vmov	s14, r3
 800f068:	6822      	ldr	r2, [r4, #0]
 800f06a:	f857 3009 	ldr.w	r3, [r7, r9]
 800f06e:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f072:	ee07 3a90 	vmov	s15, r3
 800f076:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f07a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f07e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800f082:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f086:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f08a:	edd3 6a00 	vldr	s13, [r3]
 800f08e:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f092:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f096:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f09a:	edc4 6a07 	vstr	s13, [r4, #28]
 800f09e:	edd4 6a01 	vldr	s13, [r4, #4]
 800f0a2:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800f0a6:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f0aa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f0ae:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f0b2:	ed84 6a08 	vstr	s12, [r4, #32]
 800f0b6:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800f0b8:	6262      	str	r2, [r4, #36]	; 0x24
 800f0ba:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800f0be:	ed93 6a03 	vldr	s12, [r3, #12]
 800f0c2:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f0c6:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f0ca:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f0ce:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f0d2:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f0d6:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f0da:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f0de:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f0e2:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f0e4:	6322      	str	r2, [r4, #48]	; 0x30
 800f0e6:	ed93 6a06 	vldr	s12, [r3, #24]
 800f0ea:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f0ee:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f0f2:	eeb0 7a46 	vmov.f32	s14, s12
 800f0f6:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f0fa:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f0fe:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f102:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f106:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f10a:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f10e:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f112:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f114:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f116:	4620      	mov	r0, r4
 800f118:	b003      	add	sp, #12
 800f11a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f11e:	bf00      	nop
 800f120:	3d800000 	.word	0x3d800000

0800f124 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f124:	4602      	mov	r2, r0
 800f126:	b148      	cbz	r0, 800f13c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f128:	2300      	movs	r3, #0
 800f12a:	b298      	uxth	r0, r3
 800f12c:	3301      	adds	r3, #1
 800f12e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f132:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f136:	2900      	cmp	r1, #0
 800f138:	d1f7      	bne.n	800f12a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f13a:	4770      	bx	lr
 800f13c:	4770      	bx	lr

0800f13e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f13e:	b530      	push	{r4, r5, lr}
 800f140:	4604      	mov	r4, r0
 800f142:	b159      	cbz	r1, 800f15c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f144:	b148      	cbz	r0, 800f15a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f146:	2300      	movs	r3, #0
 800f148:	b298      	uxth	r0, r3
 800f14a:	4282      	cmp	r2, r0
 800f14c:	d905      	bls.n	800f15a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f14e:	5ccd      	ldrb	r5, [r1, r3]
 800f150:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f154:	3301      	adds	r3, #1
 800f156:	2d00      	cmp	r5, #0
 800f158:	d1f6      	bne.n	800f148 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f15a:	bd30      	pop	{r4, r5, pc}
 800f15c:	4608      	mov	r0, r1
 800f15e:	e7fc      	b.n	800f15a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f160 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f160:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f162:	b08b      	sub	sp, #44	; 0x2c
 800f164:	468c      	mov	ip, r1
 800f166:	2100      	movs	r1, #0
 800f168:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f16c:	ae01      	add	r6, sp, #4
 800f16e:	211f      	movs	r1, #31
 800f170:	fbb0 f7f3 	udiv	r7, r0, r3
 800f174:	fb03 0517 	mls	r5, r3, r7, r0
 800f178:	b2ec      	uxtb	r4, r5
 800f17a:	2d09      	cmp	r5, #9
 800f17c:	bfd4      	ite	le
 800f17e:	3430      	addle	r4, #48	; 0x30
 800f180:	3457      	addgt	r4, #87	; 0x57
 800f182:	b2e4      	uxtb	r4, r4
 800f184:	558c      	strb	r4, [r1, r6]
 800f186:	4638      	mov	r0, r7
 800f188:	1e4c      	subs	r4, r1, #1
 800f18a:	b92f      	cbnz	r7, 800f198 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f18c:	4431      	add	r1, r6
 800f18e:	4660      	mov	r0, ip
 800f190:	f7ff ffd5 	bl	800f13e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f194:	b00b      	add	sp, #44	; 0x2c
 800f196:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f198:	4621      	mov	r1, r4
 800f19a:	e7e9      	b.n	800f170 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f19c <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f19c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f19e:	4607      	mov	r7, r0
 800f1a0:	b08b      	sub	sp, #44	; 0x2c
 800f1a2:	4608      	mov	r0, r1
 800f1a4:	b341      	cbz	r1, 800f1f8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f1a6:	1e99      	subs	r1, r3, #2
 800f1a8:	2922      	cmp	r1, #34	; 0x22
 800f1aa:	d825      	bhi.n	800f1f8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f1ac:	2100      	movs	r1, #0
 800f1ae:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f1b2:	463c      	mov	r4, r7
 800f1b4:	261f      	movs	r6, #31
 800f1b6:	f10d 0c04 	add.w	ip, sp, #4
 800f1ba:	fb94 fef3 	sdiv	lr, r4, r3
 800f1be:	fb03 441e 	mls	r4, r3, lr, r4
 800f1c2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f1c6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f1ca:	b2ec      	uxtb	r4, r5
 800f1cc:	2d09      	cmp	r5, #9
 800f1ce:	bfd4      	ite	le
 800f1d0:	3430      	addle	r4, #48	; 0x30
 800f1d2:	3457      	addgt	r4, #87	; 0x57
 800f1d4:	b2e4      	uxtb	r4, r4
 800f1d6:	f80c 4006 	strb.w	r4, [ip, r6]
 800f1da:	4674      	mov	r4, lr
 800f1dc:	1e71      	subs	r1, r6, #1
 800f1de:	b96c      	cbnz	r4, 800f1fc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f1e0:	2f00      	cmp	r7, #0
 800f1e2:	da05      	bge.n	800f1f0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f1e4:	ab0a      	add	r3, sp, #40	; 0x28
 800f1e6:	4419      	add	r1, r3
 800f1e8:	232d      	movs	r3, #45	; 0x2d
 800f1ea:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f1ee:	1eb1      	subs	r1, r6, #2
 800f1f0:	3101      	adds	r1, #1
 800f1f2:	4461      	add	r1, ip
 800f1f4:	f7ff ffa3 	bl	800f13e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f1f8:	b00b      	add	sp, #44	; 0x2c
 800f1fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f1fc:	460e      	mov	r6, r1
 800f1fe:	e7dc      	b.n	800f1ba <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f200 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f204:	4691      	mov	r9, r2
 800f206:	b085      	sub	sp, #20
 800f208:	6802      	ldr	r2, [r0, #0]
 800f20a:	9201      	str	r2, [sp, #4]
 800f20c:	4688      	mov	r8, r1
 800f20e:	4683      	mov	fp, r0
 800f210:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f214:	9103      	str	r1, [sp, #12]
 800f216:	4610      	mov	r0, r2
 800f218:	461c      	mov	r4, r3
 800f21a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f21e:	9302      	str	r3, [sp, #8]
 800f220:	f7ff ff80 	bl	800f124 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f224:	f1b8 0f00 	cmp.w	r8, #0
 800f228:	bf0c      	ite	eq
 800f22a:	4684      	moveq	ip, r0
 800f22c:	f100 0c01 	addne.w	ip, r0, #1
 800f230:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f234:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f238:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f23a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f23c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f240:	9903      	ldr	r1, [sp, #12]
 800f242:	fa1f fc8c 	uxth.w	ip, ip
 800f246:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f24a:	d041      	beq.n	800f2d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f24c:	d834      	bhi.n	800f2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f24e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f252:	d059      	beq.n	800f308 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f254:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f258:	d03a      	beq.n	800f2d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f25a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f25e:	d034      	beq.n	800f2ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f260:	2400      	movs	r4, #0
 800f262:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f266:	3a01      	subs	r2, #1
 800f268:	b169      	cbz	r1, 800f286 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f26a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f26c:	458c      	cmp	ip, r1
 800f26e:	da09      	bge.n	800f284 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f270:	eba1 010c 	sub.w	r1, r1, ip
 800f274:	b289      	uxth	r1, r1
 800f276:	b933      	cbnz	r3, 800f286 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f278:	2e00      	cmp	r6, #0
 800f27a:	d051      	beq.n	800f320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f27c:	2800      	cmp	r0, #0
 800f27e:	d04f      	beq.n	800f320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f280:	440c      	add	r4, r1
 800f282:	b2a4      	uxth	r4, r4
 800f284:	2100      	movs	r1, #0
 800f286:	682b      	ldr	r3, [r5, #0]
 800f288:	4293      	cmp	r3, r2
 800f28a:	da07      	bge.n	800f29c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f28c:	f1b8 0f00 	cmp.w	r8, #0
 800f290:	d004      	beq.n	800f29c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f292:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f296:	682b      	ldr	r3, [r5, #0]
 800f298:	3301      	adds	r3, #1
 800f29a:	602b      	str	r3, [r5, #0]
 800f29c:	2730      	movs	r7, #48	; 0x30
 800f29e:	2c00      	cmp	r4, #0
 800f2a0:	d04e      	beq.n	800f340 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f2a2:	682e      	ldr	r6, [r5, #0]
 800f2a4:	3c01      	subs	r4, #1
 800f2a6:	42b2      	cmp	r2, r6
 800f2a8:	b2a4      	uxth	r4, r4
 800f2aa:	dd49      	ble.n	800f340 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f2ac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f2b0:	682b      	ldr	r3, [r5, #0]
 800f2b2:	3301      	adds	r3, #1
 800f2b4:	602b      	str	r3, [r5, #0]
 800f2b6:	e7f2      	b.n	800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f2b8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f2bc:	d01d      	beq.n	800f2fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f2be:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f2c2:	d002      	beq.n	800f2ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f2c4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f2c8:	e7c9      	b.n	800f25e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f2ca:	4684      	mov	ip, r0
 800f2cc:	f04f 0800 	mov.w	r8, #0
 800f2d0:	2c00      	cmp	r4, #0
 800f2d2:	d0c6      	beq.n	800f262 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f2d4:	b947      	cbnz	r7, 800f2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f2d6:	2801      	cmp	r0, #1
 800f2d8:	d106      	bne.n	800f2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f2da:	8814      	ldrh	r4, [r2, #0]
 800f2dc:	2c30      	cmp	r4, #48	; 0x30
 800f2de:	bf02      	ittt	eq
 800f2e0:	3202      	addeq	r2, #2
 800f2e2:	f8cb 2000 	streq.w	r2, [fp]
 800f2e6:	4638      	moveq	r0, r7
 800f2e8:	45bc      	cmp	ip, r7
 800f2ea:	da14      	bge.n	800f316 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f2ec:	b2bf      	uxth	r7, r7
 800f2ee:	eba7 040c 	sub.w	r4, r7, ip
 800f2f2:	b2a4      	uxth	r4, r4
 800f2f4:	46bc      	mov	ip, r7
 800f2f6:	2600      	movs	r6, #0
 800f2f8:	e7b3      	b.n	800f262 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f2fa:	4684      	mov	ip, r0
 800f2fc:	b16c      	cbz	r4, 800f31a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f2fe:	42b8      	cmp	r0, r7
 800f300:	dd00      	ble.n	800f304 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f302:	b2b8      	uxth	r0, r7
 800f304:	2400      	movs	r4, #0
 800f306:	e003      	b.n	800f310 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f308:	f04f 0c01 	mov.w	ip, #1
 800f30c:	2400      	movs	r4, #0
 800f30e:	4660      	mov	r0, ip
 800f310:	4626      	mov	r6, r4
 800f312:	46a0      	mov	r8, r4
 800f314:	e7a5      	b.n	800f262 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f316:	2400      	movs	r4, #0
 800f318:	e7ed      	b.n	800f2f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f31a:	4626      	mov	r6, r4
 800f31c:	46a0      	mov	r8, r4
 800f31e:	e7a0      	b.n	800f262 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f320:	2900      	cmp	r1, #0
 800f322:	d0b0      	beq.n	800f286 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f324:	2720      	movs	r7, #32
 800f326:	682e      	ldr	r6, [r5, #0]
 800f328:	2900      	cmp	r1, #0
 800f32a:	d0ac      	beq.n	800f286 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f32c:	3901      	subs	r1, #1
 800f32e:	4296      	cmp	r6, r2
 800f330:	b289      	uxth	r1, r1
 800f332:	daa7      	bge.n	800f284 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f334:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f338:	682b      	ldr	r3, [r5, #0]
 800f33a:	3301      	adds	r3, #1
 800f33c:	602b      	str	r3, [r5, #0]
 800f33e:	e7f2      	b.n	800f326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f340:	b188      	cbz	r0, 800f366 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f342:	682b      	ldr	r3, [r5, #0]
 800f344:	3801      	subs	r0, #1
 800f346:	429a      	cmp	r2, r3
 800f348:	b280      	uxth	r0, r0
 800f34a:	dd0c      	ble.n	800f366 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f34c:	f8db 3000 	ldr.w	r3, [fp]
 800f350:	1c9c      	adds	r4, r3, #2
 800f352:	f8cb 4000 	str.w	r4, [fp]
 800f356:	881c      	ldrh	r4, [r3, #0]
 800f358:	682b      	ldr	r3, [r5, #0]
 800f35a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f35e:	682b      	ldr	r3, [r5, #0]
 800f360:	3301      	adds	r3, #1
 800f362:	602b      	str	r3, [r5, #0]
 800f364:	e7ec      	b.n	800f340 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f366:	2620      	movs	r6, #32
 800f368:	b151      	cbz	r1, 800f380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f36a:	6828      	ldr	r0, [r5, #0]
 800f36c:	3901      	subs	r1, #1
 800f36e:	4282      	cmp	r2, r0
 800f370:	b289      	uxth	r1, r1
 800f372:	dd05      	ble.n	800f380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f374:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f378:	682b      	ldr	r3, [r5, #0]
 800f37a:	3301      	adds	r3, #1
 800f37c:	602b      	str	r3, [r5, #0]
 800f37e:	e7f3      	b.n	800f368 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f380:	b005      	add	sp, #20
 800f382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f386:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f38a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f38e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f392:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f396:	2400      	movs	r4, #0
 800f398:	8014      	strh	r4, [r2, #0]
 800f39a:	701c      	strb	r4, [r3, #0]
 800f39c:	f888 4000 	strb.w	r4, [r8]
 800f3a0:	f88c 4000 	strb.w	r4, [ip]
 800f3a4:	f88e 4000 	strb.w	r4, [lr]
 800f3a8:	703c      	strb	r4, [r7, #0]
 800f3aa:	6804      	ldr	r4, [r0, #0]
 800f3ac:	b1a4      	cbz	r4, 800f3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f3ae:	8824      	ldrh	r4, [r4, #0]
 800f3b0:	f04f 0901 	mov.w	r9, #1
 800f3b4:	b314      	cbz	r4, 800f3fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f3b6:	2c2b      	cmp	r4, #43	; 0x2b
 800f3b8:	d001      	beq.n	800f3be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f3ba:	2c20      	cmp	r4, #32
 800f3bc:	d110      	bne.n	800f3e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f3be:	8014      	strh	r4, [r2, #0]
 800f3c0:	6804      	ldr	r4, [r0, #0]
 800f3c2:	b10c      	cbz	r4, 800f3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f3c4:	3402      	adds	r4, #2
 800f3c6:	6004      	str	r4, [r0, #0]
 800f3c8:	680c      	ldr	r4, [r1, #0]
 800f3ca:	b10c      	cbz	r4, 800f3d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f3cc:	3401      	adds	r4, #1
 800f3ce:	600c      	str	r4, [r1, #0]
 800f3d0:	6804      	ldr	r4, [r0, #0]
 800f3d2:	b17c      	cbz	r4, 800f3f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f3d4:	8824      	ldrh	r4, [r4, #0]
 800f3d6:	e7ed      	b.n	800f3b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f3d8:	680c      	ldr	r4, [r1, #0]
 800f3da:	b17c      	cbz	r4, 800f3fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f3dc:	7824      	ldrb	r4, [r4, #0]
 800f3de:	e7e7      	b.n	800f3b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f3e0:	2c2d      	cmp	r4, #45	; 0x2d
 800f3e2:	d102      	bne.n	800f3ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f3e4:	f883 9000 	strb.w	r9, [r3]
 800f3e8:	e7ea      	b.n	800f3c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f3ea:	2c23      	cmp	r4, #35	; 0x23
 800f3ec:	d107      	bne.n	800f3fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f3ee:	f888 9000 	strb.w	r9, [r8]
 800f3f2:	e7e5      	b.n	800f3c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f3f4:	680c      	ldr	r4, [r1, #0]
 800f3f6:	b10c      	cbz	r4, 800f3fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f3f8:	7824      	ldrb	r4, [r4, #0]
 800f3fa:	e7db      	b.n	800f3b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f3fc:	2400      	movs	r4, #0
 800f3fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f402:	2b09      	cmp	r3, #9
 800f404:	d901      	bls.n	800f40a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f406:	2c2a      	cmp	r4, #42	; 0x2a
 800f408:	d122      	bne.n	800f450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f40a:	2301      	movs	r3, #1
 800f40c:	2c30      	cmp	r4, #48	; 0x30
 800f40e:	f88e 3000 	strb.w	r3, [lr]
 800f412:	d10d      	bne.n	800f430 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f414:	f88c 3000 	strb.w	r3, [ip]
 800f418:	6803      	ldr	r3, [r0, #0]
 800f41a:	b10b      	cbz	r3, 800f420 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f41c:	3302      	adds	r3, #2
 800f41e:	6003      	str	r3, [r0, #0]
 800f420:	680b      	ldr	r3, [r1, #0]
 800f422:	b10b      	cbz	r3, 800f428 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f424:	3301      	adds	r3, #1
 800f426:	600b      	str	r3, [r1, #0]
 800f428:	6803      	ldr	r3, [r0, #0]
 800f42a:	2b00      	cmp	r3, #0
 800f42c:	d02f      	beq.n	800f48e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f42e:	881c      	ldrh	r4, [r3, #0]
 800f430:	2c2a      	cmp	r4, #42	; 0x2a
 800f432:	d135      	bne.n	800f4a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f434:	f04f 33ff 	mov.w	r3, #4294967295
 800f438:	6033      	str	r3, [r6, #0]
 800f43a:	6803      	ldr	r3, [r0, #0]
 800f43c:	b10b      	cbz	r3, 800f442 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f43e:	3302      	adds	r3, #2
 800f440:	6003      	str	r3, [r0, #0]
 800f442:	680b      	ldr	r3, [r1, #0]
 800f444:	b10b      	cbz	r3, 800f44a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f446:	3301      	adds	r3, #1
 800f448:	600b      	str	r3, [r1, #0]
 800f44a:	6803      	ldr	r3, [r0, #0]
 800f44c:	b31b      	cbz	r3, 800f496 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f44e:	881c      	ldrh	r4, [r3, #0]
 800f450:	2c2e      	cmp	r4, #46	; 0x2e
 800f452:	d11a      	bne.n	800f48a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f454:	2301      	movs	r3, #1
 800f456:	703b      	strb	r3, [r7, #0]
 800f458:	6803      	ldr	r3, [r0, #0]
 800f45a:	b10b      	cbz	r3, 800f460 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f45c:	3302      	adds	r3, #2
 800f45e:	6003      	str	r3, [r0, #0]
 800f460:	680b      	ldr	r3, [r1, #0]
 800f462:	b10b      	cbz	r3, 800f468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f464:	3301      	adds	r3, #1
 800f466:	600b      	str	r3, [r1, #0]
 800f468:	6803      	ldr	r3, [r0, #0]
 800f46a:	2b00      	cmp	r3, #0
 800f46c:	d036      	beq.n	800f4dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f46e:	881b      	ldrh	r3, [r3, #0]
 800f470:	2b2a      	cmp	r3, #42	; 0x2a
 800f472:	d137      	bne.n	800f4e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f474:	f04f 33ff 	mov.w	r3, #4294967295
 800f478:	602b      	str	r3, [r5, #0]
 800f47a:	6803      	ldr	r3, [r0, #0]
 800f47c:	b10b      	cbz	r3, 800f482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f47e:	3302      	adds	r3, #2
 800f480:	6003      	str	r3, [r0, #0]
 800f482:	680b      	ldr	r3, [r1, #0]
 800f484:	b10b      	cbz	r3, 800f48a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f486:	3301      	adds	r3, #1
 800f488:	600b      	str	r3, [r1, #0]
 800f48a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f48e:	680c      	ldr	r4, [r1, #0]
 800f490:	b134      	cbz	r4, 800f4a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f492:	7824      	ldrb	r4, [r4, #0]
 800f494:	e7cc      	b.n	800f430 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f496:	680b      	ldr	r3, [r1, #0]
 800f498:	2b00      	cmp	r3, #0
 800f49a:	d0f6      	beq.n	800f48a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f49c:	781c      	ldrb	r4, [r3, #0]
 800f49e:	e7d7      	b.n	800f450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f4a0:	2300      	movs	r3, #0
 800f4a2:	6033      	str	r3, [r6, #0]
 800f4a4:	220a      	movs	r2, #10
 800f4a6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f4aa:	fa1f f38c 	uxth.w	r3, ip
 800f4ae:	2b09      	cmp	r3, #9
 800f4b0:	d8ce      	bhi.n	800f450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f4b2:	6833      	ldr	r3, [r6, #0]
 800f4b4:	fb02 c303 	mla	r3, r2, r3, ip
 800f4b8:	6033      	str	r3, [r6, #0]
 800f4ba:	6803      	ldr	r3, [r0, #0]
 800f4bc:	b10b      	cbz	r3, 800f4c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f4be:	3302      	adds	r3, #2
 800f4c0:	6003      	str	r3, [r0, #0]
 800f4c2:	680b      	ldr	r3, [r1, #0]
 800f4c4:	b10b      	cbz	r3, 800f4ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f4c6:	3301      	adds	r3, #1
 800f4c8:	600b      	str	r3, [r1, #0]
 800f4ca:	6803      	ldr	r3, [r0, #0]
 800f4cc:	b10b      	cbz	r3, 800f4d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f4ce:	881c      	ldrh	r4, [r3, #0]
 800f4d0:	e7e9      	b.n	800f4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4d2:	680c      	ldr	r4, [r1, #0]
 800f4d4:	2c00      	cmp	r4, #0
 800f4d6:	d0e6      	beq.n	800f4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4d8:	7824      	ldrb	r4, [r4, #0]
 800f4da:	e7e4      	b.n	800f4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4dc:	680b      	ldr	r3, [r1, #0]
 800f4de:	b10b      	cbz	r3, 800f4e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f4e0:	781b      	ldrb	r3, [r3, #0]
 800f4e2:	e7c5      	b.n	800f470 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f4e4:	2200      	movs	r2, #0
 800f4e6:	602a      	str	r2, [r5, #0]
 800f4e8:	240a      	movs	r4, #10
 800f4ea:	3b30      	subs	r3, #48	; 0x30
 800f4ec:	b29e      	uxth	r6, r3
 800f4ee:	2e09      	cmp	r6, #9
 800f4f0:	682a      	ldr	r2, [r5, #0]
 800f4f2:	d813      	bhi.n	800f51c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f4f4:	fb04 3302 	mla	r3, r4, r2, r3
 800f4f8:	602b      	str	r3, [r5, #0]
 800f4fa:	6803      	ldr	r3, [r0, #0]
 800f4fc:	b10b      	cbz	r3, 800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f4fe:	3302      	adds	r3, #2
 800f500:	6003      	str	r3, [r0, #0]
 800f502:	680b      	ldr	r3, [r1, #0]
 800f504:	b10b      	cbz	r3, 800f50a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f506:	3301      	adds	r3, #1
 800f508:	600b      	str	r3, [r1, #0]
 800f50a:	6803      	ldr	r3, [r0, #0]
 800f50c:	b10b      	cbz	r3, 800f512 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f50e:	881b      	ldrh	r3, [r3, #0]
 800f510:	e7eb      	b.n	800f4ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f512:	680b      	ldr	r3, [r1, #0]
 800f514:	2b00      	cmp	r3, #0
 800f516:	d0e8      	beq.n	800f4ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f518:	781b      	ldrb	r3, [r3, #0]
 800f51a:	e7e6      	b.n	800f4ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f51c:	2a06      	cmp	r2, #6
 800f51e:	bfa8      	it	ge
 800f520:	2206      	movge	r2, #6
 800f522:	602a      	str	r2, [r5, #0]
 800f524:	e7b1      	b.n	800f48a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f526:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f52a:	b0a3      	sub	sp, #140	; 0x8c
 800f52c:	2600      	movs	r6, #0
 800f52e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f532:	4607      	mov	r7, r0
 800f534:	4688      	mov	r8, r1
 800f536:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f53a:	4631      	mov	r1, r6
 800f53c:	2242      	movs	r2, #66	; 0x42
 800f53e:	4648      	mov	r0, r9
 800f540:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f542:	960d      	str	r6, [sp, #52]	; 0x34
 800f544:	f00c fb58 	bl	801bbf8 <memset>
 800f548:	b15f      	cbz	r7, 800f562 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f54a:	f108 3aff 	add.w	sl, r8, #4294967295
 800f54e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f550:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f552:	b152      	cbz	r2, 800f56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f554:	8812      	ldrh	r2, [r2, #0]
 800f556:	b10a      	cbz	r2, 800f55c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f558:	459a      	cmp	sl, r3
 800f55a:	dc2e      	bgt.n	800f5ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f55c:	2200      	movs	r2, #0
 800f55e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f562:	4638      	mov	r0, r7
 800f564:	b023      	add	sp, #140	; 0x8c
 800f566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f56a:	9a08      	ldr	r2, [sp, #32]
 800f56c:	2a00      	cmp	r2, #0
 800f56e:	d0f5      	beq.n	800f55c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f570:	7812      	ldrb	r2, [r2, #0]
 800f572:	e7f0      	b.n	800f556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f574:	2d00      	cmp	r5, #0
 800f576:	d0ea      	beq.n	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f578:	782a      	ldrb	r2, [r5, #0]
 800f57a:	b142      	cbz	r2, 800f58e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f57c:	2a25      	cmp	r2, #37	; 0x25
 800f57e:	d001      	beq.n	800f584 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f580:	459a      	cmp	sl, r3
 800f582:	dc08      	bgt.n	800f596 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f584:	f1bb 0f00 	cmp.w	fp, #0
 800f588:	d121      	bne.n	800f5ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f58a:	2d00      	cmp	r5, #0
 800f58c:	d0df      	beq.n	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f58e:	782a      	ldrb	r2, [r5, #0]
 800f590:	f04f 0b00 	mov.w	fp, #0
 800f594:	e01d      	b.n	800f5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f596:	f1bb 0f00 	cmp.w	fp, #0
 800f59a:	d078      	beq.n	800f68e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f59c:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5a0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f5a4:	f1bb 0f00 	cmp.w	fp, #0
 800f5a8:	d002      	beq.n	800f5b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f5aa:	f10b 0202 	add.w	r2, fp, #2
 800f5ae:	9209      	str	r2, [sp, #36]	; 0x24
 800f5b0:	b10d      	cbz	r5, 800f5b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f5b2:	3501      	adds	r5, #1
 800f5b4:	9508      	str	r5, [sp, #32]
 800f5b6:	3301      	adds	r3, #1
 800f5b8:	930d      	str	r3, [sp, #52]	; 0x34
 800f5ba:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f5be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5c0:	f1bb 0f00 	cmp.w	fp, #0
 800f5c4:	d0d6      	beq.n	800f574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f5c6:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5ca:	2a00      	cmp	r2, #0
 800f5cc:	d1d6      	bne.n	800f57c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f5ce:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5d2:	2a00      	cmp	r2, #0
 800f5d4:	d0bb      	beq.n	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5d6:	459a      	cmp	sl, r3
 800f5d8:	ddb9      	ble.n	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5da:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f5de:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f5e2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f5e6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f5ea:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f5ee:	960e      	str	r6, [sp, #56]	; 0x38
 800f5f0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f5f4:	960f      	str	r6, [sp, #60]	; 0x3c
 800f5f6:	f1bb 0f00 	cmp.w	fp, #0
 800f5fa:	d002      	beq.n	800f602 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f5fc:	f10b 0302 	add.w	r3, fp, #2
 800f600:	9309      	str	r3, [sp, #36]	; 0x24
 800f602:	b10d      	cbz	r5, 800f608 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f604:	1c6b      	adds	r3, r5, #1
 800f606:	9308      	str	r3, [sp, #32]
 800f608:	ab0f      	add	r3, sp, #60	; 0x3c
 800f60a:	9305      	str	r3, [sp, #20]
 800f60c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f610:	9304      	str	r3, [sp, #16]
 800f612:	ab0e      	add	r3, sp, #56	; 0x38
 800f614:	9303      	str	r3, [sp, #12]
 800f616:	ab0c      	add	r3, sp, #48	; 0x30
 800f618:	9302      	str	r3, [sp, #8]
 800f61a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f61e:	9301      	str	r3, [sp, #4]
 800f620:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f624:	9300      	str	r3, [sp, #0]
 800f626:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f62a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f62e:	a908      	add	r1, sp, #32
 800f630:	a809      	add	r0, sp, #36	; 0x24
 800f632:	f7ff fea8 	bl	800f386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f636:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f638:	2b00      	cmp	r3, #0
 800f63a:	bfbe      	ittt	lt
 800f63c:	6823      	ldrlt	r3, [r4, #0]
 800f63e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f642:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f644:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f646:	bfb8      	it	lt
 800f648:	3404      	addlt	r4, #4
 800f64a:	2b00      	cmp	r3, #0
 800f64c:	bfb8      	it	lt
 800f64e:	6823      	ldrlt	r3, [r4, #0]
 800f650:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f654:	bfbe      	ittt	lt
 800f656:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f65a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f65c:	3404      	addlt	r4, #4
 800f65e:	b1d9      	cbz	r1, 800f698 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f660:	880b      	ldrh	r3, [r1, #0]
 800f662:	2b69      	cmp	r3, #105	; 0x69
 800f664:	d01f      	beq.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f666:	d82f      	bhi.n	800f6c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f668:	2b58      	cmp	r3, #88	; 0x58
 800f66a:	d01c      	beq.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f66c:	d818      	bhi.n	800f6a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f66e:	2b25      	cmp	r3, #37	; 0x25
 800f670:	d034      	beq.n	800f6dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f672:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f676:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f678:	f1bb 0f00 	cmp.w	fp, #0
 800f67c:	f000 80b8 	beq.w	800f7f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f680:	f8bb 5000 	ldrh.w	r5, [fp]
 800f684:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f688:	3301      	adds	r3, #1
 800f68a:	930d      	str	r3, [sp, #52]	; 0x34
 800f68c:	e029      	b.n	800f6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f68e:	b10d      	cbz	r5, 800f694 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f690:	782a      	ldrb	r2, [r5, #0]
 800f692:	e785      	b.n	800f5a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f694:	462a      	mov	r2, r5
 800f696:	e783      	b.n	800f5a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f698:	2a00      	cmp	r2, #0
 800f69a:	d0ea      	beq.n	800f672 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f69c:	7813      	ldrb	r3, [r2, #0]
 800f69e:	e7e0      	b.n	800f662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f6a0:	3b63      	subs	r3, #99	; 0x63
 800f6a2:	2b01      	cmp	r3, #1
 800f6a4:	d8e5      	bhi.n	800f672 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f6a6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f6aa:	b329      	cbz	r1, 800f6f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f6ac:	880b      	ldrh	r3, [r1, #0]
 800f6ae:	2b69      	cmp	r3, #105	; 0x69
 800f6b0:	d063      	beq.n	800f77a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f6b2:	d825      	bhi.n	800f700 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f6b4:	2b63      	cmp	r3, #99	; 0x63
 800f6b6:	d038      	beq.n	800f72a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f6b8:	2b64      	cmp	r3, #100	; 0x64
 800f6ba:	d05e      	beq.n	800f77a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f6bc:	2b58      	cmp	r3, #88	; 0x58
 800f6be:	d07b      	beq.n	800f7b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f6c0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f6c4:	4625      	mov	r5, r4
 800f6c6:	e036      	b.n	800f736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f6c8:	2b73      	cmp	r3, #115	; 0x73
 800f6ca:	d0ec      	beq.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6cc:	d802      	bhi.n	800f6d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f6ce:	2b6f      	cmp	r3, #111	; 0x6f
 800f6d0:	d1cf      	bne.n	800f672 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f6d2:	e7e8      	b.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6d4:	2b75      	cmp	r3, #117	; 0x75
 800f6d6:	d0e6      	beq.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6d8:	2b78      	cmp	r3, #120	; 0x78
 800f6da:	e7f9      	b.n	800f6d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f6dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f6de:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f6e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6e4:	b10b      	cbz	r3, 800f6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f6e6:	3302      	adds	r3, #2
 800f6e8:	9309      	str	r3, [sp, #36]	; 0x24
 800f6ea:	9b08      	ldr	r3, [sp, #32]
 800f6ec:	2b00      	cmp	r3, #0
 800f6ee:	f43f af2e 	beq.w	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f6f2:	3301      	adds	r3, #1
 800f6f4:	9308      	str	r3, [sp, #32]
 800f6f6:	e72a      	b.n	800f54e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f6f8:	2a00      	cmp	r2, #0
 800f6fa:	d0e1      	beq.n	800f6c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f6fc:	7813      	ldrb	r3, [r2, #0]
 800f6fe:	e7d6      	b.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f700:	2b73      	cmp	r3, #115	; 0x73
 800f702:	d036      	beq.n	800f772 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f704:	d807      	bhi.n	800f716 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f706:	2b6f      	cmp	r3, #111	; 0x6f
 800f708:	d1da      	bne.n	800f6c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f70a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f70c:	1d25      	adds	r5, r4, #4
 800f70e:	eba8 0202 	sub.w	r2, r8, r2
 800f712:	2308      	movs	r3, #8
 800f714:	e04a      	b.n	800f7ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f716:	2b75      	cmp	r3, #117	; 0x75
 800f718:	d043      	beq.n	800f7a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f71a:	2b78      	cmp	r3, #120	; 0x78
 800f71c:	d1d0      	bne.n	800f6c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f71e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f720:	1d25      	adds	r5, r4, #4
 800f722:	eba8 0202 	sub.w	r2, r8, r2
 800f726:	2310      	movs	r3, #16
 800f728:	e040      	b.n	800f7ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f72a:	7823      	ldrb	r3, [r4, #0]
 800f72c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f730:	1d25      	adds	r5, r4, #4
 800f732:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f736:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f738:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f73c:	2b00      	cmp	r3, #0
 800f73e:	d052      	beq.n	800f7e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f740:	881a      	ldrh	r2, [r3, #0]
 800f742:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f746:	a80d      	add	r0, sp, #52	; 0x34
 800f748:	9005      	str	r0, [sp, #20]
 800f74a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f74e:	9004      	str	r0, [sp, #16]
 800f750:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f752:	9003      	str	r0, [sp, #12]
 800f754:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f758:	9002      	str	r0, [sp, #8]
 800f75a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f75c:	9001      	str	r0, [sp, #4]
 800f75e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f762:	9000      	str	r0, [sp, #0]
 800f764:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f768:	a810      	add	r0, sp, #64	; 0x40
 800f76a:	f7ff fd49 	bl	800f200 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f76e:	462c      	mov	r4, r5
 800f770:	e7b7      	b.n	800f6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f772:	6823      	ldr	r3, [r4, #0]
 800f774:	1d25      	adds	r5, r4, #4
 800f776:	9310      	str	r3, [sp, #64]	; 0x40
 800f778:	e7dd      	b.n	800f736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f77a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f77c:	6820      	ldr	r0, [r4, #0]
 800f77e:	eba8 0202 	sub.w	r2, r8, r2
 800f782:	230a      	movs	r3, #10
 800f784:	b292      	uxth	r2, r2
 800f786:	4649      	mov	r1, r9
 800f788:	f7ff fd08 	bl	800f19c <_ZN8touchgfx7Unicode4itoaElPtti>
 800f78c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f790:	2b2d      	cmp	r3, #45	; 0x2d
 800f792:	f104 0504 	add.w	r5, r4, #4
 800f796:	d1ce      	bne.n	800f736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f798:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f79c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f79e:	3302      	adds	r3, #2
 800f7a0:	e7e9      	b.n	800f776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f7a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f7a4:	1d25      	adds	r5, r4, #4
 800f7a6:	eba8 0202 	sub.w	r2, r8, r2
 800f7aa:	230a      	movs	r3, #10
 800f7ac:	b292      	uxth	r2, r2
 800f7ae:	4649      	mov	r1, r9
 800f7b0:	6820      	ldr	r0, [r4, #0]
 800f7b2:	f7ff fcd5 	bl	800f160 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f7b6:	e7be      	b.n	800f736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f7ba:	6820      	ldr	r0, [r4, #0]
 800f7bc:	eba8 0202 	sub.w	r2, r8, r2
 800f7c0:	b292      	uxth	r2, r2
 800f7c2:	2310      	movs	r3, #16
 800f7c4:	4649      	mov	r1, r9
 800f7c6:	f7ff fccb 	bl	800f160 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f7ca:	1d25      	adds	r5, r4, #4
 800f7cc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f7d0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f7d4:	2b00      	cmp	r3, #0
 800f7d6:	d0ae      	beq.n	800f736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7d8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f7dc:	2919      	cmp	r1, #25
 800f7de:	d8f7      	bhi.n	800f7d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f7e0:	3b20      	subs	r3, #32
 800f7e2:	8013      	strh	r3, [r2, #0]
 800f7e4:	e7f4      	b.n	800f7d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f7e6:	9a08      	ldr	r2, [sp, #32]
 800f7e8:	2a00      	cmp	r2, #0
 800f7ea:	d0aa      	beq.n	800f742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f7ec:	7812      	ldrb	r2, [r2, #0]
 800f7ee:	e7a8      	b.n	800f742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f7f0:	2d00      	cmp	r5, #0
 800f7f2:	f43f af47 	beq.w	800f684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f7f6:	782d      	ldrb	r5, [r5, #0]
 800f7f8:	e744      	b.n	800f684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f7fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f7fa:	b507      	push	{r0, r1, r2, lr}
 800f7fc:	9300      	str	r3, [sp, #0]
 800f7fe:	4613      	mov	r3, r2
 800f800:	2200      	movs	r2, #0
 800f802:	f7ff fe90 	bl	800f526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f806:	b003      	add	sp, #12
 800f808:	f85d fb04 	ldr.w	pc, [sp], #4

0800f80c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f80c:	b40c      	push	{r2, r3}
 800f80e:	b507      	push	{r0, r1, r2, lr}
 800f810:	ab04      	add	r3, sp, #16
 800f812:	f853 2b04 	ldr.w	r2, [r3], #4
 800f816:	9301      	str	r3, [sp, #4]
 800f818:	f7ff ffef 	bl	800f7fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f81c:	b003      	add	sp, #12
 800f81e:	f85d eb04 	ldr.w	lr, [sp], #4
 800f822:	b002      	add	sp, #8
 800f824:	4770      	bx	lr
	...

0800f828 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f828:	4b01      	ldr	r3, [pc, #4]	; (800f830 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f82a:	6018      	str	r0, [r3, #0]
 800f82c:	4770      	bx	lr
 800f82e:	bf00      	nop
 800f830:	2000a318 	.word	0x2000a318

0800f834 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f834:	4b06      	ldr	r3, [pc, #24]	; (800f850 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f836:	881a      	ldrh	r2, [r3, #0]
 800f838:	4282      	cmp	r2, r0
 800f83a:	d807      	bhi.n	800f84c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f83c:	4b05      	ldr	r3, [pc, #20]	; (800f854 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f83e:	881b      	ldrh	r3, [r3, #0]
 800f840:	4413      	add	r3, r2
 800f842:	4298      	cmp	r0, r3
 800f844:	bfac      	ite	ge
 800f846:	2000      	movge	r0, #0
 800f848:	2001      	movlt	r0, #1
 800f84a:	4770      	bx	lr
 800f84c:	2000      	movs	r0, #0
 800f84e:	4770      	bx	lr
 800f850:	2000a338 	.word	0x2000a338
 800f854:	2000a33c 	.word	0x2000a33c

0800f858 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f858:	b508      	push	{r3, lr}
 800f85a:	4601      	mov	r1, r0
 800f85c:	f7ff ffea 	bl	800f834 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f860:	b118      	cbz	r0, 800f86a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f862:	4b02      	ldr	r3, [pc, #8]	; (800f86c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f864:	681b      	ldr	r3, [r3, #0]
 800f866:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f86a:	bd08      	pop	{r3, pc}
 800f86c:	2000a31c 	.word	0x2000a31c

0800f870 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f874:	4d28      	ldr	r5, [pc, #160]	; (800f918 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f876:	682b      	ldr	r3, [r5, #0]
 800f878:	2b00      	cmp	r3, #0
 800f87a:	d04a      	beq.n	800f912 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f87c:	4a27      	ldr	r2, [pc, #156]	; (800f91c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f87e:	4e28      	ldr	r6, [pc, #160]	; (800f920 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f880:	8810      	ldrh	r0, [r2, #0]
 800f882:	f8b6 8000 	ldrh.w	r8, [r6]
 800f886:	4c27      	ldr	r4, [pc, #156]	; (800f924 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f888:	4f27      	ldr	r7, [pc, #156]	; (800f928 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f88a:	4440      	add	r0, r8
 800f88c:	1c41      	adds	r1, r0, #1
 800f88e:	f021 0101 	bic.w	r1, r1, #1
 800f892:	0409      	lsls	r1, r1, #16
 800f894:	0c09      	lsrs	r1, r1, #16
 800f896:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f89a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f89e:	eb03 020e 	add.w	r2, r3, lr
 800f8a2:	eb0e 010c 	add.w	r1, lr, ip
 800f8a6:	6022      	str	r2, [r4, #0]
 800f8a8:	185a      	adds	r2, r3, r1
 800f8aa:	603a      	str	r2, [r7, #0]
 800f8ac:	220e      	movs	r2, #14
 800f8ae:	fb02 f208 	mul.w	r2, r2, r8
 800f8b2:	3203      	adds	r2, #3
 800f8b4:	f022 0203 	bic.w	r2, r2, #3
 800f8b8:	4411      	add	r1, r2
 800f8ba:	440b      	add	r3, r1
 800f8bc:	491b      	ldr	r1, [pc, #108]	; (800f92c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f8be:	600b      	str	r3, [r1, #0]
 800f8c0:	491b      	ldr	r1, [pc, #108]	; (800f930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f8c2:	2300      	movs	r3, #0
 800f8c4:	800b      	strh	r3, [r1, #0]
 800f8c6:	491b      	ldr	r1, [pc, #108]	; (800f934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f8c8:	6809      	ldr	r1, [r1, #0]
 800f8ca:	eba1 010e 	sub.w	r1, r1, lr
 800f8ce:	eba1 010c 	sub.w	r1, r1, ip
 800f8d2:	1a8a      	subs	r2, r1, r2
 800f8d4:	4918      	ldr	r1, [pc, #96]	; (800f938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f8d6:	600a      	str	r2, [r1, #0]
 800f8d8:	4a18      	ldr	r2, [pc, #96]	; (800f93c <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f8da:	469c      	mov	ip, r3
 800f8dc:	8013      	strh	r3, [r2, #0]
 800f8de:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f8e2:	4283      	cmp	r3, r0
 800f8e4:	d10d      	bne.n	800f902 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f8e6:	8835      	ldrh	r5, [r6, #0]
 800f8e8:	6838      	ldr	r0, [r7, #0]
 800f8ea:	2300      	movs	r3, #0
 800f8ec:	240e      	movs	r4, #14
 800f8ee:	429d      	cmp	r5, r3
 800f8f0:	d90f      	bls.n	800f912 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f8f2:	fb04 0203 	mla	r2, r4, r3, r0
 800f8f6:	3301      	adds	r3, #1
 800f8f8:	7b11      	ldrb	r1, [r2, #12]
 800f8fa:	f36f 1145 	bfc	r1, #5, #1
 800f8fe:	7311      	strb	r1, [r2, #12]
 800f900:	e7f5      	b.n	800f8ee <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f902:	682a      	ldr	r2, [r5, #0]
 800f904:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f908:	6822      	ldr	r2, [r4, #0]
 800f90a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f90e:	3301      	adds	r3, #1
 800f910:	e7e7      	b.n	800f8e2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f916:	bf00      	nop
 800f918:	2000a31c 	.word	0x2000a31c
 800f91c:	2000a338 	.word	0x2000a338
 800f920:	2000a33c 	.word	0x2000a33c
 800f924:	2000a330 	.word	0x2000a330
 800f928:	2000a320 	.word	0x2000a320
 800f92c:	2000a328 	.word	0x2000a328
 800f930:	2000a33a 	.word	0x2000a33a
 800f934:	2000a324 	.word	0x2000a324
 800f938:	2000a334 	.word	0x2000a334
 800f93c:	2000a32c 	.word	0x2000a32c

0800f940 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f940:	b510      	push	{r4, lr}
 800f942:	4b10      	ldr	r3, [pc, #64]	; (800f984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f944:	681b      	ldr	r3, [r3, #0]
 800f946:	b9db      	cbnz	r3, 800f980 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f948:	b1d1      	cbz	r1, 800f980 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f94a:	4b0f      	ldr	r3, [pc, #60]	; (800f988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f94c:	801a      	strh	r2, [r3, #0]
 800f94e:	4b0f      	ldr	r3, [pc, #60]	; (800f98c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f950:	881b      	ldrh	r3, [r3, #0]
 800f952:	b292      	uxth	r2, r2
 800f954:	240e      	movs	r4, #14
 800f956:	4413      	add	r3, r2
 800f958:	4362      	muls	r2, r4
 800f95a:	2406      	movs	r4, #6
 800f95c:	fb04 2203 	mla	r2, r4, r3, r2
 800f960:	428a      	cmp	r2, r1
 800f962:	d305      	bcc.n	800f970 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f964:	4b0a      	ldr	r3, [pc, #40]	; (800f990 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f966:	4a0b      	ldr	r2, [pc, #44]	; (800f994 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f968:	480b      	ldr	r0, [pc, #44]	; (800f998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f96a:	2135      	movs	r1, #53	; 0x35
 800f96c:	f00c f8b8 	bl	801bae0 <__assert_func>
 800f970:	4b0a      	ldr	r3, [pc, #40]	; (800f99c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f972:	6019      	str	r1, [r3, #0]
 800f974:	4b0a      	ldr	r3, [pc, #40]	; (800f9a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f976:	6018      	str	r0, [r3, #0]
 800f978:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f97c:	f7ff bf78 	b.w	800f870 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f980:	bd10      	pop	{r4, pc}
 800f982:	bf00      	nop
 800f984:	2000a328 	.word	0x2000a328
 800f988:	2000a33c 	.word	0x2000a33c
 800f98c:	2000a338 	.word	0x2000a338
 800f990:	0801f522 	.word	0x0801f522
 800f994:	0801f57b 	.word	0x0801f57b
 800f998:	0801f4fd 	.word	0x0801f4fd
 800f99c:	2000a324 	.word	0x2000a324
 800f9a0:	2000a31c 	.word	0x2000a31c

0800f9a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f9a4:	b470      	push	{r4, r5, r6}
 800f9a6:	4c07      	ldr	r4, [pc, #28]	; (800f9c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f9a8:	6826      	ldr	r6, [r4, #0]
 800f9aa:	4605      	mov	r5, r0
 800f9ac:	4610      	mov	r0, r2
 800f9ae:	9a03      	ldr	r2, [sp, #12]
 800f9b0:	b936      	cbnz	r6, 800f9c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f9b2:	6025      	str	r5, [r4, #0]
 800f9b4:	4c04      	ldr	r4, [pc, #16]	; (800f9c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f9b6:	8021      	strh	r1, [r4, #0]
 800f9b8:	bc70      	pop	{r4, r5, r6}
 800f9ba:	4619      	mov	r1, r3
 800f9bc:	f7ff bfc0 	b.w	800f940 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f9c0:	bc70      	pop	{r4, r5, r6}
 800f9c2:	4770      	bx	lr
 800f9c4:	2000a340 	.word	0x2000a340
 800f9c8:	2000a338 	.word	0x2000a338

0800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f9cc:	b508      	push	{r3, lr}
 800f9ce:	4b14      	ldr	r3, [pc, #80]	; (800fa20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f9d0:	6819      	ldr	r1, [r3, #0]
 800f9d2:	b931      	cbnz	r1, 800f9e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f9d4:	4b13      	ldr	r3, [pc, #76]	; (800fa24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f9d6:	4a14      	ldr	r2, [pc, #80]	; (800fa28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f9d8:	4814      	ldr	r0, [pc, #80]	; (800fa2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f9da:	f240 4185 	movw	r1, #1157	; 0x485
 800f9de:	f00c f87f 	bl	801bae0 <__assert_func>
 800f9e2:	4a13      	ldr	r2, [pc, #76]	; (800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f9e4:	8803      	ldrh	r3, [r0, #0]
 800f9e6:	8812      	ldrh	r2, [r2, #0]
 800f9e8:	4293      	cmp	r3, r2
 800f9ea:	d204      	bcs.n	800f9f6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f9ec:	2214      	movs	r2, #20
 800f9ee:	fb02 1303 	mla	r3, r2, r3, r1
 800f9f2:	8918      	ldrh	r0, [r3, #8]
 800f9f4:	bd08      	pop	{r3, pc}
 800f9f6:	490f      	ldr	r1, [pc, #60]	; (800fa34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f9f8:	8809      	ldrh	r1, [r1, #0]
 800f9fa:	4411      	add	r1, r2
 800f9fc:	428b      	cmp	r3, r1
 800f9fe:	da06      	bge.n	800fa0e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800fa00:	1a9b      	subs	r3, r3, r2
 800fa02:	4a0d      	ldr	r2, [pc, #52]	; (800fa38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800fa04:	6812      	ldr	r2, [r2, #0]
 800fa06:	210e      	movs	r1, #14
 800fa08:	fb01 2303 	mla	r3, r1, r3, r2
 800fa0c:	e7f1      	b.n	800f9f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800fa0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa12:	4293      	cmp	r3, r2
 800fa14:	bf0a      	itet	eq
 800fa16:	4b09      	ldreq	r3, [pc, #36]	; (800fa3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800fa18:	2000      	movne	r0, #0
 800fa1a:	8818      	ldrheq	r0, [r3, #0]
 800fa1c:	e7ea      	b.n	800f9f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa1e:	bf00      	nop
 800fa20:	2000a340 	.word	0x2000a340
 800fa24:	0801e964 	.word	0x0801e964
 800fa28:	0801f628 	.word	0x0801f628
 800fa2c:	0801f4fd 	.word	0x0801f4fd
 800fa30:	2000a338 	.word	0x2000a338
 800fa34:	2000a33c 	.word	0x2000a33c
 800fa38:	2000a320 	.word	0x2000a320
 800fa3c:	2000a2ac 	.word	0x2000a2ac

0800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fa40:	b508      	push	{r3, lr}
 800fa42:	4b14      	ldr	r3, [pc, #80]	; (800fa94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fa44:	6819      	ldr	r1, [r3, #0]
 800fa46:	b931      	cbnz	r1, 800fa56 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800fa48:	4b13      	ldr	r3, [pc, #76]	; (800fa98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800fa4a:	4a14      	ldr	r2, [pc, #80]	; (800fa9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800fa4c:	4814      	ldr	r0, [pc, #80]	; (800faa0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fa4e:	f240 4199 	movw	r1, #1177	; 0x499
 800fa52:	f00c f845 	bl	801bae0 <__assert_func>
 800fa56:	4a13      	ldr	r2, [pc, #76]	; (800faa4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fa58:	8803      	ldrh	r3, [r0, #0]
 800fa5a:	8812      	ldrh	r2, [r2, #0]
 800fa5c:	4293      	cmp	r3, r2
 800fa5e:	d204      	bcs.n	800fa6a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800fa60:	2214      	movs	r2, #20
 800fa62:	fb02 1303 	mla	r3, r2, r3, r1
 800fa66:	8958      	ldrh	r0, [r3, #10]
 800fa68:	bd08      	pop	{r3, pc}
 800fa6a:	490f      	ldr	r1, [pc, #60]	; (800faa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800fa6c:	8809      	ldrh	r1, [r1, #0]
 800fa6e:	4411      	add	r1, r2
 800fa70:	428b      	cmp	r3, r1
 800fa72:	da06      	bge.n	800fa82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800fa74:	1a9b      	subs	r3, r3, r2
 800fa76:	4a0d      	ldr	r2, [pc, #52]	; (800faac <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800fa78:	6812      	ldr	r2, [r2, #0]
 800fa7a:	210e      	movs	r1, #14
 800fa7c:	fb01 2303 	mla	r3, r1, r3, r2
 800fa80:	e7f1      	b.n	800fa66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800fa82:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa86:	4293      	cmp	r3, r2
 800fa88:	bf0a      	itet	eq
 800fa8a:	4b09      	ldreq	r3, [pc, #36]	; (800fab0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fa8c:	2000      	movne	r0, #0
 800fa8e:	8818      	ldrheq	r0, [r3, #0]
 800fa90:	e7ea      	b.n	800fa68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fa92:	bf00      	nop
 800fa94:	2000a340 	.word	0x2000a340
 800fa98:	0801e964 	.word	0x0801e964
 800fa9c:	0801f654 	.word	0x0801f654
 800faa0:	0801f4fd 	.word	0x0801f4fd
 800faa4:	2000a338 	.word	0x2000a338
 800faa8:	2000a33c 	.word	0x2000a33c
 800faac:	2000a320 	.word	0x2000a320
 800fab0:	2000a2ae 	.word	0x2000a2ae

0800fab4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fab4:	b510      	push	{r4, lr}
 800fab6:	4b23      	ldr	r3, [pc, #140]	; (800fb44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fab8:	681c      	ldr	r4, [r3, #0]
 800faba:	b934      	cbnz	r4, 800faca <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fabc:	4b22      	ldr	r3, [pc, #136]	; (800fb48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fabe:	4a23      	ldr	r2, [pc, #140]	; (800fb4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800fac0:	4823      	ldr	r0, [pc, #140]	; (800fb50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800fac2:	f240 41ad 	movw	r1, #1197	; 0x4ad
 800fac6:	f00c f80b 	bl	801bae0 <__assert_func>
 800faca:	4a22      	ldr	r2, [pc, #136]	; (800fb54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800facc:	880b      	ldrh	r3, [r1, #0]
 800face:	8812      	ldrh	r2, [r2, #0]
 800fad0:	4293      	cmp	r3, r2
 800fad2:	d211      	bcs.n	800faf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fad4:	2214      	movs	r2, #20
 800fad6:	fb02 4303 	mla	r3, r2, r3, r4
 800fada:	8a1a      	ldrh	r2, [r3, #16]
 800fadc:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fae0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fae4:	8a5b      	ldrh	r3, [r3, #18]
 800fae6:	8004      	strh	r4, [r0, #0]
 800fae8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800faec:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800faf0:	8041      	strh	r1, [r0, #2]
 800faf2:	8082      	strh	r2, [r0, #4]
 800faf4:	80c3      	strh	r3, [r0, #6]
 800faf6:	e00e      	b.n	800fb16 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800faf8:	4917      	ldr	r1, [pc, #92]	; (800fb58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fafa:	8809      	ldrh	r1, [r1, #0]
 800fafc:	4411      	add	r1, r2
 800fafe:	428b      	cmp	r3, r1
 800fb00:	da0a      	bge.n	800fb18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fb02:	1a9b      	subs	r3, r3, r2
 800fb04:	4a15      	ldr	r2, [pc, #84]	; (800fb5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fb06:	6812      	ldr	r2, [r2, #0]
 800fb08:	210e      	movs	r1, #14
 800fb0a:	fb01 2303 	mla	r3, r1, r3, r2
 800fb0e:	681a      	ldr	r2, [r3, #0]
 800fb10:	6002      	str	r2, [r0, #0]
 800fb12:	685a      	ldr	r2, [r3, #4]
 800fb14:	6042      	str	r2, [r0, #4]
 800fb16:	bd10      	pop	{r4, pc}
 800fb18:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb1c:	4293      	cmp	r3, r2
 800fb1e:	d10b      	bne.n	800fb38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fb20:	4b0f      	ldr	r3, [pc, #60]	; (800fb60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fb22:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fb26:	4b0f      	ldr	r3, [pc, #60]	; (800fb64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fb28:	8081      	strh	r1, [r0, #4]
 800fb2a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb2e:	80c2      	strh	r2, [r0, #6]
 800fb30:	2300      	movs	r3, #0
 800fb32:	8003      	strh	r3, [r0, #0]
 800fb34:	8043      	strh	r3, [r0, #2]
 800fb36:	e7ee      	b.n	800fb16 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fb38:	2300      	movs	r3, #0
 800fb3a:	8003      	strh	r3, [r0, #0]
 800fb3c:	8043      	strh	r3, [r0, #2]
 800fb3e:	8083      	strh	r3, [r0, #4]
 800fb40:	e7d8      	b.n	800faf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800fb42:	bf00      	nop
 800fb44:	2000a340 	.word	0x2000a340
 800fb48:	0801e964 	.word	0x0801e964
 800fb4c:	0801f5c1 	.word	0x0801f5c1
 800fb50:	0801f4fd 	.word	0x0801f4fd
 800fb54:	2000a338 	.word	0x2000a338
 800fb58:	2000a33c 	.word	0x2000a33c
 800fb5c:	2000a320 	.word	0x2000a320
 800fb60:	2000a2ac 	.word	0x2000a2ac
 800fb64:	2000a2ae 	.word	0x2000a2ae

0800fb68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fb68:	4b18      	ldr	r3, [pc, #96]	; (800fbcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fb6a:	681b      	ldr	r3, [r3, #0]
 800fb6c:	b34b      	cbz	r3, 800fbc2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fb6e:	4a18      	ldr	r2, [pc, #96]	; (800fbd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fb70:	8800      	ldrh	r0, [r0, #0]
 800fb72:	8812      	ldrh	r2, [r2, #0]
 800fb74:	4290      	cmp	r0, r2
 800fb76:	d211      	bcs.n	800fb9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800fb78:	2214      	movs	r2, #20
 800fb7a:	fb02 3300 	mla	r3, r2, r0, r3
 800fb7e:	8a1a      	ldrh	r2, [r3, #16]
 800fb80:	8919      	ldrh	r1, [r3, #8]
 800fb82:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fb86:	428a      	cmp	r2, r1
 800fb88:	db1d      	blt.n	800fbc6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fb8a:	8a58      	ldrh	r0, [r3, #18]
 800fb8c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fb90:	895b      	ldrh	r3, [r3, #10]
 800fb92:	4298      	cmp	r0, r3
 800fb94:	bfac      	ite	ge
 800fb96:	2000      	movge	r0, #0
 800fb98:	2001      	movlt	r0, #1
 800fb9a:	4770      	bx	lr
 800fb9c:	4b0d      	ldr	r3, [pc, #52]	; (800fbd4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fb9e:	881b      	ldrh	r3, [r3, #0]
 800fba0:	4413      	add	r3, r2
 800fba2:	4298      	cmp	r0, r3
 800fba4:	da0d      	bge.n	800fbc2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fba6:	4b0c      	ldr	r3, [pc, #48]	; (800fbd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fba8:	681b      	ldr	r3, [r3, #0]
 800fbaa:	1a80      	subs	r0, r0, r2
 800fbac:	220e      	movs	r2, #14
 800fbae:	fb02 3300 	mla	r3, r2, r0, r3
 800fbb2:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fbb6:	891a      	ldrh	r2, [r3, #8]
 800fbb8:	4291      	cmp	r1, r2
 800fbba:	db04      	blt.n	800fbc6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fbbc:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fbc0:	e7e6      	b.n	800fb90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fbc2:	2000      	movs	r0, #0
 800fbc4:	4770      	bx	lr
 800fbc6:	2001      	movs	r0, #1
 800fbc8:	4770      	bx	lr
 800fbca:	bf00      	nop
 800fbcc:	2000a340 	.word	0x2000a340
 800fbd0:	2000a338 	.word	0x2000a338
 800fbd4:	2000a33c 	.word	0x2000a33c
 800fbd8:	2000a320 	.word	0x2000a320

0800fbdc <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fbdc:	b508      	push	{r3, lr}
 800fbde:	4b12      	ldr	r3, [pc, #72]	; (800fc28 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fbe0:	6819      	ldr	r1, [r3, #0]
 800fbe2:	b931      	cbnz	r1, 800fbf2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fbe4:	4b11      	ldr	r3, [pc, #68]	; (800fc2c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fbe6:	4a12      	ldr	r2, [pc, #72]	; (800fc30 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fbe8:	4812      	ldr	r0, [pc, #72]	; (800fc34 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fbea:	f240 41d1 	movw	r1, #1233	; 0x4d1
 800fbee:	f00b ff77 	bl	801bae0 <__assert_func>
 800fbf2:	8803      	ldrh	r3, [r0, #0]
 800fbf4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fbf8:	4293      	cmp	r3, r2
 800fbfa:	d012      	beq.n	800fc22 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fbfc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fc00:	4293      	cmp	r3, r2
 800fc02:	d103      	bne.n	800fc0c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fc04:	4b0c      	ldr	r3, [pc, #48]	; (800fc38 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fc06:	681b      	ldr	r3, [r3, #0]
 800fc08:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fc0a:	bd08      	pop	{r3, pc}
 800fc0c:	4a0b      	ldr	r2, [pc, #44]	; (800fc3c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fc0e:	6812      	ldr	r2, [r2, #0]
 800fc10:	b11a      	cbz	r2, 800fc1a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fc12:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fc16:	2800      	cmp	r0, #0
 800fc18:	d1f7      	bne.n	800fc0a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc1a:	2214      	movs	r2, #20
 800fc1c:	4353      	muls	r3, r2
 800fc1e:	58c8      	ldr	r0, [r1, r3]
 800fc20:	e7f3      	b.n	800fc0a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc22:	2000      	movs	r0, #0
 800fc24:	e7f1      	b.n	800fc0a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc26:	bf00      	nop
 800fc28:	2000a340 	.word	0x2000a340
 800fc2c:	0801e964 	.word	0x0801e964
 800fc30:	0801f5f7 	.word	0x0801f5f7
 800fc34:	0801f4fd 	.word	0x0801f4fd
 800fc38:	2000a2b8 	.word	0x2000a2b8
 800fc3c:	2000a31c 	.word	0x2000a31c

0800fc40 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fc40:	8802      	ldrh	r2, [r0, #0]
 800fc42:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fc46:	429a      	cmp	r2, r3
 800fc48:	d845      	bhi.n	800fcd6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc4a:	4b24      	ldr	r3, [pc, #144]	; (800fcdc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fc4c:	8818      	ldrh	r0, [r3, #0]
 800fc4e:	4282      	cmp	r2, r0
 800fc50:	d221      	bcs.n	800fc96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fc52:	4b23      	ldr	r3, [pc, #140]	; (800fce0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fc54:	6819      	ldr	r1, [r3, #0]
 800fc56:	2314      	movs	r3, #20
 800fc58:	fb03 1302 	mla	r3, r3, r2, r1
 800fc5c:	6858      	ldr	r0, [r3, #4]
 800fc5e:	2800      	cmp	r0, #0
 800fc60:	d03a      	beq.n	800fcd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc62:	4920      	ldr	r1, [pc, #128]	; (800fce4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fc64:	6809      	ldr	r1, [r1, #0]
 800fc66:	2900      	cmp	r1, #0
 800fc68:	d036      	beq.n	800fcd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc6a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fc6e:	2900      	cmp	r1, #0
 800fc70:	d032      	beq.n	800fcd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc72:	891a      	ldrh	r2, [r3, #8]
 800fc74:	8958      	ldrh	r0, [r3, #10]
 800fc76:	4350      	muls	r0, r2
 800fc78:	7c5a      	ldrb	r2, [r3, #17]
 800fc7a:	7cdb      	ldrb	r3, [r3, #19]
 800fc7c:	0952      	lsrs	r2, r2, #5
 800fc7e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fc82:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fc86:	2b0b      	cmp	r3, #11
 800fc88:	bf18      	it	ne
 800fc8a:	0040      	lslne	r0, r0, #1
 800fc8c:	3003      	adds	r0, #3
 800fc8e:	f020 0003 	bic.w	r0, r0, #3
 800fc92:	4408      	add	r0, r1
 800fc94:	4770      	bx	lr
 800fc96:	4b14      	ldr	r3, [pc, #80]	; (800fce8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fc98:	881b      	ldrh	r3, [r3, #0]
 800fc9a:	4403      	add	r3, r0
 800fc9c:	429a      	cmp	r2, r3
 800fc9e:	da1a      	bge.n	800fcd6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fca0:	4b12      	ldr	r3, [pc, #72]	; (800fcec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fca2:	681b      	ldr	r3, [r3, #0]
 800fca4:	1a10      	subs	r0, r2, r0
 800fca6:	210e      	movs	r1, #14
 800fca8:	fb01 3000 	mla	r0, r1, r0, r3
 800fcac:	7b03      	ldrb	r3, [r0, #12]
 800fcae:	f003 031f 	and.w	r3, r3, #31
 800fcb2:	2b0b      	cmp	r3, #11
 800fcb4:	d10b      	bne.n	800fcce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fcb6:	8903      	ldrh	r3, [r0, #8]
 800fcb8:	8940      	ldrh	r0, [r0, #10]
 800fcba:	4358      	muls	r0, r3
 800fcbc:	4b09      	ldr	r3, [pc, #36]	; (800fce4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fcbe:	6819      	ldr	r1, [r3, #0]
 800fcc0:	3003      	adds	r0, #3
 800fcc2:	f020 0303 	bic.w	r3, r0, #3
 800fcc6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fcca:	4418      	add	r0, r3
 800fccc:	4770      	bx	lr
 800fcce:	2b0d      	cmp	r3, #13
 800fcd0:	d101      	bne.n	800fcd6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fcd2:	300d      	adds	r0, #13
 800fcd4:	4770      	bx	lr
 800fcd6:	2000      	movs	r0, #0
 800fcd8:	4770      	bx	lr
 800fcda:	bf00      	nop
 800fcdc:	2000a338 	.word	0x2000a338
 800fce0:	2000a340 	.word	0x2000a340
 800fce4:	2000a31c 	.word	0x2000a31c
 800fce8:	2000a33c 	.word	0x2000a33c
 800fcec:	2000a320 	.word	0x2000a320

0800fcf0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fcf0:	b510      	push	{r4, lr}
 800fcf2:	4b17      	ldr	r3, [pc, #92]	; (800fd50 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fcf4:	6819      	ldr	r1, [r3, #0]
 800fcf6:	8803      	ldrh	r3, [r0, #0]
 800fcf8:	b1e9      	cbz	r1, 800fd36 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fcfa:	4a16      	ldr	r2, [pc, #88]	; (800fd54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fcfc:	8812      	ldrh	r2, [r2, #0]
 800fcfe:	429a      	cmp	r2, r3
 800fd00:	d90a      	bls.n	800fd18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fd02:	2214      	movs	r2, #20
 800fd04:	fb02 1303 	mla	r3, r2, r3, r1
 800fd08:	7c58      	ldrb	r0, [r3, #17]
 800fd0a:	0942      	lsrs	r2, r0, #5
 800fd0c:	7cd8      	ldrb	r0, [r3, #19]
 800fd0e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fd12:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fd16:	bd10      	pop	{r4, pc}
 800fd18:	490f      	ldr	r1, [pc, #60]	; (800fd58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fd1a:	8809      	ldrh	r1, [r1, #0]
 800fd1c:	4411      	add	r1, r2
 800fd1e:	428b      	cmp	r3, r1
 800fd20:	da09      	bge.n	800fd36 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd22:	1a9b      	subs	r3, r3, r2
 800fd24:	4a0d      	ldr	r2, [pc, #52]	; (800fd5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fd26:	6812      	ldr	r2, [r2, #0]
 800fd28:	210e      	movs	r1, #14
 800fd2a:	fb01 2303 	mla	r3, r1, r3, r2
 800fd2e:	7b18      	ldrb	r0, [r3, #12]
 800fd30:	f000 001f 	and.w	r0, r0, #31
 800fd34:	e7ef      	b.n	800fd16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fd36:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fd3a:	4293      	cmp	r3, r2
 800fd3c:	d106      	bne.n	800fd4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fd3e:	f7f9 febb 	bl	8009ab8 <_ZN8touchgfx3HAL3lcdEv>
 800fd42:	6803      	ldr	r3, [r0, #0]
 800fd44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fd4a:	4718      	bx	r3
 800fd4c:	2000      	movs	r0, #0
 800fd4e:	e7e2      	b.n	800fd16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fd50:	2000a340 	.word	0x2000a340
 800fd54:	2000a338 	.word	0x2000a338
 800fd58:	2000a33c 	.word	0x2000a33c
 800fd5c:	2000a320 	.word	0x2000a320

0800fd60 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fd60:	2010      	movs	r0, #16
 800fd62:	4770      	bx	lr

0800fd64 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fd64:	2000      	movs	r0, #0
 800fd66:	4770      	bx	lr

0800fd68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fd68:	2bff      	cmp	r3, #255	; 0xff
 800fd6a:	d050      	beq.n	800fe0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fd6c:	2a0b      	cmp	r2, #11
 800fd6e:	d04a      	beq.n	800fe06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fd70:	d80e      	bhi.n	800fd90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fd72:	2a03      	cmp	r2, #3
 800fd74:	d03f      	beq.n	800fdf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fd76:	d804      	bhi.n	800fd82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fd78:	2a01      	cmp	r2, #1
 800fd7a:	d03e      	beq.n	800fdfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fd7c:	d93f      	bls.n	800fdfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fd7e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fd80:	4770      	bx	lr
 800fd82:	2a09      	cmp	r2, #9
 800fd84:	d03f      	beq.n	800fe06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fd86:	d83c      	bhi.n	800fe02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd88:	2a08      	cmp	r2, #8
 800fd8a:	d03a      	beq.n	800fe02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd8c:	2000      	movs	r0, #0
 800fd8e:	4770      	bx	lr
 800fd90:	2a2f      	cmp	r2, #47	; 0x2f
 800fd92:	d024      	beq.n	800fdde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fd94:	d80d      	bhi.n	800fdb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fd96:	2a2d      	cmp	r2, #45	; 0x2d
 800fd98:	d014      	beq.n	800fdc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fd9a:	d826      	bhi.n	800fdea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fd9c:	2a2c      	cmp	r2, #44	; 0x2c
 800fd9e:	d1f5      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fda0:	684b      	ldr	r3, [r1, #4]
 800fda2:	781b      	ldrb	r3, [r3, #0]
 800fda4:	2b01      	cmp	r3, #1
 800fda6:	d018      	beq.n	800fdda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fda8:	d323      	bcc.n	800fdf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fdaa:	2b02      	cmp	r3, #2
 800fdac:	d1ee      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdae:	6880      	ldr	r0, [r0, #8]
 800fdb0:	4770      	bx	lr
 800fdb2:	2a31      	cmp	r2, #49	; 0x31
 800fdb4:	d004      	beq.n	800fdc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fdb6:	d328      	bcc.n	800fe0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fdb8:	2a32      	cmp	r2, #50	; 0x32
 800fdba:	d026      	beq.n	800fe0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fdbc:	2a33      	cmp	r2, #51	; 0x33
 800fdbe:	d1e5      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdc0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fdc2:	4770      	bx	lr
 800fdc4:	684b      	ldr	r3, [r1, #4]
 800fdc6:	781b      	ldrb	r3, [r3, #0]
 800fdc8:	2b01      	cmp	r3, #1
 800fdca:	d004      	beq.n	800fdd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fdcc:	d30b      	bcc.n	800fde6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fdce:	2b02      	cmp	r3, #2
 800fdd0:	d1dc      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdd2:	6900      	ldr	r0, [r0, #16]
 800fdd4:	4770      	bx	lr
 800fdd6:	6a00      	ldr	r0, [r0, #32]
 800fdd8:	4770      	bx	lr
 800fdda:	6980      	ldr	r0, [r0, #24]
 800fddc:	4770      	bx	lr
 800fdde:	684b      	ldr	r3, [r1, #4]
 800fde0:	781b      	ldrb	r3, [r3, #0]
 800fde2:	2b00      	cmp	r3, #0
 800fde4:	d1d2      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fde6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fde8:	4770      	bx	lr
 800fdea:	684b      	ldr	r3, [r1, #4]
 800fdec:	781b      	ldrb	r3, [r3, #0]
 800fdee:	2b00      	cmp	r3, #0
 800fdf0:	d1cc      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdf2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fdf4:	4770      	bx	lr
 800fdf6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fdf8:	4770      	bx	lr
 800fdfa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fdfc:	4770      	bx	lr
 800fdfe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fe00:	4770      	bx	lr
 800fe02:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fe04:	4770      	bx	lr
 800fe06:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fe08:	4770      	bx	lr
 800fe0a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fe0c:	4770      	bx	lr
 800fe0e:	2a0b      	cmp	r2, #11
 800fe10:	d049      	beq.n	800fea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe12:	d80e      	bhi.n	800fe32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fe14:	2a03      	cmp	r2, #3
 800fe16:	d040      	beq.n	800fe9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fe18:	d804      	bhi.n	800fe24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fe1a:	2a01      	cmp	r2, #1
 800fe1c:	d03f      	beq.n	800fe9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fe1e:	d940      	bls.n	800fea2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fe20:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fe22:	4770      	bx	lr
 800fe24:	2a09      	cmp	r2, #9
 800fe26:	d03e      	beq.n	800fea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe28:	d801      	bhi.n	800fe2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fe2a:	2a08      	cmp	r2, #8
 800fe2c:	d1ae      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe2e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fe30:	4770      	bx	lr
 800fe32:	2a2f      	cmp	r2, #47	; 0x2f
 800fe34:	d024      	beq.n	800fe80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fe36:	d80d      	bhi.n	800fe54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fe38:	2a2d      	cmp	r2, #45	; 0x2d
 800fe3a:	d014      	beq.n	800fe66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fe3c:	d826      	bhi.n	800fe8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fe3e:	2a2c      	cmp	r2, #44	; 0x2c
 800fe40:	d1a4      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe42:	684b      	ldr	r3, [r1, #4]
 800fe44:	781b      	ldrb	r3, [r3, #0]
 800fe46:	2b01      	cmp	r3, #1
 800fe48:	d018      	beq.n	800fe7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fe4a:	d324      	bcc.n	800fe96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fe4c:	2b02      	cmp	r3, #2
 800fe4e:	d19d      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe50:	68c0      	ldr	r0, [r0, #12]
 800fe52:	4770      	bx	lr
 800fe54:	2a31      	cmp	r2, #49	; 0x31
 800fe56:	d004      	beq.n	800fe62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fe58:	d327      	bcc.n	800feaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe5a:	2a32      	cmp	r2, #50	; 0x32
 800fe5c:	d025      	beq.n	800feaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe5e:	2a33      	cmp	r2, #51	; 0x33
 800fe60:	d194      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe62:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fe64:	4770      	bx	lr
 800fe66:	684b      	ldr	r3, [r1, #4]
 800fe68:	781b      	ldrb	r3, [r3, #0]
 800fe6a:	2b01      	cmp	r3, #1
 800fe6c:	d004      	beq.n	800fe78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fe6e:	d30b      	bcc.n	800fe88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fe70:	2b02      	cmp	r3, #2
 800fe72:	d18b      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe74:	6940      	ldr	r0, [r0, #20]
 800fe76:	4770      	bx	lr
 800fe78:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fe7a:	4770      	bx	lr
 800fe7c:	69c0      	ldr	r0, [r0, #28]
 800fe7e:	4770      	bx	lr
 800fe80:	684b      	ldr	r3, [r1, #4]
 800fe82:	781b      	ldrb	r3, [r3, #0]
 800fe84:	2b00      	cmp	r3, #0
 800fe86:	d181      	bne.n	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fe8a:	4770      	bx	lr
 800fe8c:	684b      	ldr	r3, [r1, #4]
 800fe8e:	781b      	ldrb	r3, [r3, #0]
 800fe90:	2b00      	cmp	r3, #0
 800fe92:	f47f af7b 	bne.w	800fd8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe96:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fe98:	4770      	bx	lr
 800fe9a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe9c:	4770      	bx	lr
 800fe9e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fea0:	4770      	bx	lr
 800fea2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fea4:	4770      	bx	lr
 800fea6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fea8:	4770      	bx	lr
 800feaa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800feac:	4770      	bx	lr

0800feae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800feae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feb2:	b087      	sub	sp, #28
 800feb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800feb6:	9205      	str	r2, [sp, #20]
 800feb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800febc:	9202      	str	r2, [sp, #8]
 800febe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fec2:	9101      	str	r1, [sp, #4]
 800fec4:	6841      	ldr	r1, [r0, #4]
 800fec6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800feca:	fb01 2404 	mla	r4, r1, r4, r2
 800fece:	6802      	ldr	r2, [r0, #0]
 800fed0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fed4:	f8de 2000 	ldr.w	r2, [lr]
 800fed8:	9203      	str	r2, [sp, #12]
 800feda:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fede:	3204      	adds	r2, #4
 800fee0:	9204      	str	r2, [sp, #16]
 800fee2:	9a02      	ldr	r2, [sp, #8]
 800fee4:	43d6      	mvns	r6, r2
 800fee6:	b2f6      	uxtb	r6, r6
 800fee8:	9a01      	ldr	r2, [sp, #4]
 800feea:	2a00      	cmp	r2, #0
 800feec:	dc03      	bgt.n	800fef6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800feee:	9a05      	ldr	r2, [sp, #20]
 800fef0:	2a00      	cmp	r2, #0
 800fef2:	f340 8129 	ble.w	8010148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fef6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fef8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fefc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ff00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff04:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff0a:	2b00      	cmp	r3, #0
 800ff0c:	dd0e      	ble.n	800ff2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ff0e:	1408      	asrs	r0, r1, #16
 800ff10:	d405      	bmi.n	800ff1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff12:	4560      	cmp	r0, ip
 800ff14:	da03      	bge.n	800ff1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff16:	1410      	asrs	r0, r2, #16
 800ff18:	d401      	bmi.n	800ff1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff1a:	42b8      	cmp	r0, r7
 800ff1c:	db07      	blt.n	800ff2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ff1e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff20:	4401      	add	r1, r0
 800ff22:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff24:	3b01      	subs	r3, #1
 800ff26:	4402      	add	r2, r0
 800ff28:	3402      	adds	r4, #2
 800ff2a:	e7ee      	b.n	800ff0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ff2c:	d071      	beq.n	8010012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ff2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ff30:	1e58      	subs	r0, r3, #1
 800ff32:	fb05 1500 	mla	r5, r5, r0, r1
 800ff36:	142d      	asrs	r5, r5, #16
 800ff38:	d45f      	bmi.n	800fffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff3a:	4565      	cmp	r5, ip
 800ff3c:	da5d      	bge.n	800fffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff3e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ff40:	fb05 2000 	mla	r0, r5, r0, r2
 800ff44:	1400      	asrs	r0, r0, #16
 800ff46:	d458      	bmi.n	800fffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff48:	42b8      	cmp	r0, r7
 800ff4a:	da56      	bge.n	800fffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff4c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ff50:	4699      	mov	r9, r3
 800ff52:	46a2      	mov	sl, r4
 800ff54:	f1b9 0f00 	cmp.w	r9, #0
 800ff58:	dd57      	ble.n	801000a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ff5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ff5e:	9803      	ldr	r0, [sp, #12]
 800ff60:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ff64:	140d      	asrs	r5, r1, #16
 800ff66:	fb07 000c 	mla	r0, r7, ip, r0
 800ff6a:	f109 39ff 	add.w	r9, r9, #4294967295
 800ff6e:	5d40      	ldrb	r0, [r0, r5]
 800ff70:	9d04      	ldr	r5, [sp, #16]
 800ff72:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ff76:	f8ba 5000 	ldrh.w	r5, [sl]
 800ff7a:	122f      	asrs	r7, r5, #8
 800ff7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ff80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff84:	fb17 f706 	smulbb	r7, r7, r6
 800ff88:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ff8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff90:	00ed      	lsls	r5, r5, #3
 800ff92:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ff96:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ff9a:	10c7      	asrs	r7, r0, #3
 800ff9c:	b2ed      	uxtb	r5, r5
 800ff9e:	00c0      	lsls	r0, r0, #3
 800ffa0:	fb18 f806 	smulbb	r8, r8, r6
 800ffa4:	fb15 f506 	smulbb	r5, r5, r6
 800ffa8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ffac:	b2c0      	uxtb	r0, r0
 800ffae:	fa1f fc8c 	uxth.w	ip, ip
 800ffb2:	fb07 870b 	mla	r7, r7, fp, r8
 800ffb6:	fb00 500b 	mla	r0, r0, fp, r5
 800ffba:	b280      	uxth	r0, r0
 800ffbc:	b2bf      	uxth	r7, r7
 800ffbe:	f10c 0501 	add.w	r5, ip, #1
 800ffc2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ffc6:	f107 0801 	add.w	r8, r7, #1
 800ffca:	1c45      	adds	r5, r0, #1
 800ffcc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ffd0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800ffd4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ffda:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ffde:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800ffe2:	ea45 0c0c 	orr.w	ip, r5, ip
 800ffe6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800ffea:	4401      	add	r1, r0
 800ffec:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ffee:	ea4c 0c08 	orr.w	ip, ip, r8
 800fff2:	f82a cb02 	strh.w	ip, [sl], #2
 800fff6:	4402      	add	r2, r0
 800fff8:	e7ac      	b.n	800ff54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fffa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800fffe:	f04f 0800 	mov.w	r8, #0
 8010002:	eb03 0008 	add.w	r0, r3, r8
 8010006:	2800      	cmp	r0, #0
 8010008:	dc41      	bgt.n	801008e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801000a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801000e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010012:	9b01      	ldr	r3, [sp, #4]
 8010014:	2b00      	cmp	r3, #0
 8010016:	f340 8097 	ble.w	8010148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801001a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801001e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010022:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010026:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010028:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801002c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010030:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010034:	eef0 6a62 	vmov.f32	s13, s5
 8010038:	ee61 7a27 	vmul.f32	s15, s2, s15
 801003c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010040:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010044:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010048:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801004c:	eef0 6a43 	vmov.f32	s13, s6
 8010050:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010054:	ee12 2a90 	vmov	r2, s5
 8010058:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801005c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010060:	ee13 2a10 	vmov	r2, s6
 8010064:	9313      	str	r3, [sp, #76]	; 0x4c
 8010066:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010068:	fb92 f3f3 	sdiv	r3, r2, r3
 801006c:	9314      	str	r3, [sp, #80]	; 0x50
 801006e:	9b01      	ldr	r3, [sp, #4]
 8010070:	9a05      	ldr	r2, [sp, #20]
 8010072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010076:	3b01      	subs	r3, #1
 8010078:	9301      	str	r3, [sp, #4]
 801007a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801007e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010080:	eeb0 3a67 	vmov.f32	s6, s15
 8010084:	bf08      	it	eq
 8010086:	4613      	moveq	r3, r2
 8010088:	eef0 2a47 	vmov.f32	s5, s14
 801008c:	e72c      	b.n	800fee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801008e:	140f      	asrs	r7, r1, #16
 8010090:	d453      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010092:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010096:	42bd      	cmp	r5, r7
 8010098:	dd4f      	ble.n	801013a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801009a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801009e:	d44c      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100a0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80100a4:	4560      	cmp	r0, ip
 80100a6:	dd48      	ble.n	801013a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100a8:	9803      	ldr	r0, [sp, #12]
 80100aa:	b22d      	sxth	r5, r5
 80100ac:	fb0c 0505 	mla	r5, ip, r5, r0
 80100b0:	5de8      	ldrb	r0, [r5, r7]
 80100b2:	9d04      	ldr	r5, [sp, #16]
 80100b4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80100b8:	f06f 0501 	mvn.w	r5, #1
 80100bc:	fb05 fb08 	mul.w	fp, r5, r8
 80100c0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80100c4:	f834 500b 	ldrh.w	r5, [r4, fp]
 80100c8:	122f      	asrs	r7, r5, #8
 80100ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100ce:	fb17 f706 	smulbb	r7, r7, r6
 80100d2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80100d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80100da:	00ed      	lsls	r5, r5, #3
 80100dc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80100e0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80100e4:	10c7      	asrs	r7, r0, #3
 80100e6:	b2ed      	uxtb	r5, r5
 80100e8:	00c0      	lsls	r0, r0, #3
 80100ea:	fb19 f906 	smulbb	r9, r9, r6
 80100ee:	fb15 f506 	smulbb	r5, r5, r6
 80100f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80100f6:	b2c0      	uxtb	r0, r0
 80100f8:	fa1f fc8c 	uxth.w	ip, ip
 80100fc:	fb07 970a 	mla	r7, r7, sl, r9
 8010100:	fb00 500a 	mla	r0, r0, sl, r5
 8010104:	b2bf      	uxth	r7, r7
 8010106:	b280      	uxth	r0, r0
 8010108:	f10c 0501 	add.w	r5, ip, #1
 801010c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010110:	f107 0901 	add.w	r9, r7, #1
 8010114:	1c45      	adds	r5, r0, #1
 8010116:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801011a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801011e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010122:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010126:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801012a:	ea45 0c0c 	orr.w	ip, r5, ip
 801012e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010132:	ea4c 0c09 	orr.w	ip, ip, r9
 8010136:	f824 c00b 	strh.w	ip, [r4, fp]
 801013a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801013c:	4401      	add	r1, r0
 801013e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010140:	f108 38ff 	add.w	r8, r8, #4294967295
 8010144:	4402      	add	r2, r0
 8010146:	e75c      	b.n	8010002 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010148:	b007      	add	sp, #28
 801014a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801014e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801014e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010152:	b085      	sub	sp, #20
 8010154:	4693      	mov	fp, r2
 8010156:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010158:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801015a:	6870      	ldr	r0, [r6, #4]
 801015c:	9100      	str	r1, [sp, #0]
 801015e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010162:	fb00 2404 	mla	r4, r0, r4, r2
 8010166:	6832      	ldr	r2, [r6, #0]
 8010168:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801016c:	682a      	ldr	r2, [r5, #0]
 801016e:	9201      	str	r2, [sp, #4]
 8010170:	686a      	ldr	r2, [r5, #4]
 8010172:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8010176:	3204      	adds	r2, #4
 8010178:	9202      	str	r2, [sp, #8]
 801017a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801017e:	9a00      	ldr	r2, [sp, #0]
 8010180:	2a00      	cmp	r2, #0
 8010182:	dc03      	bgt.n	801018c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010184:	f1bb 0f00 	cmp.w	fp, #0
 8010188:	f340 80a0 	ble.w	80102cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801018c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801018e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010192:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010196:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801019a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801019c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80101a0:	2b00      	cmp	r3, #0
 80101a2:	dd0c      	ble.n	80101be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80101a4:	1406      	asrs	r6, r0, #16
 80101a6:	d405      	bmi.n	80101b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101a8:	454e      	cmp	r6, r9
 80101aa:	da03      	bge.n	80101b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101ac:	1416      	asrs	r6, r2, #16
 80101ae:	d401      	bmi.n	80101b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101b0:	4546      	cmp	r6, r8
 80101b2:	db05      	blt.n	80101c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80101b4:	4470      	add	r0, lr
 80101b6:	4462      	add	r2, ip
 80101b8:	3b01      	subs	r3, #1
 80101ba:	3402      	adds	r4, #2
 80101bc:	e7f0      	b.n	80101a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80101be:	d00f      	beq.n	80101e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80101c0:	1e5e      	subs	r6, r3, #1
 80101c2:	fb0e 0706 	mla	r7, lr, r6, r0
 80101c6:	143f      	asrs	r7, r7, #16
 80101c8:	d541      	bpl.n	801024e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80101ca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80101ce:	4698      	mov	r8, r3
 80101d0:	9603      	str	r6, [sp, #12]
 80101d2:	f1b8 0f00 	cmp.w	r8, #0
 80101d6:	dc59      	bgt.n	801028c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80101d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80101dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80101e0:	9b00      	ldr	r3, [sp, #0]
 80101e2:	2b00      	cmp	r3, #0
 80101e4:	dd72      	ble.n	80102cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80101e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80101ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80101ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80101f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80101f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80101f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80101fc:	eeb0 6a62 	vmov.f32	s12, s5
 8010200:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010208:	ee77 2a62 	vsub.f32	s5, s14, s5
 801020c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010210:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010214:	eeb0 6a43 	vmov.f32	s12, s6
 8010218:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801021c:	ee12 2a90 	vmov	r2, s5
 8010220:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010224:	fb92 fef3 	sdiv	lr, r2, r3
 8010228:	ee13 2a10 	vmov	r2, s6
 801022c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010230:	9b00      	ldr	r3, [sp, #0]
 8010232:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010236:	3b01      	subs	r3, #1
 8010238:	9300      	str	r3, [sp, #0]
 801023a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801023e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010240:	eeb0 3a67 	vmov.f32	s6, s15
 8010244:	bf08      	it	eq
 8010246:	465b      	moveq	r3, fp
 8010248:	eef0 2a47 	vmov.f32	s5, s14
 801024c:	e797      	b.n	801017e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801024e:	454f      	cmp	r7, r9
 8010250:	dabb      	bge.n	80101ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010252:	fb0c 2606 	mla	r6, ip, r6, r2
 8010256:	1436      	asrs	r6, r6, #16
 8010258:	d4b7      	bmi.n	80101ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801025a:	4546      	cmp	r6, r8
 801025c:	dab5      	bge.n	80101ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801025e:	461e      	mov	r6, r3
 8010260:	46a0      	mov	r8, r4
 8010262:	2e00      	cmp	r6, #0
 8010264:	ddb8      	ble.n	80101d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010266:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801026a:	9901      	ldr	r1, [sp, #4]
 801026c:	1417      	asrs	r7, r2, #16
 801026e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010272:	fb0a 1707 	mla	r7, sl, r7, r1
 8010276:	9902      	ldr	r1, [sp, #8]
 8010278:	f817 7009 	ldrb.w	r7, [r7, r9]
 801027c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010280:	f828 7b02 	strh.w	r7, [r8], #2
 8010284:	4470      	add	r0, lr
 8010286:	4462      	add	r2, ip
 8010288:	3e01      	subs	r6, #1
 801028a:	e7ea      	b.n	8010262 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801028c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010290:	d417      	bmi.n	80102c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010292:	68ae      	ldr	r6, [r5, #8]
 8010294:	454e      	cmp	r6, r9
 8010296:	dd14      	ble.n	80102c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010298:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801029c:	d411      	bmi.n	80102c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801029e:	68ef      	ldr	r7, [r5, #12]
 80102a0:	4557      	cmp	r7, sl
 80102a2:	dd0e      	ble.n	80102c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80102a4:	9f01      	ldr	r7, [sp, #4]
 80102a6:	b236      	sxth	r6, r6
 80102a8:	fb0a 7606 	mla	r6, sl, r6, r7
 80102ac:	9f02      	ldr	r7, [sp, #8]
 80102ae:	f816 6009 	ldrb.w	r6, [r6, r9]
 80102b2:	f06f 0101 	mvn.w	r1, #1
 80102b6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80102ba:	fb01 f608 	mul.w	r6, r1, r8
 80102be:	9903      	ldr	r1, [sp, #12]
 80102c0:	538f      	strh	r7, [r1, r6]
 80102c2:	4470      	add	r0, lr
 80102c4:	4462      	add	r2, ip
 80102c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80102ca:	e782      	b.n	80101d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80102cc:	b005      	add	sp, #20
 80102ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102d6:	b087      	sub	sp, #28
 80102d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80102da:	9205      	str	r2, [sp, #20]
 80102dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80102e0:	9203      	str	r2, [sp, #12]
 80102e2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80102e6:	9102      	str	r1, [sp, #8]
 80102e8:	6861      	ldr	r1, [r4, #4]
 80102ea:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80102ee:	fb01 2000 	mla	r0, r1, r0, r2
 80102f2:	6822      	ldr	r2, [r4, #0]
 80102f4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80102f8:	9200      	str	r2, [sp, #0]
 80102fa:	f8dc 2000 	ldr.w	r2, [ip]
 80102fe:	9204      	str	r2, [sp, #16]
 8010300:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010304:	3204      	adds	r2, #4
 8010306:	9201      	str	r2, [sp, #4]
 8010308:	9a03      	ldr	r2, [sp, #12]
 801030a:	43d5      	mvns	r5, r2
 801030c:	b2ed      	uxtb	r5, r5
 801030e:	9a02      	ldr	r2, [sp, #8]
 8010310:	2a00      	cmp	r2, #0
 8010312:	dc03      	bgt.n	801031c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010314:	9a05      	ldr	r2, [sp, #20]
 8010316:	2a00      	cmp	r2, #0
 8010318:	f340 812c 	ble.w	8010574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801031c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801031e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8010322:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010326:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801032a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801032c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010330:	2b00      	cmp	r3, #0
 8010332:	dd10      	ble.n	8010356 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010334:	140c      	asrs	r4, r1, #16
 8010336:	d405      	bmi.n	8010344 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010338:	4574      	cmp	r4, lr
 801033a:	da03      	bge.n	8010344 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801033c:	1414      	asrs	r4, r2, #16
 801033e:	d401      	bmi.n	8010344 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010340:	42bc      	cmp	r4, r7
 8010342:	db09      	blt.n	8010358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010344:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010346:	9800      	ldr	r0, [sp, #0]
 8010348:	4421      	add	r1, r4
 801034a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801034c:	3002      	adds	r0, #2
 801034e:	4422      	add	r2, r4
 8010350:	3b01      	subs	r3, #1
 8010352:	9000      	str	r0, [sp, #0]
 8010354:	e7ec      	b.n	8010330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010356:	d071      	beq.n	801043c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010358:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801035a:	1e5c      	subs	r4, r3, #1
 801035c:	fb06 1604 	mla	r6, r6, r4, r1
 8010360:	1436      	asrs	r6, r6, #16
 8010362:	d45d      	bmi.n	8010420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010364:	4576      	cmp	r6, lr
 8010366:	da5b      	bge.n	8010420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010368:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801036a:	fb06 2404 	mla	r4, r6, r4, r2
 801036e:	1424      	asrs	r4, r4, #16
 8010370:	d456      	bmi.n	8010420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010372:	42bc      	cmp	r4, r7
 8010374:	da54      	bge.n	8010420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010376:	f8dd 9000 	ldr.w	r9, [sp]
 801037a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801037e:	4698      	mov	r8, r3
 8010380:	f1b8 0f00 	cmp.w	r8, #0
 8010384:	dd54      	ble.n	8010430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010386:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801038a:	9804      	ldr	r0, [sp, #16]
 801038c:	1414      	asrs	r4, r2, #16
 801038e:	fb07 0404 	mla	r4, r7, r4, r0
 8010392:	140e      	asrs	r6, r1, #16
 8010394:	9801      	ldr	r0, [sp, #4]
 8010396:	f814 e006 	ldrb.w	lr, [r4, r6]
 801039a:	f8b9 4000 	ldrh.w	r4, [r9]
 801039e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80103a2:	eb00 0b0e 	add.w	fp, r0, lr
 80103a6:	1227      	asrs	r7, r4, #8
 80103a8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80103ac:	f89b b001 	ldrb.w	fp, [fp, #1]
 80103b0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80103b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103b6:	fb16 f60a 	smulbb	r6, r6, sl
 80103ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80103be:	fb07 6705 	mla	r7, r7, r5, r6
 80103c2:	10e6      	asrs	r6, r4, #3
 80103c4:	00e4      	lsls	r4, r4, #3
 80103c6:	b2e4      	uxtb	r4, r4
 80103c8:	fb1b fb0a 	smulbb	fp, fp, sl
 80103cc:	fb14 f405 	smulbb	r4, r4, r5
 80103d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80103d4:	b2bf      	uxth	r7, r7
 80103d6:	fb06 b605 	mla	r6, r6, r5, fp
 80103da:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80103de:	b2b6      	uxth	r6, r6
 80103e0:	fa1f fe8e 	uxth.w	lr, lr
 80103e4:	1c7c      	adds	r4, r7, #1
 80103e6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80103ea:	f106 0b01 	add.w	fp, r6, #1
 80103ee:	f10e 0401 	add.w	r4, lr, #1
 80103f2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80103f6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80103fa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80103fe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010402:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010406:	4327      	orrs	r7, r4
 8010408:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801040c:	4401      	add	r1, r0
 801040e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010410:	ea47 070b 	orr.w	r7, r7, fp
 8010414:	f829 7b02 	strh.w	r7, [r9], #2
 8010418:	4402      	add	r2, r0
 801041a:	f108 38ff 	add.w	r8, r8, #4294967295
 801041e:	e7af      	b.n	8010380 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010420:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010424:	f04f 0e00 	mov.w	lr, #0
 8010428:	eb03 040e 	add.w	r4, r3, lr
 801042c:	2c00      	cmp	r4, #0
 801042e:	dc43      	bgt.n	80104b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010430:	9a00      	ldr	r2, [sp, #0]
 8010432:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010436:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801043a:	9300      	str	r3, [sp, #0]
 801043c:	9b02      	ldr	r3, [sp, #8]
 801043e:	2b00      	cmp	r3, #0
 8010440:	f340 8098 	ble.w	8010574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010444:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010448:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801044c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010450:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010456:	ee31 1a05 	vadd.f32	s2, s2, s10
 801045a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801045e:	eef0 6a62 	vmov.f32	s13, s5
 8010462:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010466:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801046a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801046e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010472:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010476:	eef0 6a43 	vmov.f32	s13, s6
 801047a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801047e:	ee12 2a90 	vmov	r2, s5
 8010482:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010486:	fb92 f3f3 	sdiv	r3, r2, r3
 801048a:	ee13 2a10 	vmov	r2, s6
 801048e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010492:	fb92 f3f3 	sdiv	r3, r2, r3
 8010496:	9314      	str	r3, [sp, #80]	; 0x50
 8010498:	9b02      	ldr	r3, [sp, #8]
 801049a:	9a05      	ldr	r2, [sp, #20]
 801049c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104a0:	3b01      	subs	r3, #1
 80104a2:	9302      	str	r3, [sp, #8]
 80104a4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80104a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104aa:	eeb0 3a67 	vmov.f32	s6, s15
 80104ae:	bf08      	it	eq
 80104b0:	4613      	moveq	r3, r2
 80104b2:	eef0 2a47 	vmov.f32	s5, s14
 80104b6:	e72a      	b.n	801030e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80104b8:	140f      	asrs	r7, r1, #16
 80104ba:	d454      	bmi.n	8010566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104bc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80104c0:	42be      	cmp	r6, r7
 80104c2:	dd50      	ble.n	8010566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104c4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80104c8:	d44d      	bmi.n	8010566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104ca:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80104ce:	4544      	cmp	r4, r8
 80104d0:	dd49      	ble.n	8010566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104d2:	9c04      	ldr	r4, [sp, #16]
 80104d4:	b236      	sxth	r6, r6
 80104d6:	fb08 4606 	mla	r6, r8, r6, r4
 80104da:	f06f 0001 	mvn.w	r0, #1
 80104de:	f816 8007 	ldrb.w	r8, [r6, r7]
 80104e2:	9c01      	ldr	r4, [sp, #4]
 80104e4:	fb00 fa0e 	mul.w	sl, r0, lr
 80104e8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80104ec:	9800      	ldr	r0, [sp, #0]
 80104ee:	eb04 0b08 	add.w	fp, r4, r8
 80104f2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80104f6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80104fa:	9801      	ldr	r0, [sp, #4]
 80104fc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010500:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010504:	9800      	ldr	r0, [sp, #0]
 8010506:	1227      	asrs	r7, r4, #8
 8010508:	fb16 f609 	smulbb	r6, r6, r9
 801050c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010510:	fb07 6705 	mla	r7, r7, r5, r6
 8010514:	10e6      	asrs	r6, r4, #3
 8010516:	00e4      	lsls	r4, r4, #3
 8010518:	b2e4      	uxtb	r4, r4
 801051a:	fb1b fb09 	smulbb	fp, fp, r9
 801051e:	fb14 f405 	smulbb	r4, r4, r5
 8010522:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010526:	b2bf      	uxth	r7, r7
 8010528:	fb06 b605 	mla	r6, r6, r5, fp
 801052c:	fb08 4809 	mla	r8, r8, r9, r4
 8010530:	b2b6      	uxth	r6, r6
 8010532:	fa1f f888 	uxth.w	r8, r8
 8010536:	1c7c      	adds	r4, r7, #1
 8010538:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801053c:	f106 0b01 	add.w	fp, r6, #1
 8010540:	f108 0401 	add.w	r4, r8, #1
 8010544:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010548:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801054c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010550:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010554:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010558:	4327      	orrs	r7, r4
 801055a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801055e:	ea47 070b 	orr.w	r7, r7, fp
 8010562:	f820 700a 	strh.w	r7, [r0, sl]
 8010566:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010568:	4401      	add	r1, r0
 801056a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801056c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010570:	4402      	add	r2, r0
 8010572:	e759      	b.n	8010428 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010574:	b007      	add	sp, #28
 8010576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801057c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801057c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010580:	b085      	sub	sp, #20
 8010582:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010586:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010588:	9203      	str	r2, [sp, #12]
 801058a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801058e:	6870      	ldr	r0, [r6, #4]
 8010590:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010592:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010596:	686f      	ldr	r7, [r5, #4]
 8010598:	9101      	str	r1, [sp, #4]
 801059a:	fb00 2404 	mla	r4, r0, r4, r2
 801059e:	6832      	ldr	r2, [r6, #0]
 80105a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80105a4:	682a      	ldr	r2, [r5, #0]
 80105a6:	9202      	str	r2, [sp, #8]
 80105a8:	3704      	adds	r7, #4
 80105aa:	9a01      	ldr	r2, [sp, #4]
 80105ac:	2a00      	cmp	r2, #0
 80105ae:	dc03      	bgt.n	80105b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80105b0:	9a03      	ldr	r2, [sp, #12]
 80105b2:	2a00      	cmp	r2, #0
 80105b4:	f340 80cc 	ble.w	8010750 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80105b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80105ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80105be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80105c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80105c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105cc:	2b00      	cmp	r3, #0
 80105ce:	dd0d      	ble.n	80105ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80105d0:	1406      	asrs	r6, r0, #16
 80105d2:	d405      	bmi.n	80105e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105d4:	454e      	cmp	r6, r9
 80105d6:	da03      	bge.n	80105e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105d8:	1416      	asrs	r6, r2, #16
 80105da:	d401      	bmi.n	80105e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105dc:	4546      	cmp	r6, r8
 80105de:	db06      	blt.n	80105ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80105e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80105e2:	4460      	add	r0, ip
 80105e4:	4432      	add	r2, r6
 80105e6:	3b01      	subs	r3, #1
 80105e8:	3402      	adds	r4, #2
 80105ea:	e7ef      	b.n	80105cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80105ec:	d00f      	beq.n	801060e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80105ee:	1e5e      	subs	r6, r3, #1
 80105f0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80105f4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80105f8:	d543      	bpl.n	8010682 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80105fa:	4698      	mov	r8, r3
 80105fc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010600:	f1b8 0f00 	cmp.w	r8, #0
 8010604:	dc71      	bgt.n	80106ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010606:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801060a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801060e:	9b01      	ldr	r3, [sp, #4]
 8010610:	2b00      	cmp	r3, #0
 8010612:	f340 809d 	ble.w	8010750 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010616:	ee30 0a04 	vadd.f32	s0, s0, s8
 801061a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801061e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010622:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010624:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010628:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801062c:	eeb0 6a62 	vmov.f32	s12, s5
 8010630:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010634:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010638:	ee77 2a62 	vsub.f32	s5, s14, s5
 801063c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010640:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010644:	eeb0 6a43 	vmov.f32	s12, s6
 8010648:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801064c:	ee12 2a90 	vmov	r2, s5
 8010650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010654:	fb92 fcf3 	sdiv	ip, r2, r3
 8010658:	ee13 2a10 	vmov	r2, s6
 801065c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010660:	9312      	str	r3, [sp, #72]	; 0x48
 8010662:	9b01      	ldr	r3, [sp, #4]
 8010664:	9a03      	ldr	r2, [sp, #12]
 8010666:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801066a:	3b01      	subs	r3, #1
 801066c:	9301      	str	r3, [sp, #4]
 801066e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010672:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010674:	eeb0 3a67 	vmov.f32	s6, s15
 8010678:	bf08      	it	eq
 801067a:	4613      	moveq	r3, r2
 801067c:	eef0 2a47 	vmov.f32	s5, s14
 8010680:	e793      	b.n	80105aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010682:	45ce      	cmp	lr, r9
 8010684:	dab9      	bge.n	80105fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010686:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010688:	fb01 2606 	mla	r6, r1, r6, r2
 801068c:	1436      	asrs	r6, r6, #16
 801068e:	d4b4      	bmi.n	80105fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010690:	4546      	cmp	r6, r8
 8010692:	dab2      	bge.n	80105fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010694:	4698      	mov	r8, r3
 8010696:	46a2      	mov	sl, r4
 8010698:	f1b8 0f00 	cmp.w	r8, #0
 801069c:	ddb3      	ble.n	8010606 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801069e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80106a2:	9902      	ldr	r1, [sp, #8]
 80106a4:	1416      	asrs	r6, r2, #16
 80106a6:	fb09 1606 	mla	r6, r9, r6, r1
 80106aa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80106ae:	492a      	ldr	r1, [pc, #168]	; (8010758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80106b0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80106b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80106b8:	eb07 0b0e 	add.w	fp, r7, lr
 80106bc:	4460      	add	r0, ip
 80106be:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80106c2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80106c6:	00f6      	lsls	r6, r6, #3
 80106c8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80106cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80106d0:	ea49 0606 	orr.w	r6, r9, r6
 80106d4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80106d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80106da:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80106de:	f82a 6b02 	strh.w	r6, [sl], #2
 80106e2:	440a      	add	r2, r1
 80106e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80106e8:	e7d6      	b.n	8010698 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80106ea:	ea5f 4920 	movs.w	r9, r0, asr #16
 80106ee:	d429      	bmi.n	8010744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106f0:	68ae      	ldr	r6, [r5, #8]
 80106f2:	454e      	cmp	r6, r9
 80106f4:	dd26      	ble.n	8010744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106f6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80106fa:	d423      	bmi.n	8010744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106fc:	68e9      	ldr	r1, [r5, #12]
 80106fe:	4559      	cmp	r1, fp
 8010700:	dd20      	ble.n	8010744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010702:	9902      	ldr	r1, [sp, #8]
 8010704:	fa0f fe86 	sxth.w	lr, r6
 8010708:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801070c:	f06f 0101 	mvn.w	r1, #1
 8010710:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010714:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010718:	eb07 060e 	add.w	r6, r7, lr
 801071c:	fb01 f908 	mul.w	r9, r1, r8
 8010720:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010724:	7876      	ldrb	r6, [r6, #1]
 8010726:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801072a:	00f6      	lsls	r6, r6, #3
 801072c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010730:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010734:	ea4b 0606 	orr.w	r6, fp, r6
 8010738:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801073c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010740:	f82a 6009 	strh.w	r6, [sl, r9]
 8010744:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010746:	4460      	add	r0, ip
 8010748:	440a      	add	r2, r1
 801074a:	f108 38ff 	add.w	r8, r8, #4294967295
 801074e:	e757      	b.n	8010600 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010750:	b005      	add	sp, #20
 8010752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010756:	bf00      	nop
 8010758:	fffff800 	.word	0xfffff800

0801075c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010760:	b087      	sub	sp, #28
 8010762:	468b      	mov	fp, r1
 8010764:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010766:	9204      	str	r2, [sp, #16]
 8010768:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801076c:	9205      	str	r2, [sp, #20]
 801076e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010772:	6841      	ldr	r1, [r0, #4]
 8010774:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010778:	fb01 2404 	mla	r4, r1, r4, r2
 801077c:	6802      	ldr	r2, [r0, #0]
 801077e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010782:	f8dc 2000 	ldr.w	r2, [ip]
 8010786:	9201      	str	r2, [sp, #4]
 8010788:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801078c:	3204      	adds	r2, #4
 801078e:	9202      	str	r2, [sp, #8]
 8010790:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010794:	f1bb 0f00 	cmp.w	fp, #0
 8010798:	dc03      	bgt.n	80107a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801079a:	9a04      	ldr	r2, [sp, #16]
 801079c:	2a00      	cmp	r2, #0
 801079e:	f340 8138 	ble.w	8010a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80107a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80107a4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80107a8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80107ac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80107b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80107b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80107b6:	2b00      	cmp	r3, #0
 80107b8:	dd0e      	ble.n	80107d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80107ba:	1402      	asrs	r2, r0, #16
 80107bc:	d405      	bmi.n	80107ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107be:	42ba      	cmp	r2, r7
 80107c0:	da03      	bge.n	80107ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107c2:	140a      	asrs	r2, r1, #16
 80107c4:	d401      	bmi.n	80107ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107c6:	42b2      	cmp	r2, r6
 80107c8:	db07      	blt.n	80107da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80107ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80107cc:	4410      	add	r0, r2
 80107ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107d0:	3b01      	subs	r3, #1
 80107d2:	4411      	add	r1, r2
 80107d4:	3402      	adds	r4, #2
 80107d6:	e7ee      	b.n	80107b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80107d8:	d019      	beq.n	801080e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80107da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80107dc:	1e5a      	subs	r2, r3, #1
 80107de:	fb05 0502 	mla	r5, r5, r2, r0
 80107e2:	142d      	asrs	r5, r5, #16
 80107e4:	d409      	bmi.n	80107fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107e6:	42bd      	cmp	r5, r7
 80107e8:	da07      	bge.n	80107fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80107ec:	fb05 1202 	mla	r2, r5, r2, r1
 80107f0:	1412      	asrs	r2, r2, #16
 80107f2:	d402      	bmi.n	80107fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107f4:	42b2      	cmp	r2, r6
 80107f6:	f2c0 80ac 	blt.w	8010952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80107fa:	f04f 0e00 	mov.w	lr, #0
 80107fe:	eb03 020e 	add.w	r2, r3, lr
 8010802:	2a00      	cmp	r2, #0
 8010804:	dc3e      	bgt.n	8010884 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010806:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801080a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801080e:	f1bb 0f00 	cmp.w	fp, #0
 8010812:	f340 80fe 	ble.w	8010a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010816:	ee30 0a04 	vadd.f32	s0, s0, s8
 801081a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801081e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010822:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010824:	f1bb 0b01 	subs.w	fp, fp, #1
 8010828:	ee31 1a05 	vadd.f32	s2, s2, s10
 801082c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010830:	eeb0 6a62 	vmov.f32	s12, s5
 8010834:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010838:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801083c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010840:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010844:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010848:	eeb0 6a43 	vmov.f32	s12, s6
 801084c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010850:	ee12 2a90 	vmov	r2, s5
 8010854:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010858:	fb92 f3f3 	sdiv	r3, r2, r3
 801085c:	ee13 2a10 	vmov	r2, s6
 8010860:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010864:	9313      	str	r3, [sp, #76]	; 0x4c
 8010866:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010868:	fb92 f3f3 	sdiv	r3, r2, r3
 801086c:	9a04      	ldr	r2, [sp, #16]
 801086e:	9314      	str	r3, [sp, #80]	; 0x50
 8010870:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010874:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010876:	eeb0 3a67 	vmov.f32	s6, s15
 801087a:	bf08      	it	eq
 801087c:	4613      	moveq	r3, r2
 801087e:	eef0 2a47 	vmov.f32	s5, s14
 8010882:	e787      	b.n	8010794 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010884:	1406      	asrs	r6, r0, #16
 8010886:	d45d      	bmi.n	8010944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010888:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801088c:	42b5      	cmp	r5, r6
 801088e:	dd59      	ble.n	8010944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010890:	140f      	asrs	r7, r1, #16
 8010892:	d457      	bmi.n	8010944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010894:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010898:	42ba      	cmp	r2, r7
 801089a:	dd53      	ble.n	8010944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801089c:	9a01      	ldr	r2, [sp, #4]
 801089e:	b22d      	sxth	r5, r5
 80108a0:	fb07 2505 	mla	r5, r7, r5, r2
 80108a4:	5daa      	ldrb	r2, [r5, r6]
 80108a6:	9d02      	ldr	r5, [sp, #8]
 80108a8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80108ac:	0e2e      	lsrs	r6, r5, #24
 80108ae:	d049      	beq.n	8010944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108b0:	f06f 0201 	mvn.w	r2, #1
 80108b4:	fb02 f20e 	mul.w	r2, r2, lr
 80108b8:	9203      	str	r2, [sp, #12]
 80108ba:	f834 8002 	ldrh.w	r8, [r4, r2]
 80108be:	9a05      	ldr	r2, [sp, #20]
 80108c0:	4356      	muls	r6, r2
 80108c2:	1c72      	adds	r2, r6, #1
 80108c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80108c8:	1212      	asrs	r2, r2, #8
 80108ca:	fa1f f982 	uxth.w	r9, r2
 80108ce:	ea4f 2728 	mov.w	r7, r8, asr #8
 80108d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80108d6:	43d2      	mvns	r2, r2
 80108d8:	b2d2      	uxtb	r2, r2
 80108da:	fb16 f609 	smulbb	r6, r6, r9
 80108de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80108e2:	fb07 6702 	mla	r7, r7, r2, r6
 80108e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80108ea:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80108ee:	b2ed      	uxtb	r5, r5
 80108f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80108f4:	fa5f f888 	uxtb.w	r8, r8
 80108f8:	fb15 f509 	smulbb	r5, r5, r9
 80108fc:	fb08 5502 	mla	r5, r8, r2, r5
 8010900:	b2bf      	uxth	r7, r7
 8010902:	fb1a fa09 	smulbb	sl, sl, r9
 8010906:	b2ad      	uxth	r5, r5
 8010908:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801090c:	fb06 a602 	mla	r6, r6, r2, sl
 8010910:	1c7a      	adds	r2, r7, #1
 8010912:	f105 0a01 	add.w	sl, r5, #1
 8010916:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801091a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801091e:	b2b6      	uxth	r6, r6
 8010920:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010924:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010928:	ea4a 0707 	orr.w	r7, sl, r7
 801092c:	f106 0a01 	add.w	sl, r6, #1
 8010930:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010934:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010938:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801093c:	9a03      	ldr	r2, [sp, #12]
 801093e:	ea47 070a 	orr.w	r7, r7, sl
 8010942:	52a7      	strh	r7, [r4, r2]
 8010944:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010946:	4410      	add	r0, r2
 8010948:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801094a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801094e:	4411      	add	r1, r2
 8010950:	e755      	b.n	80107fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010952:	f04f 0800 	mov.w	r8, #0
 8010956:	eba3 0208 	sub.w	r2, r3, r8
 801095a:	2a00      	cmp	r2, #0
 801095c:	f77f af53 	ble.w	8010806 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010960:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010964:	9f01      	ldr	r7, [sp, #4]
 8010966:	140a      	asrs	r2, r1, #16
 8010968:	1405      	asrs	r5, r0, #16
 801096a:	fb06 7202 	mla	r2, r6, r2, r7
 801096e:	5d52      	ldrb	r2, [r2, r5]
 8010970:	9d02      	ldr	r5, [sp, #8]
 8010972:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010976:	0e2e      	lsrs	r6, r5, #24
 8010978:	d044      	beq.n	8010a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801097a:	9a05      	ldr	r2, [sp, #20]
 801097c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010980:	4356      	muls	r6, r2
 8010982:	1c72      	adds	r2, r6, #1
 8010984:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010988:	1212      	asrs	r2, r2, #8
 801098a:	fa1f f982 	uxth.w	r9, r2
 801098e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010992:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010996:	43d2      	mvns	r2, r2
 8010998:	b2d2      	uxtb	r2, r2
 801099a:	fb16 f609 	smulbb	r6, r6, r9
 801099e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80109a2:	fb07 6702 	mla	r7, r7, r2, r6
 80109a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80109aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80109ae:	b2ed      	uxtb	r5, r5
 80109b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80109b4:	fa5f fe8e 	uxtb.w	lr, lr
 80109b8:	fb15 f509 	smulbb	r5, r5, r9
 80109bc:	fb0e 5502 	mla	r5, lr, r2, r5
 80109c0:	b2bf      	uxth	r7, r7
 80109c2:	fb1a fa09 	smulbb	sl, sl, r9
 80109c6:	b2ad      	uxth	r5, r5
 80109c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80109cc:	fb06 a602 	mla	r6, r6, r2, sl
 80109d0:	1c7a      	adds	r2, r7, #1
 80109d2:	f105 0a01 	add.w	sl, r5, #1
 80109d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80109da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80109de:	b2b6      	uxth	r6, r6
 80109e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109e8:	ea4a 0707 	orr.w	r7, sl, r7
 80109ec:	f106 0a01 	add.w	sl, r6, #1
 80109f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80109f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109fc:	ea47 070a 	orr.w	r7, r7, sl
 8010a00:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010a04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a06:	4410      	add	r0, r2
 8010a08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a0a:	f108 0801 	add.w	r8, r8, #1
 8010a0e:	4411      	add	r1, r2
 8010a10:	e7a1      	b.n	8010956 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010a12:	b007      	add	sp, #28
 8010a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a1c:	b085      	sub	sp, #20
 8010a1e:	468b      	mov	fp, r1
 8010a20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a22:	9203      	str	r2, [sp, #12]
 8010a24:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010a28:	6841      	ldr	r1, [r0, #4]
 8010a2a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010a2e:	fb01 2404 	mla	r4, r1, r4, r2
 8010a32:	6802      	ldr	r2, [r0, #0]
 8010a34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a38:	f8de 2000 	ldr.w	r2, [lr]
 8010a3c:	9200      	str	r2, [sp, #0]
 8010a3e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010a42:	3204      	adds	r2, #4
 8010a44:	9201      	str	r2, [sp, #4]
 8010a46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010a4a:	f1bb 0f00 	cmp.w	fp, #0
 8010a4e:	dc03      	bgt.n	8010a58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010a50:	9a03      	ldr	r2, [sp, #12]
 8010a52:	2a00      	cmp	r2, #0
 8010a54:	f340 8153 	ble.w	8010cfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010a58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010a5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010a5e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010a62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010a6c:	2b00      	cmp	r3, #0
 8010a6e:	dd0e      	ble.n	8010a8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010a70:	1408      	asrs	r0, r1, #16
 8010a72:	d405      	bmi.n	8010a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a74:	42b8      	cmp	r0, r7
 8010a76:	da03      	bge.n	8010a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a78:	1410      	asrs	r0, r2, #16
 8010a7a:	d401      	bmi.n	8010a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a7c:	42b0      	cmp	r0, r6
 8010a7e:	db07      	blt.n	8010a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010a80:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a82:	4401      	add	r1, r0
 8010a84:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a86:	3b01      	subs	r3, #1
 8010a88:	4402      	add	r2, r0
 8010a8a:	3402      	adds	r4, #2
 8010a8c:	e7ee      	b.n	8010a6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010a8e:	d017      	beq.n	8010ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010a90:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010a92:	1e58      	subs	r0, r3, #1
 8010a94:	fb05 1500 	mla	r5, r5, r0, r1
 8010a98:	142d      	asrs	r5, r5, #16
 8010a9a:	d409      	bmi.n	8010ab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a9c:	42bd      	cmp	r5, r7
 8010a9e:	da07      	bge.n	8010ab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010aa0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010aa2:	fb05 2000 	mla	r0, r5, r0, r2
 8010aa6:	1400      	asrs	r0, r0, #16
 8010aa8:	d402      	bmi.n	8010ab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010aaa:	42b0      	cmp	r0, r6
 8010aac:	f2c0 80bc 	blt.w	8010c28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010ab0:	2600      	movs	r6, #0
 8010ab2:	1998      	adds	r0, r3, r6
 8010ab4:	2800      	cmp	r0, #0
 8010ab6:	dc3e      	bgt.n	8010b36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010ab8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010abc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010ac0:	f1bb 0f00 	cmp.w	fp, #0
 8010ac4:	f340 811b 	ble.w	8010cfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ac8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010acc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010ad0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010ad4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ad6:	f1bb 0b01 	subs.w	fp, fp, #1
 8010ada:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010ade:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010ae2:	eeb0 6a62 	vmov.f32	s12, s5
 8010ae6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010aea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010aee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010af2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010af6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010afa:	eeb0 6a43 	vmov.f32	s12, s6
 8010afe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b02:	ee12 2a90 	vmov	r2, s5
 8010b06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b0e:	ee13 2a10 	vmov	r2, s6
 8010b12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b16:	9311      	str	r3, [sp, #68]	; 0x44
 8010b18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b1e:	9a03      	ldr	r2, [sp, #12]
 8010b20:	9312      	str	r3, [sp, #72]	; 0x48
 8010b22:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010b26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b28:	eeb0 3a67 	vmov.f32	s6, s15
 8010b2c:	bf08      	it	eq
 8010b2e:	4613      	moveq	r3, r2
 8010b30:	eef0 2a47 	vmov.f32	s5, s14
 8010b34:	e789      	b.n	8010a4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010b36:	140f      	asrs	r7, r1, #16
 8010b38:	d426      	bmi.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b3a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010b3e:	42bd      	cmp	r5, r7
 8010b40:	dd22      	ble.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b42:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010b46:	d41f      	bmi.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b48:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010b4c:	4560      	cmp	r0, ip
 8010b4e:	dd1b      	ble.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b50:	9800      	ldr	r0, [sp, #0]
 8010b52:	b22d      	sxth	r5, r5
 8010b54:	fb0c 0505 	mla	r5, ip, r5, r0
 8010b58:	5de8      	ldrb	r0, [r5, r7]
 8010b5a:	9d01      	ldr	r5, [sp, #4]
 8010b5c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010b60:	0e07      	lsrs	r7, r0, #24
 8010b62:	2fff      	cmp	r7, #255	; 0xff
 8010b64:	d116      	bne.n	8010b94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010b66:	f06f 0501 	mvn.w	r5, #1
 8010b6a:	fb05 f706 	mul.w	r7, r5, r6
 8010b6e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010b72:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010b76:	0945      	lsrs	r5, r0, #5
 8010b78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b7c:	ea4c 0505 	orr.w	r5, ip, r5
 8010b80:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010b84:	4305      	orrs	r5, r0
 8010b86:	53e5      	strh	r5, [r4, r7]
 8010b88:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b8a:	4401      	add	r1, r0
 8010b8c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b8e:	3e01      	subs	r6, #1
 8010b90:	4402      	add	r2, r0
 8010b92:	e78e      	b.n	8010ab2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010b94:	b2fd      	uxtb	r5, r7
 8010b96:	2f00      	cmp	r7, #0
 8010b98:	d0f6      	beq.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b9a:	f06f 0701 	mvn.w	r7, #1
 8010b9e:	4377      	muls	r7, r6
 8010ba0:	fa1f f985 	uxth.w	r9, r5
 8010ba4:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010ba8:	9702      	str	r7, [sp, #8]
 8010baa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010bae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010bb2:	43ed      	mvns	r5, r5
 8010bb4:	b2ed      	uxtb	r5, r5
 8010bb6:	fb17 f709 	smulbb	r7, r7, r9
 8010bba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010bbe:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010bc2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010bc6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010bca:	b2c0      	uxtb	r0, r0
 8010bcc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010bd0:	fa5f f888 	uxtb.w	r8, r8
 8010bd4:	fb10 f009 	smulbb	r0, r0, r9
 8010bd8:	fb08 0005 	mla	r0, r8, r5, r0
 8010bdc:	b280      	uxth	r0, r0
 8010bde:	fa1f fc8c 	uxth.w	ip, ip
 8010be2:	fb1a fa09 	smulbb	sl, sl, r9
 8010be6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010bea:	fb07 a705 	mla	r7, r7, r5, sl
 8010bee:	f100 0a01 	add.w	sl, r0, #1
 8010bf2:	f10c 0501 	add.w	r5, ip, #1
 8010bf6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010bfa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010bfe:	b2bf      	uxth	r7, r7
 8010c00:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c08:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010c0c:	f107 0a01 	add.w	sl, r7, #1
 8010c10:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010c14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c1c:	9802      	ldr	r0, [sp, #8]
 8010c1e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010c22:	f824 c000 	strh.w	ip, [r4, r0]
 8010c26:	e7af      	b.n	8010b88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010c28:	f04f 0800 	mov.w	r8, #0
 8010c2c:	eba3 0008 	sub.w	r0, r3, r8
 8010c30:	2800      	cmp	r0, #0
 8010c32:	f77f af41 	ble.w	8010ab8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010c36:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010c3a:	9f00      	ldr	r7, [sp, #0]
 8010c3c:	1410      	asrs	r0, r2, #16
 8010c3e:	140d      	asrs	r5, r1, #16
 8010c40:	fb06 7000 	mla	r0, r6, r0, r7
 8010c44:	5d40      	ldrb	r0, [r0, r5]
 8010c46:	9d01      	ldr	r5, [sp, #4]
 8010c48:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010c4c:	0e2e      	lsrs	r6, r5, #24
 8010c4e:	2eff      	cmp	r6, #255	; 0xff
 8010c50:	d112      	bne.n	8010c78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010c52:	482c      	ldr	r0, [pc, #176]	; (8010d04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010c54:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010c58:	0968      	lsrs	r0, r5, #5
 8010c5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010c5e:	4330      	orrs	r0, r6
 8010c60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010c64:	4328      	orrs	r0, r5
 8010c66:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010c6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010c6c:	4401      	add	r1, r0
 8010c6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010c70:	f108 0801 	add.w	r8, r8, #1
 8010c74:	4402      	add	r2, r0
 8010c76:	e7d9      	b.n	8010c2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010c78:	b2f0      	uxtb	r0, r6
 8010c7a:	2e00      	cmp	r6, #0
 8010c7c:	d0f5      	beq.n	8010c6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010c7e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010c82:	fa1f f980 	uxth.w	r9, r0
 8010c86:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010c8a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010c8e:	43c0      	mvns	r0, r0
 8010c90:	b2c0      	uxtb	r0, r0
 8010c92:	fb16 f609 	smulbb	r6, r6, r9
 8010c96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c9a:	fb07 6700 	mla	r7, r7, r0, r6
 8010c9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010ca2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010ca6:	b2ed      	uxtb	r5, r5
 8010ca8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010cac:	fa5f fc8c 	uxtb.w	ip, ip
 8010cb0:	fb15 f509 	smulbb	r5, r5, r9
 8010cb4:	fb0c 5500 	mla	r5, ip, r0, r5
 8010cb8:	b2bf      	uxth	r7, r7
 8010cba:	fb1a fa09 	smulbb	sl, sl, r9
 8010cbe:	b2ad      	uxth	r5, r5
 8010cc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010cc4:	fb06 a600 	mla	r6, r6, r0, sl
 8010cc8:	1c78      	adds	r0, r7, #1
 8010cca:	f105 0a01 	add.w	sl, r5, #1
 8010cce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010cd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010cd6:	b2b6      	uxth	r6, r6
 8010cd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010cdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ce0:	ea4a 0707 	orr.w	r7, sl, r7
 8010ce4:	f106 0a01 	add.w	sl, r6, #1
 8010ce8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010cec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010cf0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cf4:	ea47 070a 	orr.w	r7, r7, sl
 8010cf8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010cfc:	e7b5      	b.n	8010c6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010cfe:	b005      	add	sp, #20
 8010d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d04:	fffff800 	.word	0xfffff800

08010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d0c:	b087      	sub	sp, #28
 8010d0e:	468b      	mov	fp, r1
 8010d10:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010d12:	9204      	str	r2, [sp, #16]
 8010d14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d18:	9205      	str	r2, [sp, #20]
 8010d1a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010d1e:	6861      	ldr	r1, [r4, #4]
 8010d20:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010d24:	fb01 2000 	mla	r0, r1, r0, r2
 8010d28:	6822      	ldr	r2, [r4, #0]
 8010d2a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010d2e:	f8de 2000 	ldr.w	r2, [lr]
 8010d32:	9201      	str	r2, [sp, #4]
 8010d34:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010d38:	9202      	str	r2, [sp, #8]
 8010d3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d3e:	f1bb 0f00 	cmp.w	fp, #0
 8010d42:	dc03      	bgt.n	8010d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010d44:	9a04      	ldr	r2, [sp, #16]
 8010d46:	2a00      	cmp	r2, #0
 8010d48:	f340 8142 	ble.w	8010fd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010d4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d4e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010d52:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010d56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d60:	2b00      	cmp	r3, #0
 8010d62:	dd0e      	ble.n	8010d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010d64:	140c      	asrs	r4, r1, #16
 8010d66:	d405      	bmi.n	8010d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d68:	42bc      	cmp	r4, r7
 8010d6a:	da03      	bge.n	8010d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d6c:	1414      	asrs	r4, r2, #16
 8010d6e:	d401      	bmi.n	8010d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d70:	42b4      	cmp	r4, r6
 8010d72:	db07      	blt.n	8010d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010d74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010d76:	4421      	add	r1, r4
 8010d78:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010d7a:	3b01      	subs	r3, #1
 8010d7c:	4422      	add	r2, r4
 8010d7e:	3002      	adds	r0, #2
 8010d80:	e7ee      	b.n	8010d60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010d82:	d019      	beq.n	8010db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010d84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d86:	1e5c      	subs	r4, r3, #1
 8010d88:	fb05 1504 	mla	r5, r5, r4, r1
 8010d8c:	142d      	asrs	r5, r5, #16
 8010d8e:	d409      	bmi.n	8010da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d90:	42bd      	cmp	r5, r7
 8010d92:	da07      	bge.n	8010da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d94:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d96:	fb05 2404 	mla	r4, r5, r4, r2
 8010d9a:	1424      	asrs	r4, r4, #16
 8010d9c:	d402      	bmi.n	8010da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d9e:	42b4      	cmp	r4, r6
 8010da0:	f2c0 80b1 	blt.w	8010f06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010da4:	f04f 0800 	mov.w	r8, #0
 8010da8:	eb03 0408 	add.w	r4, r3, r8
 8010dac:	2c00      	cmp	r4, #0
 8010dae:	dc3e      	bgt.n	8010e2e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010db0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010db4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010db8:	f1bb 0f00 	cmp.w	fp, #0
 8010dbc:	f340 8108 	ble.w	8010fd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010dc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010dc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010dc8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010dcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dce:	f1bb 0b01 	subs.w	fp, fp, #1
 8010dd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010dd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010dda:	eeb0 6a62 	vmov.f32	s12, s5
 8010dde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010de2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010de6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010dea:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010dee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010df2:	eeb0 6a43 	vmov.f32	s12, s6
 8010df6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010dfa:	ee12 2a90 	vmov	r2, s5
 8010dfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e02:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e06:	ee13 2a10 	vmov	r2, s6
 8010e0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e0e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e16:	9a04      	ldr	r2, [sp, #16]
 8010e18:	9314      	str	r3, [sp, #80]	; 0x50
 8010e1a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e20:	eeb0 3a67 	vmov.f32	s6, s15
 8010e24:	bf08      	it	eq
 8010e26:	4613      	moveq	r3, r2
 8010e28:	eef0 2a47 	vmov.f32	s5, s14
 8010e2c:	e787      	b.n	8010d3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010e2e:	140e      	asrs	r6, r1, #16
 8010e30:	d462      	bmi.n	8010ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e32:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010e36:	42b5      	cmp	r5, r6
 8010e38:	dd5e      	ble.n	8010ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e3a:	1417      	asrs	r7, r2, #16
 8010e3c:	d45c      	bmi.n	8010ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e3e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010e42:	42bc      	cmp	r4, r7
 8010e44:	dd58      	ble.n	8010ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e46:	b22d      	sxth	r5, r5
 8010e48:	fb07 6505 	mla	r5, r7, r5, r6
 8010e4c:	9c02      	ldr	r4, [sp, #8]
 8010e4e:	5d66      	ldrb	r6, [r4, r5]
 8010e50:	2e00      	cmp	r6, #0
 8010e52:	d051      	beq.n	8010ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e54:	9c01      	ldr	r4, [sp, #4]
 8010e56:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010e5a:	f06f 0401 	mvn.w	r4, #1
 8010e5e:	fb04 f408 	mul.w	r4, r4, r8
 8010e62:	9403      	str	r4, [sp, #12]
 8010e64:	5b05      	ldrh	r5, [r0, r4]
 8010e66:	9c05      	ldr	r4, [sp, #20]
 8010e68:	4366      	muls	r6, r4
 8010e6a:	1c74      	adds	r4, r6, #1
 8010e6c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010e70:	1224      	asrs	r4, r4, #8
 8010e72:	b2a7      	uxth	r7, r4
 8010e74:	122e      	asrs	r6, r5, #8
 8010e76:	43e4      	mvns	r4, r4
 8010e78:	b2e4      	uxtb	r4, r4
 8010e7a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010e7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010e82:	fb16 f604 	smulbb	r6, r6, r4
 8010e86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010e8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e8e:	00ed      	lsls	r5, r5, #3
 8010e90:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010e94:	b2ed      	uxtb	r5, r5
 8010e96:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010e9a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010e9e:	fb15 f504 	smulbb	r5, r5, r4
 8010ea2:	fa5f f989 	uxtb.w	r9, r9
 8010ea6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010eaa:	fb09 5507 	mla	r5, r9, r7, r5
 8010eae:	fb1a fa04 	smulbb	sl, sl, r4
 8010eb2:	fa1f fc8c 	uxth.w	ip, ip
 8010eb6:	b2ad      	uxth	r5, r5
 8010eb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ebc:	fb06 a607 	mla	r6, r6, r7, sl
 8010ec0:	f10c 0401 	add.w	r4, ip, #1
 8010ec4:	f105 0a01 	add.w	sl, r5, #1
 8010ec8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010ecc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ed0:	b2b6      	uxth	r6, r6
 8010ed2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ed6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010eda:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010ede:	f106 0a01 	add.w	sl, r6, #1
 8010ee2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ee6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010eea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010eee:	9c03      	ldr	r4, [sp, #12]
 8010ef0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010ef4:	f820 c004 	strh.w	ip, [r0, r4]
 8010ef8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010efa:	4421      	add	r1, r4
 8010efc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010efe:	f108 38ff 	add.w	r8, r8, #4294967295
 8010f02:	4422      	add	r2, r4
 8010f04:	e750      	b.n	8010da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010f06:	f04f 0900 	mov.w	r9, #0
 8010f0a:	eba3 0409 	sub.w	r4, r3, r9
 8010f0e:	2c00      	cmp	r4, #0
 8010f10:	f77f af4e 	ble.w	8010db0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010f14:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010f18:	140d      	asrs	r5, r1, #16
 8010f1a:	1414      	asrs	r4, r2, #16
 8010f1c:	fb06 5404 	mla	r4, r6, r4, r5
 8010f20:	9d02      	ldr	r5, [sp, #8]
 8010f22:	5d2e      	ldrb	r6, [r5, r4]
 8010f24:	2e00      	cmp	r6, #0
 8010f26:	d04c      	beq.n	8010fc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010f28:	9d01      	ldr	r5, [sp, #4]
 8010f2a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010f2e:	9c05      	ldr	r4, [sp, #20]
 8010f30:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010f34:	4366      	muls	r6, r4
 8010f36:	1c74      	adds	r4, r6, #1
 8010f38:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010f3c:	1224      	asrs	r4, r4, #8
 8010f3e:	b2a7      	uxth	r7, r4
 8010f40:	122e      	asrs	r6, r5, #8
 8010f42:	43e4      	mvns	r4, r4
 8010f44:	b2e4      	uxtb	r4, r4
 8010f46:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010f4a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f4e:	fb16 f604 	smulbb	r6, r6, r4
 8010f52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f5a:	00ed      	lsls	r5, r5, #3
 8010f5c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f60:	b2ed      	uxtb	r5, r5
 8010f62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010f66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010f6a:	fb15 f504 	smulbb	r5, r5, r4
 8010f6e:	fa5f f888 	uxtb.w	r8, r8
 8010f72:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f76:	fb08 5507 	mla	r5, r8, r7, r5
 8010f7a:	fb1a fa04 	smulbb	sl, sl, r4
 8010f7e:	fa1f fc8c 	uxth.w	ip, ip
 8010f82:	b2ad      	uxth	r5, r5
 8010f84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f88:	fb06 a607 	mla	r6, r6, r7, sl
 8010f8c:	f10c 0401 	add.w	r4, ip, #1
 8010f90:	f105 0a01 	add.w	sl, r5, #1
 8010f94:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f98:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f9c:	b2b6      	uxth	r6, r6
 8010f9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fa2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010fa6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010faa:	f106 0a01 	add.w	sl, r6, #1
 8010fae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010fb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fb6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fba:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010fbe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010fc2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fc4:	4421      	add	r1, r4
 8010fc6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010fc8:	f109 0901 	add.w	r9, r9, #1
 8010fcc:	4422      	add	r2, r4
 8010fce:	e79c      	b.n	8010f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010fd0:	b007      	add	sp, #28
 8010fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fda:	b085      	sub	sp, #20
 8010fdc:	468b      	mov	fp, r1
 8010fde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fe0:	9203      	str	r2, [sp, #12]
 8010fe2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010fe6:	6861      	ldr	r1, [r4, #4]
 8010fe8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010fec:	fb01 2000 	mla	r0, r1, r0, r2
 8010ff0:	6822      	ldr	r2, [r4, #0]
 8010ff2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010ff6:	f8d8 2000 	ldr.w	r2, [r8]
 8010ffa:	9200      	str	r2, [sp, #0]
 8010ffc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011000:	9201      	str	r2, [sp, #4]
 8011002:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011006:	f1bb 0f00 	cmp.w	fp, #0
 801100a:	dc03      	bgt.n	8011014 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801100c:	9a03      	ldr	r2, [sp, #12]
 801100e:	2a00      	cmp	r2, #0
 8011010:	f340 8146 	ble.w	80112a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011014:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011016:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801101a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801101e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011022:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011024:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011028:	2b00      	cmp	r3, #0
 801102a:	dd0e      	ble.n	801104a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801102c:	140c      	asrs	r4, r1, #16
 801102e:	d405      	bmi.n	801103c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011030:	42bc      	cmp	r4, r7
 8011032:	da03      	bge.n	801103c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011034:	1414      	asrs	r4, r2, #16
 8011036:	d401      	bmi.n	801103c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011038:	42b4      	cmp	r4, r6
 801103a:	db07      	blt.n	801104c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801103c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801103e:	4421      	add	r1, r4
 8011040:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011042:	3b01      	subs	r3, #1
 8011044:	4422      	add	r2, r4
 8011046:	3002      	adds	r0, #2
 8011048:	e7ee      	b.n	8011028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801104a:	d017      	beq.n	801107c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801104c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801104e:	1e5c      	subs	r4, r3, #1
 8011050:	fb05 1504 	mla	r5, r5, r4, r1
 8011054:	142d      	asrs	r5, r5, #16
 8011056:	d409      	bmi.n	801106c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011058:	42bd      	cmp	r5, r7
 801105a:	da07      	bge.n	801106c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801105c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801105e:	fb05 2404 	mla	r4, r5, r4, r2
 8011062:	1424      	asrs	r4, r4, #16
 8011064:	d402      	bmi.n	801106c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011066:	42b4      	cmp	r4, r6
 8011068:	f2c0 80b3 	blt.w	80111d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801106c:	2600      	movs	r6, #0
 801106e:	199c      	adds	r4, r3, r6
 8011070:	2c00      	cmp	r4, #0
 8011072:	dc3e      	bgt.n	80110f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011074:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011078:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801107c:	f1bb 0f00 	cmp.w	fp, #0
 8011080:	f340 810e 	ble.w	80112a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011084:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011088:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801108c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011090:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011092:	f1bb 0b01 	subs.w	fp, fp, #1
 8011096:	ee31 1a05 	vadd.f32	s2, s2, s10
 801109a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801109e:	eeb0 6a62 	vmov.f32	s12, s5
 80110a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80110b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110b6:	eeb0 6a43 	vmov.f32	s12, s6
 80110ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110be:	ee12 2a90 	vmov	r2, s5
 80110c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80110ca:	ee13 2a10 	vmov	r2, s6
 80110ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110d2:	9311      	str	r3, [sp, #68]	; 0x44
 80110d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80110da:	9a03      	ldr	r2, [sp, #12]
 80110dc:	9312      	str	r3, [sp, #72]	; 0x48
 80110de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80110e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110e4:	eeb0 3a67 	vmov.f32	s6, s15
 80110e8:	bf08      	it	eq
 80110ea:	4613      	moveq	r3, r2
 80110ec:	eef0 2a47 	vmov.f32	s5, s14
 80110f0:	e789      	b.n	8011006 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80110f2:	140f      	asrs	r7, r1, #16
 80110f4:	d418      	bmi.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80110f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80110fa:	42bd      	cmp	r5, r7
 80110fc:	dd14      	ble.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80110fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011102:	d411      	bmi.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011104:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011108:	4564      	cmp	r4, ip
 801110a:	dd0d      	ble.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801110c:	b22d      	sxth	r5, r5
 801110e:	fb0c 7505 	mla	r5, ip, r5, r7
 8011112:	9c01      	ldr	r4, [sp, #4]
 8011114:	5d64      	ldrb	r4, [r4, r5]
 8011116:	2cff      	cmp	r4, #255	; 0xff
 8011118:	d10c      	bne.n	8011134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801111a:	9c00      	ldr	r4, [sp, #0]
 801111c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011120:	f06f 0401 	mvn.w	r4, #1
 8011124:	4374      	muls	r4, r6
 8011126:	5305      	strh	r5, [r0, r4]
 8011128:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801112a:	4421      	add	r1, r4
 801112c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801112e:	3e01      	subs	r6, #1
 8011130:	4422      	add	r2, r4
 8011132:	e79c      	b.n	801106e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011134:	2c00      	cmp	r4, #0
 8011136:	d0f7      	beq.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011138:	9f00      	ldr	r7, [sp, #0]
 801113a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801113e:	f06f 0501 	mvn.w	r5, #1
 8011142:	4375      	muls	r5, r6
 8011144:	9502      	str	r5, [sp, #8]
 8011146:	5b45      	ldrh	r5, [r0, r5]
 8011148:	fa1f fc84 	uxth.w	ip, r4
 801114c:	122f      	asrs	r7, r5, #8
 801114e:	43e4      	mvns	r4, r4
 8011150:	b2e4      	uxtb	r4, r4
 8011152:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8011156:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801115a:	fb17 f704 	smulbb	r7, r7, r4
 801115e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011162:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011166:	00ed      	lsls	r5, r5, #3
 8011168:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801116c:	b2ed      	uxtb	r5, r5
 801116e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8011172:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011176:	fb15 f504 	smulbb	r5, r5, r4
 801117a:	fa5f f989 	uxtb.w	r9, r9
 801117e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011182:	fb09 550c 	mla	r5, r9, ip, r5
 8011186:	fb1a fa04 	smulbb	sl, sl, r4
 801118a:	fa1f fe8e 	uxth.w	lr, lr
 801118e:	b2ad      	uxth	r5, r5
 8011190:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011194:	fb07 a70c 	mla	r7, r7, ip, sl
 8011198:	f10e 0401 	add.w	r4, lr, #1
 801119c:	f105 0a01 	add.w	sl, r5, #1
 80111a0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80111a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80111a8:	b2bf      	uxth	r7, r7
 80111aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111ae:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80111b2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80111b6:	f107 0a01 	add.w	sl, r7, #1
 80111ba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80111be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80111c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80111c6:	9c02      	ldr	r4, [sp, #8]
 80111c8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80111cc:	f820 e004 	strh.w	lr, [r0, r4]
 80111d0:	e7aa      	b.n	8011128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80111d2:	f04f 0900 	mov.w	r9, #0
 80111d6:	eba3 0409 	sub.w	r4, r3, r9
 80111da:	2c00      	cmp	r4, #0
 80111dc:	f77f af4a 	ble.w	8011074 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80111e0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80111e4:	1414      	asrs	r4, r2, #16
 80111e6:	140d      	asrs	r5, r1, #16
 80111e8:	fb06 5504 	mla	r5, r6, r4, r5
 80111ec:	9c01      	ldr	r4, [sp, #4]
 80111ee:	5d64      	ldrb	r4, [r4, r5]
 80111f0:	2cff      	cmp	r4, #255	; 0xff
 80111f2:	d10b      	bne.n	801120c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80111f4:	9c00      	ldr	r4, [sp, #0]
 80111f6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80111fa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80111fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011200:	4421      	add	r1, r4
 8011202:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011204:	f109 0901 	add.w	r9, r9, #1
 8011208:	4422      	add	r2, r4
 801120a:	e7e4      	b.n	80111d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801120c:	2c00      	cmp	r4, #0
 801120e:	d0f6      	beq.n	80111fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011210:	9e00      	ldr	r6, [sp, #0]
 8011212:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8011216:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801121a:	b2a7      	uxth	r7, r4
 801121c:	122e      	asrs	r6, r5, #8
 801121e:	43e4      	mvns	r4, r4
 8011220:	b2e4      	uxtb	r4, r4
 8011222:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011226:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801122a:	fb16 f604 	smulbb	r6, r6, r4
 801122e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011232:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011236:	00ed      	lsls	r5, r5, #3
 8011238:	fb0c 6c07 	mla	ip, ip, r7, r6
 801123c:	b2ed      	uxtb	r5, r5
 801123e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011242:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011246:	fb15 f504 	smulbb	r5, r5, r4
 801124a:	fa5f fe8e 	uxtb.w	lr, lr
 801124e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011252:	fb0e 5507 	mla	r5, lr, r7, r5
 8011256:	fb1a fa04 	smulbb	sl, sl, r4
 801125a:	fa1f fc8c 	uxth.w	ip, ip
 801125e:	b2ad      	uxth	r5, r5
 8011260:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011264:	fb06 a607 	mla	r6, r6, r7, sl
 8011268:	f10c 0401 	add.w	r4, ip, #1
 801126c:	f105 0a01 	add.w	sl, r5, #1
 8011270:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011274:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011278:	b2b6      	uxth	r6, r6
 801127a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801127e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011282:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011286:	f106 0a01 	add.w	sl, r6, #1
 801128a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801128e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011292:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011296:	ea4c 0c0a 	orr.w	ip, ip, sl
 801129a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801129e:	e7ae      	b.n	80111fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80112a0:	b005      	add	sp, #20
 80112a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080112a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80112a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112aa:	b085      	sub	sp, #20
 80112ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80112ae:	9203      	str	r2, [sp, #12]
 80112b0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80112b4:	9201      	str	r2, [sp, #4]
 80112b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80112ba:	9100      	str	r1, [sp, #0]
 80112bc:	6841      	ldr	r1, [r0, #4]
 80112be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80112c2:	fb01 2404 	mla	r4, r1, r4, r2
 80112c6:	6802      	ldr	r2, [r0, #0]
 80112c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80112cc:	f8de 2000 	ldr.w	r2, [lr]
 80112d0:	9202      	str	r2, [sp, #8]
 80112d2:	9a01      	ldr	r2, [sp, #4]
 80112d4:	43d6      	mvns	r6, r2
 80112d6:	b2f6      	uxtb	r6, r6
 80112d8:	9a00      	ldr	r2, [sp, #0]
 80112da:	2a00      	cmp	r2, #0
 80112dc:	dc03      	bgt.n	80112e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80112de:	9a03      	ldr	r2, [sp, #12]
 80112e0:	2a00      	cmp	r2, #0
 80112e2:	f340 8124 	ble.w	801152e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80112e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80112e8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80112ec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80112f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80112f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80112f6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80112fa:	2b00      	cmp	r3, #0
 80112fc:	dd0e      	ble.n	801131c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80112fe:	1408      	asrs	r0, r1, #16
 8011300:	d405      	bmi.n	801130e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011302:	4560      	cmp	r0, ip
 8011304:	da03      	bge.n	801130e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011306:	1410      	asrs	r0, r2, #16
 8011308:	d401      	bmi.n	801130e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801130a:	42b8      	cmp	r0, r7
 801130c:	db07      	blt.n	801131e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801130e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011310:	4401      	add	r1, r0
 8011312:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011314:	3b01      	subs	r3, #1
 8011316:	4402      	add	r2, r0
 8011318:	3402      	adds	r4, #2
 801131a:	e7ee      	b.n	80112fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801131c:	d06e      	beq.n	80113fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801131e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011320:	1e58      	subs	r0, r3, #1
 8011322:	fb05 1500 	mla	r5, r5, r0, r1
 8011326:	142d      	asrs	r5, r5, #16
 8011328:	d45c      	bmi.n	80113e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801132a:	4565      	cmp	r5, ip
 801132c:	da5a      	bge.n	80113e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801132e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011330:	fb05 2000 	mla	r0, r5, r0, r2
 8011334:	1400      	asrs	r0, r0, #16
 8011336:	d455      	bmi.n	80113e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011338:	42b8      	cmp	r0, r7
 801133a:	da53      	bge.n	80113e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801133c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011340:	4699      	mov	r9, r3
 8011342:	46a2      	mov	sl, r4
 8011344:	f1b9 0f00 	cmp.w	r9, #0
 8011348:	dd54      	ble.n	80113f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801134a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801134e:	140d      	asrs	r5, r1, #16
 8011350:	1410      	asrs	r0, r2, #16
 8011352:	fb07 5000 	mla	r0, r7, r0, r5
 8011356:	9d02      	ldr	r5, [sp, #8]
 8011358:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801135c:	f8ba 5000 	ldrh.w	r5, [sl]
 8011360:	122f      	asrs	r7, r5, #8
 8011362:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011366:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801136a:	fb17 f706 	smulbb	r7, r7, r6
 801136e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011372:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011376:	00ed      	lsls	r5, r5, #3
 8011378:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801137c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011380:	10c7      	asrs	r7, r0, #3
 8011382:	b2ed      	uxtb	r5, r5
 8011384:	00c0      	lsls	r0, r0, #3
 8011386:	fb18 f806 	smulbb	r8, r8, r6
 801138a:	fb15 f506 	smulbb	r5, r5, r6
 801138e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011392:	b2c0      	uxtb	r0, r0
 8011394:	fa1f fc8c 	uxth.w	ip, ip
 8011398:	fb07 870b 	mla	r7, r7, fp, r8
 801139c:	fb00 500b 	mla	r0, r0, fp, r5
 80113a0:	b280      	uxth	r0, r0
 80113a2:	b2bf      	uxth	r7, r7
 80113a4:	f10c 0501 	add.w	r5, ip, #1
 80113a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80113ac:	f107 0801 	add.w	r8, r7, #1
 80113b0:	1c45      	adds	r5, r0, #1
 80113b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80113b6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80113ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80113bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80113c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80113c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80113c8:	ea45 0c0c 	orr.w	ip, r5, ip
 80113cc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80113d0:	4401      	add	r1, r0
 80113d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80113d4:	ea4c 0c08 	orr.w	ip, ip, r8
 80113d8:	f82a cb02 	strh.w	ip, [sl], #2
 80113dc:	4402      	add	r2, r0
 80113de:	f109 39ff 	add.w	r9, r9, #4294967295
 80113e2:	e7af      	b.n	8011344 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80113e4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80113e8:	f04f 0800 	mov.w	r8, #0
 80113ec:	eb03 0008 	add.w	r0, r3, r8
 80113f0:	2800      	cmp	r0, #0
 80113f2:	dc41      	bgt.n	8011478 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80113f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113fc:	9b00      	ldr	r3, [sp, #0]
 80113fe:	2b00      	cmp	r3, #0
 8011400:	f340 8095 	ble.w	801152e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011404:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011408:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801140c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011410:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011412:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011416:	ee31 1a05 	vadd.f32	s2, s2, s10
 801141a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801141e:	eef0 6a62 	vmov.f32	s13, s5
 8011422:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011426:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801142a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801142e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011432:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011436:	eef0 6a43 	vmov.f32	s13, s6
 801143a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801143e:	ee12 2a90 	vmov	r2, s5
 8011442:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011446:	fb92 f3f3 	sdiv	r3, r2, r3
 801144a:	ee13 2a10 	vmov	r2, s6
 801144e:	9311      	str	r3, [sp, #68]	; 0x44
 8011450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011452:	fb92 f3f3 	sdiv	r3, r2, r3
 8011456:	9312      	str	r3, [sp, #72]	; 0x48
 8011458:	9b00      	ldr	r3, [sp, #0]
 801145a:	9a03      	ldr	r2, [sp, #12]
 801145c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011460:	3b01      	subs	r3, #1
 8011462:	9300      	str	r3, [sp, #0]
 8011464:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011468:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801146a:	eeb0 3a67 	vmov.f32	s6, s15
 801146e:	bf08      	it	eq
 8011470:	4613      	moveq	r3, r2
 8011472:	eef0 2a47 	vmov.f32	s5, s14
 8011476:	e72f      	b.n	80112d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011478:	140f      	asrs	r7, r1, #16
 801147a:	d451      	bmi.n	8011520 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801147c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011480:	42bd      	cmp	r5, r7
 8011482:	dd4d      	ble.n	8011520 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011484:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011488:	d44a      	bmi.n	8011520 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801148a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801148e:	4560      	cmp	r0, ip
 8011490:	dd46      	ble.n	8011520 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011492:	b22d      	sxth	r5, r5
 8011494:	fb0c 7505 	mla	r5, ip, r5, r7
 8011498:	9802      	ldr	r0, [sp, #8]
 801149a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801149e:	f06f 0501 	mvn.w	r5, #1
 80114a2:	fb05 fb08 	mul.w	fp, r5, r8
 80114a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80114aa:	f834 500b 	ldrh.w	r5, [r4, fp]
 80114ae:	122f      	asrs	r7, r5, #8
 80114b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80114b4:	fb17 f706 	smulbb	r7, r7, r6
 80114b8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80114bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80114c0:	00ed      	lsls	r5, r5, #3
 80114c2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80114c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80114ca:	10c7      	asrs	r7, r0, #3
 80114cc:	b2ed      	uxtb	r5, r5
 80114ce:	00c0      	lsls	r0, r0, #3
 80114d0:	fb19 f906 	smulbb	r9, r9, r6
 80114d4:	fb15 f506 	smulbb	r5, r5, r6
 80114d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80114dc:	b2c0      	uxtb	r0, r0
 80114de:	fa1f fc8c 	uxth.w	ip, ip
 80114e2:	fb07 970a 	mla	r7, r7, sl, r9
 80114e6:	fb00 500a 	mla	r0, r0, sl, r5
 80114ea:	b2bf      	uxth	r7, r7
 80114ec:	b280      	uxth	r0, r0
 80114ee:	f10c 0501 	add.w	r5, ip, #1
 80114f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80114f6:	f107 0901 	add.w	r9, r7, #1
 80114fa:	1c45      	adds	r5, r0, #1
 80114fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011500:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011504:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011508:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801150c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011510:	ea45 0c0c 	orr.w	ip, r5, ip
 8011514:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011518:	ea4c 0c09 	orr.w	ip, ip, r9
 801151c:	f824 c00b 	strh.w	ip, [r4, fp]
 8011520:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011522:	4401      	add	r1, r0
 8011524:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011526:	f108 38ff 	add.w	r8, r8, #4294967295
 801152a:	4402      	add	r2, r0
 801152c:	e75e      	b.n	80113ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801152e:	b005      	add	sp, #20
 8011530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011538:	b085      	sub	sp, #20
 801153a:	4693      	mov	fp, r2
 801153c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801153e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011540:	6870      	ldr	r0, [r6, #4]
 8011542:	9101      	str	r1, [sp, #4]
 8011544:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011548:	fb00 2404 	mla	r4, r0, r4, r2
 801154c:	6832      	ldr	r2, [r6, #0]
 801154e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011552:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011556:	682a      	ldr	r2, [r5, #0]
 8011558:	9202      	str	r2, [sp, #8]
 801155a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801155e:	9a01      	ldr	r2, [sp, #4]
 8011560:	2a00      	cmp	r2, #0
 8011562:	dc03      	bgt.n	801156c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011564:	f1bb 0f00 	cmp.w	fp, #0
 8011568:	f340 809a 	ble.w	80116a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801156c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801156e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011572:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011576:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801157a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801157c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011580:	2b00      	cmp	r3, #0
 8011582:	dd0c      	ble.n	801159e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011584:	1406      	asrs	r6, r0, #16
 8011586:	d405      	bmi.n	8011594 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011588:	454e      	cmp	r6, r9
 801158a:	da03      	bge.n	8011594 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801158c:	1416      	asrs	r6, r2, #16
 801158e:	d401      	bmi.n	8011594 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011590:	4546      	cmp	r6, r8
 8011592:	db05      	blt.n	80115a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011594:	4470      	add	r0, lr
 8011596:	4462      	add	r2, ip
 8011598:	3b01      	subs	r3, #1
 801159a:	3402      	adds	r4, #2
 801159c:	e7f0      	b.n	8011580 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801159e:	d00f      	beq.n	80115c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80115a0:	1e5e      	subs	r6, r3, #1
 80115a2:	fb0e 0706 	mla	r7, lr, r6, r0
 80115a6:	143f      	asrs	r7, r7, #16
 80115a8:	d541      	bpl.n	801162e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80115aa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80115ae:	4698      	mov	r8, r3
 80115b0:	9603      	str	r6, [sp, #12]
 80115b2:	f1b8 0f00 	cmp.w	r8, #0
 80115b6:	dc56      	bgt.n	8011666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80115b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80115c0:	9b01      	ldr	r3, [sp, #4]
 80115c2:	2b00      	cmp	r3, #0
 80115c4:	dd6c      	ble.n	80116a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80115c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80115dc:	eeb0 6a62 	vmov.f32	s12, s5
 80115e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80115e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80115ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80115f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80115f4:	eeb0 6a43 	vmov.f32	s12, s6
 80115f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80115fc:	ee12 2a90 	vmov	r2, s5
 8011600:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011604:	fb92 fef3 	sdiv	lr, r2, r3
 8011608:	ee13 2a10 	vmov	r2, s6
 801160c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011610:	9b01      	ldr	r3, [sp, #4]
 8011612:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011616:	3b01      	subs	r3, #1
 8011618:	9301      	str	r3, [sp, #4]
 801161a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801161e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011620:	eeb0 3a67 	vmov.f32	s6, s15
 8011624:	bf08      	it	eq
 8011626:	465b      	moveq	r3, fp
 8011628:	eef0 2a47 	vmov.f32	s5, s14
 801162c:	e797      	b.n	801155e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801162e:	454f      	cmp	r7, r9
 8011630:	dabb      	bge.n	80115aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011632:	fb0c 2606 	mla	r6, ip, r6, r2
 8011636:	1436      	asrs	r6, r6, #16
 8011638:	d4b7      	bmi.n	80115aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801163a:	4546      	cmp	r6, r8
 801163c:	dab5      	bge.n	80115aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801163e:	461e      	mov	r6, r3
 8011640:	46a0      	mov	r8, r4
 8011642:	2e00      	cmp	r6, #0
 8011644:	ddb8      	ble.n	80115b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011646:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801164a:	9902      	ldr	r1, [sp, #8]
 801164c:	1417      	asrs	r7, r2, #16
 801164e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011652:	fb0a 9707 	mla	r7, sl, r7, r9
 8011656:	4470      	add	r0, lr
 8011658:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801165c:	f828 7b02 	strh.w	r7, [r8], #2
 8011660:	4462      	add	r2, ip
 8011662:	3e01      	subs	r6, #1
 8011664:	e7ed      	b.n	8011642 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011666:	ea5f 4920 	movs.w	r9, r0, asr #16
 801166a:	d414      	bmi.n	8011696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801166c:	68ae      	ldr	r6, [r5, #8]
 801166e:	454e      	cmp	r6, r9
 8011670:	dd11      	ble.n	8011696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011672:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011676:	d40e      	bmi.n	8011696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011678:	68ef      	ldr	r7, [r5, #12]
 801167a:	4557      	cmp	r7, sl
 801167c:	dd0b      	ble.n	8011696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801167e:	b236      	sxth	r6, r6
 8011680:	fb0a 9606 	mla	r6, sl, r6, r9
 8011684:	9f02      	ldr	r7, [sp, #8]
 8011686:	f06f 0101 	mvn.w	r1, #1
 801168a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801168e:	fb01 f608 	mul.w	r6, r1, r8
 8011692:	9903      	ldr	r1, [sp, #12]
 8011694:	538f      	strh	r7, [r1, r6]
 8011696:	4470      	add	r0, lr
 8011698:	4462      	add	r2, ip
 801169a:	f108 38ff 	add.w	r8, r8, #4294967295
 801169e:	e788      	b.n	80115b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80116a0:	b005      	add	sp, #20
 80116a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80116a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116aa:	b087      	sub	sp, #28
 80116ac:	468b      	mov	fp, r1
 80116ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 80116b0:	9203      	str	r2, [sp, #12]
 80116b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80116b6:	9204      	str	r2, [sp, #16]
 80116b8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80116bc:	6841      	ldr	r1, [r0, #4]
 80116be:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80116c2:	fb01 2505 	mla	r5, r1, r5, r2
 80116c6:	6802      	ldr	r2, [r0, #0]
 80116c8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80116cc:	f8d9 2000 	ldr.w	r2, [r9]
 80116d0:	9201      	str	r2, [sp, #4]
 80116d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116d6:	f1bb 0f00 	cmp.w	fp, #0
 80116da:	dc03      	bgt.n	80116e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80116dc:	9a03      	ldr	r2, [sp, #12]
 80116de:	2a00      	cmp	r2, #0
 80116e0:	f340 8159 	ble.w	8011996 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80116e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80116e6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80116ea:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80116ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80116f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80116f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80116f8:	2b00      	cmp	r3, #0
 80116fa:	dd0e      	ble.n	801171a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80116fc:	1402      	asrs	r2, r0, #16
 80116fe:	d405      	bmi.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011700:	42ba      	cmp	r2, r7
 8011702:	da03      	bge.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011704:	140a      	asrs	r2, r1, #16
 8011706:	d401      	bmi.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011708:	42b2      	cmp	r2, r6
 801170a:	db07      	blt.n	801171c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801170c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801170e:	4410      	add	r0, r2
 8011710:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011712:	3b01      	subs	r3, #1
 8011714:	4411      	add	r1, r2
 8011716:	3502      	adds	r5, #2
 8011718:	e7ee      	b.n	80116f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801171a:	d017      	beq.n	801174c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801171c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801171e:	1e5a      	subs	r2, r3, #1
 8011720:	fb04 0402 	mla	r4, r4, r2, r0
 8011724:	1424      	asrs	r4, r4, #16
 8011726:	d409      	bmi.n	801173c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011728:	42bc      	cmp	r4, r7
 801172a:	da07      	bge.n	801173c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801172c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801172e:	fb04 1202 	mla	r2, r4, r2, r1
 8011732:	1412      	asrs	r2, r2, #16
 8011734:	d402      	bmi.n	801173c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011736:	42b2      	cmp	r2, r6
 8011738:	f2c0 80bf 	blt.w	80118ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801173c:	2700      	movs	r7, #0
 801173e:	19da      	adds	r2, r3, r7
 8011740:	2a00      	cmp	r2, #0
 8011742:	dc3e      	bgt.n	80117c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011744:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011748:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801174c:	f1bb 0f00 	cmp.w	fp, #0
 8011750:	f340 8121 	ble.w	8011996 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011754:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011758:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801175c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011760:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011762:	f1bb 0b01 	subs.w	fp, fp, #1
 8011766:	ee31 1a05 	vadd.f32	s2, s2, s10
 801176a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801176e:	eeb0 6a62 	vmov.f32	s12, s5
 8011772:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011776:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801177a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801177e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011782:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011786:	eeb0 6a43 	vmov.f32	s12, s6
 801178a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801178e:	ee12 2a90 	vmov	r2, s5
 8011792:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011796:	fb92 f3f3 	sdiv	r3, r2, r3
 801179a:	ee13 2a10 	vmov	r2, s6
 801179e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80117a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80117aa:	9a03      	ldr	r2, [sp, #12]
 80117ac:	9314      	str	r3, [sp, #80]	; 0x50
 80117ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80117b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117b4:	eeb0 3a67 	vmov.f32	s6, s15
 80117b8:	bf08      	it	eq
 80117ba:	4613      	moveq	r3, r2
 80117bc:	eef0 2a47 	vmov.f32	s5, s14
 80117c0:	e789      	b.n	80116d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80117c2:	1406      	asrs	r6, r0, #16
 80117c4:	d42d      	bmi.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117c6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80117ca:	42b4      	cmp	r4, r6
 80117cc:	dd29      	ble.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117ce:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80117d2:	d426      	bmi.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117d4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80117d8:	4562      	cmp	r2, ip
 80117da:	dd22      	ble.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117dc:	b224      	sxth	r4, r4
 80117de:	9a01      	ldr	r2, [sp, #4]
 80117e0:	fb0c 6404 	mla	r4, ip, r4, r6
 80117e4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80117e8:	0e22      	lsrs	r2, r4, #24
 80117ea:	d01a      	beq.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117ec:	9e04      	ldr	r6, [sp, #16]
 80117ee:	4372      	muls	r2, r6
 80117f0:	1c56      	adds	r6, r2, #1
 80117f2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80117f6:	1212      	asrs	r2, r2, #8
 80117f8:	0a26      	lsrs	r6, r4, #8
 80117fa:	2aff      	cmp	r2, #255	; 0xff
 80117fc:	9605      	str	r6, [sp, #20]
 80117fe:	d116      	bne.n	801182e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011800:	f06f 0201 	mvn.w	r2, #1
 8011804:	fb02 fc07 	mul.w	ip, r2, r7
 8011808:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801180c:	0962      	lsrs	r2, r4, #5
 801180e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011812:	f026 0607 	bic.w	r6, r6, #7
 8011816:	4316      	orrs	r6, r2
 8011818:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801181c:	4326      	orrs	r6, r4
 801181e:	f825 600c 	strh.w	r6, [r5, ip]
 8011822:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011824:	4410      	add	r0, r2
 8011826:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011828:	3f01      	subs	r7, #1
 801182a:	4411      	add	r1, r2
 801182c:	e787      	b.n	801173e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801182e:	f06f 0601 	mvn.w	r6, #1
 8011832:	437e      	muls	r6, r7
 8011834:	fa1f fa82 	uxth.w	sl, r2
 8011838:	f835 8006 	ldrh.w	r8, [r5, r6]
 801183c:	9602      	str	r6, [sp, #8]
 801183e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011842:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011846:	43d2      	mvns	r2, r2
 8011848:	b2d2      	uxtb	r2, r2
 801184a:	fb1c fc0a 	smulbb	ip, ip, sl
 801184e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011852:	fb0e ce02 	mla	lr, lr, r2, ip
 8011856:	b2e4      	uxtb	r4, r4
 8011858:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801185c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011860:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011864:	fa5f f888 	uxtb.w	r8, r8
 8011868:	fb14 f40a 	smulbb	r4, r4, sl
 801186c:	fb08 4402 	mla	r4, r8, r2, r4
 8011870:	fa1f fe8e 	uxth.w	lr, lr
 8011874:	fb16 f60a 	smulbb	r6, r6, sl
 8011878:	b2a4      	uxth	r4, r4
 801187a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801187e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011882:	f10e 0201 	add.w	r2, lr, #1
 8011886:	1c66      	adds	r6, r4, #1
 8011888:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801188c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011890:	fa1f fc8c 	uxth.w	ip, ip
 8011894:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011898:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801189c:	ea46 0e0e 	orr.w	lr, r6, lr
 80118a0:	f10c 0601 	add.w	r6, ip, #1
 80118a4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80118a8:	0976      	lsrs	r6, r6, #5
 80118aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80118ae:	9a02      	ldr	r2, [sp, #8]
 80118b0:	ea4e 0e06 	orr.w	lr, lr, r6
 80118b4:	f825 e002 	strh.w	lr, [r5, r2]
 80118b8:	e7b3      	b.n	8011822 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80118ba:	f04f 0800 	mov.w	r8, #0
 80118be:	eba3 0208 	sub.w	r2, r3, r8
 80118c2:	2a00      	cmp	r2, #0
 80118c4:	f77f af3e 	ble.w	8011744 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80118c8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80118cc:	1404      	asrs	r4, r0, #16
 80118ce:	140a      	asrs	r2, r1, #16
 80118d0:	fb06 4202 	mla	r2, r6, r2, r4
 80118d4:	9c01      	ldr	r4, [sp, #4]
 80118d6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80118da:	0e22      	lsrs	r2, r4, #24
 80118dc:	d016      	beq.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80118de:	9e04      	ldr	r6, [sp, #16]
 80118e0:	4372      	muls	r2, r6
 80118e2:	1c56      	adds	r6, r2, #1
 80118e4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80118e8:	1212      	asrs	r2, r2, #8
 80118ea:	2aff      	cmp	r2, #255	; 0xff
 80118ec:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80118f0:	d113      	bne.n	801191a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80118f2:	0962      	lsrs	r2, r4, #5
 80118f4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80118f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80118fc:	f026 0607 	bic.w	r6, r6, #7
 8011900:	4316      	orrs	r6, r2
 8011902:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011906:	4326      	orrs	r6, r4
 8011908:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801190c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801190e:	4410      	add	r0, r2
 8011910:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011912:	f108 0801 	add.w	r8, r8, #1
 8011916:	4411      	add	r1, r2
 8011918:	e7d1      	b.n	80118be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801191a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801191e:	fa1f fa82 	uxth.w	sl, r2
 8011922:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011926:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801192a:	43d2      	mvns	r2, r2
 801192c:	b2d2      	uxtb	r2, r2
 801192e:	fb17 f70a 	smulbb	r7, r7, sl
 8011932:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011936:	fb0c 7c02 	mla	ip, ip, r2, r7
 801193a:	b2e4      	uxtb	r4, r4
 801193c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011940:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011944:	fa5f fe8e 	uxtb.w	lr, lr
 8011948:	fb14 f40a 	smulbb	r4, r4, sl
 801194c:	fb0e 4402 	mla	r4, lr, r2, r4
 8011950:	b2f6      	uxtb	r6, r6
 8011952:	fa1f fc8c 	uxth.w	ip, ip
 8011956:	fb16 f60a 	smulbb	r6, r6, sl
 801195a:	b2a4      	uxth	r4, r4
 801195c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011960:	fb07 6702 	mla	r7, r7, r2, r6
 8011964:	f10c 0201 	add.w	r2, ip, #1
 8011968:	1c66      	adds	r6, r4, #1
 801196a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801196e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011972:	b2bf      	uxth	r7, r7
 8011974:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011978:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801197c:	ea46 0c0c 	orr.w	ip, r6, ip
 8011980:	1c7e      	adds	r6, r7, #1
 8011982:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011986:	0976      	lsrs	r6, r6, #5
 8011988:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801198c:	ea4c 0c06 	orr.w	ip, ip, r6
 8011990:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011994:	e7ba      	b.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011996:	b007      	add	sp, #28
 8011998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801199c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801199c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119a0:	b085      	sub	sp, #20
 80119a2:	468b      	mov	fp, r1
 80119a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80119a6:	9203      	str	r2, [sp, #12]
 80119a8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80119ac:	6841      	ldr	r1, [r0, #4]
 80119ae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80119b2:	fb01 2404 	mla	r4, r1, r4, r2
 80119b6:	6802      	ldr	r2, [r0, #0]
 80119b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80119bc:	f8d8 2000 	ldr.w	r2, [r8]
 80119c0:	9201      	str	r2, [sp, #4]
 80119c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80119c6:	f1bb 0f00 	cmp.w	fp, #0
 80119ca:	dc03      	bgt.n	80119d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80119cc:	9a03      	ldr	r2, [sp, #12]
 80119ce:	2a00      	cmp	r2, #0
 80119d0:	f340 814f 	ble.w	8011c72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80119d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80119d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80119da:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80119de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80119e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80119e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80119e8:	2b00      	cmp	r3, #0
 80119ea:	dd0e      	ble.n	8011a0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80119ec:	1408      	asrs	r0, r1, #16
 80119ee:	d405      	bmi.n	80119fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80119f0:	42b8      	cmp	r0, r7
 80119f2:	da03      	bge.n	80119fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80119f4:	1410      	asrs	r0, r2, #16
 80119f6:	d401      	bmi.n	80119fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80119f8:	42b0      	cmp	r0, r6
 80119fa:	db07      	blt.n	8011a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80119fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80119fe:	4401      	add	r1, r0
 8011a00:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011a02:	3b01      	subs	r3, #1
 8011a04:	4402      	add	r2, r0
 8011a06:	3402      	adds	r4, #2
 8011a08:	e7ee      	b.n	80119e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011a0a:	d017      	beq.n	8011a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011a0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011a0e:	1e58      	subs	r0, r3, #1
 8011a10:	fb05 1500 	mla	r5, r5, r0, r1
 8011a14:	142d      	asrs	r5, r5, #16
 8011a16:	d409      	bmi.n	8011a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a18:	42bd      	cmp	r5, r7
 8011a1a:	da07      	bge.n	8011a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a1c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011a1e:	fb05 2000 	mla	r0, r5, r0, r2
 8011a22:	1400      	asrs	r0, r0, #16
 8011a24:	d402      	bmi.n	8011a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a26:	42b0      	cmp	r0, r6
 8011a28:	f2c0 80ba 	blt.w	8011ba0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011a2c:	2600      	movs	r6, #0
 8011a2e:	1998      	adds	r0, r3, r6
 8011a30:	2800      	cmp	r0, #0
 8011a32:	dc3e      	bgt.n	8011ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011a34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a3c:	f1bb 0f00 	cmp.w	fp, #0
 8011a40:	f340 8117 	ble.w	8011c72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a52:	f1bb 0b01 	subs.w	fp, fp, #1
 8011a56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a5e:	eeb0 6a62 	vmov.f32	s12, s5
 8011a62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a6e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011a72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a76:	eeb0 6a43 	vmov.f32	s12, s6
 8011a7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a7e:	ee12 2a90 	vmov	r2, s5
 8011a82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a86:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a8a:	ee13 2a10 	vmov	r2, s6
 8011a8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a92:	9311      	str	r3, [sp, #68]	; 0x44
 8011a94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a9a:	9a03      	ldr	r2, [sp, #12]
 8011a9c:	9312      	str	r3, [sp, #72]	; 0x48
 8011a9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011aa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011aa4:	eeb0 3a67 	vmov.f32	s6, s15
 8011aa8:	bf08      	it	eq
 8011aaa:	4613      	moveq	r3, r2
 8011aac:	eef0 2a47 	vmov.f32	s5, s14
 8011ab0:	e789      	b.n	80119c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011ab2:	140f      	asrs	r7, r1, #16
 8011ab4:	d424      	bmi.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011ab6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011aba:	42bd      	cmp	r5, r7
 8011abc:	dd20      	ble.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011abe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011ac2:	d41d      	bmi.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011ac4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011ac8:	4560      	cmp	r0, ip
 8011aca:	dd19      	ble.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011acc:	b22d      	sxth	r5, r5
 8011ace:	fb0c 7505 	mla	r5, ip, r5, r7
 8011ad2:	9801      	ldr	r0, [sp, #4]
 8011ad4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011ad8:	0e07      	lsrs	r7, r0, #24
 8011ada:	2fff      	cmp	r7, #255	; 0xff
 8011adc:	d116      	bne.n	8011b0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011ade:	f06f 0501 	mvn.w	r5, #1
 8011ae2:	fb05 f706 	mul.w	r7, r5, r6
 8011ae6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011aea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011aee:	0945      	lsrs	r5, r0, #5
 8011af0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011af4:	ea4c 0505 	orr.w	r5, ip, r5
 8011af8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011afc:	4305      	orrs	r5, r0
 8011afe:	53e5      	strh	r5, [r4, r7]
 8011b00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b02:	4401      	add	r1, r0
 8011b04:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b06:	3e01      	subs	r6, #1
 8011b08:	4402      	add	r2, r0
 8011b0a:	e790      	b.n	8011a2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b0c:	b2fd      	uxtb	r5, r7
 8011b0e:	2f00      	cmp	r7, #0
 8011b10:	d0f6      	beq.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b12:	f06f 0701 	mvn.w	r7, #1
 8011b16:	4377      	muls	r7, r6
 8011b18:	fa1f f985 	uxth.w	r9, r5
 8011b1c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011b20:	9702      	str	r7, [sp, #8]
 8011b22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011b2a:	43ed      	mvns	r5, r5
 8011b2c:	b2ed      	uxtb	r5, r5
 8011b2e:	fb17 f709 	smulbb	r7, r7, r9
 8011b32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b36:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011b3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011b3e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011b42:	b2c0      	uxtb	r0, r0
 8011b44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b48:	fa5f fe8e 	uxtb.w	lr, lr
 8011b4c:	fb10 f009 	smulbb	r0, r0, r9
 8011b50:	fb0e 0005 	mla	r0, lr, r5, r0
 8011b54:	b280      	uxth	r0, r0
 8011b56:	fa1f fc8c 	uxth.w	ip, ip
 8011b5a:	fb1a fa09 	smulbb	sl, sl, r9
 8011b5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011b62:	fb07 a705 	mla	r7, r7, r5, sl
 8011b66:	f100 0a01 	add.w	sl, r0, #1
 8011b6a:	f10c 0501 	add.w	r5, ip, #1
 8011b6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011b72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011b76:	b2bf      	uxth	r7, r7
 8011b78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011b7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011b80:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011b84:	f107 0a01 	add.w	sl, r7, #1
 8011b88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011b8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b94:	9802      	ldr	r0, [sp, #8]
 8011b96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011b9a:	f824 c000 	strh.w	ip, [r4, r0]
 8011b9e:	e7af      	b.n	8011b00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011ba0:	f04f 0e00 	mov.w	lr, #0
 8011ba4:	eba3 000e 	sub.w	r0, r3, lr
 8011ba8:	2800      	cmp	r0, #0
 8011baa:	f77f af43 	ble.w	8011a34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011bae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011bb2:	140d      	asrs	r5, r1, #16
 8011bb4:	1410      	asrs	r0, r2, #16
 8011bb6:	fb06 5000 	mla	r0, r6, r0, r5
 8011bba:	9d01      	ldr	r5, [sp, #4]
 8011bbc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011bc0:	0e2e      	lsrs	r6, r5, #24
 8011bc2:	2eff      	cmp	r6, #255	; 0xff
 8011bc4:	d112      	bne.n	8011bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011bc6:	482c      	ldr	r0, [pc, #176]	; (8011c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011bc8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011bcc:	0968      	lsrs	r0, r5, #5
 8011bce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011bd2:	4330      	orrs	r0, r6
 8011bd4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011bd8:	4328      	orrs	r0, r5
 8011bda:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011bde:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011be0:	4401      	add	r1, r0
 8011be2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011be4:	f10e 0e01 	add.w	lr, lr, #1
 8011be8:	4402      	add	r2, r0
 8011bea:	e7db      	b.n	8011ba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011bec:	b2f0      	uxtb	r0, r6
 8011bee:	2e00      	cmp	r6, #0
 8011bf0:	d0f5      	beq.n	8011bde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011bf2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011bf6:	fa1f f980 	uxth.w	r9, r0
 8011bfa:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011bfe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011c02:	43c0      	mvns	r0, r0
 8011c04:	b2c0      	uxtb	r0, r0
 8011c06:	fb16 f609 	smulbb	r6, r6, r9
 8011c0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c0e:	fb07 6700 	mla	r7, r7, r0, r6
 8011c12:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011c16:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011c1a:	b2ed      	uxtb	r5, r5
 8011c1c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011c20:	fa5f fc8c 	uxtb.w	ip, ip
 8011c24:	fb15 f509 	smulbb	r5, r5, r9
 8011c28:	fb0c 5500 	mla	r5, ip, r0, r5
 8011c2c:	b2bf      	uxth	r7, r7
 8011c2e:	fb1a fa09 	smulbb	sl, sl, r9
 8011c32:	b2ad      	uxth	r5, r5
 8011c34:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c38:	fb06 a600 	mla	r6, r6, r0, sl
 8011c3c:	1c78      	adds	r0, r7, #1
 8011c3e:	f105 0a01 	add.w	sl, r5, #1
 8011c42:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011c46:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011c4a:	b2b6      	uxth	r6, r6
 8011c4c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c50:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011c54:	ea4a 0707 	orr.w	r7, sl, r7
 8011c58:	f106 0a01 	add.w	sl, r6, #1
 8011c5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011c60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c68:	ea47 070a 	orr.w	r7, r7, sl
 8011c6c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011c70:	e7b5      	b.n	8011bde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011c72:	b005      	add	sp, #20
 8011c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c78:	fffff800 	.word	0xfffff800

08011c7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c80:	b087      	sub	sp, #28
 8011c82:	468b      	mov	fp, r1
 8011c84:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c86:	9203      	str	r2, [sp, #12]
 8011c88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011c8c:	9204      	str	r2, [sp, #16]
 8011c8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c92:	6841      	ldr	r1, [r0, #4]
 8011c94:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011c98:	fb01 2404 	mla	r4, r1, r4, r2
 8011c9c:	6802      	ldr	r2, [r0, #0]
 8011c9e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011ca2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011ca6:	3201      	adds	r2, #1
 8011ca8:	f022 0201 	bic.w	r2, r2, #1
 8011cac:	9200      	str	r2, [sp, #0]
 8011cae:	f8d9 2000 	ldr.w	r2, [r9]
 8011cb2:	9201      	str	r2, [sp, #4]
 8011cb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011cb8:	f1bb 0f00 	cmp.w	fp, #0
 8011cbc:	dc03      	bgt.n	8011cc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011cbe:	9a03      	ldr	r2, [sp, #12]
 8011cc0:	2a00      	cmp	r2, #0
 8011cc2:	f340 8169 	ble.w	8011f98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011cc6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011cc8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011ccc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011cd0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011cd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011cd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011cda:	2b00      	cmp	r3, #0
 8011cdc:	dd0e      	ble.n	8011cfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011cde:	1402      	asrs	r2, r0, #16
 8011ce0:	d405      	bmi.n	8011cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011ce2:	42ba      	cmp	r2, r7
 8011ce4:	da03      	bge.n	8011cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011ce6:	140a      	asrs	r2, r1, #16
 8011ce8:	d401      	bmi.n	8011cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011cea:	42b2      	cmp	r2, r6
 8011cec:	db07      	blt.n	8011cfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011cee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011cf0:	4410      	add	r0, r2
 8011cf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011cf4:	3b01      	subs	r3, #1
 8011cf6:	4411      	add	r1, r2
 8011cf8:	3402      	adds	r4, #2
 8011cfa:	e7ee      	b.n	8011cda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011cfc:	d017      	beq.n	8011d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011cfe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d00:	1e5a      	subs	r2, r3, #1
 8011d02:	fb05 0502 	mla	r5, r5, r2, r0
 8011d06:	142d      	asrs	r5, r5, #16
 8011d08:	d409      	bmi.n	8011d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d0a:	42bd      	cmp	r5, r7
 8011d0c:	da07      	bge.n	8011d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d10:	fb05 1202 	mla	r2, r5, r2, r1
 8011d14:	1412      	asrs	r2, r2, #16
 8011d16:	d402      	bmi.n	8011d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d18:	42b2      	cmp	r2, r6
 8011d1a:	f2c0 80c7 	blt.w	8011eac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011d1e:	2700      	movs	r7, #0
 8011d20:	19da      	adds	r2, r3, r7
 8011d22:	2a00      	cmp	r2, #0
 8011d24:	dc3e      	bgt.n	8011da4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011d26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d2e:	f1bb 0f00 	cmp.w	fp, #0
 8011d32:	f340 8131 	ble.w	8011f98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011d36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d44:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d50:	eeb0 6a62 	vmov.f32	s12, s5
 8011d54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d60:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d68:	eeb0 6a43 	vmov.f32	s12, s6
 8011d6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d70:	ee12 2a90 	vmov	r2, s5
 8011d74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d78:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d7c:	ee13 2a10 	vmov	r2, s6
 8011d80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d84:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d88:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d8c:	9a03      	ldr	r2, [sp, #12]
 8011d8e:	9314      	str	r3, [sp, #80]	; 0x50
 8011d90:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d96:	eeb0 3a67 	vmov.f32	s6, s15
 8011d9a:	bf08      	it	eq
 8011d9c:	4613      	moveq	r3, r2
 8011d9e:	eef0 2a47 	vmov.f32	s5, s14
 8011da2:	e789      	b.n	8011cb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011da4:	1405      	asrs	r5, r0, #16
 8011da6:	d435      	bmi.n	8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011da8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011dac:	42aa      	cmp	r2, r5
 8011dae:	dd31      	ble.n	8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011db0:	140e      	asrs	r6, r1, #16
 8011db2:	d42f      	bmi.n	8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011db4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011db8:	42b2      	cmp	r2, r6
 8011dba:	dd2b      	ble.n	8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011dbc:	9a00      	ldr	r2, [sp, #0]
 8011dbe:	fb06 5502 	mla	r5, r6, r2, r5
 8011dc2:	086a      	lsrs	r2, r5, #1
 8011dc4:	9e01      	ldr	r6, [sp, #4]
 8011dc6:	5cb2      	ldrb	r2, [r6, r2]
 8011dc8:	07ee      	lsls	r6, r5, #31
 8011dca:	bf54      	ite	pl
 8011dcc:	f002 020f 	andpl.w	r2, r2, #15
 8011dd0:	1112      	asrmi	r2, r2, #4
 8011dd2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011dd6:	b2d2      	uxtb	r2, r2
 8011dd8:	b1e2      	cbz	r2, 8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011dda:	9d04      	ldr	r5, [sp, #16]
 8011ddc:	436a      	muls	r2, r5
 8011dde:	1c55      	adds	r5, r2, #1
 8011de0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011de4:	4d6e      	ldr	r5, [pc, #440]	; (8011fa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011de6:	682d      	ldr	r5, [r5, #0]
 8011de8:	1212      	asrs	r2, r2, #8
 8011dea:	0a2e      	lsrs	r6, r5, #8
 8011dec:	2aff      	cmp	r2, #255	; 0xff
 8011dee:	9605      	str	r6, [sp, #20]
 8011df0:	d116      	bne.n	8011e20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011df2:	f06f 0201 	mvn.w	r2, #1
 8011df6:	fb02 fc07 	mul.w	ip, r2, r7
 8011dfa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011dfe:	096a      	lsrs	r2, r5, #5
 8011e00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011e04:	f026 0607 	bic.w	r6, r6, #7
 8011e08:	4316      	orrs	r6, r2
 8011e0a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e0e:	432e      	orrs	r6, r5
 8011e10:	f824 600c 	strh.w	r6, [r4, ip]
 8011e14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e16:	4410      	add	r0, r2
 8011e18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e1a:	3f01      	subs	r7, #1
 8011e1c:	4411      	add	r1, r2
 8011e1e:	e77f      	b.n	8011d20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011e20:	f06f 0601 	mvn.w	r6, #1
 8011e24:	437e      	muls	r6, r7
 8011e26:	fa1f fa82 	uxth.w	sl, r2
 8011e2a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011e2e:	9602      	str	r6, [sp, #8]
 8011e30:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011e34:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011e38:	43d2      	mvns	r2, r2
 8011e3a:	b2d2      	uxtb	r2, r2
 8011e3c:	fb1c fc0a 	smulbb	ip, ip, sl
 8011e40:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011e44:	fb0e ce02 	mla	lr, lr, r2, ip
 8011e48:	b2ed      	uxtb	r5, r5
 8011e4a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011e4e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011e52:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011e56:	fa5f f888 	uxtb.w	r8, r8
 8011e5a:	fb15 f50a 	smulbb	r5, r5, sl
 8011e5e:	fb08 5502 	mla	r5, r8, r2, r5
 8011e62:	fa1f fe8e 	uxth.w	lr, lr
 8011e66:	fb16 f60a 	smulbb	r6, r6, sl
 8011e6a:	b2ad      	uxth	r5, r5
 8011e6c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011e70:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011e74:	f10e 0201 	add.w	r2, lr, #1
 8011e78:	1c6e      	adds	r6, r5, #1
 8011e7a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011e7e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011e82:	fa1f fc8c 	uxth.w	ip, ip
 8011e86:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011e8a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011e8e:	ea46 0e0e 	orr.w	lr, r6, lr
 8011e92:	f10c 0601 	add.w	r6, ip, #1
 8011e96:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011e9a:	0976      	lsrs	r6, r6, #5
 8011e9c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011ea0:	9a02      	ldr	r2, [sp, #8]
 8011ea2:	ea4e 0e06 	orr.w	lr, lr, r6
 8011ea6:	f824 e002 	strh.w	lr, [r4, r2]
 8011eaa:	e7b3      	b.n	8011e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011eac:	f04f 0800 	mov.w	r8, #0
 8011eb0:	eba3 0208 	sub.w	r2, r3, r8
 8011eb4:	2a00      	cmp	r2, #0
 8011eb6:	f77f af36 	ble.w	8011d26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011eba:	9e00      	ldr	r6, [sp, #0]
 8011ebc:	1402      	asrs	r2, r0, #16
 8011ebe:	140d      	asrs	r5, r1, #16
 8011ec0:	fb06 2505 	mla	r5, r6, r5, r2
 8011ec4:	086a      	lsrs	r2, r5, #1
 8011ec6:	9e01      	ldr	r6, [sp, #4]
 8011ec8:	5cb2      	ldrb	r2, [r6, r2]
 8011eca:	07ed      	lsls	r5, r5, #31
 8011ecc:	bf54      	ite	pl
 8011ece:	f002 020f 	andpl.w	r2, r2, #15
 8011ed2:	1112      	asrmi	r2, r2, #4
 8011ed4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011ed8:	b2d2      	uxtb	r2, r2
 8011eda:	b1c2      	cbz	r2, 8011f0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011edc:	9d04      	ldr	r5, [sp, #16]
 8011ede:	436a      	muls	r2, r5
 8011ee0:	1c55      	adds	r5, r2, #1
 8011ee2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011ee6:	4d2e      	ldr	r5, [pc, #184]	; (8011fa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011ee8:	1212      	asrs	r2, r2, #8
 8011eea:	682e      	ldr	r6, [r5, #0]
 8011eec:	2aff      	cmp	r2, #255	; 0xff
 8011eee:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011ef2:	d113      	bne.n	8011f1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011ef4:	0972      	lsrs	r2, r6, #5
 8011ef6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8011efa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011efe:	f025 0507 	bic.w	r5, r5, #7
 8011f02:	4315      	orrs	r5, r2
 8011f04:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011f08:	4335      	orrs	r5, r6
 8011f0a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011f0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f10:	4410      	add	r0, r2
 8011f12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f14:	f108 0801 	add.w	r8, r8, #1
 8011f18:	4411      	add	r1, r2
 8011f1a:	e7c9      	b.n	8011eb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011f1c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011f20:	fa1f fa82 	uxth.w	sl, r2
 8011f24:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011f28:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011f2c:	43d2      	mvns	r2, r2
 8011f2e:	b2d2      	uxtb	r2, r2
 8011f30:	fb17 f70a 	smulbb	r7, r7, sl
 8011f34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011f38:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011f3c:	b2f6      	uxtb	r6, r6
 8011f3e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011f42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f46:	fa5f fe8e 	uxtb.w	lr, lr
 8011f4a:	fb16 f60a 	smulbb	r6, r6, sl
 8011f4e:	fb0e 6602 	mla	r6, lr, r2, r6
 8011f52:	b2ed      	uxtb	r5, r5
 8011f54:	fa1f fc8c 	uxth.w	ip, ip
 8011f58:	fb15 f50a 	smulbb	r5, r5, sl
 8011f5c:	b2b6      	uxth	r6, r6
 8011f5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011f62:	fb07 5702 	mla	r7, r7, r2, r5
 8011f66:	f10c 0201 	add.w	r2, ip, #1
 8011f6a:	1c75      	adds	r5, r6, #1
 8011f6c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011f70:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011f74:	b2bf      	uxth	r7, r7
 8011f76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011f7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f7e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011f82:	1c7d      	adds	r5, r7, #1
 8011f84:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8011f88:	096d      	lsrs	r5, r5, #5
 8011f8a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f8e:	ea4c 0c05 	orr.w	ip, ip, r5
 8011f92:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8011f96:	e7ba      	b.n	8011f0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011f98:	b007      	add	sp, #28
 8011f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f9e:	bf00      	nop
 8011fa0:	2000a2c0 	.word	0x2000a2c0

08011fa4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fa8:	b087      	sub	sp, #28
 8011faa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80122b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8011fae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011fb0:	9205      	str	r2, [sp, #20]
 8011fb2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011fb6:	9101      	str	r1, [sp, #4]
 8011fb8:	6841      	ldr	r1, [r0, #4]
 8011fba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8011fbe:	fb01 2404 	mla	r4, r1, r4, r2
 8011fc2:	6802      	ldr	r2, [r0, #0]
 8011fc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011fc8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011fcc:	3201      	adds	r2, #1
 8011fce:	f022 0201 	bic.w	r2, r2, #1
 8011fd2:	9202      	str	r2, [sp, #8]
 8011fd4:	f8db 2000 	ldr.w	r2, [fp]
 8011fd8:	9203      	str	r2, [sp, #12]
 8011fda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011fde:	9a01      	ldr	r2, [sp, #4]
 8011fe0:	2a00      	cmp	r2, #0
 8011fe2:	dc03      	bgt.n	8011fec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011fe4:	9a05      	ldr	r2, [sp, #20]
 8011fe6:	2a00      	cmp	r2, #0
 8011fe8:	f340 8162 	ble.w	80122b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8011fec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011fee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8011ff2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8011ff6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011ffa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011ffc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012000:	2b00      	cmp	r3, #0
 8012002:	dd0e      	ble.n	8012022 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012004:	1402      	asrs	r2, r0, #16
 8012006:	d405      	bmi.n	8012014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012008:	42ba      	cmp	r2, r7
 801200a:	da03      	bge.n	8012014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801200c:	140a      	asrs	r2, r1, #16
 801200e:	d401      	bmi.n	8012014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012010:	42b2      	cmp	r2, r6
 8012012:	db07      	blt.n	8012024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012014:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012016:	4410      	add	r0, r2
 8012018:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801201a:	3b01      	subs	r3, #1
 801201c:	4411      	add	r1, r2
 801201e:	3402      	adds	r4, #2
 8012020:	e7ee      	b.n	8012000 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012022:	d017      	beq.n	8012054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012024:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012026:	1e5a      	subs	r2, r3, #1
 8012028:	fb05 0502 	mla	r5, r5, r2, r0
 801202c:	142d      	asrs	r5, r5, #16
 801202e:	d409      	bmi.n	8012044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012030:	42bd      	cmp	r5, r7
 8012032:	da07      	bge.n	8012044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012034:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012036:	fb05 1202 	mla	r2, r5, r2, r1
 801203a:	1412      	asrs	r2, r2, #16
 801203c:	d402      	bmi.n	8012044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801203e:	42b2      	cmp	r2, r6
 8012040:	f2c0 80c3 	blt.w	80121ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8012044:	2500      	movs	r5, #0
 8012046:	195a      	adds	r2, r3, r5
 8012048:	2a00      	cmp	r2, #0
 801204a:	dc3f      	bgt.n	80120cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801204c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012050:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012054:	9b01      	ldr	r3, [sp, #4]
 8012056:	2b00      	cmp	r3, #0
 8012058:	f340 812a 	ble.w	80122b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801205c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012060:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012064:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012068:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801206a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801206e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012072:	eeb0 6a62 	vmov.f32	s12, s5
 8012076:	ee61 7a27 	vmul.f32	s15, s2, s15
 801207a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801207e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012082:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012086:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801208a:	eeb0 6a43 	vmov.f32	s12, s6
 801208e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012092:	ee12 2a90 	vmov	r2, s5
 8012096:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801209a:	fb92 f3f3 	sdiv	r3, r2, r3
 801209e:	ee13 2a10 	vmov	r2, s6
 80120a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80120a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80120aa:	9314      	str	r3, [sp, #80]	; 0x50
 80120ac:	9b01      	ldr	r3, [sp, #4]
 80120ae:	9a05      	ldr	r2, [sp, #20]
 80120b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120b4:	3b01      	subs	r3, #1
 80120b6:	9301      	str	r3, [sp, #4]
 80120b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80120bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120be:	eeb0 3a67 	vmov.f32	s6, s15
 80120c2:	bf08      	it	eq
 80120c4:	4613      	moveq	r3, r2
 80120c6:	eef0 2a47 	vmov.f32	s5, s14
 80120ca:	e788      	b.n	8011fde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80120cc:	1406      	asrs	r6, r0, #16
 80120ce:	d42c      	bmi.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120d0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80120d4:	42b2      	cmp	r2, r6
 80120d6:	dd28      	ble.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120d8:	140f      	asrs	r7, r1, #16
 80120da:	d426      	bmi.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120dc:	f8db 200c 	ldr.w	r2, [fp, #12]
 80120e0:	42ba      	cmp	r2, r7
 80120e2:	dd22      	ble.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120e4:	9a02      	ldr	r2, [sp, #8]
 80120e6:	fb07 6602 	mla	r6, r7, r2, r6
 80120ea:	0872      	lsrs	r2, r6, #1
 80120ec:	9f03      	ldr	r7, [sp, #12]
 80120ee:	5cba      	ldrb	r2, [r7, r2]
 80120f0:	07f6      	lsls	r6, r6, #31
 80120f2:	bf54      	ite	pl
 80120f4:	f002 020f 	andpl.w	r2, r2, #15
 80120f8:	1112      	asrmi	r2, r2, #4
 80120fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80120fe:	b2d2      	uxtb	r2, r2
 8012100:	2aff      	cmp	r2, #255	; 0xff
 8012102:	d118      	bne.n	8012136 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012104:	f8d8 2000 	ldr.w	r2, [r8]
 8012108:	f06f 0601 	mvn.w	r6, #1
 801210c:	fb06 f705 	mul.w	r7, r6, r5
 8012110:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8012114:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8012118:	0956      	lsrs	r6, r2, #5
 801211a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801211e:	ea4c 0606 	orr.w	r6, ip, r6
 8012122:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012126:	4316      	orrs	r6, r2
 8012128:	53e6      	strh	r6, [r4, r7]
 801212a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801212c:	4410      	add	r0, r2
 801212e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012130:	3d01      	subs	r5, #1
 8012132:	4411      	add	r1, r2
 8012134:	e787      	b.n	8012046 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012136:	2a00      	cmp	r2, #0
 8012138:	d0f7      	beq.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801213a:	f06f 0601 	mvn.w	r6, #1
 801213e:	436e      	muls	r6, r5
 8012140:	f8d8 c000 	ldr.w	ip, [r8]
 8012144:	f834 e006 	ldrh.w	lr, [r4, r6]
 8012148:	9604      	str	r6, [sp, #16]
 801214a:	fa1f f982 	uxth.w	r9, r2
 801214e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012152:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8012156:	43d2      	mvns	r2, r2
 8012158:	b2d2      	uxtb	r2, r2
 801215a:	fb16 f609 	smulbb	r6, r6, r9
 801215e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012162:	fb07 6702 	mla	r7, r7, r2, r6
 8012166:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801216a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801216e:	fa5f fc8c 	uxtb.w	ip, ip
 8012172:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012176:	fa5f fe8e 	uxtb.w	lr, lr
 801217a:	fb1c fc09 	smulbb	ip, ip, r9
 801217e:	fb0e cc02 	mla	ip, lr, r2, ip
 8012182:	b2bf      	uxth	r7, r7
 8012184:	fb1a fa09 	smulbb	sl, sl, r9
 8012188:	fa1f fc8c 	uxth.w	ip, ip
 801218c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012190:	fb06 a602 	mla	r6, r6, r2, sl
 8012194:	1c7a      	adds	r2, r7, #1
 8012196:	f10c 0a01 	add.w	sl, ip, #1
 801219a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801219e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80121a2:	b2b6      	uxth	r6, r6
 80121a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80121a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80121ac:	ea4a 0707 	orr.w	r7, sl, r7
 80121b0:	f106 0a01 	add.w	sl, r6, #1
 80121b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80121b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80121bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80121c0:	9a04      	ldr	r2, [sp, #16]
 80121c2:	ea47 070a 	orr.w	r7, r7, sl
 80121c6:	52a7      	strh	r7, [r4, r2]
 80121c8:	e7af      	b.n	801212a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80121ca:	f04f 0e00 	mov.w	lr, #0
 80121ce:	eba3 020e 	sub.w	r2, r3, lr
 80121d2:	2a00      	cmp	r2, #0
 80121d4:	f77f af3a 	ble.w	801204c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80121d8:	9e02      	ldr	r6, [sp, #8]
 80121da:	1402      	asrs	r2, r0, #16
 80121dc:	140d      	asrs	r5, r1, #16
 80121de:	fb06 2505 	mla	r5, r6, r5, r2
 80121e2:	086a      	lsrs	r2, r5, #1
 80121e4:	9e03      	ldr	r6, [sp, #12]
 80121e6:	5cb2      	ldrb	r2, [r6, r2]
 80121e8:	07ed      	lsls	r5, r5, #31
 80121ea:	bf54      	ite	pl
 80121ec:	f002 020f 	andpl.w	r2, r2, #15
 80121f0:	1112      	asrmi	r2, r2, #4
 80121f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80121f6:	b2d2      	uxtb	r2, r2
 80121f8:	2aff      	cmp	r2, #255	; 0xff
 80121fa:	d115      	bne.n	8012228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80121fc:	f8d8 5000 	ldr.w	r5, [r8]
 8012200:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8012204:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012208:	096a      	lsrs	r2, r5, #5
 801220a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801220e:	4332      	orrs	r2, r6
 8012210:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012214:	432a      	orrs	r2, r5
 8012216:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801221a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801221c:	4410      	add	r0, r2
 801221e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012220:	f10e 0e01 	add.w	lr, lr, #1
 8012224:	4411      	add	r1, r2
 8012226:	e7d2      	b.n	80121ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8012228:	2a00      	cmp	r2, #0
 801222a:	d0f6      	beq.n	801221a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801222c:	f8d8 7000 	ldr.w	r7, [r8]
 8012230:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012234:	fa1f f982 	uxth.w	r9, r2
 8012238:	ea4f 262c 	mov.w	r6, ip, asr #8
 801223c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8012240:	43d2      	mvns	r2, r2
 8012242:	b2d2      	uxtb	r2, r2
 8012244:	fb15 f509 	smulbb	r5, r5, r9
 8012248:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801224c:	fb06 5602 	mla	r6, r6, r2, r5
 8012250:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8012254:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012258:	b2ff      	uxtb	r7, r7
 801225a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801225e:	fa5f fc8c 	uxtb.w	ip, ip
 8012262:	fb17 f709 	smulbb	r7, r7, r9
 8012266:	fb0c 7702 	mla	r7, ip, r2, r7
 801226a:	b2b6      	uxth	r6, r6
 801226c:	fb1a fa09 	smulbb	sl, sl, r9
 8012270:	b2bf      	uxth	r7, r7
 8012272:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012276:	fb05 a502 	mla	r5, r5, r2, sl
 801227a:	1c72      	adds	r2, r6, #1
 801227c:	f107 0a01 	add.w	sl, r7, #1
 8012280:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012284:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012288:	b2ad      	uxth	r5, r5
 801228a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801228e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012292:	ea4a 0606 	orr.w	r6, sl, r6
 8012296:	f105 0a01 	add.w	sl, r5, #1
 801229a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801229e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80122a6:	ea46 060a 	orr.w	r6, r6, sl
 80122aa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80122ae:	e7b4      	b.n	801221a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80122b0:	b007      	add	sp, #28
 80122b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122b6:	bf00      	nop
 80122b8:	2000a2c0 	.word	0x2000a2c0

080122bc <_ZN8touchgfx8LCD16bppD1Ev>:
 80122bc:	4770      	bx	lr

080122be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80122be:	4770      	bx	lr

080122c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80122c0:	4770      	bx	lr

080122c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80122c2:	4770      	bx	lr

080122c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80122c4:	4770      	bx	lr

080122c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80122c6:	4770      	bx	lr

080122c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80122c8:	4770      	bx	lr

080122ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80122ca:	4770      	bx	lr

080122cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80122cc:	4770      	bx	lr

080122ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80122ce:	4770      	bx	lr

080122d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80122d0:	4770      	bx	lr

080122d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80122d2:	4770      	bx	lr

080122d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80122d4:	4770      	bx	lr

080122d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80122d6:	4770      	bx	lr

080122d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80122d8:	4770      	bx	lr

080122da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80122da:	4770      	bx	lr

080122dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80122dc:	4770      	bx	lr

080122de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80122de:	4770      	bx	lr

080122e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80122e0:	4770      	bx	lr

080122e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80122e2:	4770      	bx	lr

080122e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80122e4:	4770      	bx	lr

080122e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80122e6:	4770      	bx	lr

080122e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80122e8:	4770      	bx	lr

080122ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80122ea:	4770      	bx	lr

080122ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80122ec:	4770      	bx	lr

080122ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80122ee:	4770      	bx	lr

080122f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80122f0:	4770      	bx	lr

080122f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80122f2:	4770      	bx	lr

080122f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80122f4:	4770      	bx	lr
	...

080122f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80122f8:	b508      	push	{r3, lr}
 80122fa:	4b06      	ldr	r3, [pc, #24]	; (8012314 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80122fc:	8818      	ldrh	r0, [r3, #0]
 80122fe:	b928      	cbnz	r0, 801230c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012300:	4b05      	ldr	r3, [pc, #20]	; (8012318 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012302:	4a06      	ldr	r2, [pc, #24]	; (801231c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012304:	4806      	ldr	r0, [pc, #24]	; (8012320 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8012306:	2150      	movs	r1, #80	; 0x50
 8012308:	f009 fbea 	bl	801bae0 <__assert_func>
 801230c:	0040      	lsls	r0, r0, #1
 801230e:	b280      	uxth	r0, r0
 8012310:	bd08      	pop	{r3, pc}
 8012312:	bf00      	nop
 8012314:	2000a2b2 	.word	0x2000a2b2
 8012318:	0801f9d8 	.word	0x0801f9d8
 801231c:	0801ffd4 	.word	0x0801ffd4
 8012320:	0801fa1a 	.word	0x0801fa1a

08012324 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012328:	b08b      	sub	sp, #44	; 0x2c
 801232a:	460f      	mov	r7, r1
 801232c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012330:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012334:	4616      	mov	r6, r2
 8012336:	f1bb 0f00 	cmp.w	fp, #0
 801233a:	d049      	beq.n	80123d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801233c:	6810      	ldr	r0, [r2, #0]
 801233e:	6851      	ldr	r1, [r2, #4]
 8012340:	ad06      	add	r5, sp, #24
 8012342:	c503      	stmia	r5!, {r0, r1}
 8012344:	6818      	ldr	r0, [r3, #0]
 8012346:	6859      	ldr	r1, [r3, #4]
 8012348:	ad08      	add	r5, sp, #32
 801234a:	c503      	stmia	r5!, {r0, r1}
 801234c:	a806      	add	r0, sp, #24
 801234e:	f7fa f99f 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012352:	4631      	mov	r1, r6
 8012354:	a808      	add	r0, sp, #32
 8012356:	f7fa f9c3 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801235a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801235e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012362:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012366:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801236a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801236e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012372:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8012376:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801237a:	4f5f      	ldr	r7, [pc, #380]	; (80124f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801237c:	440a      	add	r2, r1
 801237e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012382:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012386:	6838      	ldr	r0, [r7, #0]
 8012388:	4413      	add	r3, r2
 801238a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801238e:	6803      	ldr	r3, [r0, #0]
 8012390:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012392:	4798      	blx	r3
 8012394:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012398:	46b9      	mov	r9, r7
 801239a:	d01c      	beq.n	80123d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801239c:	f010 0f04 	tst.w	r0, #4
 80123a0:	d01d      	beq.n	80123de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80123a2:	f8d9 0000 	ldr.w	r0, [r9]
 80123a6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80123aa:	6801      	ldr	r1, [r0, #0]
 80123ac:	f8cd b00c 	str.w	fp, [sp, #12]
 80123b0:	2700      	movs	r7, #0
 80123b2:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80123b6:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80123ba:	9402      	str	r4, [sp, #8]
 80123bc:	b2ad      	uxth	r5, r5
 80123be:	fa1f f488 	uxth.w	r4, r8
 80123c2:	9501      	str	r5, [sp, #4]
 80123c4:	9400      	str	r4, [sp, #0]
 80123c6:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80123c8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80123cc:	4631      	mov	r1, r6
 80123ce:	47a0      	blx	r4
 80123d0:	b00b      	add	sp, #44	; 0x2c
 80123d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123d6:	b914      	cbnz	r4, 80123de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80123d8:	f010 0f01 	tst.w	r0, #1
 80123dc:	e7e0      	b.n	80123a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80123de:	f8d9 0000 	ldr.w	r0, [r9]
 80123e2:	6803      	ldr	r3, [r0, #0]
 80123e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80123e6:	4798      	blx	r3
 80123e8:	4b44      	ldr	r3, [pc, #272]	; (80124fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80123ea:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80123ee:	881a      	ldrh	r2, [r3, #0]
 80123f0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80123f4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80123f8:	fb02 1404 	mla	r4, r2, r4, r1
 80123fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012400:	469a      	mov	sl, r3
 8012402:	fb05 f502 	mul.w	r5, r5, r2
 8012406:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801240a:	d059      	beq.n	80124c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801240c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012410:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012414:	fa1f f28b 	uxth.w	r2, fp
 8012418:	fa1f f989 	uxth.w	r9, r9
 801241c:	469e      	mov	lr, r3
 801241e:	42ac      	cmp	r4, r5
 8012420:	d264      	bcs.n	80124ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012422:	eb04 0a07 	add.w	sl, r4, r7
 8012426:	4554      	cmp	r4, sl
 8012428:	d23d      	bcs.n	80124a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801242a:	8821      	ldrh	r1, [r4, #0]
 801242c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012430:	1208      	asrs	r0, r1, #8
 8012432:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012436:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801243a:	fb10 f009 	smulbb	r0, r0, r9
 801243e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012442:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012446:	00c9      	lsls	r1, r1, #3
 8012448:	fb0c 0c02 	mla	ip, ip, r2, r0
 801244c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012450:	10d8      	asrs	r0, r3, #3
 8012452:	b2c9      	uxtb	r1, r1
 8012454:	00db      	lsls	r3, r3, #3
 8012456:	fa1f fc8c 	uxth.w	ip, ip
 801245a:	fb1b fb09 	smulbb	fp, fp, r9
 801245e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8012462:	b2db      	uxtb	r3, r3
 8012464:	fb11 f109 	smulbb	r1, r1, r9
 8012468:	fb00 b002 	mla	r0, r0, r2, fp
 801246c:	fb03 1302 	mla	r3, r3, r2, r1
 8012470:	f10c 0b01 	add.w	fp, ip, #1
 8012474:	b29b      	uxth	r3, r3
 8012476:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801247a:	b280      	uxth	r0, r0
 801247c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8012480:	f103 0c01 	add.w	ip, r3, #1
 8012484:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012488:	1c43      	adds	r3, r0, #1
 801248a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801248e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012492:	0940      	lsrs	r0, r0, #5
 8012494:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012498:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801249c:	ea4c 0c00 	orr.w	ip, ip, r0
 80124a0:	f824 cb02 	strh.w	ip, [r4], #2
 80124a4:	e7bf      	b.n	8012426 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80124a6:	f8be 3000 	ldrh.w	r3, [lr]
 80124aa:	eba3 0308 	sub.w	r3, r3, r8
 80124ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80124b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80124b6:	eba3 0308 	sub.w	r3, r3, r8
 80124ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80124be:	e7ae      	b.n	801241e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80124c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80124c4:	f8d9 0000 	ldr.w	r0, [r9]
 80124c8:	42ac      	cmp	r4, r5
 80124ca:	6803      	ldr	r3, [r0, #0]
 80124cc:	d20e      	bcs.n	80124ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80124ce:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80124d2:	4632      	mov	r2, r6
 80124d4:	463b      	mov	r3, r7
 80124d6:	4621      	mov	r1, r4
 80124d8:	47c0      	blx	r8
 80124da:	f8ba 3000 	ldrh.w	r3, [sl]
 80124de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80124e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80124e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80124ea:	e7eb      	b.n	80124c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80124ec:	4b02      	ldr	r3, [pc, #8]	; (80124f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80124ee:	6818      	ldr	r0, [r3, #0]
 80124f0:	6803      	ldr	r3, [r0, #0]
 80124f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124f4:	4798      	blx	r3
 80124f6:	e76b      	b.n	80123d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80124f8:	2000a2b8 	.word	0x2000a2b8
 80124fc:	2000a2b2 	.word	0x2000a2b2

08012500 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012500:	b510      	push	{r4, lr}
 8012502:	2178      	movs	r1, #120	; 0x78
 8012504:	4604      	mov	r4, r0
 8012506:	f009 fabd 	bl	801ba84 <_ZdlPvj>
 801250a:	4620      	mov	r0, r4
 801250c:	bd10      	pop	{r4, pc}

0801250e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801250e:	b510      	push	{r4, lr}
 8012510:	2104      	movs	r1, #4
 8012512:	4604      	mov	r4, r0
 8012514:	f009 fab6 	bl	801ba84 <_ZdlPvj>
 8012518:	4620      	mov	r0, r4
 801251a:	bd10      	pop	{r4, pc}

0801251c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801251c:	b510      	push	{r4, lr}
 801251e:	2104      	movs	r1, #4
 8012520:	4604      	mov	r4, r0
 8012522:	f009 faaf 	bl	801ba84 <_ZdlPvj>
 8012526:	4620      	mov	r0, r4
 8012528:	bd10      	pop	{r4, pc}

0801252a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801252a:	b510      	push	{r4, lr}
 801252c:	2104      	movs	r1, #4
 801252e:	4604      	mov	r4, r0
 8012530:	f009 faa8 	bl	801ba84 <_ZdlPvj>
 8012534:	4620      	mov	r0, r4
 8012536:	bd10      	pop	{r4, pc}

08012538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012538:	b510      	push	{r4, lr}
 801253a:	2104      	movs	r1, #4
 801253c:	4604      	mov	r4, r0
 801253e:	f009 faa1 	bl	801ba84 <_ZdlPvj>
 8012542:	4620      	mov	r0, r4
 8012544:	bd10      	pop	{r4, pc}

08012546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012546:	b510      	push	{r4, lr}
 8012548:	2104      	movs	r1, #4
 801254a:	4604      	mov	r4, r0
 801254c:	f009 fa9a 	bl	801ba84 <_ZdlPvj>
 8012550:	4620      	mov	r0, r4
 8012552:	bd10      	pop	{r4, pc}

08012554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012554:	b510      	push	{r4, lr}
 8012556:	2104      	movs	r1, #4
 8012558:	4604      	mov	r4, r0
 801255a:	f009 fa93 	bl	801ba84 <_ZdlPvj>
 801255e:	4620      	mov	r0, r4
 8012560:	bd10      	pop	{r4, pc}

08012562 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012562:	b510      	push	{r4, lr}
 8012564:	2104      	movs	r1, #4
 8012566:	4604      	mov	r4, r0
 8012568:	f009 fa8c 	bl	801ba84 <_ZdlPvj>
 801256c:	4620      	mov	r0, r4
 801256e:	bd10      	pop	{r4, pc}

08012570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012570:	b510      	push	{r4, lr}
 8012572:	2104      	movs	r1, #4
 8012574:	4604      	mov	r4, r0
 8012576:	f009 fa85 	bl	801ba84 <_ZdlPvj>
 801257a:	4620      	mov	r0, r4
 801257c:	bd10      	pop	{r4, pc}

0801257e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801257e:	b510      	push	{r4, lr}
 8012580:	2104      	movs	r1, #4
 8012582:	4604      	mov	r4, r0
 8012584:	f009 fa7e 	bl	801ba84 <_ZdlPvj>
 8012588:	4620      	mov	r0, r4
 801258a:	bd10      	pop	{r4, pc}

0801258c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801258c:	b510      	push	{r4, lr}
 801258e:	2104      	movs	r1, #4
 8012590:	4604      	mov	r4, r0
 8012592:	f009 fa77 	bl	801ba84 <_ZdlPvj>
 8012596:	4620      	mov	r0, r4
 8012598:	bd10      	pop	{r4, pc}

0801259a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801259a:	b510      	push	{r4, lr}
 801259c:	2104      	movs	r1, #4
 801259e:	4604      	mov	r4, r0
 80125a0:	f009 fa70 	bl	801ba84 <_ZdlPvj>
 80125a4:	4620      	mov	r0, r4
 80125a6:	bd10      	pop	{r4, pc}

080125a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80125a8:	b510      	push	{r4, lr}
 80125aa:	2104      	movs	r1, #4
 80125ac:	4604      	mov	r4, r0
 80125ae:	f009 fa69 	bl	801ba84 <_ZdlPvj>
 80125b2:	4620      	mov	r0, r4
 80125b4:	bd10      	pop	{r4, pc}

080125b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80125b6:	b510      	push	{r4, lr}
 80125b8:	2104      	movs	r1, #4
 80125ba:	4604      	mov	r4, r0
 80125bc:	f009 fa62 	bl	801ba84 <_ZdlPvj>
 80125c0:	4620      	mov	r0, r4
 80125c2:	bd10      	pop	{r4, pc}

080125c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80125c4:	b510      	push	{r4, lr}
 80125c6:	2104      	movs	r1, #4
 80125c8:	4604      	mov	r4, r0
 80125ca:	f009 fa5b 	bl	801ba84 <_ZdlPvj>
 80125ce:	4620      	mov	r0, r4
 80125d0:	bd10      	pop	{r4, pc}

080125d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80125d2:	b510      	push	{r4, lr}
 80125d4:	2104      	movs	r1, #4
 80125d6:	4604      	mov	r4, r0
 80125d8:	f009 fa54 	bl	801ba84 <_ZdlPvj>
 80125dc:	4620      	mov	r0, r4
 80125de:	bd10      	pop	{r4, pc}

080125e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80125e0:	b510      	push	{r4, lr}
 80125e2:	2104      	movs	r1, #4
 80125e4:	4604      	mov	r4, r0
 80125e6:	f009 fa4d 	bl	801ba84 <_ZdlPvj>
 80125ea:	4620      	mov	r0, r4
 80125ec:	bd10      	pop	{r4, pc}

080125ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80125ee:	b510      	push	{r4, lr}
 80125f0:	2104      	movs	r1, #4
 80125f2:	4604      	mov	r4, r0
 80125f4:	f009 fa46 	bl	801ba84 <_ZdlPvj>
 80125f8:	4620      	mov	r0, r4
 80125fa:	bd10      	pop	{r4, pc}

080125fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80125fc:	b510      	push	{r4, lr}
 80125fe:	2104      	movs	r1, #4
 8012600:	4604      	mov	r4, r0
 8012602:	f009 fa3f 	bl	801ba84 <_ZdlPvj>
 8012606:	4620      	mov	r0, r4
 8012608:	bd10      	pop	{r4, pc}

0801260a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801260a:	b510      	push	{r4, lr}
 801260c:	2104      	movs	r1, #4
 801260e:	4604      	mov	r4, r0
 8012610:	f009 fa38 	bl	801ba84 <_ZdlPvj>
 8012614:	4620      	mov	r0, r4
 8012616:	bd10      	pop	{r4, pc}

08012618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012618:	b510      	push	{r4, lr}
 801261a:	2104      	movs	r1, #4
 801261c:	4604      	mov	r4, r0
 801261e:	f009 fa31 	bl	801ba84 <_ZdlPvj>
 8012622:	4620      	mov	r0, r4
 8012624:	bd10      	pop	{r4, pc}

08012626 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012626:	b510      	push	{r4, lr}
 8012628:	2104      	movs	r1, #4
 801262a:	4604      	mov	r4, r0
 801262c:	f009 fa2a 	bl	801ba84 <_ZdlPvj>
 8012630:	4620      	mov	r0, r4
 8012632:	bd10      	pop	{r4, pc}

08012634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012634:	b510      	push	{r4, lr}
 8012636:	2104      	movs	r1, #4
 8012638:	4604      	mov	r4, r0
 801263a:	f009 fa23 	bl	801ba84 <_ZdlPvj>
 801263e:	4620      	mov	r0, r4
 8012640:	bd10      	pop	{r4, pc}

08012642 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012642:	b510      	push	{r4, lr}
 8012644:	2104      	movs	r1, #4
 8012646:	4604      	mov	r4, r0
 8012648:	f009 fa1c 	bl	801ba84 <_ZdlPvj>
 801264c:	4620      	mov	r0, r4
 801264e:	bd10      	pop	{r4, pc}

08012650 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012650:	b510      	push	{r4, lr}
 8012652:	2104      	movs	r1, #4
 8012654:	4604      	mov	r4, r0
 8012656:	f009 fa15 	bl	801ba84 <_ZdlPvj>
 801265a:	4620      	mov	r0, r4
 801265c:	bd10      	pop	{r4, pc}

0801265e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801265e:	b510      	push	{r4, lr}
 8012660:	2104      	movs	r1, #4
 8012662:	4604      	mov	r4, r0
 8012664:	f009 fa0e 	bl	801ba84 <_ZdlPvj>
 8012668:	4620      	mov	r0, r4
 801266a:	bd10      	pop	{r4, pc}

0801266c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801266c:	b510      	push	{r4, lr}
 801266e:	2104      	movs	r1, #4
 8012670:	4604      	mov	r4, r0
 8012672:	f009 fa07 	bl	801ba84 <_ZdlPvj>
 8012676:	4620      	mov	r0, r4
 8012678:	bd10      	pop	{r4, pc}

0801267a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801267a:	b510      	push	{r4, lr}
 801267c:	2104      	movs	r1, #4
 801267e:	4604      	mov	r4, r0
 8012680:	f009 fa00 	bl	801ba84 <_ZdlPvj>
 8012684:	4620      	mov	r0, r4
 8012686:	bd10      	pop	{r4, pc}

08012688 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012688:	b510      	push	{r4, lr}
 801268a:	2104      	movs	r1, #4
 801268c:	4604      	mov	r4, r0
 801268e:	f009 f9f9 	bl	801ba84 <_ZdlPvj>
 8012692:	4620      	mov	r0, r4
 8012694:	bd10      	pop	{r4, pc}
	...

08012698 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012698:	b5f0      	push	{r4, r5, r6, r7, lr}
 801269a:	4606      	mov	r6, r0
 801269c:	b087      	sub	sp, #28
 801269e:	460c      	mov	r4, r1
 80126a0:	4617      	mov	r7, r2
 80126a2:	461d      	mov	r5, r3
 80126a4:	b333      	cbz	r3, 80126f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80126a6:	4608      	mov	r0, r1
 80126a8:	f7f6 ff79 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80126ac:	bb10      	cbnz	r0, 80126f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80126ae:	6820      	ldr	r0, [r4, #0]
 80126b0:	6861      	ldr	r1, [r4, #4]
 80126b2:	4c1c      	ldr	r4, [pc, #112]	; (8012724 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80126b4:	ab04      	add	r3, sp, #16
 80126b6:	c303      	stmia	r3!, {r0, r1}
 80126b8:	a804      	add	r0, sp, #16
 80126ba:	f7f9 ffe9 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126be:	6820      	ldr	r0, [r4, #0]
 80126c0:	6803      	ldr	r3, [r0, #0]
 80126c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126c4:	4798      	blx	r3
 80126c6:	2dff      	cmp	r5, #255	; 0xff
 80126c8:	d016      	beq.n	80126f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80126ca:	f010 0f08 	tst.w	r0, #8
 80126ce:	6820      	ldr	r0, [r4, #0]
 80126d0:	d015      	beq.n	80126fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80126d2:	2400      	movs	r4, #0
 80126d4:	6801      	ldr	r1, [r0, #0]
 80126d6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80126da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80126de:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80126e2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80126e6:	9401      	str	r4, [sp, #4]
 80126e8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80126ec:	9400      	str	r4, [sp, #0]
 80126ee:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 80126f0:	4639      	mov	r1, r7
 80126f2:	47a0      	blx	r4
 80126f4:	b007      	add	sp, #28
 80126f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126f8:	f010 0f02 	tst.w	r0, #2
 80126fc:	e7e7      	b.n	80126ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80126fe:	6803      	ldr	r3, [r0, #0]
 8012700:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012702:	4798      	blx	r3
 8012704:	4b08      	ldr	r3, [pc, #32]	; (8012728 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8012706:	881a      	ldrh	r2, [r3, #0]
 8012708:	6833      	ldr	r3, [r6, #0]
 801270a:	e9cd 7500 	strd	r7, r5, [sp]
 801270e:	4601      	mov	r1, r0
 8012710:	69dd      	ldr	r5, [r3, #28]
 8012712:	4630      	mov	r0, r6
 8012714:	ab04      	add	r3, sp, #16
 8012716:	47a8      	blx	r5
 8012718:	6820      	ldr	r0, [r4, #0]
 801271a:	6803      	ldr	r3, [r0, #0]
 801271c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801271e:	4798      	blx	r3
 8012720:	e7e8      	b.n	80126f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012722:	bf00      	nop
 8012724:	2000a2b8 	.word	0x2000a2b8
 8012728:	2000a2b2 	.word	0x2000a2b2

0801272c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801272c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012730:	4f97      	ldr	r7, [pc, #604]	; (8012990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 8012732:	4616      	mov	r6, r2
 8012734:	683a      	ldr	r2, [r7, #0]
 8012736:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801273a:	2a02      	cmp	r2, #2
 801273c:	b08f      	sub	sp, #60	; 0x3c
 801273e:	4604      	mov	r4, r0
 8012740:	4689      	mov	r9, r1
 8012742:	d106      	bne.n	8012752 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012744:	4b93      	ldr	r3, [pc, #588]	; (8012994 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8012746:	4a94      	ldr	r2, [pc, #592]	; (8012998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012748:	f44f 7159 	mov.w	r1, #868	; 0x364
 801274c:	4893      	ldr	r0, [pc, #588]	; (801299c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801274e:	f009 f9c7 	bl	801bae0 <__assert_func>
 8012752:	ad0e      	add	r5, sp, #56	; 0x38
 8012754:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8012758:	4628      	mov	r0, r5
 801275a:	f7fd fac9 	bl	800fcf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801275e:	6823      	ldr	r3, [r4, #0]
 8012760:	4680      	mov	r8, r0
 8012762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012764:	4620      	mov	r0, r4
 8012766:	4798      	blx	r3
 8012768:	4580      	cmp	r8, r0
 801276a:	d004      	beq.n	8012776 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801276c:	4b8c      	ldr	r3, [pc, #560]	; (80129a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801276e:	4a8a      	ldr	r2, [pc, #552]	; (8012998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012770:	f240 3166 	movw	r1, #870	; 0x366
 8012774:	e7ea      	b.n	801274c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012776:	4628      	mov	r0, r5
 8012778:	f7fd fa30 	bl	800fbdc <_ZNK8touchgfx6Bitmap7getDataEv>
 801277c:	4680      	mov	r8, r0
 801277e:	b920      	cbnz	r0, 801278a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8012780:	4b88      	ldr	r3, [pc, #544]	; (80129a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012782:	4a85      	ldr	r2, [pc, #532]	; (8012998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012784:	f44f 715a 	mov.w	r1, #872	; 0x368
 8012788:	e7e0      	b.n	801274c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801278a:	6830      	ldr	r0, [r6, #0]
 801278c:	6871      	ldr	r1, [r6, #4]
 801278e:	f9b6 a000 	ldrsh.w	sl, [r6]
 8012792:	ab06      	add	r3, sp, #24
 8012794:	c303      	stmia	r3!, {r0, r1}
 8012796:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801279a:	f8d9 0000 	ldr.w	r0, [r9]
 801279e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80127a2:	ab08      	add	r3, sp, #32
 80127a4:	c303      	stmia	r3!, {r0, r1}
 80127a6:	4628      	mov	r0, r5
 80127a8:	f7fd f910 	bl	800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80127ac:	4606      	mov	r6, r0
 80127ae:	4628      	mov	r0, r5
 80127b0:	f7fd f946 	bl	800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80127b4:	f10d 0b20 	add.w	fp, sp, #32
 80127b8:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80127bc:	a806      	add	r0, sp, #24
 80127be:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80127c2:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80127c6:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80127ca:	f7f9 ff61 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127ce:	4658      	mov	r0, fp
 80127d0:	f7f9 ff5e 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127d4:	a80a      	add	r0, sp, #40	; 0x28
 80127d6:	f7f9 ff5b 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80127da:	4d73      	ldr	r5, [pc, #460]	; (80129a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80127dc:	4b73      	ldr	r3, [pc, #460]	; (80129ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80127de:	f9b5 2000 	ldrsh.w	r2, [r5]
 80127e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80127e6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80127ea:	2100      	movs	r1, #0
 80127ec:	910c      	str	r1, [sp, #48]	; 0x30
 80127ee:	4658      	mov	r0, fp
 80127f0:	a90c      	add	r1, sp, #48	; 0x30
 80127f2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80127f6:	f7f6 fe8f 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 80127fa:	4658      	mov	r0, fp
 80127fc:	f7f6 fecf 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012800:	2800      	cmp	r0, #0
 8012802:	f040 8099 	bne.w	8012938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012806:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801280a:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801280e:	4288      	cmp	r0, r1
 8012810:	db37      	blt.n	8012882 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012812:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8012816:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801281a:	429a      	cmp	r2, r3
 801281c:	db31      	blt.n	8012882 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801281e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8012822:	4430      	add	r0, r6
 8012824:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012828:	4431      	add	r1, r6
 801282a:	b200      	sxth	r0, r0
 801282c:	b209      	sxth	r1, r1
 801282e:	4288      	cmp	r0, r1
 8012830:	dc27      	bgt.n	8012882 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012832:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012836:	440a      	add	r2, r1
 8012838:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801283c:	440b      	add	r3, r1
 801283e:	b212      	sxth	r2, r2
 8012840:	b21b      	sxth	r3, r3
 8012842:	429a      	cmp	r2, r3
 8012844:	dc1d      	bgt.n	8012882 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012846:	6823      	ldr	r3, [r4, #0]
 8012848:	4620      	mov	r0, r4
 801284a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801284c:	4798      	blx	r3
 801284e:	4682      	mov	sl, r0
 8012850:	6838      	ldr	r0, [r7, #0]
 8012852:	6803      	ldr	r3, [r0, #0]
 8012854:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012856:	4798      	blx	r3
 8012858:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801285c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012860:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012864:	1a5b      	subs	r3, r3, r1
 8012866:	b29b      	uxth	r3, r3
 8012868:	b21c      	sxth	r4, r3
 801286a:	2c00      	cmp	r4, #0
 801286c:	dc0e      	bgt.n	801288c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801286e:	bf1f      	itttt	ne
 8012870:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8012874:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8012878:	185b      	addne	r3, r3, r1
 801287a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801287e:	4644      	mov	r4, r8
 8012880:	e009      	b.n	8012896 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8012882:	4b4b      	ldr	r3, [pc, #300]	; (80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012884:	4a44      	ldr	r2, [pc, #272]	; (8012998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012886:	f240 3176 	movw	r1, #886	; 0x376
 801288a:	e75f      	b.n	801274c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801288c:	1ad3      	subs	r3, r2, r3
 801288e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012892:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012896:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801289a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801289e:	1b9b      	subs	r3, r3, r6
 80128a0:	b29b      	uxth	r3, r3
 80128a2:	b219      	sxth	r1, r3
 80128a4:	2900      	cmp	r1, #0
 80128a6:	dd4b      	ble.n	8012940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80128a8:	4351      	muls	r1, r2
 80128aa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80128ae:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80128b2:	1acb      	subs	r3, r1, r3
 80128b4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80128b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80128bc:	2e00      	cmp	r6, #0
 80128be:	dd3b      	ble.n	8012938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80128c0:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80128c4:	2b00      	cmp	r3, #0
 80128c6:	dd37      	ble.n	8012938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80128c8:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80128cc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80128d0:	fb0a f90c 	mul.w	r9, sl, ip
 80128d4:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80128d8:	4481      	add	r9, r0
 80128da:	8828      	ldrh	r0, [r5, #0]
 80128dc:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80128e0:	42ae      	cmp	r6, r5
 80128e2:	bfa8      	it	ge
 80128e4:	462e      	movge	r6, r5
 80128e6:	1a41      	subs	r1, r0, r1
 80128e8:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80128ec:	428e      	cmp	r6, r1
 80128ee:	bfa8      	it	ge
 80128f0:	460e      	movge	r6, r1
 80128f2:	429d      	cmp	r5, r3
 80128f4:	bfa8      	it	ge
 80128f6:	461d      	movge	r5, r3
 80128f8:	4b2c      	ldr	r3, [pc, #176]	; (80129ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80128fa:	881b      	ldrh	r3, [r3, #0]
 80128fc:	eba3 030c 	sub.w	r3, r3, ip
 8012900:	429d      	cmp	r5, r3
 8012902:	bfa8      	it	ge
 8012904:	461d      	movge	r5, r3
 8012906:	42b0      	cmp	r0, r6
 8012908:	d12c      	bne.n	8012964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801290a:	4290      	cmp	r0, r2
 801290c:	d12a      	bne.n	8012964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801290e:	6838      	ldr	r0, [r7, #0]
 8012910:	9203      	str	r2, [sp, #12]
 8012912:	6803      	ldr	r3, [r0, #0]
 8012914:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012916:	4798      	blx	r3
 8012918:	07c3      	lsls	r3, r0, #31
 801291a:	d51a      	bpl.n	8012952 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 801291c:	9a03      	ldr	r2, [sp, #12]
 801291e:	6838      	ldr	r0, [r7, #0]
 8012920:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8012924:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8012928:	6803      	ldr	r3, [r0, #0]
 801292a:	9200      	str	r2, [sp, #0]
 801292c:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 801292e:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8012932:	4623      	mov	r3, r4
 8012934:	47a8      	blx	r5
 8012936:	4680      	mov	r8, r0
 8012938:	4640      	mov	r0, r8
 801293a:	b00f      	add	sp, #60	; 0x3c
 801293c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012940:	bf1f      	itttt	ne
 8012942:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8012946:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 801294a:	185b      	addne	r3, r3, r1
 801294c:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8012950:	e7b2      	b.n	80128b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 8012952:	6838      	ldr	r0, [r7, #0]
 8012954:	6803      	ldr	r3, [r0, #0]
 8012956:	464a      	mov	r2, r9
 8012958:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 801295a:	4621      	mov	r1, r4
 801295c:	fb05 f30a 	mul.w	r3, r5, sl
 8012960:	47b0      	blx	r6
 8012962:	e7e9      	b.n	8012938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012964:	4355      	muls	r5, r2
 8012966:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801296a:	9303      	str	r3, [sp, #12]
 801296c:	0076      	lsls	r6, r6, #1
 801296e:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8012972:	9b03      	ldr	r3, [sp, #12]
 8012974:	429c      	cmp	r4, r3
 8012976:	d2df      	bcs.n	8012938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012978:	6838      	ldr	r0, [r7, #0]
 801297a:	6803      	ldr	r3, [r0, #0]
 801297c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801297e:	464a      	mov	r2, r9
 8012980:	461d      	mov	r5, r3
 8012982:	4621      	mov	r1, r4
 8012984:	4633      	mov	r3, r6
 8012986:	47a8      	blx	r5
 8012988:	44d1      	add	r9, sl
 801298a:	445c      	add	r4, fp
 801298c:	e7f1      	b.n	8012972 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801298e:	bf00      	nop
 8012990:	2000a2b8 	.word	0x2000a2b8
 8012994:	0801f7d0 	.word	0x0801f7d0
 8012998:	08020084 	.word	0x08020084
 801299c:	0801f882 	.word	0x0801f882
 80129a0:	0801f8b4 	.word	0x0801f8b4
 80129a4:	0801f909 	.word	0x0801f909
 80129a8:	2000a2b2 	.word	0x2000a2b2
 80129ac:	2000a2b4 	.word	0x2000a2b4
 80129b0:	0801f947 	.word	0x0801f947

080129b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80129b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129b8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80129bc:	9e08      	ldr	r6, [sp, #32]
 80129be:	4688      	mov	r8, r1
 80129c0:	4614      	mov	r4, r2
 80129c2:	461d      	mov	r5, r3
 80129c4:	2f00      	cmp	r7, #0
 80129c6:	f000 80b3 	beq.w	8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80129ca:	4618      	mov	r0, r3
 80129cc:	f7f6 fde7 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80129d0:	2800      	cmp	r0, #0
 80129d2:	f040 80ad 	bne.w	8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80129d6:	f9b5 1000 	ldrsh.w	r1, [r5]
 80129da:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80129de:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80129e2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80129e6:	fb04 1303 	mla	r3, r4, r3, r1
 80129ea:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80129ee:	4365      	muls	r5, r4
 80129f0:	2fff      	cmp	r7, #255	; 0xff
 80129f2:	eba4 0200 	sub.w	r2, r4, r0
 80129f6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80129fa:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80129fe:	d04b      	beq.n	8012a98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8012a00:	b2bc      	uxth	r4, r7
 8012a02:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012a06:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012a0a:	fa5f f788 	uxtb.w	r7, r8
 8012a0e:	b2f3      	uxtb	r3, r6
 8012a10:	0040      	lsls	r0, r0, #1
 8012a12:	fb0e fe04 	mul.w	lr, lr, r4
 8012a16:	4367      	muls	r7, r4
 8012a18:	4363      	muls	r3, r4
 8012a1a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012a1e:	fa1f fc8c 	uxth.w	ip, ip
 8012a22:	42a9      	cmp	r1, r5
 8012a24:	f080 8084 	bcs.w	8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a28:	eb01 0900 	add.w	r9, r1, r0
 8012a2c:	4549      	cmp	r1, r9
 8012a2e:	d231      	bcs.n	8012a94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8012a30:	880a      	ldrh	r2, [r1, #0]
 8012a32:	1214      	asrs	r4, r2, #8
 8012a34:	10d6      	asrs	r6, r2, #3
 8012a36:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012a3a:	00d2      	lsls	r2, r2, #3
 8012a3c:	b2d2      	uxtb	r2, r2
 8012a3e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012a42:	fb14 f40c 	smulbb	r4, r4, ip
 8012a46:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012a4a:	4474      	add	r4, lr
 8012a4c:	fb12 f20c 	smulbb	r2, r2, ip
 8012a50:	b2a4      	uxth	r4, r4
 8012a52:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012a56:	441a      	add	r2, r3
 8012a58:	b292      	uxth	r2, r2
 8012a5a:	f104 0a01 	add.w	sl, r4, #1
 8012a5e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012a62:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012a66:	fb16 f60c 	smulbb	r6, r6, ip
 8012a6a:	f102 0a01 	add.w	sl, r2, #1
 8012a6e:	443e      	add	r6, r7
 8012a70:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012a74:	b2b6      	uxth	r6, r6
 8012a76:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012a7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012a7e:	4322      	orrs	r2, r4
 8012a80:	1c74      	adds	r4, r6, #1
 8012a82:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012a86:	0976      	lsrs	r6, r6, #5
 8012a88:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a8c:	4332      	orrs	r2, r6
 8012a8e:	f821 2b02 	strh.w	r2, [r1], #2
 8012a92:	e7cb      	b.n	8012a2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8012a94:	4441      	add	r1, r8
 8012a96:	e7c4      	b.n	8012a22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012a98:	4f26      	ldr	r7, [pc, #152]	; (8012b34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8012a9a:	0973      	lsrs	r3, r6, #5
 8012a9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012aa0:	ea08 0707 	and.w	r7, r8, r7
 8012aa4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012aa8:	433b      	orrs	r3, r7
 8012aaa:	4333      	orrs	r3, r6
 8012aac:	07e6      	lsls	r6, r4, #31
 8012aae:	b29b      	uxth	r3, r3
 8012ab0:	d50b      	bpl.n	8012aca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8012ab2:	0040      	lsls	r0, r0, #1
 8012ab4:	0052      	lsls	r2, r2, #1
 8012ab6:	42a9      	cmp	r1, r5
 8012ab8:	d23a      	bcs.n	8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012aba:	180c      	adds	r4, r1, r0
 8012abc:	42a1      	cmp	r1, r4
 8012abe:	d202      	bcs.n	8012ac6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8012ac0:	f821 3b02 	strh.w	r3, [r1], #2
 8012ac4:	e7fa      	b.n	8012abc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8012ac6:	4411      	add	r1, r2
 8012ac8:	e7f5      	b.n	8012ab6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8012aca:	078f      	lsls	r7, r1, #30
 8012acc:	d008      	beq.n	8012ae0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8012ace:	0066      	lsls	r6, r4, #1
 8012ad0:	460a      	mov	r2, r1
 8012ad2:	42aa      	cmp	r2, r5
 8012ad4:	d202      	bcs.n	8012adc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8012ad6:	8013      	strh	r3, [r2, #0]
 8012ad8:	4432      	add	r2, r6
 8012ada:	e7fa      	b.n	8012ad2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012adc:	3102      	adds	r1, #2
 8012ade:	3801      	subs	r0, #1
 8012ae0:	07c6      	lsls	r6, r0, #31
 8012ae2:	d50b      	bpl.n	8012afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8012ae4:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012ae8:	3a01      	subs	r2, #1
 8012aea:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012aee:	0066      	lsls	r6, r4, #1
 8012af0:	42aa      	cmp	r2, r5
 8012af2:	d202      	bcs.n	8012afa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012af4:	8013      	strh	r3, [r2, #0]
 8012af6:	4432      	add	r2, r6
 8012af8:	e7fa      	b.n	8012af0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8012afa:	3801      	subs	r0, #1
 8012afc:	b1c0      	cbz	r0, 8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012afe:	1040      	asrs	r0, r0, #1
 8012b00:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012b04:	0080      	lsls	r0, r0, #2
 8012b06:	0064      	lsls	r4, r4, #1
 8012b08:	42a9      	cmp	r1, r5
 8012b0a:	d211      	bcs.n	8012b30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b0c:	078a      	lsls	r2, r1, #30
 8012b0e:	d006      	beq.n	8012b1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8012b10:	4b09      	ldr	r3, [pc, #36]	; (8012b38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8012b12:	4a0a      	ldr	r2, [pc, #40]	; (8012b3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012b14:	480a      	ldr	r0, [pc, #40]	; (8012b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8012b16:	f44f 6185 	mov.w	r1, #1064	; 0x428
 8012b1a:	f008 ffe1 	bl	801bae0 <__assert_func>
 8012b1e:	180e      	adds	r6, r1, r0
 8012b20:	460a      	mov	r2, r1
 8012b22:	42b2      	cmp	r2, r6
 8012b24:	d202      	bcs.n	8012b2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8012b26:	f842 3b04 	str.w	r3, [r2], #4
 8012b2a:	e7fa      	b.n	8012b22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8012b2c:	4421      	add	r1, r4
 8012b2e:	e7eb      	b.n	8012b08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8012b30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012b34:	00fff800 	.word	0x00fff800
 8012b38:	0801f681 	.word	0x0801f681
 8012b3c:	0801fcd0 	.word	0x0801fcd0
 8012b40:	0801f882 	.word	0x0801f882

08012b44 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012b44:	2200      	movs	r2, #0
 8012b46:	4910      	ldr	r1, [pc, #64]	; (8012b88 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012b48:	6042      	str	r2, [r0, #4]
 8012b4a:	6001      	str	r1, [r0, #0]
 8012b4c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012b50:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012b54:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012b58:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012b5c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012b60:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012b64:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012b68:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012b6c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012b70:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012b74:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012b78:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012b7c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012b80:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012b84:	4770      	bx	lr
 8012b86:	bf00      	nop
 8012b88:	0801fc88 	.word	0x0801fc88

08012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b90:	460d      	mov	r5, r1
 8012b92:	b08d      	sub	sp, #52	; 0x34
 8012b94:	4604      	mov	r4, r0
 8012b96:	6808      	ldr	r0, [r1, #0]
 8012b98:	6849      	ldr	r1, [r1, #4]
 8012b9a:	4699      	mov	r9, r3
 8012b9c:	ab08      	add	r3, sp, #32
 8012b9e:	c303      	stmia	r3!, {r0, r1}
 8012ba0:	6810      	ldr	r0, [r2, #0]
 8012ba2:	6851      	ldr	r1, [r2, #4]
 8012ba4:	ab0a      	add	r3, sp, #40	; 0x28
 8012ba6:	c303      	stmia	r3!, {r0, r1}
 8012ba8:	a808      	add	r0, sp, #32
 8012baa:	f7f9 fd71 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012bae:	4629      	mov	r1, r5
 8012bb0:	a80a      	add	r0, sp, #40	; 0x28
 8012bb2:	f7f9 fd95 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012bb6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012bba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012bbe:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012bc2:	4d63      	ldr	r5, [pc, #396]	; (8012d50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012bc4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012bc8:	6828      	ldr	r0, [r5, #0]
 8012bca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012bce:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012bd2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012bd6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012bda:	440a      	add	r2, r1
 8012bdc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012be0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012be4:	4413      	add	r3, r2
 8012be6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012bea:	6803      	ldr	r3, [r0, #0]
 8012bec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012bee:	4798      	blx	r3
 8012bf0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012bf4:	d119      	bne.n	8012c2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012bf6:	f010 0f20 	tst.w	r0, #32
 8012bfa:	6828      	ldr	r0, [r5, #0]
 8012bfc:	d018      	beq.n	8012c30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012bfe:	2500      	movs	r5, #0
 8012c00:	6801      	ldr	r1, [r0, #0]
 8012c02:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012c06:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012c0a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012c0e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012c12:	9502      	str	r5, [sp, #8]
 8012c14:	b2b6      	uxth	r6, r6
 8012c16:	fa1f f588 	uxth.w	r5, r8
 8012c1a:	9601      	str	r6, [sp, #4]
 8012c1c:	9500      	str	r5, [sp, #0]
 8012c1e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012c20:	4621      	mov	r1, r4
 8012c22:	47a8      	blx	r5
 8012c24:	b00d      	add	sp, #52	; 0x34
 8012c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c2a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012c2e:	e7e4      	b.n	8012bfa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012c30:	6803      	ldr	r3, [r0, #0]
 8012c32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012c34:	4798      	blx	r3
 8012c36:	4947      	ldr	r1, [pc, #284]	; (8012d54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012c38:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012c3c:	880b      	ldrh	r3, [r1, #0]
 8012c3e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012c42:	fb03 5202 	mla	r2, r3, r2, r5
 8012c46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012c4a:	4373      	muls	r3, r6
 8012c4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012c50:	9307      	str	r3, [sp, #28]
 8012c52:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012c56:	9306      	str	r3, [sp, #24]
 8012c58:	468a      	mov	sl, r1
 8012c5a:	9b07      	ldr	r3, [sp, #28]
 8012c5c:	4298      	cmp	r0, r3
 8012c5e:	d270      	bcs.n	8012d42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012c60:	9b06      	ldr	r3, [sp, #24]
 8012c62:	4621      	mov	r1, r4
 8012c64:	eb00 0b03 	add.w	fp, r0, r3
 8012c68:	4558      	cmp	r0, fp
 8012c6a:	d25d      	bcs.n	8012d28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012c6c:	f851 4b04 	ldr.w	r4, [r1], #4
 8012c70:	0e23      	lsrs	r3, r4, #24
 8012c72:	d014      	beq.n	8012c9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012c74:	2bff      	cmp	r3, #255	; 0xff
 8012c76:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012c7a:	d112      	bne.n	8012ca2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012c7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012c80:	d10f      	bne.n	8012ca2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012c82:	0963      	lsrs	r3, r4, #5
 8012c84:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012c88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c8c:	f02c 0c07 	bic.w	ip, ip, #7
 8012c90:	ea43 0c0c 	orr.w	ip, r3, ip
 8012c94:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012c98:	ea4c 0404 	orr.w	r4, ip, r4
 8012c9c:	8004      	strh	r4, [r0, #0]
 8012c9e:	3002      	adds	r0, #2
 8012ca0:	e7e2      	b.n	8012c68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012ca2:	fb09 f303 	mul.w	r3, r9, r3
 8012ca6:	8807      	ldrh	r7, [r0, #0]
 8012ca8:	1c5a      	adds	r2, r3, #1
 8012caa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012cae:	1212      	asrs	r2, r2, #8
 8012cb0:	123e      	asrs	r6, r7, #8
 8012cb2:	b293      	uxth	r3, r2
 8012cb4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012cb8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012cbc:	43d2      	mvns	r2, r2
 8012cbe:	b2d2      	uxtb	r2, r2
 8012cc0:	10fd      	asrs	r5, r7, #3
 8012cc2:	fb1e fe03 	smulbb	lr, lr, r3
 8012cc6:	00ff      	lsls	r7, r7, #3
 8012cc8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012ccc:	fb06 e602 	mla	r6, r6, r2, lr
 8012cd0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012cd4:	b2ff      	uxtb	r7, r7
 8012cd6:	fa5f fc8c 	uxtb.w	ip, ip
 8012cda:	b2e4      	uxtb	r4, r4
 8012cdc:	b2b6      	uxth	r6, r6
 8012cde:	fb1c fc03 	smulbb	ip, ip, r3
 8012ce2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012ce6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012cea:	fb14 f403 	smulbb	r4, r4, r3
 8012cee:	fb05 c502 	mla	r5, r5, r2, ip
 8012cf2:	f106 0e01 	add.w	lr, r6, #1
 8012cf6:	fb07 4702 	mla	r7, r7, r2, r4
 8012cfa:	b2ad      	uxth	r5, r5
 8012cfc:	b2bf      	uxth	r7, r7
 8012cfe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012d02:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8012d06:	f105 0c01 	add.w	ip, r5, #1
 8012d0a:	1c7e      	adds	r6, r7, #1
 8012d0c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012d10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012d14:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012d18:	096d      	lsrs	r5, r5, #5
 8012d1a:	ea46 060e 	orr.w	r6, r6, lr
 8012d1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012d22:	432e      	orrs	r6, r5
 8012d24:	8006      	strh	r6, [r0, #0]
 8012d26:	e7ba      	b.n	8012c9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012d28:	f8ba 3000 	ldrh.w	r3, [sl]
 8012d2c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8012d30:	eba3 0308 	sub.w	r3, r3, r8
 8012d34:	eba4 0408 	sub.w	r4, r4, r8
 8012d38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012d3c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012d40:	e78b      	b.n	8012c5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012d42:	4b03      	ldr	r3, [pc, #12]	; (8012d50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012d44:	6818      	ldr	r0, [r3, #0]
 8012d46:	6803      	ldr	r3, [r0, #0]
 8012d48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d4a:	4798      	blx	r3
 8012d4c:	e76a      	b.n	8012c24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012d4e:	bf00      	nop
 8012d50:	2000a2b8 	.word	0x2000a2b8
 8012d54:	2000a2b2 	.word	0x2000a2b2

08012d58 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8012d58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012d5c:	460c      	mov	r4, r1
 8012d5e:	b085      	sub	sp, #20
 8012d60:	6810      	ldr	r0, [r2, #0]
 8012d62:	6851      	ldr	r1, [r2, #4]
 8012d64:	466d      	mov	r5, sp
 8012d66:	c503      	stmia	r5!, {r0, r1}
 8012d68:	6818      	ldr	r0, [r3, #0]
 8012d6a:	6859      	ldr	r1, [r3, #4]
 8012d6c:	4616      	mov	r6, r2
 8012d6e:	c503      	stmia	r5!, {r0, r1}
 8012d70:	4668      	mov	r0, sp
 8012d72:	f7f9 fc8d 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d76:	4631      	mov	r1, r6
 8012d78:	a802      	add	r0, sp, #8
 8012d7a:	f7f9 fcb1 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d7e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012d82:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012d86:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012d8a:	4d28      	ldr	r5, [pc, #160]	; (8012e2c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8012d8c:	4e28      	ldr	r6, [pc, #160]	; (8012e30 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8012d8e:	6828      	ldr	r0, [r5, #0]
 8012d90:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012d94:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8012d98:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d9c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012da0:	f8bd 1000 	ldrh.w	r1, [sp]
 8012da4:	440a      	add	r2, r1
 8012da6:	f8ad 2008 	strh.w	r2, [sp, #8]
 8012daa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012dae:	4413      	add	r3, r2
 8012db0:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012db4:	6803      	ldr	r3, [r0, #0]
 8012db6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012db8:	4798      	blx	r3
 8012dba:	8833      	ldrh	r3, [r6, #0]
 8012dbc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012dc0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012dc4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8012e34 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012dc8:	fb03 1202 	mla	r2, r3, r2, r1
 8012dcc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012dd0:	fb08 f303 	mul.w	r3, r8, r3
 8012dd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012dd8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8012ddc:	4298      	cmp	r0, r3
 8012dde:	d21d      	bcs.n	8012e1c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012de0:	eb00 080c 	add.w	r8, r0, ip
 8012de4:	4540      	cmp	r0, r8
 8012de6:	d20f      	bcs.n	8012e08 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8012de8:	f854 1b04 	ldr.w	r1, [r4], #4
 8012dec:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8012df0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8012df4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012df8:	ea42 0209 	orr.w	r2, r2, r9
 8012dfc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012e00:	430a      	orrs	r2, r1
 8012e02:	f820 2b02 	strh.w	r2, [r0], #2
 8012e06:	e7ed      	b.n	8012de4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8012e08:	8832      	ldrh	r2, [r6, #0]
 8012e0a:	1bd2      	subs	r2, r2, r7
 8012e0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e10:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012e14:	1bd2      	subs	r2, r2, r7
 8012e16:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8012e1a:	e7df      	b.n	8012ddc <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8012e1c:	6828      	ldr	r0, [r5, #0]
 8012e1e:	6803      	ldr	r3, [r0, #0]
 8012e20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e22:	4798      	blx	r3
 8012e24:	b005      	add	sp, #20
 8012e26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e2a:	bf00      	nop
 8012e2c:	2000a2b8 	.word	0x2000a2b8
 8012e30:	2000a2b2 	.word	0x2000a2b2
 8012e34:	fffff800 	.word	0xfffff800

08012e38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e3c:	460e      	mov	r6, r1
 8012e3e:	b08e      	sub	sp, #56	; 0x38
 8012e40:	4604      	mov	r4, r0
 8012e42:	6808      	ldr	r0, [r1, #0]
 8012e44:	6849      	ldr	r1, [r1, #4]
 8012e46:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8013020 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8012e4a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8013024 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8012e4e:	461d      	mov	r5, r3
 8012e50:	ab0a      	add	r3, sp, #40	; 0x28
 8012e52:	c303      	stmia	r3!, {r0, r1}
 8012e54:	6810      	ldr	r0, [r2, #0]
 8012e56:	6851      	ldr	r1, [r2, #4]
 8012e58:	ab0c      	add	r3, sp, #48	; 0x30
 8012e5a:	c303      	stmia	r3!, {r0, r1}
 8012e5c:	a80a      	add	r0, sp, #40	; 0x28
 8012e5e:	f7f9 fc17 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e62:	4631      	mov	r1, r6
 8012e64:	a80c      	add	r0, sp, #48	; 0x30
 8012e66:	f7f9 fc3b 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012e6a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8012e6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012e72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012e76:	f8d8 0000 	ldr.w	r0, [r8]
 8012e7a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8012e7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012e82:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012e86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012e8a:	440c      	add	r4, r1
 8012e8c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012e90:	440a      	add	r2, r1
 8012e92:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8012e96:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8012e9a:	4413      	add	r3, r2
 8012e9c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012ea0:	6803      	ldr	r3, [r0, #0]
 8012ea2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ea4:	4798      	blx	r3
 8012ea6:	2dff      	cmp	r5, #255	; 0xff
 8012ea8:	d124      	bne.n	8012ef4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8012eaa:	f010 0f01 	tst.w	r0, #1
 8012eae:	f8d8 0000 	ldr.w	r0, [r8]
 8012eb2:	d022      	beq.n	8012efa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8012eb4:	2100      	movs	r1, #0
 8012eb6:	f8d0 c000 	ldr.w	ip, [r0]
 8012eba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012ebe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012ec2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8012ec6:	f04f 0e01 	mov.w	lr, #1
 8012eca:	f8cd e018 	str.w	lr, [sp, #24]
 8012ece:	f8b9 e000 	ldrh.w	lr, [r9]
 8012ed2:	9503      	str	r5, [sp, #12]
 8012ed4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012ed8:	b2b6      	uxth	r6, r6
 8012eda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012ede:	9102      	str	r1, [sp, #8]
 8012ee0:	b2bf      	uxth	r7, r7
 8012ee2:	9601      	str	r6, [sp, #4]
 8012ee4:	9700      	str	r7, [sp, #0]
 8012ee6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8012eea:	4621      	mov	r1, r4
 8012eec:	47a8      	blx	r5
 8012eee:	b00e      	add	sp, #56	; 0x38
 8012ef0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012ef4:	f010 0f04 	tst.w	r0, #4
 8012ef8:	e7d9      	b.n	8012eae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8012efa:	6803      	ldr	r3, [r0, #0]
 8012efc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012efe:	4798      	blx	r3
 8012f00:	f8b9 3000 	ldrh.w	r3, [r9]
 8012f04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012f08:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8012f0c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8012f10:	fb03 1202 	mla	r2, r3, r2, r1
 8012f14:	ebac 0c07 	sub.w	ip, ip, r7
 8012f18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012f1c:	435e      	muls	r6, r3
 8012f1e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012f22:	2dff      	cmp	r5, #255	; 0xff
 8012f24:	eba3 0707 	sub.w	r7, r3, r7
 8012f28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012f2c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012f30:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012f34:	d049      	beq.n	8012fca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8012f36:	43eb      	mvns	r3, r5
 8012f38:	fa1f f985 	uxth.w	r9, r5
 8012f3c:	b2db      	uxtb	r3, r3
 8012f3e:	42b0      	cmp	r0, r6
 8012f40:	d266      	bcs.n	8013010 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012f42:	eb00 0a0e 	add.w	sl, r0, lr
 8012f46:	4550      	cmp	r0, sl
 8012f48:	4621      	mov	r1, r4
 8012f4a:	f104 0403 	add.w	r4, r4, #3
 8012f4e:	d25b      	bcs.n	8013008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012f50:	8802      	ldrh	r2, [r0, #0]
 8012f52:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012f56:	ea4f 2822 	mov.w	r8, r2, asr #8
 8012f5a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012f5e:	fb11 f109 	smulbb	r1, r1, r9
 8012f62:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012f66:	10d5      	asrs	r5, r2, #3
 8012f68:	fb08 1803 	mla	r8, r8, r3, r1
 8012f6c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012f70:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012f74:	fb11 f109 	smulbb	r1, r1, r9
 8012f78:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012f7c:	fb05 1503 	mla	r5, r5, r3, r1
 8012f80:	00d2      	lsls	r2, r2, #3
 8012f82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012f86:	b2d2      	uxtb	r2, r2
 8012f88:	fb11 f109 	smulbb	r1, r1, r9
 8012f8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012f90:	fa1f f888 	uxth.w	r8, r8
 8012f94:	fb02 1203 	mla	r2, r2, r3, r1
 8012f98:	b292      	uxth	r2, r2
 8012f9a:	f108 0101 	add.w	r1, r8, #1
 8012f9e:	b2ad      	uxth	r5, r5
 8012fa0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8012fa4:	1c51      	adds	r1, r2, #1
 8012fa6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012faa:	1c69      	adds	r1, r5, #1
 8012fac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012fb0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8012fb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012fb8:	096d      	lsrs	r5, r5, #5
 8012fba:	ea42 0208 	orr.w	r2, r2, r8
 8012fbe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012fc2:	432a      	orrs	r2, r5
 8012fc4:	f820 2b02 	strh.w	r2, [r0], #2
 8012fc8:	e7bd      	b.n	8012f46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8012fca:	4a14      	ldr	r2, [pc, #80]	; (801301c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8012fcc:	42b0      	cmp	r0, r6
 8012fce:	d21f      	bcs.n	8013010 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012fd0:	eb00 050e 	add.w	r5, r0, lr
 8012fd4:	42a8      	cmp	r0, r5
 8012fd6:	4621      	mov	r1, r4
 8012fd8:	f104 0403 	add.w	r4, r4, #3
 8012fdc:	d210      	bcs.n	8013000 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8012fde:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012fe2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012fe6:	00db      	lsls	r3, r3, #3
 8012fe8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8012fec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012ff0:	430b      	orrs	r3, r1
 8012ff2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012ff6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8012ffa:	f820 3b02 	strh.w	r3, [r0], #2
 8012ffe:	e7e9      	b.n	8012fd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8013000:	4438      	add	r0, r7
 8013002:	eb01 040c 	add.w	r4, r1, ip
 8013006:	e7e1      	b.n	8012fcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013008:	4438      	add	r0, r7
 801300a:	eb01 040c 	add.w	r4, r1, ip
 801300e:	e796      	b.n	8012f3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8013010:	4b03      	ldr	r3, [pc, #12]	; (8013020 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8013012:	6818      	ldr	r0, [r3, #0]
 8013014:	6803      	ldr	r3, [r0, #0]
 8013016:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013018:	4798      	blx	r3
 801301a:	e768      	b.n	8012eee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801301c:	fffff800 	.word	0xfffff800
 8013020:	2000a2b8 	.word	0x2000a2b8
 8013024:	2000a2b2 	.word	0x2000a2b2

08013028 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013028:	b570      	push	{r4, r5, r6, lr}
 801302a:	9c04      	ldr	r4, [sp, #16]
 801302c:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8013030:	4605      	mov	r5, r0
 8013032:	4608      	mov	r0, r1
 8013034:	4619      	mov	r1, r3
 8013036:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801303a:	2a0d      	cmp	r2, #13
 801303c:	d825      	bhi.n	801308a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801303e:	e8df f002 	tbb	[pc, r2]
 8013042:	1807      	.short	0x1807
 8013044:	1d1d1d13 	.word	0x1d1d1d13
 8013048:	1d1d1d1d 	.word	0x1d1d1d1d
 801304c:	1d1d1d1d 	.word	0x1d1d1d1d
 8013050:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013054:	682a      	ldr	r2, [r5, #0]
 8013056:	68d6      	ldr	r6, [r2, #12]
 8013058:	4623      	mov	r3, r4
 801305a:	460a      	mov	r2, r1
 801305c:	46b4      	mov	ip, r6
 801305e:	4601      	mov	r1, r0
 8013060:	4628      	mov	r0, r5
 8013062:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013066:	4760      	bx	ip
 8013068:	4622      	mov	r2, r4
 801306a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801306e:	f7ff bd8d 	b.w	8012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013072:	4622      	mov	r2, r4
 8013074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013078:	f7ff bede 	b.w	8012e38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801307c:	4b03      	ldr	r3, [pc, #12]	; (801308c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801307e:	4a04      	ldr	r2, [pc, #16]	; (8013090 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8013080:	4804      	ldr	r0, [pc, #16]	; (8013094 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8013082:	f240 315d 	movw	r1, #861	; 0x35d
 8013086:	f008 fd2b 	bl	801bae0 <__assert_func>
 801308a:	bd70      	pop	{r4, r5, r6, pc}
 801308c:	0801f9a7 	.word	0x0801f9a7
 8013090:	0802010a 	.word	0x0802010a
 8013094:	0801f882 	.word	0x0801f882

08013098 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801309c:	b093      	sub	sp, #76	; 0x4c
 801309e:	880e      	ldrh	r6, [r1, #0]
 80130a0:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80130a4:	4681      	mov	r9, r0
 80130a6:	4688      	mov	r8, r1
 80130a8:	4615      	mov	r5, r2
 80130aa:	b136      	cbz	r6, 80130ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 80130ac:	4b70      	ldr	r3, [pc, #448]	; (8013270 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80130ae:	4a71      	ldr	r2, [pc, #452]	; (8013274 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80130b0:	4871      	ldr	r0, [pc, #452]	; (8013278 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80130b2:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 80130b6:	f008 fd13 	bl	801bae0 <__assert_func>
 80130ba:	6810      	ldr	r0, [r2, #0]
 80130bc:	6851      	ldr	r1, [r2, #4]
 80130be:	4f6f      	ldr	r7, [pc, #444]	; (801327c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80130c0:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8013280 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 80130c4:	ac0e      	add	r4, sp, #56	; 0x38
 80130c6:	c403      	stmia	r4!, {r0, r1}
 80130c8:	6818      	ldr	r0, [r3, #0]
 80130ca:	6859      	ldr	r1, [r3, #4]
 80130cc:	ac10      	add	r4, sp, #64	; 0x40
 80130ce:	c403      	stmia	r4!, {r0, r1}
 80130d0:	a80e      	add	r0, sp, #56	; 0x38
 80130d2:	f7f9 fadd 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80130d6:	4629      	mov	r1, r5
 80130d8:	a810      	add	r0, sp, #64	; 0x40
 80130da:	f7f9 fb01 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80130de:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80130e2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80130e6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80130ea:	6838      	ldr	r0, [r7, #0]
 80130ec:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80130f0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80130f4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80130f8:	4489      	add	r9, r1
 80130fa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80130fe:	440a      	add	r2, r1
 8013100:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013104:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013108:	4413      	add	r3, r2
 801310a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801310e:	6803      	ldr	r3, [r0, #0]
 8013110:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013112:	4798      	blx	r3
 8013114:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013118:	6838      	ldr	r0, [r7, #0]
 801311a:	d01d      	beq.n	8013158 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801311c:	6802      	ldr	r2, [r0, #0]
 801311e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013122:	e9cd 6608 	strd	r6, r6, [sp, #32]
 8013126:	210b      	movs	r1, #11
 8013128:	9107      	str	r1, [sp, #28]
 801312a:	f8bb 1000 	ldrh.w	r1, [fp]
 801312e:	9106      	str	r1, [sp, #24]
 8013130:	2101      	movs	r1, #1
 8013132:	e9cd a104 	strd	sl, r1, [sp, #16]
 8013136:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801313a:	9103      	str	r1, [sp, #12]
 801313c:	b2a4      	uxth	r4, r4
 801313e:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8013142:	9100      	str	r1, [sp, #0]
 8013144:	b2ad      	uxth	r5, r5
 8013146:	9502      	str	r5, [sp, #8]
 8013148:	9401      	str	r4, [sp, #4]
 801314a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801314c:	4649      	mov	r1, r9
 801314e:	4642      	mov	r2, r8
 8013150:	47a0      	blx	r4
 8013152:	b013      	add	sp, #76	; 0x4c
 8013154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013158:	6803      	ldr	r3, [r0, #0]
 801315a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801315c:	4798      	blx	r3
 801315e:	f8bb 3000 	ldrh.w	r3, [fp]
 8013162:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8013166:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801316a:	fb03 1202 	mla	r2, r3, r2, r1
 801316e:	435d      	muls	r5, r3
 8013170:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013174:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8013178:	920c      	str	r2, [sp, #48]	; 0x30
 801317a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801317e:	1b12      	subs	r2, r2, r4
 8013180:	920d      	str	r2, [sp, #52]	; 0x34
 8013182:	0062      	lsls	r2, r4, #1
 8013184:	1b1c      	subs	r4, r3, r4
 8013186:	0063      	lsls	r3, r4, #1
 8013188:	920a      	str	r2, [sp, #40]	; 0x28
 801318a:	930b      	str	r3, [sp, #44]	; 0x2c
 801318c:	f04f 0e04 	mov.w	lr, #4
 8013190:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013192:	4298      	cmp	r0, r3
 8013194:	d266      	bcs.n	8013264 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 8013196:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013198:	eb00 0b03 	add.w	fp, r0, r3
 801319c:	4558      	cmp	r0, fp
 801319e:	d25c      	bcs.n	801325a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 80131a0:	f819 3b01 	ldrb.w	r3, [r9], #1
 80131a4:	fb1e e303 	smlabb	r3, lr, r3, lr
 80131a8:	f858 2003 	ldr.w	r2, [r8, r3]
 80131ac:	0e11      	lsrs	r1, r2, #24
 80131ae:	d012      	beq.n	80131d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80131b0:	29ff      	cmp	r1, #255	; 0xff
 80131b2:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80131b6:	d110      	bne.n	80131da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80131b8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80131bc:	d10d      	bne.n	80131da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80131be:	0953      	lsrs	r3, r2, #5
 80131c0:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80131c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80131c8:	f027 0707 	bic.w	r7, r7, #7
 80131cc:	431f      	orrs	r7, r3
 80131ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80131d2:	433a      	orrs	r2, r7
 80131d4:	8002      	strh	r2, [r0, #0]
 80131d6:	3002      	adds	r0, #2
 80131d8:	e7e0      	b.n	801319c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 80131da:	fb0a f101 	mul.w	r1, sl, r1
 80131de:	8806      	ldrh	r6, [r0, #0]
 80131e0:	1c4b      	adds	r3, r1, #1
 80131e2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80131e6:	1235      	asrs	r5, r6, #8
 80131e8:	10f4      	asrs	r4, r6, #3
 80131ea:	121b      	asrs	r3, r3, #8
 80131ec:	00f6      	lsls	r6, r6, #3
 80131ee:	b299      	uxth	r1, r3
 80131f0:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80131f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80131f8:	b2f6      	uxtb	r6, r6
 80131fa:	43db      	mvns	r3, r3
 80131fc:	b2d2      	uxtb	r2, r2
 80131fe:	b2db      	uxtb	r3, r3
 8013200:	fb1c fc01 	smulbb	ip, ip, r1
 8013204:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013208:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801320c:	fb12 f201 	smulbb	r2, r2, r1
 8013210:	fb05 c503 	mla	r5, r5, r3, ip
 8013214:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8013218:	b2ff      	uxtb	r7, r7
 801321a:	fb06 2203 	mla	r2, r6, r3, r2
 801321e:	b2ad      	uxth	r5, r5
 8013220:	fb17 f701 	smulbb	r7, r7, r1
 8013224:	b292      	uxth	r2, r2
 8013226:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801322a:	fb04 7403 	mla	r4, r4, r3, r7
 801322e:	f105 0c01 	add.w	ip, r5, #1
 8013232:	1c57      	adds	r7, r2, #1
 8013234:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013238:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801323c:	b2a4      	uxth	r4, r4
 801323e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013242:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013246:	433d      	orrs	r5, r7
 8013248:	1c67      	adds	r7, r4, #1
 801324a:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801324e:	0964      	lsrs	r4, r4, #5
 8013250:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013254:	4325      	orrs	r5, r4
 8013256:	8005      	strh	r5, [r0, #0]
 8013258:	e7bd      	b.n	80131d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801325a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801325c:	4418      	add	r0, r3
 801325e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013260:	4499      	add	r9, r3
 8013262:	e795      	b.n	8013190 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8013264:	4b05      	ldr	r3, [pc, #20]	; (801327c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013266:	6818      	ldr	r0, [r3, #0]
 8013268:	6803      	ldr	r3, [r0, #0]
 801326a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801326c:	4798      	blx	r3
 801326e:	e770      	b.n	8013152 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8013270:	0801f780 	.word	0x0801f780
 8013274:	0801fedb 	.word	0x0801fedb
 8013278:	0801f882 	.word	0x0801f882
 801327c:	2000a2b8 	.word	0x2000a2b8
 8013280:	2000a2b2 	.word	0x2000a2b2

08013284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013288:	4614      	mov	r4, r2
 801328a:	880a      	ldrh	r2, [r1, #0]
 801328c:	b087      	sub	sp, #28
 801328e:	2a02      	cmp	r2, #2
 8013290:	4680      	mov	r8, r0
 8013292:	460d      	mov	r5, r1
 8013294:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013298:	d006      	beq.n	80132a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801329a:	4b63      	ldr	r3, [pc, #396]	; (8013428 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801329c:	4a63      	ldr	r2, [pc, #396]	; (801342c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801329e:	4864      	ldr	r0, [pc, #400]	; (8013430 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 80132a0:	f240 11e1 	movw	r1, #481	; 0x1e1
 80132a4:	f008 fc1c 	bl	801bae0 <__assert_func>
 80132a8:	2e00      	cmp	r6, #0
 80132aa:	f000 80b9 	beq.w	8013420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 80132ae:	6820      	ldr	r0, [r4, #0]
 80132b0:	6861      	ldr	r1, [r4, #4]
 80132b2:	af02      	add	r7, sp, #8
 80132b4:	c703      	stmia	r7!, {r0, r1}
 80132b6:	6818      	ldr	r0, [r3, #0]
 80132b8:	6859      	ldr	r1, [r3, #4]
 80132ba:	af04      	add	r7, sp, #16
 80132bc:	c703      	stmia	r7!, {r0, r1}
 80132be:	a802      	add	r0, sp, #8
 80132c0:	f7f9 f9e6 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80132c4:	4621      	mov	r1, r4
 80132c6:	a804      	add	r0, sp, #16
 80132c8:	f7f9 fa0a 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80132cc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80132d0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80132d4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80132d8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80132dc:	fb14 2103 	smlabb	r1, r4, r3, r2
 80132e0:	eb08 0401 	add.w	r4, r8, r1
 80132e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80132e8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80132ec:	440a      	add	r2, r1
 80132ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 80132f2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80132f6:	4413      	add	r3, r2
 80132f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80132fc:	4b4d      	ldr	r3, [pc, #308]	; (8013434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80132fe:	6818      	ldr	r0, [r3, #0]
 8013300:	6803      	ldr	r3, [r0, #0]
 8013302:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013304:	4798      	blx	r3
 8013306:	4b4c      	ldr	r3, [pc, #304]	; (8013438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8013308:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801330c:	881a      	ldrh	r2, [r3, #0]
 801330e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8013312:	2eff      	cmp	r6, #255	; 0xff
 8013314:	fb02 c101 	mla	r1, r2, r1, ip
 8013318:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801331c:	fb02 f207 	mul.w	r2, r2, r7
 8013320:	f105 0104 	add.w	r1, r5, #4
 8013324:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8013328:	461d      	mov	r5, r3
 801332a:	d05a      	beq.n	80133e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801332c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8013330:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013334:	b2b6      	uxth	r6, r6
 8013336:	fa1f fe8e 	uxth.w	lr, lr
 801333a:	9301      	str	r3, [sp, #4]
 801333c:	4282      	cmp	r2, r0
 801333e:	d96a      	bls.n	8013416 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8013340:	eb00 0b0a 	add.w	fp, r0, sl
 8013344:	4583      	cmp	fp, r0
 8013346:	d940      	bls.n	80133ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8013348:	f814 3b01 	ldrb.w	r3, [r4], #1
 801334c:	8805      	ldrh	r5, [r0, #0]
 801334e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8013352:	122f      	asrs	r7, r5, #8
 8013354:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013358:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801335c:	fb17 f70e 	smulbb	r7, r7, lr
 8013360:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013364:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013368:	00ed      	lsls	r5, r5, #3
 801336a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801336e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013372:	10df      	asrs	r7, r3, #3
 8013374:	b2ed      	uxtb	r5, r5
 8013376:	00db      	lsls	r3, r3, #3
 8013378:	fa1f fc8c 	uxth.w	ip, ip
 801337c:	fb19 f90e 	smulbb	r9, r9, lr
 8013380:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013384:	b2db      	uxtb	r3, r3
 8013386:	fb15 f50e 	smulbb	r5, r5, lr
 801338a:	fb07 9706 	mla	r7, r7, r6, r9
 801338e:	fb03 5306 	mla	r3, r3, r6, r5
 8013392:	f10c 0901 	add.w	r9, ip, #1
 8013396:	b29b      	uxth	r3, r3
 8013398:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801339c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80133a0:	f103 0c01 	add.w	ip, r3, #1
 80133a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80133a8:	b2bf      	uxth	r7, r7
 80133aa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80133ae:	ea4c 0c09 	orr.w	ip, ip, r9
 80133b2:	f107 0901 	add.w	r9, r7, #1
 80133b6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80133ba:	097f      	lsrs	r7, r7, #5
 80133bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80133c0:	ea4c 0c07 	orr.w	ip, ip, r7
 80133c4:	f820 cb02 	strh.w	ip, [r0], #2
 80133c8:	e7bc      	b.n	8013344 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80133ca:	9b01      	ldr	r3, [sp, #4]
 80133cc:	881b      	ldrh	r3, [r3, #0]
 80133ce:	eba3 0308 	sub.w	r3, r3, r8
 80133d2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80133d6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80133da:	eba3 0308 	sub.w	r3, r3, r8
 80133de:	441c      	add	r4, r3
 80133e0:	e7ac      	b.n	801333c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80133e2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80133e6:	4282      	cmp	r2, r0
 80133e8:	d915      	bls.n	8013416 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80133ea:	eb00 060a 	add.w	r6, r0, sl
 80133ee:	4286      	cmp	r6, r0
 80133f0:	d906      	bls.n	8013400 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80133f2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80133f6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80133fa:	f820 3b02 	strh.w	r3, [r0], #2
 80133fe:	e7f6      	b.n	80133ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8013400:	882b      	ldrh	r3, [r5, #0]
 8013402:	eba3 0308 	sub.w	r3, r3, r8
 8013406:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801340a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801340e:	eba3 0308 	sub.w	r3, r3, r8
 8013412:	441c      	add	r4, r3
 8013414:	e7e7      	b.n	80133e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8013416:	4b07      	ldr	r3, [pc, #28]	; (8013434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013418:	6818      	ldr	r0, [r3, #0]
 801341a:	6803      	ldr	r3, [r0, #0]
 801341c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801341e:	4798      	blx	r3
 8013420:	b007      	add	sp, #28
 8013422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013426:	bf00      	nop
 8013428:	0801f6b0 	.word	0x0801f6b0
 801342c:	0801fd45 	.word	0x0801fd45
 8013430:	0801f882 	.word	0x0801f882
 8013434:	2000a2b8 	.word	0x2000a2b8
 8013438:	2000a2b2 	.word	0x2000a2b2

0801343c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801343c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013440:	f8b1 9000 	ldrh.w	r9, [r1]
 8013444:	b091      	sub	sp, #68	; 0x44
 8013446:	f1b9 0f01 	cmp.w	r9, #1
 801344a:	4604      	mov	r4, r0
 801344c:	460f      	mov	r7, r1
 801344e:	4690      	mov	r8, r2
 8013450:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8013454:	d006      	beq.n	8013464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8013456:	4b84      	ldr	r3, [pc, #528]	; (8013668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8013458:	4a84      	ldr	r2, [pc, #528]	; (801366c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801345a:	4885      	ldr	r0, [pc, #532]	; (8013670 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801345c:	f240 212f 	movw	r1, #559	; 0x22f
 8013460:	f008 fb3e 	bl	801bae0 <__assert_func>
 8013464:	2d00      	cmp	r5, #0
 8013466:	d04f      	beq.n	8013508 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013468:	6810      	ldr	r0, [r2, #0]
 801346a:	6851      	ldr	r1, [r2, #4]
 801346c:	f8df b208 	ldr.w	fp, [pc, #520]	; 8013678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8013470:	ae0c      	add	r6, sp, #48	; 0x30
 8013472:	c603      	stmia	r6!, {r0, r1}
 8013474:	6818      	ldr	r0, [r3, #0]
 8013476:	6859      	ldr	r1, [r3, #4]
 8013478:	ae0e      	add	r6, sp, #56	; 0x38
 801347a:	c603      	stmia	r6!, {r0, r1}
 801347c:	a80c      	add	r0, sp, #48	; 0x30
 801347e:	f7f9 f907 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013482:	4641      	mov	r1, r8
 8013484:	a80e      	add	r0, sp, #56	; 0x38
 8013486:	f7f9 f92b 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801348a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801348e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013492:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013496:	f8db 0000 	ldr.w	r0, [fp]
 801349a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801349e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80134a2:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801367c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 80134a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80134aa:	440c      	add	r4, r1
 80134ac:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80134b0:	440a      	add	r2, r1
 80134b2:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80134b6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80134ba:	4413      	add	r3, r2
 80134bc:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80134c0:	6803      	ldr	r3, [r0, #0]
 80134c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80134c4:	4798      	blx	r3
 80134c6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80134ca:	f8db 0000 	ldr.w	r0, [fp]
 80134ce:	d01e      	beq.n	801350e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80134d0:	2200      	movs	r2, #0
 80134d2:	6801      	ldr	r1, [r0, #0]
 80134d4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80134d8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80134dc:	220b      	movs	r2, #11
 80134de:	9207      	str	r2, [sp, #28]
 80134e0:	f8b8 2000 	ldrh.w	r2, [r8]
 80134e4:	9504      	str	r5, [sp, #16]
 80134e6:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80134ea:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80134ee:	9203      	str	r2, [sp, #12]
 80134f0:	fa1f f28a 	uxth.w	r2, sl
 80134f4:	9202      	str	r2, [sp, #8]
 80134f6:	b2b6      	uxth	r6, r6
 80134f8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80134fc:	9200      	str	r2, [sp, #0]
 80134fe:	9601      	str	r6, [sp, #4]
 8013500:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8013502:	463a      	mov	r2, r7
 8013504:	4621      	mov	r1, r4
 8013506:	47a8      	blx	r5
 8013508:	b011      	add	sp, #68	; 0x44
 801350a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801350e:	6803      	ldr	r3, [r0, #0]
 8013510:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013512:	4798      	blx	r3
 8013514:	f8b8 2000 	ldrh.w	r2, [r8]
 8013518:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801351c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8013520:	2dff      	cmp	r5, #255	; 0xff
 8013522:	fb02 1303 	mla	r3, r2, r3, r1
 8013526:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801352a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801352e:	fb0a fa02 	mul.w	sl, sl, r2
 8013532:	d062      	beq.n	80135fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8013534:	ea6f 0c05 	mvn.w	ip, r5
 8013538:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801353c:	930a      	str	r3, [sp, #40]	; 0x28
 801353e:	b2ad      	uxth	r5, r5
 8013540:	fa5f fc8c 	uxtb.w	ip, ip
 8013544:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8013548:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801354a:	4298      	cmp	r0, r3
 801354c:	f080 8085 	bcs.w	801365a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013550:	eb00 0b09 	add.w	fp, r0, r9
 8013554:	4558      	cmp	r0, fp
 8013556:	d246      	bcs.n	80135e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8013558:	f814 eb01 	ldrb.w	lr, [r4], #1
 801355c:	2303      	movs	r3, #3
 801355e:	2204      	movs	r2, #4
 8013560:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013564:	eb07 0a0e 	add.w	sl, r7, lr
 8013568:	8803      	ldrh	r3, [r0, #0]
 801356a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801356e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013572:	1219      	asrs	r1, r3, #8
 8013574:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013578:	fb18 f805 	smulbb	r8, r8, r5
 801357c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8013580:	10da      	asrs	r2, r3, #3
 8013582:	fb01 810c 	mla	r1, r1, ip, r8
 8013586:	00db      	lsls	r3, r3, #3
 8013588:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801358c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013590:	b2db      	uxtb	r3, r3
 8013592:	fb18 f805 	smulbb	r8, r8, r5
 8013596:	fb1e fe05 	smulbb	lr, lr, r5
 801359a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801359e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80135a2:	b289      	uxth	r1, r1
 80135a4:	fb02 820c 	mla	r2, r2, ip, r8
 80135a8:	fb03 e30c 	mla	r3, r3, ip, lr
 80135ac:	b292      	uxth	r2, r2
 80135ae:	b29b      	uxth	r3, r3
 80135b0:	f101 0801 	add.w	r8, r1, #1
 80135b4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80135b8:	f103 0e01 	add.w	lr, r3, #1
 80135bc:	f102 0801 	add.w	r8, r2, #1
 80135c0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80135c4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80135c8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80135cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80135d0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80135d4:	ea4e 0101 	orr.w	r1, lr, r1
 80135d8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80135dc:	ea41 0108 	orr.w	r1, r1, r8
 80135e0:	f820 1b02 	strh.w	r1, [r0], #2
 80135e4:	e7b6      	b.n	8013554 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80135e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80135e8:	881b      	ldrh	r3, [r3, #0]
 80135ea:	1b9b      	subs	r3, r3, r6
 80135ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80135f4:	1b9b      	subs	r3, r3, r6
 80135f6:	441c      	add	r4, r3
 80135f8:	e7a6      	b.n	8013548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80135fa:	491e      	ldr	r1, [pc, #120]	; (8013674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80135fc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013600:	2203      	movs	r2, #3
 8013602:	2504      	movs	r5, #4
 8013604:	4550      	cmp	r0, sl
 8013606:	d228      	bcs.n	801365a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013608:	eb00 0c09 	add.w	ip, r0, r9
 801360c:	4560      	cmp	r0, ip
 801360e:	4623      	mov	r3, r4
 8013610:	d219      	bcs.n	8013646 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8013612:	f893 e000 	ldrb.w	lr, [r3]
 8013616:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801361a:	eb07 0b0e 	add.w	fp, r7, lr
 801361e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013622:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8013626:	f89b b001 	ldrb.w	fp, [fp, #1]
 801362a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801362e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8013632:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013636:	ea43 030b 	orr.w	r3, r3, fp
 801363a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801363e:	3401      	adds	r4, #1
 8013640:	f820 3b02 	strh.w	r3, [r0], #2
 8013644:	e7e2      	b.n	801360c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8013646:	f8b8 3000 	ldrh.w	r3, [r8]
 801364a:	1b9b      	subs	r3, r3, r6
 801364c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013650:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013654:	1b9b      	subs	r3, r3, r6
 8013656:	441c      	add	r4, r3
 8013658:	e7d4      	b.n	8013604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801365a:	4b07      	ldr	r3, [pc, #28]	; (8013678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801365c:	6818      	ldr	r0, [r3, #0]
 801365e:	6803      	ldr	r3, [r0, #0]
 8013660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013662:	4798      	blx	r3
 8013664:	e750      	b.n	8013508 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013666:	bf00      	nop
 8013668:	0801f6fe 	.word	0x0801f6fe
 801366c:	0801fdce 	.word	0x0801fdce
 8013670:	0801f882 	.word	0x0801f882
 8013674:	fffff800 	.word	0xfffff800
 8013678:	2000a2b8 	.word	0x2000a2b8
 801367c:	2000a2b2 	.word	0x2000a2b2

08013680 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013680:	b430      	push	{r4, r5}
 8013682:	780d      	ldrb	r5, [r1, #0]
 8013684:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013688:	2d01      	cmp	r5, #1
 801368a:	d00a      	beq.n	80136a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801368c:	d305      	bcc.n	801369a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801368e:	2d02      	cmp	r5, #2
 8013690:	d10b      	bne.n	80136aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013692:	9402      	str	r4, [sp, #8]
 8013694:	bc30      	pop	{r4, r5}
 8013696:	f7ff bdf5 	b.w	8013284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801369a:	9402      	str	r4, [sp, #8]
 801369c:	bc30      	pop	{r4, r5}
 801369e:	f7ff bcfb 	b.w	8013098 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80136a2:	9402      	str	r4, [sp, #8]
 80136a4:	bc30      	pop	{r4, r5}
 80136a6:	f7ff bec9 	b.w	801343c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80136aa:	bc30      	pop	{r4, r5}
 80136ac:	4770      	bx	lr
	...

080136b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80136b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136b4:	4604      	mov	r4, r0
 80136b6:	b087      	sub	sp, #28
 80136b8:	6810      	ldr	r0, [r2, #0]
 80136ba:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80136be:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80138f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80136c2:	460e      	mov	r6, r1
 80136c4:	6851      	ldr	r1, [r2, #4]
 80136c6:	ad02      	add	r5, sp, #8
 80136c8:	c503      	stmia	r5!, {r0, r1}
 80136ca:	6818      	ldr	r0, [r3, #0]
 80136cc:	6859      	ldr	r1, [r3, #4]
 80136ce:	ad04      	add	r5, sp, #16
 80136d0:	4617      	mov	r7, r2
 80136d2:	c503      	stmia	r5!, {r0, r1}
 80136d4:	a802      	add	r0, sp, #8
 80136d6:	f7f8 ffdb 	bl	800c690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80136da:	4639      	mov	r1, r7
 80136dc:	a804      	add	r0, sp, #16
 80136de:	f7f8 ffff 	bl	800c6e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80136e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80136e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80136ea:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80136ee:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80136f2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80136f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80136fa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80136fe:	440e      	add	r6, r1
 8013700:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013704:	440a      	add	r2, r1
 8013706:	f8ad 2010 	strh.w	r2, [sp, #16]
 801370a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801370e:	4413      	add	r3, r2
 8013710:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013714:	4b77      	ldr	r3, [pc, #476]	; (80138f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013716:	6818      	ldr	r0, [r3, #0]
 8013718:	6803      	ldr	r3, [r0, #0]
 801371a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801371c:	4798      	blx	r3
 801371e:	f8b9 b000 	ldrh.w	fp, [r9]
 8013722:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013726:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801372a:	fb0b 2303 	mla	r3, fp, r3, r2
 801372e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013732:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013736:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801373a:	fb05 f50b 	mul.w	r5, r5, fp
 801373e:	9300      	str	r3, [sp, #0]
 8013740:	d069      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8013742:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8013746:	4558      	cmp	r0, fp
 8013748:	f080 80cc 	bcs.w	80138e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801374c:	9b00      	ldr	r3, [sp, #0]
 801374e:	18c3      	adds	r3, r0, r3
 8013750:	9301      	str	r3, [sp, #4]
 8013752:	4631      	mov	r1, r6
 8013754:	9b01      	ldr	r3, [sp, #4]
 8013756:	4298      	cmp	r0, r3
 8013758:	d24f      	bcs.n	80137fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801375a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801375e:	2a00      	cmp	r2, #0
 8013760:	d048      	beq.n	80137f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013762:	fb0a f202 	mul.w	r2, sl, r2
 8013766:	1c53      	adds	r3, r2, #1
 8013768:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801376c:	121b      	asrs	r3, r3, #8
 801376e:	d041      	beq.n	80137f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013770:	8802      	ldrh	r2, [r0, #0]
 8013772:	f8b4 c000 	ldrh.w	ip, [r4]
 8013776:	b29e      	uxth	r6, r3
 8013778:	1215      	asrs	r5, r2, #8
 801377a:	43db      	mvns	r3, r3
 801377c:	b2db      	uxtb	r3, r3
 801377e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013782:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013786:	fb15 f503 	smulbb	r5, r5, r3
 801378a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801378e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013792:	00d2      	lsls	r2, r2, #3
 8013794:	fb07 5706 	mla	r7, r7, r6, r5
 8013798:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801379c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80137a0:	b2d2      	uxtb	r2, r2
 80137a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80137a6:	b2bf      	uxth	r7, r7
 80137a8:	fb1e fe03 	smulbb	lr, lr, r3
 80137ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80137b0:	fa5f fc8c 	uxtb.w	ip, ip
 80137b4:	fb12 f203 	smulbb	r2, r2, r3
 80137b8:	fb05 e506 	mla	r5, r5, r6, lr
 80137bc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80137c0:	f107 0e01 	add.w	lr, r7, #1
 80137c4:	fa1f fc8c 	uxth.w	ip, ip
 80137c8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80137cc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80137d0:	f10c 0701 	add.w	r7, ip, #1
 80137d4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80137d8:	b2ad      	uxth	r5, r5
 80137da:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80137de:	ea47 070e 	orr.w	r7, r7, lr
 80137e2:	f105 0e01 	add.w	lr, r5, #1
 80137e6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80137ea:	096d      	lsrs	r5, r5, #5
 80137ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80137f0:	432f      	orrs	r7, r5
 80137f2:	8007      	strh	r7, [r0, #0]
 80137f4:	3002      	adds	r0, #2
 80137f6:	3402      	adds	r4, #2
 80137f8:	e7ac      	b.n	8013754 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80137fa:	f8b9 3000 	ldrh.w	r3, [r9]
 80137fe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013802:	eba3 0308 	sub.w	r3, r3, r8
 8013806:	eba6 0608 	sub.w	r6, r6, r8
 801380a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801380e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013812:	440e      	add	r6, r1
 8013814:	e797      	b.n	8013746 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013816:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801381a:	42a8      	cmp	r0, r5
 801381c:	d262      	bcs.n	80138e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801381e:	9b00      	ldr	r3, [sp, #0]
 8013820:	4631      	mov	r1, r6
 8013822:	eb00 0b03 	add.w	fp, r0, r3
 8013826:	4558      	cmp	r0, fp
 8013828:	d24e      	bcs.n	80138c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801382a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801382e:	b12b      	cbz	r3, 801383c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013830:	2bff      	cmp	r3, #255	; 0xff
 8013832:	f8b4 e000 	ldrh.w	lr, [r4]
 8013836:	d104      	bne.n	8013842 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8013838:	f8a0 e000 	strh.w	lr, [r0]
 801383c:	3002      	adds	r0, #2
 801383e:	3402      	adds	r4, #2
 8013840:	e7f1      	b.n	8013826 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8013842:	8802      	ldrh	r2, [r0, #0]
 8013844:	b29f      	uxth	r7, r3
 8013846:	1216      	asrs	r6, r2, #8
 8013848:	43db      	mvns	r3, r3
 801384a:	b2db      	uxtb	r3, r3
 801384c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013850:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013854:	fb16 f603 	smulbb	r6, r6, r3
 8013858:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801385c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013860:	00d2      	lsls	r2, r2, #3
 8013862:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013866:	b2d2      	uxtb	r2, r2
 8013868:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801386c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013870:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013874:	fb1a fa03 	smulbb	sl, sl, r3
 8013878:	fa1f fc8c 	uxth.w	ip, ip
 801387c:	fb12 f303 	smulbb	r3, r2, r3
 8013880:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013884:	fa5f fe8e 	uxtb.w	lr, lr
 8013888:	fb06 a607 	mla	r6, r6, r7, sl
 801388c:	f10c 0201 	add.w	r2, ip, #1
 8013890:	fb0e 3307 	mla	r3, lr, r7, r3
 8013894:	b2b6      	uxth	r6, r6
 8013896:	b29b      	uxth	r3, r3
 8013898:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801389c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80138a0:	f106 0a01 	add.w	sl, r6, #1
 80138a4:	f103 0c01 	add.w	ip, r3, #1
 80138a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80138ac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80138b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80138b4:	0976      	lsrs	r6, r6, #5
 80138b6:	ea4c 0c02 	orr.w	ip, ip, r2
 80138ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80138be:	ea4c 0c06 	orr.w	ip, ip, r6
 80138c2:	f8a0 c000 	strh.w	ip, [r0]
 80138c6:	e7b9      	b.n	801383c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80138c8:	f8b9 3000 	ldrh.w	r3, [r9]
 80138cc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80138d0:	eba3 0308 	sub.w	r3, r3, r8
 80138d4:	eba6 0608 	sub.w	r6, r6, r8
 80138d8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80138dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138e0:	440e      	add	r6, r1
 80138e2:	e79a      	b.n	801381a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80138e4:	4b03      	ldr	r3, [pc, #12]	; (80138f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80138e6:	6818      	ldr	r0, [r3, #0]
 80138e8:	6803      	ldr	r3, [r0, #0]
 80138ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138ec:	4798      	blx	r3
 80138ee:	b007      	add	sp, #28
 80138f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138f4:	2000a2b8 	.word	0x2000a2b8
 80138f8:	2000a2b2 	.word	0x2000a2b2

080138fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80138fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013900:	b089      	sub	sp, #36	; 0x24
 8013902:	4682      	mov	sl, r0
 8013904:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013908:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801390a:	460f      	mov	r7, r1
 801390c:	4691      	mov	r9, r2
 801390e:	4698      	mov	r8, r3
 8013910:	2e00      	cmp	r6, #0
 8013912:	d03d      	beq.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013914:	4608      	mov	r0, r1
 8013916:	f7fc f859 	bl	800f9cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801391a:	4605      	mov	r5, r0
 801391c:	4638      	mov	r0, r7
 801391e:	f7fc f88f 	bl	800fa40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013922:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013926:	4638      	mov	r0, r7
 8013928:	f8ad 9008 	strh.w	r9, [sp, #8]
 801392c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013930:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013934:	f7fc f952 	bl	800fbdc <_ZNK8touchgfx6Bitmap7getDataEv>
 8013938:	4605      	mov	r5, r0
 801393a:	4638      	mov	r0, r7
 801393c:	f7fc f980 	bl	800fc40 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013940:	4681      	mov	r9, r0
 8013942:	4638      	mov	r0, r7
 8013944:	f7fc f9d4 	bl	800fcf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013948:	280b      	cmp	r0, #11
 801394a:	f200 816f 	bhi.w	8013c2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801394e:	e8df f010 	tbh	[pc, r0, lsl #1]
 8013952:	00c3      	.short	0x00c3
 8013954:	000c00b4 	.word	0x000c00b4
 8013958:	016d016d 	.word	0x016d016d
 801395c:	016d016d 	.word	0x016d016d
 8013960:	016d016d 	.word	0x016d016d
 8013964:	016d016d 	.word	0x016d016d
 8013968:	00bb      	.short	0x00bb
 801396a:	4bb3      	ldr	r3, [pc, #716]	; (8013c38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801396c:	6818      	ldr	r0, [r3, #0]
 801396e:	6803      	ldr	r3, [r0, #0]
 8013970:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013972:	4798      	blx	r3
 8013974:	2eff      	cmp	r6, #255	; 0xff
 8013976:	d121      	bne.n	80139bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013978:	0683      	lsls	r3, r0, #26
 801397a:	d41f      	bmi.n	80139bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801397c:	4638      	mov	r0, r7
 801397e:	f7fc f8f3 	bl	800fb68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013982:	b940      	cbnz	r0, 8013996 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8013984:	4623      	mov	r3, r4
 8013986:	aa02      	add	r2, sp, #8
 8013988:	4629      	mov	r1, r5
 801398a:	4650      	mov	r0, sl
 801398c:	f7ff f9e4 	bl	8012d58 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013990:	b009      	add	sp, #36	; 0x24
 8013992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013996:	f10d 0818 	add.w	r8, sp, #24
 801399a:	4639      	mov	r1, r7
 801399c:	4640      	mov	r0, r8
 801399e:	f7fc f889 	bl	800fab4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80139a2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80139a6:	af04      	add	r7, sp, #16
 80139a8:	e887 0003 	stmia.w	r7, {r0, r1}
 80139ac:	4638      	mov	r0, r7
 80139ae:	4621      	mov	r1, r4
 80139b0:	f7f5 fdb2 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 80139b4:	4638      	mov	r0, r7
 80139b6:	f7f5 fdf2 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 80139ba:	b130      	cbz	r0, 80139ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 80139bc:	4633      	mov	r3, r6
 80139be:	4622      	mov	r2, r4
 80139c0:	a902      	add	r1, sp, #8
 80139c2:	4628      	mov	r0, r5
 80139c4:	f7ff f8e2 	bl	8012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80139c8:	e7e2      	b.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80139ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80139ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80139d2:	4293      	cmp	r3, r2
 80139d4:	dd12      	ble.n	80139fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 80139d6:	1a9b      	subs	r3, r3, r2
 80139d8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80139dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80139e0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80139e4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80139e8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80139ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80139f0:	4642      	mov	r2, r8
 80139f2:	4633      	mov	r3, r6
 80139f4:	a902      	add	r1, sp, #8
 80139f6:	4628      	mov	r0, r5
 80139f8:	f7ff f8c8 	bl	8012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80139fc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013a00:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013a04:	4293      	cmp	r3, r2
 8013a06:	dd12      	ble.n	8013a2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8013a08:	1a9b      	subs	r3, r3, r2
 8013a0a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013a0e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013a12:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013a16:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013a1a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013a1e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013a22:	23ff      	movs	r3, #255	; 0xff
 8013a24:	4642      	mov	r2, r8
 8013a26:	a902      	add	r1, sp, #8
 8013a28:	4628      	mov	r0, r5
 8013a2a:	f7ff f8af 	bl	8012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013a2e:	463b      	mov	r3, r7
 8013a30:	aa02      	add	r2, sp, #8
 8013a32:	4629      	mov	r1, r5
 8013a34:	4650      	mov	r0, sl
 8013a36:	f7ff f98f 	bl	8012d58 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013a3a:	88a2      	ldrh	r2, [r4, #4]
 8013a3c:	8823      	ldrh	r3, [r4, #0]
 8013a3e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013a42:	4413      	add	r3, r2
 8013a44:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013a48:	440a      	add	r2, r1
 8013a4a:	b29b      	uxth	r3, r3
 8013a4c:	b292      	uxth	r2, r2
 8013a4e:	b211      	sxth	r1, r2
 8013a50:	b218      	sxth	r0, r3
 8013a52:	4288      	cmp	r0, r1
 8013a54:	dd12      	ble.n	8013a7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8013a56:	1a9b      	subs	r3, r3, r2
 8013a58:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013a5c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013a60:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013a64:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013a68:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013a6c:	23ff      	movs	r3, #255	; 0xff
 8013a6e:	4642      	mov	r2, r8
 8013a70:	a902      	add	r1, sp, #8
 8013a72:	4628      	mov	r0, r5
 8013a74:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013a78:	f7ff f888 	bl	8012b8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013a7c:	88e2      	ldrh	r2, [r4, #6]
 8013a7e:	8863      	ldrh	r3, [r4, #2]
 8013a80:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013a84:	4413      	add	r3, r2
 8013a86:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013a8a:	440a      	add	r2, r1
 8013a8c:	b29b      	uxth	r3, r3
 8013a8e:	b292      	uxth	r2, r2
 8013a90:	b211      	sxth	r1, r2
 8013a92:	b218      	sxth	r0, r3
 8013a94:	4288      	cmp	r0, r1
 8013a96:	f77f af7b 	ble.w	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a9a:	1a9b      	subs	r3, r3, r2
 8013a9c:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013aa0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013aa4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013aa8:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013aac:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013ab0:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013ab4:	23ff      	movs	r3, #255	; 0xff
 8013ab6:	4642      	mov	r2, r8
 8013ab8:	e782      	b.n	80139c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8013aba:	4633      	mov	r3, r6
 8013abc:	4622      	mov	r2, r4
 8013abe:	a902      	add	r1, sp, #8
 8013ac0:	4628      	mov	r0, r5
 8013ac2:	f7ff f9b9 	bl	8012e38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013ac6:	e763      	b.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ac8:	9600      	str	r6, [sp, #0]
 8013aca:	4623      	mov	r3, r4
 8013acc:	aa02      	add	r2, sp, #8
 8013ace:	4649      	mov	r1, r9
 8013ad0:	4628      	mov	r0, r5
 8013ad2:	f7ff fdd5 	bl	8013680 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013ad6:	e75b      	b.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ad8:	4638      	mov	r0, r7
 8013ada:	f7fc f845 	bl	800fb68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013ade:	b950      	cbnz	r0, 8013af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8013ae0:	e9cd 6000 	strd	r6, r0, [sp]
 8013ae4:	f8da 3000 	ldr.w	r3, [sl]
 8013ae8:	aa02      	add	r2, sp, #8
 8013aea:	68de      	ldr	r6, [r3, #12]
 8013aec:	4629      	mov	r1, r5
 8013aee:	4623      	mov	r3, r4
 8013af0:	4650      	mov	r0, sl
 8013af2:	47b0      	blx	r6
 8013af4:	e74c      	b.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013af6:	f10d 0818 	add.w	r8, sp, #24
 8013afa:	4639      	mov	r1, r7
 8013afc:	4640      	mov	r0, r8
 8013afe:	f7fb ffd9 	bl	800fab4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b02:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013b06:	af04      	add	r7, sp, #16
 8013b08:	e887 0003 	stmia.w	r7, {r0, r1}
 8013b0c:	4638      	mov	r0, r7
 8013b0e:	4621      	mov	r1, r4
 8013b10:	f7f5 fd02 	bl	8009518 <_ZN8touchgfx4RectaNERKS0_>
 8013b14:	4638      	mov	r0, r7
 8013b16:	f7f5 fd42 	bl	800959e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013b1a:	b138      	cbz	r0, 8013b2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8013b1c:	9600      	str	r6, [sp, #0]
 8013b1e:	4623      	mov	r3, r4
 8013b20:	aa02      	add	r2, sp, #8
 8013b22:	4649      	mov	r1, r9
 8013b24:	4628      	mov	r0, r5
 8013b26:	f7ff fdc3 	bl	80136b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013b2a:	e731      	b.n	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b2c:	e9cd 6000 	strd	r6, r0, [sp]
 8013b30:	f8da 3000 	ldr.w	r3, [sl]
 8013b34:	aa02      	add	r2, sp, #8
 8013b36:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013b3a:	4629      	mov	r1, r5
 8013b3c:	463b      	mov	r3, r7
 8013b3e:	4650      	mov	r0, sl
 8013b40:	47d8      	blx	fp
 8013b42:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013b46:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013b4a:	4293      	cmp	r3, r2
 8013b4c:	dd13      	ble.n	8013b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8013b4e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013b52:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013b56:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013b5a:	1a9b      	subs	r3, r3, r2
 8013b5c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013b60:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013b64:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013b68:	9600      	str	r6, [sp, #0]
 8013b6a:	4643      	mov	r3, r8
 8013b6c:	aa02      	add	r2, sp, #8
 8013b6e:	4649      	mov	r1, r9
 8013b70:	4628      	mov	r0, r5
 8013b72:	f7ff fd9d 	bl	80136b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013b76:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013b7a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013b7e:	4293      	cmp	r3, r2
 8013b80:	dd13      	ble.n	8013baa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8013b82:	1a9b      	subs	r3, r3, r2
 8013b84:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013b88:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013b8c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013b90:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013b94:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013b98:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013b9c:	9600      	str	r6, [sp, #0]
 8013b9e:	4643      	mov	r3, r8
 8013ba0:	aa02      	add	r2, sp, #8
 8013ba2:	4649      	mov	r1, r9
 8013ba4:	4628      	mov	r0, r5
 8013ba6:	f7ff fd83 	bl	80136b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013baa:	88a2      	ldrh	r2, [r4, #4]
 8013bac:	8823      	ldrh	r3, [r4, #0]
 8013bae:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013bb2:	4413      	add	r3, r2
 8013bb4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013bb8:	440a      	add	r2, r1
 8013bba:	b29b      	uxth	r3, r3
 8013bbc:	b292      	uxth	r2, r2
 8013bbe:	b211      	sxth	r1, r2
 8013bc0:	b218      	sxth	r0, r3
 8013bc2:	4288      	cmp	r0, r1
 8013bc4:	dd13      	ble.n	8013bee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8013bc6:	1a9b      	subs	r3, r3, r2
 8013bc8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013bcc:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013bd0:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013bd4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013bd8:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013bdc:	9600      	str	r6, [sp, #0]
 8013bde:	4643      	mov	r3, r8
 8013be0:	aa02      	add	r2, sp, #8
 8013be2:	4649      	mov	r1, r9
 8013be4:	4628      	mov	r0, r5
 8013be6:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013bea:	f7ff fd61 	bl	80136b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013bee:	88e2      	ldrh	r2, [r4, #6]
 8013bf0:	8863      	ldrh	r3, [r4, #2]
 8013bf2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013bf6:	4413      	add	r3, r2
 8013bf8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013bfc:	440a      	add	r2, r1
 8013bfe:	b29b      	uxth	r3, r3
 8013c00:	b292      	uxth	r2, r2
 8013c02:	b211      	sxth	r1, r2
 8013c04:	b218      	sxth	r0, r3
 8013c06:	4288      	cmp	r0, r1
 8013c08:	f77f aec2 	ble.w	8013990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013c0c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013c10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013c14:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013c18:	1a9b      	subs	r3, r3, r2
 8013c1a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c1e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013c22:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013c26:	9600      	str	r6, [sp, #0]
 8013c28:	4643      	mov	r3, r8
 8013c2a:	e779      	b.n	8013b20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013c2c:	4b03      	ldr	r3, [pc, #12]	; (8013c3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8013c2e:	4a04      	ldr	r2, [pc, #16]	; (8013c40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8013c30:	4804      	ldr	r0, [pc, #16]	; (8013c44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8013c32:	21b4      	movs	r1, #180	; 0xb4
 8013c34:	f007 ff54 	bl	801bae0 <__assert_func>
 8013c38:	2000a2b8 	.word	0x2000a2b8
 8013c3c:	0801f74c 	.word	0x0801f74c
 8013c40:	0801fe57 	.word	0x0801fe57
 8013c44:	0801f882 	.word	0x0801f882

08013c48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013c48:	b508      	push	{r3, lr}
 8013c4a:	b180      	cbz	r0, 8013c6e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013c4c:	2902      	cmp	r1, #2
 8013c4e:	d014      	beq.n	8013c7a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013c50:	2903      	cmp	r1, #3
 8013c52:	d01d      	beq.n	8013c90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013c54:	2901      	cmp	r1, #1
 8013c56:	d101      	bne.n	8013c5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013c58:	2001      	movs	r0, #1
 8013c5a:	bd08      	pop	{r3, pc}
 8013c5c:	4b0e      	ldr	r3, [pc, #56]	; (8013c98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013c5e:	8818      	ldrh	r0, [r3, #0]
 8013c60:	b990      	cbnz	r0, 8013c88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013c62:	4b0e      	ldr	r3, [pc, #56]	; (8013c9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013c64:	4a0e      	ldr	r2, [pc, #56]	; (8013ca0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013c66:	480f      	ldr	r0, [pc, #60]	; (8013ca4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013c68:	2150      	movs	r1, #80	; 0x50
 8013c6a:	f007 ff39 	bl	801bae0 <__assert_func>
 8013c6e:	2902      	cmp	r1, #2
 8013c70:	d00e      	beq.n	8013c90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013c72:	2903      	cmp	r1, #3
 8013c74:	d0f2      	beq.n	8013c5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013c76:	2901      	cmp	r1, #1
 8013c78:	d1ee      	bne.n	8013c58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013c7a:	4b07      	ldr	r3, [pc, #28]	; (8013c98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013c7c:	8818      	ldrh	r0, [r3, #0]
 8013c7e:	2800      	cmp	r0, #0
 8013c80:	d0ef      	beq.n	8013c62 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013c82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013c86:	e7e8      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c88:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013c8c:	4240      	negs	r0, r0
 8013c8e:	e7e4      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c90:	f04f 30ff 	mov.w	r0, #4294967295
 8013c94:	e7e1      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c96:	bf00      	nop
 8013c98:	2000a2b2 	.word	0x2000a2b2
 8013c9c:	0801f9d8 	.word	0x0801f9d8
 8013ca0:	0801ffd4 	.word	0x0801ffd4
 8013ca4:	0801fa1a 	.word	0x0801fa1a

08013ca8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013ca8:	b508      	push	{r3, lr}
 8013caa:	b180      	cbz	r0, 8013cce <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013cac:	2902      	cmp	r1, #2
 8013cae:	d014      	beq.n	8013cda <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013cb0:	2903      	cmp	r1, #3
 8013cb2:	d018      	beq.n	8013ce6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013cb4:	2901      	cmp	r1, #1
 8013cb6:	d001      	beq.n	8013cbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013cb8:	2001      	movs	r0, #1
 8013cba:	e013      	b.n	8013ce4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013cbc:	4b0e      	ldr	r3, [pc, #56]	; (8013cf8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013cbe:	8818      	ldrh	r0, [r3, #0]
 8013cc0:	b970      	cbnz	r0, 8013ce0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013cc2:	4b0e      	ldr	r3, [pc, #56]	; (8013cfc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013cc4:	4a0e      	ldr	r2, [pc, #56]	; (8013d00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013cc6:	480f      	ldr	r0, [pc, #60]	; (8013d04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013cc8:	2150      	movs	r1, #80	; 0x50
 8013cca:	f007 ff09 	bl	801bae0 <__assert_func>
 8013cce:	2902      	cmp	r1, #2
 8013cd0:	d009      	beq.n	8013ce6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013cd2:	2903      	cmp	r1, #3
 8013cd4:	d0f0      	beq.n	8013cb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013cd6:	2901      	cmp	r1, #1
 8013cd8:	d1f0      	bne.n	8013cbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013cda:	f04f 30ff 	mov.w	r0, #4294967295
 8013cde:	e001      	b.n	8013ce4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013ce0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ce4:	bd08      	pop	{r3, pc}
 8013ce6:	4b04      	ldr	r3, [pc, #16]	; (8013cf8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013ce8:	8818      	ldrh	r0, [r3, #0]
 8013cea:	2800      	cmp	r0, #0
 8013cec:	d0e9      	beq.n	8013cc2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013cee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013cf2:	4240      	negs	r0, r0
 8013cf4:	e7f6      	b.n	8013ce4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013cf6:	bf00      	nop
 8013cf8:	2000a2b2 	.word	0x2000a2b2
 8013cfc:	0801f9d8 	.word	0x0801f9d8
 8013d00:	0801ffd4 	.word	0x0801ffd4
 8013d04:	0801fa1a 	.word	0x0801fa1a

08013d08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d0c:	b099      	sub	sp, #100	; 0x64
 8013d0e:	910b      	str	r1, [sp, #44]	; 0x2c
 8013d10:	a914      	add	r1, sp, #80	; 0x50
 8013d12:	e881 000c 	stmia.w	r1, {r2, r3}
 8013d16:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013d1a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013d1e:	930a      	str	r3, [sp, #40]	; 0x28
 8013d20:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013d24:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013d28:	9311      	str	r3, [sp, #68]	; 0x44
 8013d2a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013d2e:	930c      	str	r3, [sp, #48]	; 0x30
 8013d30:	7988      	ldrb	r0, [r1, #6]
 8013d32:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013d36:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013d3a:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013d3e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013d42:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013d46:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8013d4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013d4e:	4303      	orrs	r3, r0
 8013d50:	9309      	str	r3, [sp, #36]	; 0x24
 8013d52:	f000 81a1 	beq.w	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013d56:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013d5a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013d5e:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013d62:	ea59 0903 	orrs.w	r9, r9, r3
 8013d66:	f000 8197 	beq.w	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013d6a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013d6e:	b29b      	uxth	r3, r3
 8013d70:	2e00      	cmp	r6, #0
 8013d72:	f000 813a 	beq.w	8013fea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013d76:	1af6      	subs	r6, r6, r3
 8013d78:	b2b6      	uxth	r6, r6
 8013d7a:	0433      	lsls	r3, r6, #16
 8013d7c:	d502      	bpl.n	8013d84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013d7e:	1bad      	subs	r5, r5, r6
 8013d80:	b22d      	sxth	r5, r5
 8013d82:	2600      	movs	r6, #0
 8013d84:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013d88:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013d8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013d90:	428d      	cmp	r5, r1
 8013d92:	b28b      	uxth	r3, r1
 8013d94:	bfbf      	itttt	lt
 8013d96:	18f6      	addlt	r6, r6, r3
 8013d98:	1b75      	sublt	r5, r6, r5
 8013d9a:	b2ae      	uxthlt	r6, r5
 8013d9c:	460d      	movlt	r5, r1
 8013d9e:	8891      	ldrh	r1, [r2, #4]
 8013da0:	440b      	add	r3, r1
 8013da2:	b21b      	sxth	r3, r3
 8013da4:	9310      	str	r3, [sp, #64]	; 0x40
 8013da6:	88d3      	ldrh	r3, [r2, #6]
 8013da8:	8852      	ldrh	r2, [r2, #2]
 8013daa:	4413      	add	r3, r2
 8013dac:	b21b      	sxth	r3, r3
 8013dae:	930f      	str	r3, [sp, #60]	; 0x3c
 8013db0:	4bbc      	ldr	r3, [pc, #752]	; (80140a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8013db2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013db4:	f893 b000 	ldrb.w	fp, [r3]
 8013db8:	f10b 3cff 	add.w	ip, fp, #4294967295
 8013dbc:	f1dc 0300 	rsbs	r3, ip, #0
 8013dc0:	eb43 030c 	adc.w	r3, r3, ip
 8013dc4:	930e      	str	r3, [sp, #56]	; 0x38
 8013dc6:	4629      	mov	r1, r5
 8013dc8:	4653      	mov	r3, sl
 8013dca:	a814      	add	r0, sp, #80	; 0x50
 8013dcc:	f7f8 fae5 	bl	800c39a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013dd0:	4629      	mov	r1, r5
 8013dd2:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013dd6:	4653      	mov	r3, sl
 8013dd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013dda:	a814      	add	r0, sp, #80	; 0x50
 8013ddc:	f7f8 faf5 	bl	800c3ca <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013de0:	a918      	add	r1, sp, #96	; 0x60
 8013de2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013de6:	a817      	add	r0, sp, #92	; 0x5c
 8013de8:	f7f8 fc10 	bl	800c60c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013dec:	f1ba 0f00 	cmp.w	sl, #0
 8013df0:	f040 80fe 	bne.w	8013ff0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8013df4:	f1bb 0f01 	cmp.w	fp, #1
 8013df8:	f040 8102 	bne.w	8014000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8013dfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013dfe:	b153      	cbz	r3, 8013e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013e00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e02:	2408      	movs	r4, #8
 8013e04:	fb94 f3f8 	sdiv	r3, r4, r8
 8013e08:	1e5c      	subs	r4, r3, #1
 8013e0a:	4414      	add	r4, r2
 8013e0c:	fb94 f4f3 	sdiv	r4, r4, r3
 8013e10:	fb14 f403 	smulbb	r4, r4, r3
 8013e14:	b2a4      	uxth	r4, r4
 8013e16:	b906      	cbnz	r6, 8013e1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8013e18:	b16f      	cbz	r7, 8013e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8013e1a:	fb07 6304 	mla	r3, r7, r4, r6
 8013e1e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013e20:	fb08 f303 	mul.w	r3, r8, r3
 8013e24:	463a      	mov	r2, r7
 8013e26:	f003 0707 	and.w	r7, r3, #7
 8013e2a:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8013e2e:	9328      	str	r3, [sp, #160]	; 0xa0
 8013e30:	eba9 0302 	sub.w	r3, r9, r2
 8013e34:	930d      	str	r3, [sp, #52]	; 0x34
 8013e36:	4651      	mov	r1, sl
 8013e38:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013e3a:	f7ff ff05 	bl	8013c48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013e3e:	4651      	mov	r1, sl
 8013e40:	4681      	mov	r9, r0
 8013e42:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013e44:	f7ff ff30 	bl	8013ca8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013e48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013e4c:	eba3 0a02 	sub.w	sl, r3, r2
 8013e50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e52:	459a      	cmp	sl, r3
 8013e54:	bfa8      	it	ge
 8013e56:	469a      	movge	sl, r3
 8013e58:	f1ba 0f00 	cmp.w	sl, #0
 8013e5c:	4683      	mov	fp, r0
 8013e5e:	f340 811b 	ble.w	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013e62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e64:	1bad      	subs	r5, r5, r6
 8013e66:	1b5d      	subs	r5, r3, r5
 8013e68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e6a:	429d      	cmp	r5, r3
 8013e6c:	bfd4      	ite	le
 8013e6e:	ebc6 0605 	rsble	r6, r6, r5
 8013e72:	ebc6 0603 	rsbgt	r6, r6, r3
 8013e76:	2e00      	cmp	r6, #0
 8013e78:	f340 810e 	ble.w	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013e7c:	1ba4      	subs	r4, r4, r6
 8013e7e:	fb08 f304 	mul.w	r3, r8, r4
 8013e82:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013e86:	2b00      	cmp	r3, #0
 8013e88:	f040 8114 	bne.w	80140b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013e8c:	4b86      	ldr	r3, [pc, #536]	; (80140a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8013e8e:	6818      	ldr	r0, [r3, #0]
 8013e90:	6803      	ldr	r3, [r0, #0]
 8013e92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013e94:	4798      	blx	r3
 8013e96:	2301      	movs	r3, #1
 8013e98:	fa03 f308 	lsl.w	r3, r3, r8
 8013e9c:	4a83      	ldr	r2, [pc, #524]	; (80140ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8013e9e:	3b01      	subs	r3, #1
 8013ea0:	b2db      	uxtb	r3, r3
 8013ea2:	8811      	ldrh	r1, [r2, #0]
 8013ea4:	930e      	str	r3, [sp, #56]	; 0x38
 8013ea6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8013eaa:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8013eae:	fb01 2303 	mla	r3, r1, r3, r2
 8013eb2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013eb6:	930a      	str	r3, [sp, #40]	; 0x28
 8013eb8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013eba:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8013ebe:	9313      	str	r3, [sp, #76]	; 0x4c
 8013ec0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013ec2:	0a19      	lsrs	r1, r3, #8
 8013ec4:	b2cb      	uxtb	r3, r1
 8013ec6:	9312      	str	r3, [sp, #72]	; 0x48
 8013ec8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013eca:	b2db      	uxtb	r3, r3
 8013ecc:	9311      	str	r3, [sp, #68]	; 0x44
 8013ece:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013ed0:	095a      	lsrs	r2, r3, #5
 8013ed2:	4b77      	ldr	r3, [pc, #476]	; (80140b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8013ed4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013ed8:	400b      	ands	r3, r1
 8013eda:	4313      	orrs	r3, r2
 8013edc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013ede:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013ee2:	4313      	orrs	r3, r2
 8013ee4:	b29b      	uxth	r3, r3
 8013ee6:	9310      	str	r3, [sp, #64]	; 0x40
 8013ee8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013eea:	781a      	ldrb	r2, [r3, #0]
 8013eec:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8013ef0:	413a      	asrs	r2, r7
 8013ef2:	fb06 b919 	mls	r9, r6, r9, fp
 8013ef6:	fb03 fb06 	mul.w	fp, r3, r6
 8013efa:	b2d2      	uxtb	r2, r2
 8013efc:	930d      	str	r3, [sp, #52]	; 0x34
 8013efe:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8013f02:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013f06:	f0c0 80ea 	bcc.w	80140de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8013f0a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8013f0e:	46b6      	mov	lr, r6
 8013f10:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8013f14:	f0c0 80d2 	bcc.w	80140bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013f18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f1a:	4013      	ands	r3, r2
 8013f1c:	d055      	beq.n	8013fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8013f1e:	20ff      	movs	r0, #255	; 0xff
 8013f20:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013f22:	fb90 f1f1 	sdiv	r1, r0, r1
 8013f26:	434b      	muls	r3, r1
 8013f28:	2bfe      	cmp	r3, #254	; 0xfe
 8013f2a:	dd03      	ble.n	8013f34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8013f2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f2e:	4281      	cmp	r1, r0
 8013f30:	f000 80c2 	beq.w	80140b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8013f34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f36:	f8bc 4000 	ldrh.w	r4, [ip]
 8013f3a:	fb11 f303 	smulbb	r3, r1, r3
 8013f3e:	b29b      	uxth	r3, r3
 8013f40:	1c59      	adds	r1, r3, #1
 8013f42:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013f46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013f4a:	b29d      	uxth	r5, r3
 8013f4c:	43db      	mvns	r3, r3
 8013f4e:	b2db      	uxtb	r3, r3
 8013f50:	9309      	str	r3, [sp, #36]	; 0x24
 8013f52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013f54:	1220      	asrs	r0, r4, #8
 8013f56:	fb13 f905 	smulbb	r9, r3, r5
 8013f5a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f60:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013f64:	fb00 9003 	mla	r0, r0, r3, r9
 8013f68:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013f6a:	10e1      	asrs	r1, r4, #3
 8013f6c:	fb13 f905 	smulbb	r9, r3, r5
 8013f70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013f74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f76:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013f7a:	fb01 9103 	mla	r1, r1, r3, r9
 8013f7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013f80:	00e4      	lsls	r4, r4, #3
 8013f82:	fb13 f505 	smulbb	r5, r3, r5
 8013f86:	b2e4      	uxtb	r4, r4
 8013f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f8a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013f8e:	fb04 5403 	mla	r4, r4, r3, r5
 8013f92:	b280      	uxth	r0, r0
 8013f94:	b2a4      	uxth	r4, r4
 8013f96:	1c43      	adds	r3, r0, #1
 8013f98:	f104 0901 	add.w	r9, r4, #1
 8013f9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013fa0:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8013fa4:	b289      	uxth	r1, r1
 8013fa6:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8013faa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013fae:	ea49 0000 	orr.w	r0, r9, r0
 8013fb2:	f101 0901 	add.w	r9, r1, #1
 8013fb6:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8013fba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013fbe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013fc2:	ea40 0009 	orr.w	r0, r0, r9
 8013fc6:	f8ac 0000 	strh.w	r0, [ip]
 8013fca:	4447      	add	r7, r8
 8013fcc:	b2bf      	uxth	r7, r7
 8013fce:	2f07      	cmp	r7, #7
 8013fd0:	bf81      	itttt	hi
 8013fd2:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8013fd4:	785a      	ldrbhi	r2, [r3, #1]
 8013fd6:	3301      	addhi	r3, #1
 8013fd8:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8013fda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013fdc:	bf9a      	itte	ls
 8013fde:	fa42 f208 	asrls.w	r2, r2, r8
 8013fe2:	b2d2      	uxtbls	r2, r2
 8013fe4:	2700      	movhi	r7, #0
 8013fe6:	449c      	add	ip, r3
 8013fe8:	e792      	b.n	8013f10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8013fea:	441d      	add	r5, r3
 8013fec:	b22d      	sxth	r5, r5
 8013fee:	e6c9      	b.n	8013d84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013ff0:	f1ba 0f01 	cmp.w	sl, #1
 8013ff4:	f47f af02 	bne.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013ff8:	f1bb 0f01 	cmp.w	fp, #1
 8013ffc:	f47f aefe 	bne.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014000:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 80140a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014004:	f8db 0000 	ldr.w	r0, [fp]
 8014008:	6803      	ldr	r3, [r0, #0]
 801400a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801400c:	4798      	blx	r3
 801400e:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8014012:	465a      	mov	r2, fp
 8014014:	d006      	beq.n	8014024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8014016:	f1b8 0f04 	cmp.w	r8, #4
 801401a:	d140      	bne.n	801409e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801401c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801401e:	3300      	adds	r3, #0
 8014020:	bf18      	it	ne
 8014022:	2301      	movne	r3, #1
 8014024:	0580      	lsls	r0, r0, #22
 8014026:	d563      	bpl.n	80140f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8014028:	f1b8 0f08 	cmp.w	r8, #8
 801402c:	d160      	bne.n	80140f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801402e:	2b00      	cmp	r3, #0
 8014030:	bf0c      	ite	eq
 8014032:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8014036:	f44f 7180 	movne.w	r1, #256	; 0x100
 801403a:	2e00      	cmp	r6, #0
 801403c:	f47f aede 	bne.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014040:	2f00      	cmp	r7, #0
 8014042:	f47f aedb 	bne.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014046:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014048:	9810      	ldr	r0, [sp, #64]	; 0x40
 801404a:	18eb      	adds	r3, r5, r3
 801404c:	4283      	cmp	r3, r0
 801404e:	f73f aed5 	bgt.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014052:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014054:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014056:	444b      	add	r3, r9
 8014058:	4283      	cmp	r3, r0
 801405a:	f73f aecf 	bgt.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801405e:	6810      	ldr	r0, [r2, #0]
 8014060:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8014064:	6805      	ldr	r5, [r0, #0]
 8014066:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801406a:	f1b8 0f08 	cmp.w	r8, #8
 801406e:	f04f 0600 	mov.w	r6, #0
 8014072:	bf18      	it	ne
 8014074:	3401      	addne	r4, #1
 8014076:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801407a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801407c:	9104      	str	r1, [sp, #16]
 801407e:	bf18      	it	ne
 8014080:	f024 0401 	bicne.w	r4, r4, #1
 8014084:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014086:	bf18      	it	ne
 8014088:	b2a4      	uxthne	r4, r4
 801408a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801408e:	e9cd 4900 	strd	r4, r9, [sp]
 8014092:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014094:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8014096:	47a0      	blx	r4
 8014098:	b019      	add	sp, #100	; 0x64
 801409a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801409e:	2300      	movs	r3, #0
 80140a0:	e7c0      	b.n	8014024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 80140a2:	bf00      	nop
 80140a4:	2000a2b0 	.word	0x2000a2b0
 80140a8:	2000a2b8 	.word	0x2000a2b8
 80140ac:	2000a2b2 	.word	0x2000a2b2
 80140b0:	00fff800 	.word	0x00fff800
 80140b4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80140b6:	e6ee      	b.n	8013e96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 80140b8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80140ba:	e784      	b.n	8013fc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 80140bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80140be:	b153      	cbz	r3, 80140d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 80140c0:	441f      	add	r7, r3
 80140c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80140c4:	b2bf      	uxth	r7, r7
 80140c6:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80140ca:	f007 0707 	and.w	r7, r7, #7
 80140ce:	781a      	ldrb	r2, [r3, #0]
 80140d0:	9328      	str	r3, [sp, #160]	; 0xa0
 80140d2:	413a      	asrs	r2, r7
 80140d4:	b2d2      	uxtb	r2, r2
 80140d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80140d8:	445b      	add	r3, fp
 80140da:	930a      	str	r3, [sp, #40]	; 0x28
 80140dc:	e711      	b.n	8013f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 80140de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140e0:	2b00      	cmp	r3, #0
 80140e2:	d1d9      	bne.n	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80140e4:	4b05      	ldr	r3, [pc, #20]	; (80140fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 80140e6:	6818      	ldr	r0, [r3, #0]
 80140e8:	6803      	ldr	r3, [r0, #0]
 80140ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80140ec:	4798      	blx	r3
 80140ee:	e7d3      	b.n	8014098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80140f0:	2b00      	cmp	r3, #0
 80140f2:	f43f ae83 	beq.w	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80140f6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80140fa:	e79e      	b.n	801403a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 80140fc:	2000a2b8 	.word	0x2000a2b8

08014100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014100:	b538      	push	{r3, r4, r5, lr}
 8014102:	4c15      	ldr	r4, [pc, #84]	; (8014158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014104:	7823      	ldrb	r3, [r4, #0]
 8014106:	f3bf 8f5b 	dmb	ish
 801410a:	07da      	lsls	r2, r3, #31
 801410c:	4605      	mov	r5, r0
 801410e:	d40b      	bmi.n	8014128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014110:	4620      	mov	r0, r4
 8014112:	f007 fcb9 	bl	801ba88 <__cxa_guard_acquire>
 8014116:	b138      	cbz	r0, 8014128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014118:	4620      	mov	r0, r4
 801411a:	f007 fcc1 	bl	801baa0 <__cxa_guard_release>
 801411e:	4a0f      	ldr	r2, [pc, #60]	; (801415c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014120:	490f      	ldr	r1, [pc, #60]	; (8014160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8014122:	4810      	ldr	r0, [pc, #64]	; (8014164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014124:	f007 fca9 	bl	801ba7a <__aeabi_atexit>
 8014128:	4c0f      	ldr	r4, [pc, #60]	; (8014168 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801412a:	7823      	ldrb	r3, [r4, #0]
 801412c:	f3bf 8f5b 	dmb	ish
 8014130:	07db      	lsls	r3, r3, #31
 8014132:	d40b      	bmi.n	801414c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014134:	4620      	mov	r0, r4
 8014136:	f007 fca7 	bl	801ba88 <__cxa_guard_acquire>
 801413a:	b138      	cbz	r0, 801414c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801413c:	4620      	mov	r0, r4
 801413e:	f007 fcaf 	bl	801baa0 <__cxa_guard_release>
 8014142:	4a06      	ldr	r2, [pc, #24]	; (801415c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014144:	4909      	ldr	r1, [pc, #36]	; (801416c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8014146:	480a      	ldr	r0, [pc, #40]	; (8014170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014148:	f007 fc97 	bl	801ba7a <__aeabi_atexit>
 801414c:	4b05      	ldr	r3, [pc, #20]	; (8014164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801414e:	612b      	str	r3, [r5, #16]
 8014150:	4b07      	ldr	r3, [pc, #28]	; (8014170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014152:	616b      	str	r3, [r5, #20]
 8014154:	bd38      	pop	{r3, r4, r5, pc}
 8014156:	bf00      	nop
 8014158:	2000a384 	.word	0x2000a384
 801415c:	20000000 	.word	0x20000000
 8014160:	080122f1 	.word	0x080122f1
 8014164:	200000a4 	.word	0x200000a4
 8014168:	2000a388 	.word	0x2000a388
 801416c:	080122ef 	.word	0x080122ef
 8014170:	200000a8 	.word	0x200000a8

08014174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014174:	b538      	push	{r3, r4, r5, lr}
 8014176:	4c15      	ldr	r4, [pc, #84]	; (80141cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014178:	7823      	ldrb	r3, [r4, #0]
 801417a:	f3bf 8f5b 	dmb	ish
 801417e:	07da      	lsls	r2, r3, #31
 8014180:	4605      	mov	r5, r0
 8014182:	d40b      	bmi.n	801419c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014184:	4620      	mov	r0, r4
 8014186:	f007 fc7f 	bl	801ba88 <__cxa_guard_acquire>
 801418a:	b138      	cbz	r0, 801419c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801418c:	4620      	mov	r0, r4
 801418e:	f007 fc87 	bl	801baa0 <__cxa_guard_release>
 8014192:	4a0f      	ldr	r2, [pc, #60]	; (80141d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014194:	490f      	ldr	r1, [pc, #60]	; (80141d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014196:	4810      	ldr	r0, [pc, #64]	; (80141d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014198:	f007 fc6f 	bl	801ba7a <__aeabi_atexit>
 801419c:	4c0f      	ldr	r4, [pc, #60]	; (80141dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801419e:	7823      	ldrb	r3, [r4, #0]
 80141a0:	f3bf 8f5b 	dmb	ish
 80141a4:	07db      	lsls	r3, r3, #31
 80141a6:	d40b      	bmi.n	80141c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80141a8:	4620      	mov	r0, r4
 80141aa:	f007 fc6d 	bl	801ba88 <__cxa_guard_acquire>
 80141ae:	b138      	cbz	r0, 80141c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80141b0:	4620      	mov	r0, r4
 80141b2:	f007 fc75 	bl	801baa0 <__cxa_guard_release>
 80141b6:	4a06      	ldr	r2, [pc, #24]	; (80141d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80141b8:	4909      	ldr	r1, [pc, #36]	; (80141e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80141ba:	480a      	ldr	r0, [pc, #40]	; (80141e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80141bc:	f007 fc5d 	bl	801ba7a <__aeabi_atexit>
 80141c0:	4b05      	ldr	r3, [pc, #20]	; (80141d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80141c2:	60ab      	str	r3, [r5, #8]
 80141c4:	4b07      	ldr	r3, [pc, #28]	; (80141e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80141c6:	60eb      	str	r3, [r5, #12]
 80141c8:	bd38      	pop	{r3, r4, r5, pc}
 80141ca:	bf00      	nop
 80141cc:	2000a35c 	.word	0x2000a35c
 80141d0:	20000000 	.word	0x20000000
 80141d4:	080122f5 	.word	0x080122f5
 80141d8:	2000007c 	.word	0x2000007c
 80141dc:	2000a360 	.word	0x2000a360
 80141e0:	080122f3 	.word	0x080122f3
 80141e4:	20000080 	.word	0x20000080

080141e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80141e8:	b510      	push	{r4, lr}
 80141ea:	4604      	mov	r4, r0
 80141ec:	f7ff ff88 	bl	8014100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80141f0:	4620      	mov	r0, r4
 80141f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80141f6:	f7ff bfbd 	b.w	8014174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080141fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80141fc:	b538      	push	{r3, r4, r5, lr}
 80141fe:	4c15      	ldr	r4, [pc, #84]	; (8014254 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014200:	7823      	ldrb	r3, [r4, #0]
 8014202:	f3bf 8f5b 	dmb	ish
 8014206:	07da      	lsls	r2, r3, #31
 8014208:	4605      	mov	r5, r0
 801420a:	d40b      	bmi.n	8014224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801420c:	4620      	mov	r0, r4
 801420e:	f007 fc3b 	bl	801ba88 <__cxa_guard_acquire>
 8014212:	b138      	cbz	r0, 8014224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014214:	4620      	mov	r0, r4
 8014216:	f007 fc43 	bl	801baa0 <__cxa_guard_release>
 801421a:	4a0f      	ldr	r2, [pc, #60]	; (8014258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801421c:	490f      	ldr	r1, [pc, #60]	; (801425c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801421e:	4810      	ldr	r0, [pc, #64]	; (8014260 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014220:	f007 fc2b 	bl	801ba7a <__aeabi_atexit>
 8014224:	4c0f      	ldr	r4, [pc, #60]	; (8014264 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014226:	7823      	ldrb	r3, [r4, #0]
 8014228:	f3bf 8f5b 	dmb	ish
 801422c:	07db      	lsls	r3, r3, #31
 801422e:	d40b      	bmi.n	8014248 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014230:	4620      	mov	r0, r4
 8014232:	f007 fc29 	bl	801ba88 <__cxa_guard_acquire>
 8014236:	b138      	cbz	r0, 8014248 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014238:	4620      	mov	r0, r4
 801423a:	f007 fc31 	bl	801baa0 <__cxa_guard_release>
 801423e:	4a06      	ldr	r2, [pc, #24]	; (8014258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014240:	4909      	ldr	r1, [pc, #36]	; (8014268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8014242:	480a      	ldr	r0, [pc, #40]	; (801426c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014244:	f007 fc19 	bl	801ba7a <__aeabi_atexit>
 8014248:	4b05      	ldr	r3, [pc, #20]	; (8014260 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801424a:	622b      	str	r3, [r5, #32]
 801424c:	4b07      	ldr	r3, [pc, #28]	; (801426c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801424e:	626b      	str	r3, [r5, #36]	; 0x24
 8014250:	bd38      	pop	{r3, r4, r5, pc}
 8014252:	bf00      	nop
 8014254:	2000a38c 	.word	0x2000a38c
 8014258:	20000000 	.word	0x20000000
 801425c:	080122e9 	.word	0x080122e9
 8014260:	200000ac 	.word	0x200000ac
 8014264:	2000a390 	.word	0x2000a390
 8014268:	080122e7 	.word	0x080122e7
 801426c:	200000b0 	.word	0x200000b0

08014270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8014270:	b538      	push	{r3, r4, r5, lr}
 8014272:	4c15      	ldr	r4, [pc, #84]	; (80142c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014274:	7823      	ldrb	r3, [r4, #0]
 8014276:	f3bf 8f5b 	dmb	ish
 801427a:	07da      	lsls	r2, r3, #31
 801427c:	4605      	mov	r5, r0
 801427e:	d40b      	bmi.n	8014298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014280:	4620      	mov	r0, r4
 8014282:	f007 fc01 	bl	801ba88 <__cxa_guard_acquire>
 8014286:	b138      	cbz	r0, 8014298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014288:	4620      	mov	r0, r4
 801428a:	f007 fc09 	bl	801baa0 <__cxa_guard_release>
 801428e:	4a0f      	ldr	r2, [pc, #60]	; (80142cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014290:	490f      	ldr	r1, [pc, #60]	; (80142d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014292:	4810      	ldr	r0, [pc, #64]	; (80142d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014294:	f007 fbf1 	bl	801ba7a <__aeabi_atexit>
 8014298:	4c0f      	ldr	r4, [pc, #60]	; (80142d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801429a:	7823      	ldrb	r3, [r4, #0]
 801429c:	f3bf 8f5b 	dmb	ish
 80142a0:	07db      	lsls	r3, r3, #31
 80142a2:	d40b      	bmi.n	80142bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80142a4:	4620      	mov	r0, r4
 80142a6:	f007 fbef 	bl	801ba88 <__cxa_guard_acquire>
 80142aa:	b138      	cbz	r0, 80142bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80142ac:	4620      	mov	r0, r4
 80142ae:	f007 fbf7 	bl	801baa0 <__cxa_guard_release>
 80142b2:	4a06      	ldr	r2, [pc, #24]	; (80142cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80142b4:	4909      	ldr	r1, [pc, #36]	; (80142dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80142b6:	480a      	ldr	r0, [pc, #40]	; (80142e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80142b8:	f007 fbdf 	bl	801ba7a <__aeabi_atexit>
 80142bc:	4b05      	ldr	r3, [pc, #20]	; (80142d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80142be:	61ab      	str	r3, [r5, #24]
 80142c0:	4b07      	ldr	r3, [pc, #28]	; (80142e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80142c2:	61eb      	str	r3, [r5, #28]
 80142c4:	bd38      	pop	{r3, r4, r5, pc}
 80142c6:	bf00      	nop
 80142c8:	2000a364 	.word	0x2000a364
 80142cc:	20000000 	.word	0x20000000
 80142d0:	080122ed 	.word	0x080122ed
 80142d4:	20000084 	.word	0x20000084
 80142d8:	2000a368 	.word	0x2000a368
 80142dc:	080122eb 	.word	0x080122eb
 80142e0:	20000088 	.word	0x20000088

080142e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80142e4:	b510      	push	{r4, lr}
 80142e6:	4604      	mov	r4, r0
 80142e8:	f7ff ff88 	bl	80141fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80142ec:	4620      	mov	r0, r4
 80142ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80142f2:	f7ff bfbd 	b.w	8014270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080142f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80142f8:	b538      	push	{r3, r4, r5, lr}
 80142fa:	4c15      	ldr	r4, [pc, #84]	; (8014350 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80142fc:	7823      	ldrb	r3, [r4, #0]
 80142fe:	f3bf 8f5b 	dmb	ish
 8014302:	07da      	lsls	r2, r3, #31
 8014304:	4605      	mov	r5, r0
 8014306:	d40b      	bmi.n	8014320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014308:	4620      	mov	r0, r4
 801430a:	f007 fbbd 	bl	801ba88 <__cxa_guard_acquire>
 801430e:	b138      	cbz	r0, 8014320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014310:	4620      	mov	r0, r4
 8014312:	f007 fbc5 	bl	801baa0 <__cxa_guard_release>
 8014316:	4a0f      	ldr	r2, [pc, #60]	; (8014354 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014318:	490f      	ldr	r1, [pc, #60]	; (8014358 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801431a:	4810      	ldr	r0, [pc, #64]	; (801435c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801431c:	f007 fbad 	bl	801ba7a <__aeabi_atexit>
 8014320:	4c0f      	ldr	r4, [pc, #60]	; (8014360 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8014322:	7823      	ldrb	r3, [r4, #0]
 8014324:	f3bf 8f5b 	dmb	ish
 8014328:	07db      	lsls	r3, r3, #31
 801432a:	d40b      	bmi.n	8014344 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801432c:	4620      	mov	r0, r4
 801432e:	f007 fbab 	bl	801ba88 <__cxa_guard_acquire>
 8014332:	b138      	cbz	r0, 8014344 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014334:	4620      	mov	r0, r4
 8014336:	f007 fbb3 	bl	801baa0 <__cxa_guard_release>
 801433a:	4a06      	ldr	r2, [pc, #24]	; (8014354 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801433c:	4909      	ldr	r1, [pc, #36]	; (8014364 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801433e:	480a      	ldr	r0, [pc, #40]	; (8014368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014340:	f007 fb9b 	bl	801ba7a <__aeabi_atexit>
 8014344:	4b05      	ldr	r3, [pc, #20]	; (801435c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014346:	632b      	str	r3, [r5, #48]	; 0x30
 8014348:	4b07      	ldr	r3, [pc, #28]	; (8014368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801434a:	636b      	str	r3, [r5, #52]	; 0x34
 801434c:	bd38      	pop	{r3, r4, r5, pc}
 801434e:	bf00      	nop
 8014350:	2000a39c 	.word	0x2000a39c
 8014354:	20000000 	.word	0x20000000
 8014358:	080122e1 	.word	0x080122e1
 801435c:	200000bc 	.word	0x200000bc
 8014360:	2000a3a0 	.word	0x2000a3a0
 8014364:	080122df 	.word	0x080122df
 8014368:	200000c0 	.word	0x200000c0

0801436c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801436c:	b538      	push	{r3, r4, r5, lr}
 801436e:	4c15      	ldr	r4, [pc, #84]	; (80143c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8014370:	7823      	ldrb	r3, [r4, #0]
 8014372:	f3bf 8f5b 	dmb	ish
 8014376:	07da      	lsls	r2, r3, #31
 8014378:	4605      	mov	r5, r0
 801437a:	d40b      	bmi.n	8014394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801437c:	4620      	mov	r0, r4
 801437e:	f007 fb83 	bl	801ba88 <__cxa_guard_acquire>
 8014382:	b138      	cbz	r0, 8014394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014384:	4620      	mov	r0, r4
 8014386:	f007 fb8b 	bl	801baa0 <__cxa_guard_release>
 801438a:	4a0f      	ldr	r2, [pc, #60]	; (80143c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801438c:	490f      	ldr	r1, [pc, #60]	; (80143cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801438e:	4810      	ldr	r0, [pc, #64]	; (80143d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014390:	f007 fb73 	bl	801ba7a <__aeabi_atexit>
 8014394:	4c0f      	ldr	r4, [pc, #60]	; (80143d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014396:	7823      	ldrb	r3, [r4, #0]
 8014398:	f3bf 8f5b 	dmb	ish
 801439c:	07db      	lsls	r3, r3, #31
 801439e:	d40b      	bmi.n	80143b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80143a0:	4620      	mov	r0, r4
 80143a2:	f007 fb71 	bl	801ba88 <__cxa_guard_acquire>
 80143a6:	b138      	cbz	r0, 80143b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80143a8:	4620      	mov	r0, r4
 80143aa:	f007 fb79 	bl	801baa0 <__cxa_guard_release>
 80143ae:	4a06      	ldr	r2, [pc, #24]	; (80143c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80143b0:	4909      	ldr	r1, [pc, #36]	; (80143d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80143b2:	480a      	ldr	r0, [pc, #40]	; (80143dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80143b4:	f007 fb61 	bl	801ba7a <__aeabi_atexit>
 80143b8:	4b05      	ldr	r3, [pc, #20]	; (80143d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80143ba:	62ab      	str	r3, [r5, #40]	; 0x28
 80143bc:	4b07      	ldr	r3, [pc, #28]	; (80143dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80143be:	62eb      	str	r3, [r5, #44]	; 0x2c
 80143c0:	bd38      	pop	{r3, r4, r5, pc}
 80143c2:	bf00      	nop
 80143c4:	2000a36c 	.word	0x2000a36c
 80143c8:	20000000 	.word	0x20000000
 80143cc:	080122e5 	.word	0x080122e5
 80143d0:	2000008c 	.word	0x2000008c
 80143d4:	2000a370 	.word	0x2000a370
 80143d8:	080122e3 	.word	0x080122e3
 80143dc:	20000090 	.word	0x20000090

080143e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80143e0:	b510      	push	{r4, lr}
 80143e2:	4604      	mov	r4, r0
 80143e4:	f7ff ff88 	bl	80142f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80143e8:	4620      	mov	r0, r4
 80143ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143ee:	f7ff bfbd 	b.w	801436c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080143f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80143f4:	b538      	push	{r3, r4, r5, lr}
 80143f6:	4c15      	ldr	r4, [pc, #84]	; (801444c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80143f8:	7823      	ldrb	r3, [r4, #0]
 80143fa:	f3bf 8f5b 	dmb	ish
 80143fe:	07da      	lsls	r2, r3, #31
 8014400:	4605      	mov	r5, r0
 8014402:	d40b      	bmi.n	801441c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014404:	4620      	mov	r0, r4
 8014406:	f007 fb3f 	bl	801ba88 <__cxa_guard_acquire>
 801440a:	b138      	cbz	r0, 801441c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801440c:	4620      	mov	r0, r4
 801440e:	f007 fb47 	bl	801baa0 <__cxa_guard_release>
 8014412:	4a0f      	ldr	r2, [pc, #60]	; (8014450 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014414:	490f      	ldr	r1, [pc, #60]	; (8014454 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8014416:	4810      	ldr	r0, [pc, #64]	; (8014458 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014418:	f007 fb2f 	bl	801ba7a <__aeabi_atexit>
 801441c:	4c0f      	ldr	r4, [pc, #60]	; (801445c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801441e:	7823      	ldrb	r3, [r4, #0]
 8014420:	f3bf 8f5b 	dmb	ish
 8014424:	07db      	lsls	r3, r3, #31
 8014426:	d40b      	bmi.n	8014440 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014428:	4620      	mov	r0, r4
 801442a:	f007 fb2d 	bl	801ba88 <__cxa_guard_acquire>
 801442e:	b138      	cbz	r0, 8014440 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014430:	4620      	mov	r0, r4
 8014432:	f007 fb35 	bl	801baa0 <__cxa_guard_release>
 8014436:	4a06      	ldr	r2, [pc, #24]	; (8014450 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014438:	4909      	ldr	r1, [pc, #36]	; (8014460 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801443a:	480a      	ldr	r0, [pc, #40]	; (8014464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801443c:	f007 fb1d 	bl	801ba7a <__aeabi_atexit>
 8014440:	4b05      	ldr	r3, [pc, #20]	; (8014458 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014442:	652b      	str	r3, [r5, #80]	; 0x50
 8014444:	4b07      	ldr	r3, [pc, #28]	; (8014464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014446:	656b      	str	r3, [r5, #84]	; 0x54
 8014448:	bd38      	pop	{r3, r4, r5, pc}
 801444a:	bf00      	nop
 801444c:	2000a3a4 	.word	0x2000a3a4
 8014450:	20000000 	.word	0x20000000
 8014454:	080122d1 	.word	0x080122d1
 8014458:	200000c4 	.word	0x200000c4
 801445c:	2000a3a8 	.word	0x2000a3a8
 8014460:	080122cf 	.word	0x080122cf
 8014464:	200000c8 	.word	0x200000c8

08014468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8014468:	b538      	push	{r3, r4, r5, lr}
 801446a:	4c15      	ldr	r4, [pc, #84]	; (80144c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801446c:	7823      	ldrb	r3, [r4, #0]
 801446e:	f3bf 8f5b 	dmb	ish
 8014472:	07da      	lsls	r2, r3, #31
 8014474:	4605      	mov	r5, r0
 8014476:	d40b      	bmi.n	8014490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014478:	4620      	mov	r0, r4
 801447a:	f007 fb05 	bl	801ba88 <__cxa_guard_acquire>
 801447e:	b138      	cbz	r0, 8014490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014480:	4620      	mov	r0, r4
 8014482:	f007 fb0d 	bl	801baa0 <__cxa_guard_release>
 8014486:	4a0f      	ldr	r2, [pc, #60]	; (80144c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014488:	490f      	ldr	r1, [pc, #60]	; (80144c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801448a:	4810      	ldr	r0, [pc, #64]	; (80144cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801448c:	f007 faf5 	bl	801ba7a <__aeabi_atexit>
 8014490:	4c0f      	ldr	r4, [pc, #60]	; (80144d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8014492:	7823      	ldrb	r3, [r4, #0]
 8014494:	f3bf 8f5b 	dmb	ish
 8014498:	07db      	lsls	r3, r3, #31
 801449a:	d40b      	bmi.n	80144b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801449c:	4620      	mov	r0, r4
 801449e:	f007 faf3 	bl	801ba88 <__cxa_guard_acquire>
 80144a2:	b138      	cbz	r0, 80144b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80144a4:	4620      	mov	r0, r4
 80144a6:	f007 fafb 	bl	801baa0 <__cxa_guard_release>
 80144aa:	4a06      	ldr	r2, [pc, #24]	; (80144c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80144ac:	4909      	ldr	r1, [pc, #36]	; (80144d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80144ae:	480a      	ldr	r0, [pc, #40]	; (80144d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80144b0:	f007 fae3 	bl	801ba7a <__aeabi_atexit>
 80144b4:	4b05      	ldr	r3, [pc, #20]	; (80144cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80144b6:	64ab      	str	r3, [r5, #72]	; 0x48
 80144b8:	4b07      	ldr	r3, [pc, #28]	; (80144d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80144ba:	64eb      	str	r3, [r5, #76]	; 0x4c
 80144bc:	bd38      	pop	{r3, r4, r5, pc}
 80144be:	bf00      	nop
 80144c0:	2000a3ac 	.word	0x2000a3ac
 80144c4:	20000000 	.word	0x20000000
 80144c8:	080122d5 	.word	0x080122d5
 80144cc:	200000cc 	.word	0x200000cc
 80144d0:	2000a3b0 	.word	0x2000a3b0
 80144d4:	080122d3 	.word	0x080122d3
 80144d8:	200000d0 	.word	0x200000d0

080144dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80144dc:	b538      	push	{r3, r4, r5, lr}
 80144de:	4c15      	ldr	r4, [pc, #84]	; (8014534 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80144e0:	7823      	ldrb	r3, [r4, #0]
 80144e2:	f3bf 8f5b 	dmb	ish
 80144e6:	07da      	lsls	r2, r3, #31
 80144e8:	4605      	mov	r5, r0
 80144ea:	d40b      	bmi.n	8014504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80144ec:	4620      	mov	r0, r4
 80144ee:	f007 facb 	bl	801ba88 <__cxa_guard_acquire>
 80144f2:	b138      	cbz	r0, 8014504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80144f4:	4620      	mov	r0, r4
 80144f6:	f007 fad3 	bl	801baa0 <__cxa_guard_release>
 80144fa:	4a0f      	ldr	r2, [pc, #60]	; (8014538 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80144fc:	490f      	ldr	r1, [pc, #60]	; (801453c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80144fe:	4810      	ldr	r0, [pc, #64]	; (8014540 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014500:	f007 fabb 	bl	801ba7a <__aeabi_atexit>
 8014504:	4c0f      	ldr	r4, [pc, #60]	; (8014544 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014506:	7823      	ldrb	r3, [r4, #0]
 8014508:	f3bf 8f5b 	dmb	ish
 801450c:	07db      	lsls	r3, r3, #31
 801450e:	d40b      	bmi.n	8014528 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014510:	4620      	mov	r0, r4
 8014512:	f007 fab9 	bl	801ba88 <__cxa_guard_acquire>
 8014516:	b138      	cbz	r0, 8014528 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014518:	4620      	mov	r0, r4
 801451a:	f007 fac1 	bl	801baa0 <__cxa_guard_release>
 801451e:	4a06      	ldr	r2, [pc, #24]	; (8014538 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014520:	4909      	ldr	r1, [pc, #36]	; (8014548 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8014522:	480a      	ldr	r0, [pc, #40]	; (801454c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014524:	f007 faa9 	bl	801ba7a <__aeabi_atexit>
 8014528:	4b05      	ldr	r3, [pc, #20]	; (8014540 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801452a:	642b      	str	r3, [r5, #64]	; 0x40
 801452c:	4b07      	ldr	r3, [pc, #28]	; (801454c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801452e:	646b      	str	r3, [r5, #68]	; 0x44
 8014530:	bd38      	pop	{r3, r4, r5, pc}
 8014532:	bf00      	nop
 8014534:	2000a374 	.word	0x2000a374
 8014538:	20000000 	.word	0x20000000
 801453c:	080122d9 	.word	0x080122d9
 8014540:	20000094 	.word	0x20000094
 8014544:	2000a378 	.word	0x2000a378
 8014548:	080122d7 	.word	0x080122d7
 801454c:	20000098 	.word	0x20000098

08014550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8014550:	b538      	push	{r3, r4, r5, lr}
 8014552:	4c15      	ldr	r4, [pc, #84]	; (80145a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8014554:	7823      	ldrb	r3, [r4, #0]
 8014556:	f3bf 8f5b 	dmb	ish
 801455a:	07da      	lsls	r2, r3, #31
 801455c:	4605      	mov	r5, r0
 801455e:	d40b      	bmi.n	8014578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014560:	4620      	mov	r0, r4
 8014562:	f007 fa91 	bl	801ba88 <__cxa_guard_acquire>
 8014566:	b138      	cbz	r0, 8014578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014568:	4620      	mov	r0, r4
 801456a:	f007 fa99 	bl	801baa0 <__cxa_guard_release>
 801456e:	4a0f      	ldr	r2, [pc, #60]	; (80145ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014570:	490f      	ldr	r1, [pc, #60]	; (80145b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8014572:	4810      	ldr	r0, [pc, #64]	; (80145b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014574:	f007 fa81 	bl	801ba7a <__aeabi_atexit>
 8014578:	4c0f      	ldr	r4, [pc, #60]	; (80145b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801457a:	7823      	ldrb	r3, [r4, #0]
 801457c:	f3bf 8f5b 	dmb	ish
 8014580:	07db      	lsls	r3, r3, #31
 8014582:	d40b      	bmi.n	801459c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014584:	4620      	mov	r0, r4
 8014586:	f007 fa7f 	bl	801ba88 <__cxa_guard_acquire>
 801458a:	b138      	cbz	r0, 801459c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801458c:	4620      	mov	r0, r4
 801458e:	f007 fa87 	bl	801baa0 <__cxa_guard_release>
 8014592:	4a06      	ldr	r2, [pc, #24]	; (80145ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014594:	4909      	ldr	r1, [pc, #36]	; (80145bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8014596:	480a      	ldr	r0, [pc, #40]	; (80145c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014598:	f007 fa6f 	bl	801ba7a <__aeabi_atexit>
 801459c:	4b05      	ldr	r3, [pc, #20]	; (80145b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801459e:	63ab      	str	r3, [r5, #56]	; 0x38
 80145a0:	4b07      	ldr	r3, [pc, #28]	; (80145c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80145a2:	63eb      	str	r3, [r5, #60]	; 0x3c
 80145a4:	bd38      	pop	{r3, r4, r5, pc}
 80145a6:	bf00      	nop
 80145a8:	2000a394 	.word	0x2000a394
 80145ac:	20000000 	.word	0x20000000
 80145b0:	080122dd 	.word	0x080122dd
 80145b4:	200000b4 	.word	0x200000b4
 80145b8:	2000a398 	.word	0x2000a398
 80145bc:	080122db 	.word	0x080122db
 80145c0:	200000b8 	.word	0x200000b8

080145c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80145c4:	b510      	push	{r4, lr}
 80145c6:	4604      	mov	r4, r0
 80145c8:	f7ff ff14 	bl	80143f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80145cc:	4620      	mov	r0, r4
 80145ce:	f7ff ff85 	bl	80144dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80145d2:	4620      	mov	r0, r4
 80145d4:	f7ff ff48 	bl	8014468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80145d8:	4620      	mov	r0, r4
 80145da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80145de:	f7ff bfb7 	b.w	8014550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080145e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80145e4:	b538      	push	{r3, r4, r5, lr}
 80145e6:	4c15      	ldr	r4, [pc, #84]	; (801463c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80145e8:	7823      	ldrb	r3, [r4, #0]
 80145ea:	f3bf 8f5b 	dmb	ish
 80145ee:	07da      	lsls	r2, r3, #31
 80145f0:	4605      	mov	r5, r0
 80145f2:	d40b      	bmi.n	801460c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80145f4:	4620      	mov	r0, r4
 80145f6:	f007 fa47 	bl	801ba88 <__cxa_guard_acquire>
 80145fa:	b138      	cbz	r0, 801460c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80145fc:	4620      	mov	r0, r4
 80145fe:	f007 fa4f 	bl	801baa0 <__cxa_guard_release>
 8014602:	4a0f      	ldr	r2, [pc, #60]	; (8014640 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014604:	490f      	ldr	r1, [pc, #60]	; (8014644 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014606:	4810      	ldr	r0, [pc, #64]	; (8014648 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014608:	f007 fa37 	bl	801ba7a <__aeabi_atexit>
 801460c:	4c0f      	ldr	r4, [pc, #60]	; (801464c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801460e:	7823      	ldrb	r3, [r4, #0]
 8014610:	f3bf 8f5b 	dmb	ish
 8014614:	07db      	lsls	r3, r3, #31
 8014616:	d40b      	bmi.n	8014630 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014618:	4620      	mov	r0, r4
 801461a:	f007 fa35 	bl	801ba88 <__cxa_guard_acquire>
 801461e:	b138      	cbz	r0, 8014630 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014620:	4620      	mov	r0, r4
 8014622:	f007 fa3d 	bl	801baa0 <__cxa_guard_release>
 8014626:	4a06      	ldr	r2, [pc, #24]	; (8014640 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014628:	4909      	ldr	r1, [pc, #36]	; (8014650 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801462a:	480a      	ldr	r0, [pc, #40]	; (8014654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801462c:	f007 fa25 	bl	801ba7a <__aeabi_atexit>
 8014630:	4b05      	ldr	r3, [pc, #20]	; (8014648 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014632:	662b      	str	r3, [r5, #96]	; 0x60
 8014634:	4b07      	ldr	r3, [pc, #28]	; (8014654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014636:	666b      	str	r3, [r5, #100]	; 0x64
 8014638:	bd38      	pop	{r3, r4, r5, pc}
 801463a:	bf00      	nop
 801463c:	2000a37c 	.word	0x2000a37c
 8014640:	20000000 	.word	0x20000000
 8014644:	080122c9 	.word	0x080122c9
 8014648:	2000009c 	.word	0x2000009c
 801464c:	2000a380 	.word	0x2000a380
 8014650:	080122c7 	.word	0x080122c7
 8014654:	200000a0 	.word	0x200000a0

08014658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014658:	b538      	push	{r3, r4, r5, lr}
 801465a:	4c15      	ldr	r4, [pc, #84]	; (80146b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801465c:	7823      	ldrb	r3, [r4, #0]
 801465e:	f3bf 8f5b 	dmb	ish
 8014662:	07da      	lsls	r2, r3, #31
 8014664:	4605      	mov	r5, r0
 8014666:	d40b      	bmi.n	8014680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014668:	4620      	mov	r0, r4
 801466a:	f007 fa0d 	bl	801ba88 <__cxa_guard_acquire>
 801466e:	b138      	cbz	r0, 8014680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014670:	4620      	mov	r0, r4
 8014672:	f007 fa15 	bl	801baa0 <__cxa_guard_release>
 8014676:	4a0f      	ldr	r2, [pc, #60]	; (80146b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014678:	490f      	ldr	r1, [pc, #60]	; (80146b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801467a:	4810      	ldr	r0, [pc, #64]	; (80146bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801467c:	f007 f9fd 	bl	801ba7a <__aeabi_atexit>
 8014680:	4c0f      	ldr	r4, [pc, #60]	; (80146c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8014682:	7823      	ldrb	r3, [r4, #0]
 8014684:	f3bf 8f5b 	dmb	ish
 8014688:	07db      	lsls	r3, r3, #31
 801468a:	d40b      	bmi.n	80146a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801468c:	4620      	mov	r0, r4
 801468e:	f007 f9fb 	bl	801ba88 <__cxa_guard_acquire>
 8014692:	b138      	cbz	r0, 80146a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014694:	4620      	mov	r0, r4
 8014696:	f007 fa03 	bl	801baa0 <__cxa_guard_release>
 801469a:	4a06      	ldr	r2, [pc, #24]	; (80146b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801469c:	4909      	ldr	r1, [pc, #36]	; (80146c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801469e:	480a      	ldr	r0, [pc, #40]	; (80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80146a0:	f007 f9eb 	bl	801ba7a <__aeabi_atexit>
 80146a4:	4b05      	ldr	r3, [pc, #20]	; (80146bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80146a6:	65ab      	str	r3, [r5, #88]	; 0x58
 80146a8:	4b07      	ldr	r3, [pc, #28]	; (80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80146aa:	65eb      	str	r3, [r5, #92]	; 0x5c
 80146ac:	bd38      	pop	{r3, r4, r5, pc}
 80146ae:	bf00      	nop
 80146b0:	2000a354 	.word	0x2000a354
 80146b4:	20000000 	.word	0x20000000
 80146b8:	080122cd 	.word	0x080122cd
 80146bc:	20000074 	.word	0x20000074
 80146c0:	2000a358 	.word	0x2000a358
 80146c4:	080122cb 	.word	0x080122cb
 80146c8:	20000078 	.word	0x20000078

080146cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80146cc:	b510      	push	{r4, lr}
 80146ce:	4604      	mov	r4, r0
 80146d0:	f7ff ff88 	bl	80145e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80146d4:	4620      	mov	r0, r4
 80146d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80146da:	f7ff bfbd 	b.w	8014658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080146e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80146e0:	b538      	push	{r3, r4, r5, lr}
 80146e2:	4c15      	ldr	r4, [pc, #84]	; (8014738 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80146e4:	7823      	ldrb	r3, [r4, #0]
 80146e6:	f3bf 8f5b 	dmb	ish
 80146ea:	07da      	lsls	r2, r3, #31
 80146ec:	4605      	mov	r5, r0
 80146ee:	d40b      	bmi.n	8014708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80146f0:	4620      	mov	r0, r4
 80146f2:	f007 f9c9 	bl	801ba88 <__cxa_guard_acquire>
 80146f6:	b138      	cbz	r0, 8014708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80146f8:	4620      	mov	r0, r4
 80146fa:	f007 f9d1 	bl	801baa0 <__cxa_guard_release>
 80146fe:	4a0f      	ldr	r2, [pc, #60]	; (801473c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014700:	490f      	ldr	r1, [pc, #60]	; (8014740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014702:	4810      	ldr	r0, [pc, #64]	; (8014744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014704:	f007 f9b9 	bl	801ba7a <__aeabi_atexit>
 8014708:	4c0f      	ldr	r4, [pc, #60]	; (8014748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801470a:	7823      	ldrb	r3, [r4, #0]
 801470c:	f3bf 8f5b 	dmb	ish
 8014710:	07db      	lsls	r3, r3, #31
 8014712:	d40b      	bmi.n	801472c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014714:	4620      	mov	r0, r4
 8014716:	f007 f9b7 	bl	801ba88 <__cxa_guard_acquire>
 801471a:	b138      	cbz	r0, 801472c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801471c:	4620      	mov	r0, r4
 801471e:	f007 f9bf 	bl	801baa0 <__cxa_guard_release>
 8014722:	4a06      	ldr	r2, [pc, #24]	; (801473c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014724:	4909      	ldr	r1, [pc, #36]	; (801474c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8014726:	480a      	ldr	r0, [pc, #40]	; (8014750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014728:	f007 f9a7 	bl	801ba7a <__aeabi_atexit>
 801472c:	4b05      	ldr	r3, [pc, #20]	; (8014744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801472e:	672b      	str	r3, [r5, #112]	; 0x70
 8014730:	4b07      	ldr	r3, [pc, #28]	; (8014750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014732:	676b      	str	r3, [r5, #116]	; 0x74
 8014734:	bd38      	pop	{r3, r4, r5, pc}
 8014736:	bf00      	nop
 8014738:	2000a34c 	.word	0x2000a34c
 801473c:	20000000 	.word	0x20000000
 8014740:	080122c1 	.word	0x080122c1
 8014744:	2000006c 	.word	0x2000006c
 8014748:	2000a350 	.word	0x2000a350
 801474c:	080122bf 	.word	0x080122bf
 8014750:	20000070 	.word	0x20000070

08014754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014754:	b538      	push	{r3, r4, r5, lr}
 8014756:	4c15      	ldr	r4, [pc, #84]	; (80147ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014758:	7823      	ldrb	r3, [r4, #0]
 801475a:	f3bf 8f5b 	dmb	ish
 801475e:	07da      	lsls	r2, r3, #31
 8014760:	4605      	mov	r5, r0
 8014762:	d40b      	bmi.n	801477c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014764:	4620      	mov	r0, r4
 8014766:	f007 f98f 	bl	801ba88 <__cxa_guard_acquire>
 801476a:	b138      	cbz	r0, 801477c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801476c:	4620      	mov	r0, r4
 801476e:	f007 f997 	bl	801baa0 <__cxa_guard_release>
 8014772:	4a0f      	ldr	r2, [pc, #60]	; (80147b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014774:	490f      	ldr	r1, [pc, #60]	; (80147b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8014776:	4810      	ldr	r0, [pc, #64]	; (80147b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014778:	f007 f97f 	bl	801ba7a <__aeabi_atexit>
 801477c:	4c0f      	ldr	r4, [pc, #60]	; (80147bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801477e:	7823      	ldrb	r3, [r4, #0]
 8014780:	f3bf 8f5b 	dmb	ish
 8014784:	07db      	lsls	r3, r3, #31
 8014786:	d40b      	bmi.n	80147a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014788:	4620      	mov	r0, r4
 801478a:	f007 f97d 	bl	801ba88 <__cxa_guard_acquire>
 801478e:	b138      	cbz	r0, 80147a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014790:	4620      	mov	r0, r4
 8014792:	f007 f985 	bl	801baa0 <__cxa_guard_release>
 8014796:	4a06      	ldr	r2, [pc, #24]	; (80147b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014798:	4909      	ldr	r1, [pc, #36]	; (80147c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801479a:	480a      	ldr	r0, [pc, #40]	; (80147c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801479c:	f007 f96d 	bl	801ba7a <__aeabi_atexit>
 80147a0:	4b05      	ldr	r3, [pc, #20]	; (80147b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80147a2:	66ab      	str	r3, [r5, #104]	; 0x68
 80147a4:	4b07      	ldr	r3, [pc, #28]	; (80147c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80147a6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80147a8:	bd38      	pop	{r3, r4, r5, pc}
 80147aa:	bf00      	nop
 80147ac:	2000a344 	.word	0x2000a344
 80147b0:	20000000 	.word	0x20000000
 80147b4:	080122c5 	.word	0x080122c5
 80147b8:	20000064 	.word	0x20000064
 80147bc:	2000a348 	.word	0x2000a348
 80147c0:	080122c3 	.word	0x080122c3
 80147c4:	20000068 	.word	0x20000068

080147c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80147c8:	b510      	push	{r4, lr}
 80147ca:	4604      	mov	r4, r0
 80147cc:	f7ff ff88 	bl	80146e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80147d0:	4620      	mov	r0, r4
 80147d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80147d6:	f7ff bfbd 	b.w	8014754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080147da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80147da:	b510      	push	{r4, lr}
 80147dc:	4604      	mov	r4, r0
 80147de:	f7ff fff3 	bl	80147c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80147e2:	4620      	mov	r0, r4
 80147e4:	f7ff ff72 	bl	80146cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80147e8:	4620      	mov	r0, r4
 80147ea:	f7ff fdf9 	bl	80143e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80147ee:	4620      	mov	r0, r4
 80147f0:	f7ff fcfa 	bl	80141e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80147f4:	4620      	mov	r0, r4
 80147f6:	f7ff fd75 	bl	80142e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80147fa:	4620      	mov	r0, r4
 80147fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014800:	f7ff bee0 	b.w	80145c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014804:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014808:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801480c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014810:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8014814:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014818:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801481c:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014820:	8808      	ldrh	r0, [r1, #0]
 8014822:	fb0e 4708 	mla	r7, lr, r8, r4
 8014826:	f1be 0f00 	cmp.w	lr, #0
 801482a:	eb02 0a07 	add.w	sl, r2, r7
 801482e:	db37      	blt.n	80148a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014830:	45f3      	cmp	fp, lr
 8014832:	dd35      	ble.n	80148a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014834:	2c00      	cmp	r4, #0
 8014836:	db31      	blt.n	801489c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014838:	45a0      	cmp	r8, r4
 801483a:	dd2f      	ble.n	801489c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801483c:	5dd2      	ldrb	r2, [r2, r7]
 801483e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8014842:	1c62      	adds	r2, r4, #1
 8014844:	d42f      	bmi.n	80148a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014846:	4590      	cmp	r8, r2
 8014848:	dd2d      	ble.n	80148a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801484a:	b366      	cbz	r6, 80148a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801484c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014850:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014854:	f11e 0e01 	adds.w	lr, lr, #1
 8014858:	d429      	bmi.n	80148ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801485a:	45f3      	cmp	fp, lr
 801485c:	dd27      	ble.n	80148ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801485e:	f1bc 0f00 	cmp.w	ip, #0
 8014862:	f000 80a1 	beq.w	80149a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8014866:	2c00      	cmp	r4, #0
 8014868:	db1f      	blt.n	80148aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801486a:	45a0      	cmp	r8, r4
 801486c:	dd1d      	ble.n	80148aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801486e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8014872:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8014876:	3401      	adds	r4, #1
 8014878:	d41c      	bmi.n	80148b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801487a:	45a0      	cmp	r8, r4
 801487c:	dd1a      	ble.n	80148b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801487e:	b1de      	cbz	r6, 80148b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8014880:	44d0      	add	r8, sl
 8014882:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014886:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801488a:	2e0f      	cmp	r6, #15
 801488c:	d915      	bls.n	80148ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801488e:	4b49      	ldr	r3, [pc, #292]	; (80149b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014890:	4a49      	ldr	r2, [pc, #292]	; (80149b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8014892:	484a      	ldr	r0, [pc, #296]	; (80149bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8014894:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014898:	f007 f922 	bl	801bae0 <__assert_func>
 801489c:	4681      	mov	r9, r0
 801489e:	e7d0      	b.n	8014842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80148a0:	4607      	mov	r7, r0
 80148a2:	4681      	mov	r9, r0
 80148a4:	e7d6      	b.n	8014854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80148a6:	4607      	mov	r7, r0
 80148a8:	e7d4      	b.n	8014854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80148aa:	4686      	mov	lr, r0
 80148ac:	e7e3      	b.n	8014876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80148ae:	4603      	mov	r3, r0
 80148b0:	4686      	mov	lr, r0
 80148b2:	e7ea      	b.n	801488a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80148b4:	4603      	mov	r3, r0
 80148b6:	e7e8      	b.n	801488a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80148b8:	4603      	mov	r3, r0
 80148ba:	f1bc 0f0f 	cmp.w	ip, #15
 80148be:	d8e6      	bhi.n	801488e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80148c0:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80148c4:	fb16 f80c 	smulbb	r8, r6, ip
 80148c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80148cc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80148d0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80148d4:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80148d8:	ea44 0909 	orr.w	r9, r4, r9
 80148dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80148e0:	f1cc 0410 	rsb	r4, ip, #16
 80148e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80148e8:	1ba4      	subs	r4, r4, r6
 80148ea:	041a      	lsls	r2, r3, #16
 80148ec:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80148f0:	ea4a 0707 	orr.w	r7, sl, r7
 80148f4:	4377      	muls	r7, r6
 80148f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80148fa:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80148fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014902:	fb04 7409 	mla	r4, r4, r9, r7
 8014906:	4313      	orrs	r3, r2
 8014908:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801490c:	fb08 4303 	mla	r3, r8, r3, r4
 8014910:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014914:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014918:	4322      	orrs	r2, r4
 801491a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801491e:	fb0c 3202 	mla	r2, ip, r2, r3
 8014922:	0d53      	lsrs	r3, r2, #21
 8014924:	0952      	lsrs	r2, r2, #5
 8014926:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801492a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801492e:	431a      	orrs	r2, r3
 8014930:	b293      	uxth	r3, r2
 8014932:	b2af      	uxth	r7, r5
 8014934:	1202      	asrs	r2, r0, #8
 8014936:	43ed      	mvns	r5, r5
 8014938:	b2ed      	uxtb	r5, r5
 801493a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801493e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014942:	fb12 f205 	smulbb	r2, r2, r5
 8014946:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801494a:	fb0c 2c07 	mla	ip, ip, r7, r2
 801494e:	00dc      	lsls	r4, r3, #3
 8014950:	10da      	asrs	r2, r3, #3
 8014952:	10c6      	asrs	r6, r0, #3
 8014954:	00c3      	lsls	r3, r0, #3
 8014956:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801495a:	b2db      	uxtb	r3, r3
 801495c:	fb16 f605 	smulbb	r6, r6, r5
 8014960:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014964:	b2e4      	uxtb	r4, r4
 8014966:	fb13 f305 	smulbb	r3, r3, r5
 801496a:	fa1f fc8c 	uxth.w	ip, ip
 801496e:	fb02 6207 	mla	r2, r2, r7, r6
 8014972:	fb04 3307 	mla	r3, r4, r7, r3
 8014976:	b296      	uxth	r6, r2
 8014978:	b29a      	uxth	r2, r3
 801497a:	f10c 0301 	add.w	r3, ip, #1
 801497e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014982:	1c53      	adds	r3, r2, #1
 8014984:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014988:	1c72      	adds	r2, r6, #1
 801498a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801498e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014992:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014996:	0952      	lsrs	r2, r2, #5
 8014998:	ea43 030c 	orr.w	r3, r3, ip
 801499c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80149a0:	4313      	orrs	r3, r2
 80149a2:	800b      	strh	r3, [r1, #0]
 80149a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149a8:	2e0f      	cmp	r6, #15
 80149aa:	f63f af70 	bhi.w	801488e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80149ae:	4603      	mov	r3, r0
 80149b0:	4686      	mov	lr, r0
 80149b2:	e785      	b.n	80148c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80149b4:	0801f996 	.word	0x0801f996
 80149b8:	0802000f 	.word	0x0802000f
 80149bc:	0801fa1a 	.word	0x0801fa1a

080149c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149c4:	ed2d 8b08 	vpush	{d8-d11}
 80149c8:	b099      	sub	sp, #100	; 0x64
 80149ca:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 80149ce:	9215      	str	r2, [sp, #84]	; 0x54
 80149d0:	9309      	str	r3, [sp, #36]	; 0x24
 80149d2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80149d4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80149d8:	930d      	str	r3, [sp, #52]	; 0x34
 80149da:	910c      	str	r1, [sp, #48]	; 0x30
 80149dc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80149e0:	9016      	str	r0, [sp, #88]	; 0x58
 80149e2:	6850      	ldr	r0, [r2, #4]
 80149e4:	6812      	ldr	r2, [r2, #0]
 80149e6:	fb00 1303 	mla	r3, r0, r3, r1
 80149ea:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80149ee:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80149f0:	681b      	ldr	r3, [r3, #0]
 80149f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80149f4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80149f6:	685e      	ldr	r6, [r3, #4]
 80149f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149fa:	43db      	mvns	r3, r3
 80149fc:	b2db      	uxtb	r3, r3
 80149fe:	eeb0 aa40 	vmov.f32	s20, s0
 8014a02:	eef0 9a60 	vmov.f32	s19, s1
 8014a06:	eeb0 9a41 	vmov.f32	s18, s2
 8014a0a:	eeb0 8a62 	vmov.f32	s16, s5
 8014a0e:	eef0 8a43 	vmov.f32	s17, s6
 8014a12:	eef0 ba44 	vmov.f32	s23, s8
 8014a16:	eeb0 ba64 	vmov.f32	s22, s9
 8014a1a:	eef0 aa45 	vmov.f32	s21, s10
 8014a1e:	3604      	adds	r6, #4
 8014a20:	930a      	str	r3, [sp, #40]	; 0x28
 8014a22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a24:	2b00      	cmp	r3, #0
 8014a26:	dc03      	bgt.n	8014a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a28:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014a2a:	2b00      	cmp	r3, #0
 8014a2c:	f340 8225 	ble.w	8014e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014a30:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014a3a:	1e48      	subs	r0, r1, #1
 8014a3c:	1e57      	subs	r7, r2, #1
 8014a3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	f340 80e3 	ble.w	8014c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8014a46:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014a4a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014a4e:	d406      	bmi.n	8014a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a50:	4584      	cmp	ip, r0
 8014a52:	da04      	bge.n	8014a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a54:	2b00      	cmp	r3, #0
 8014a56:	db02      	blt.n	8014a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a58:	42bb      	cmp	r3, r7
 8014a5a:	f2c0 80d8 	blt.w	8014c0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8014a5e:	f11c 0c01 	adds.w	ip, ip, #1
 8014a62:	f100 80c9 	bmi.w	8014bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014a66:	4561      	cmp	r1, ip
 8014a68:	f2c0 80c6 	blt.w	8014bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014a6c:	3301      	adds	r3, #1
 8014a6e:	f100 80c3 	bmi.w	8014bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014a72:	429a      	cmp	r2, r3
 8014a74:	f2c0 80c0 	blt.w	8014bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014a78:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014a7c:	4647      	mov	r7, r8
 8014a7e:	f1bb 0f00 	cmp.w	fp, #0
 8014a82:	f340 80e3 	ble.w	8014c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014a86:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014a88:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014a8a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014a8e:	689b      	ldr	r3, [r3, #8]
 8014a90:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014a94:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014a98:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014a9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014aa0:	f100 8121 	bmi.w	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014aa4:	f103 39ff 	add.w	r9, r3, #4294967295
 8014aa8:	454a      	cmp	r2, r9
 8014aaa:	f280 811c 	bge.w	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014aae:	f1bc 0f00 	cmp.w	ip, #0
 8014ab2:	f2c0 8118 	blt.w	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014ab6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014aba:	45cc      	cmp	ip, r9
 8014abc:	f280 8113 	bge.w	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014ac0:	b21b      	sxth	r3, r3
 8014ac2:	fb0c 2203 	mla	r2, ip, r3, r2
 8014ac6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ac8:	eb04 0902 	add.w	r9, r4, r2
 8014acc:	5ca2      	ldrb	r2, [r4, r2]
 8014ace:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014ad2:	2800      	cmp	r0, #0
 8014ad4:	f000 80fe 	beq.w	8014cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014ad8:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014adc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014ae0:	9211      	str	r2, [sp, #68]	; 0x44
 8014ae2:	b151      	cbz	r1, 8014afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014ae4:	eb09 0203 	add.w	r2, r9, r3
 8014ae8:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014aec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014af0:	930f      	str	r3, [sp, #60]	; 0x3c
 8014af2:	7853      	ldrb	r3, [r2, #1]
 8014af4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014af8:	9312      	str	r3, [sp, #72]	; 0x48
 8014afa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014afc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014afe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014b02:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b0a:	ea4c 0c03 	orr.w	ip, ip, r3
 8014b0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b10:	041b      	lsls	r3, r3, #16
 8014b12:	fb10 f201 	smulbb	r2, r0, r1
 8014b16:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014b1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014b1e:	10d2      	asrs	r2, r2, #3
 8014b20:	4323      	orrs	r3, r4
 8014b22:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014b26:	4353      	muls	r3, r2
 8014b28:	fb09 330c 	mla	r3, r9, ip, r3
 8014b2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014b30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014b38:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014b3c:	f1c1 0c10 	rsb	ip, r1, #16
 8014b40:	ebac 0c00 	sub.w	ip, ip, r0
 8014b44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014b48:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014b4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014b4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014b50:	0418      	lsls	r0, r3, #16
 8014b52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014b56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b5a:	4318      	orrs	r0, r3
 8014b5c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014b60:	fb02 c200 	mla	r2, r2, r0, ip
 8014b64:	0d53      	lsrs	r3, r2, #21
 8014b66:	0952      	lsrs	r2, r2, #5
 8014b68:	8838      	ldrh	r0, [r7, #0]
 8014b6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014b6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014b72:	431a      	orrs	r2, r3
 8014b74:	b292      	uxth	r2, r2
 8014b76:	1201      	asrs	r1, r0, #8
 8014b78:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014b7c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014b80:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014b84:	fb11 f104 	smulbb	r1, r1, r4
 8014b88:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014b8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b90:	00c0      	lsls	r0, r0, #3
 8014b92:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014b96:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014b9a:	10d1      	asrs	r1, r2, #3
 8014b9c:	b2c0      	uxtb	r0, r0
 8014b9e:	00d2      	lsls	r2, r2, #3
 8014ba0:	b2d2      	uxtb	r2, r2
 8014ba2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014ba6:	fb1e fe04 	smulbb	lr, lr, r4
 8014baa:	fb10 f004 	smulbb	r0, r0, r4
 8014bae:	fa1f fc8c 	uxth.w	ip, ip
 8014bb2:	fb01 e103 	mla	r1, r1, r3, lr
 8014bb6:	fb02 0303 	mla	r3, r2, r3, r0
 8014bba:	b29a      	uxth	r2, r3
 8014bbc:	f10c 0301 	add.w	r3, ip, #1
 8014bc0:	b289      	uxth	r1, r1
 8014bc2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014bc6:	1c53      	adds	r3, r2, #1
 8014bc8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014bcc:	1c4a      	adds	r2, r1, #1
 8014bce:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014bd2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014bd6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014bda:	0949      	lsrs	r1, r1, #5
 8014bdc:	ea43 030c 	orr.w	r3, r3, ip
 8014be0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014be4:	430b      	orrs	r3, r1
 8014be6:	803b      	strh	r3, [r7, #0]
 8014be8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014bea:	449a      	add	sl, r3
 8014bec:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014bee:	3702      	adds	r7, #2
 8014bf0:	441d      	add	r5, r3
 8014bf2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014bf6:	e742      	b.n	8014a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014bf8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014bfa:	449a      	add	sl, r3
 8014bfc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014bfe:	441d      	add	r5, r3
 8014c00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c02:	3b01      	subs	r3, #1
 8014c04:	9309      	str	r3, [sp, #36]	; 0x24
 8014c06:	f108 0802 	add.w	r8, r8, #2
 8014c0a:	e718      	b.n	8014a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014c0c:	d023      	beq.n	8014c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c10:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014c12:	3b01      	subs	r3, #1
 8014c14:	fb00 a003 	mla	r0, r0, r3, sl
 8014c18:	1400      	asrs	r0, r0, #16
 8014c1a:	f53f af2d 	bmi.w	8014a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c1e:	3901      	subs	r1, #1
 8014c20:	4288      	cmp	r0, r1
 8014c22:	f6bf af29 	bge.w	8014a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c26:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014c28:	fb01 5303 	mla	r3, r1, r3, r5
 8014c2c:	141b      	asrs	r3, r3, #16
 8014c2e:	f53f af23 	bmi.w	8014a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c32:	3a01      	subs	r2, #1
 8014c34:	4293      	cmp	r3, r2
 8014c36:	f6bf af1f 	bge.w	8014a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c3a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014c3e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014c42:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014c46:	f1be 0f00 	cmp.w	lr, #0
 8014c4a:	dc6c      	bgt.n	8014d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c4e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014c52:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c58:	2b00      	cmp	r3, #0
 8014c5a:	f340 810e 	ble.w	8014e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014c5e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014c62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014c66:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014c6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c6c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014c70:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014c74:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014c78:	eef0 6a48 	vmov.f32	s13, s16
 8014c7c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014c80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c84:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014c88:	ee16 aa90 	vmov	sl, s13
 8014c8c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014c90:	eef0 6a68 	vmov.f32	s13, s17
 8014c94:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014c98:	ee18 2a10 	vmov	r2, s16
 8014c9c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014ca0:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ca4:	ee18 2a90 	vmov	r2, s17
 8014ca8:	932d      	str	r3, [sp, #180]	; 0xb4
 8014caa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cac:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cb0:	932e      	str	r3, [sp, #184]	; 0xb8
 8014cb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014cb4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014cb6:	3b01      	subs	r3, #1
 8014cb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cbc:	930c      	str	r3, [sp, #48]	; 0x30
 8014cbe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cc0:	bf08      	it	eq
 8014cc2:	4613      	moveq	r3, r2
 8014cc4:	ee16 5a90 	vmov	r5, s13
 8014cc8:	9309      	str	r3, [sp, #36]	; 0x24
 8014cca:	eef0 8a67 	vmov.f32	s17, s15
 8014cce:	eeb0 8a47 	vmov.f32	s16, s14
 8014cd2:	e6a6      	b.n	8014a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014cd4:	2900      	cmp	r1, #0
 8014cd6:	f43f af10 	beq.w	8014afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014cda:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014cde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014ce2:	930f      	str	r3, [sp, #60]	; 0x3c
 8014ce4:	e709      	b.n	8014afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014ce6:	f112 0901 	adds.w	r9, r2, #1
 8014cea:	f53f af7d 	bmi.w	8014be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014cee:	454b      	cmp	r3, r9
 8014cf0:	f6ff af7a 	blt.w	8014be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014cf4:	f11c 0901 	adds.w	r9, ip, #1
 8014cf8:	f53f af76 	bmi.w	8014be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014cfc:	45ce      	cmp	lr, r9
 8014cfe:	f6ff af73 	blt.w	8014be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014d04:	9202      	str	r2, [sp, #8]
 8014d06:	b21b      	sxth	r3, r3
 8014d08:	fa0f f28e 	sxth.w	r2, lr
 8014d0c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014d10:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014d14:	9201      	str	r2, [sp, #4]
 8014d16:	9300      	str	r3, [sp, #0]
 8014d18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d1a:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014d1c:	4633      	mov	r3, r6
 8014d1e:	4639      	mov	r1, r7
 8014d20:	f7ff fd70 	bl	8014804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014d24:	e760      	b.n	8014be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d26:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014d28:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014d2a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014d2e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014d32:	1429      	asrs	r1, r5, #16
 8014d34:	fb03 2101 	mla	r1, r3, r1, r2
 8014d38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d3a:	440a      	add	r2, r1
 8014d3c:	5c61      	ldrb	r1, [r4, r1]
 8014d3e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014d42:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014d46:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014d4a:	f1bc 0f00 	cmp.w	ip, #0
 8014d4e:	f000 808c 	beq.w	8014e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8014d52:	7857      	ldrb	r7, [r2, #1]
 8014d54:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014d58:	9413      	str	r4, [sp, #76]	; 0x4c
 8014d5a:	b140      	cbz	r0, 8014d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014d5c:	18d7      	adds	r7, r2, r3
 8014d5e:	5cd3      	ldrb	r3, [r2, r3]
 8014d60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d64:	9310      	str	r3, [sp, #64]	; 0x40
 8014d66:	787b      	ldrb	r3, [r7, #1]
 8014d68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d6c:	9314      	str	r3, [sp, #80]	; 0x50
 8014d6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014d70:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014d72:	fb1c f200 	smulbb	r2, ip, r0
 8014d76:	041f      	lsls	r7, r3, #16
 8014d78:	10d2      	asrs	r2, r2, #3
 8014d7a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d7e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014d82:	431f      	orrs	r7, r3
 8014d84:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014d88:	9317      	str	r3, [sp, #92]	; 0x5c
 8014d8a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014d8c:	041b      	lsls	r3, r3, #16
 8014d8e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014d92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014d96:	ea43 030b 	orr.w	r3, r3, fp
 8014d9a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014d9c:	4353      	muls	r3, r2
 8014d9e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014da2:	fb04 3707 	mla	r7, r4, r7, r3
 8014da6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014daa:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014dae:	ea43 0b01 	orr.w	fp, r3, r1
 8014db2:	f1c0 0110 	rsb	r1, r0, #16
 8014db6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014db8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014dba:	eba1 0c0c 	sub.w	ip, r1, ip
 8014dbe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014dc2:	fb0c 770b 	mla	r7, ip, fp, r7
 8014dc6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014dca:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014dce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014dd2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014dd6:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014dda:	fb02 770c 	mla	r7, r2, ip, r7
 8014dde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014de0:	0d79      	lsrs	r1, r7, #21
 8014de2:	097f      	lsrs	r7, r7, #5
 8014de4:	8812      	ldrh	r2, [r2, #0]
 8014de6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014dea:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014dee:	430f      	orrs	r7, r1
 8014df0:	b2bb      	uxth	r3, r7
 8014df2:	1211      	asrs	r1, r2, #8
 8014df4:	1218      	asrs	r0, r3, #8
 8014df6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014dfa:	fb11 f104 	smulbb	r1, r1, r4
 8014dfe:	10d7      	asrs	r7, r2, #3
 8014e00:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014e04:	00d2      	lsls	r2, r2, #3
 8014e06:	fb00 1009 	mla	r0, r0, r9, r1
 8014e0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e0e:	10d9      	asrs	r1, r3, #3
 8014e10:	b2d2      	uxtb	r2, r2
 8014e12:	00db      	lsls	r3, r3, #3
 8014e14:	fb17 f704 	smulbb	r7, r7, r4
 8014e18:	fb12 f204 	smulbb	r2, r2, r4
 8014e1c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014e20:	b2db      	uxtb	r3, r3
 8014e22:	b280      	uxth	r0, r0
 8014e24:	fb01 7109 	mla	r1, r1, r9, r7
 8014e28:	fb03 2309 	mla	r3, r3, r9, r2
 8014e2c:	b29b      	uxth	r3, r3
 8014e2e:	b289      	uxth	r1, r1
 8014e30:	1c42      	adds	r2, r0, #1
 8014e32:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014e36:	1c4f      	adds	r7, r1, #1
 8014e38:	1c5a      	adds	r2, r3, #1
 8014e3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014e3e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014e42:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014e46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014e4a:	0949      	lsrs	r1, r1, #5
 8014e4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e4e:	4310      	orrs	r0, r2
 8014e50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e54:	4308      	orrs	r0, r1
 8014e56:	f823 0b02 	strh.w	r0, [r3], #2
 8014e5a:	930e      	str	r3, [sp, #56]	; 0x38
 8014e5c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014e5e:	449a      	add	sl, r3
 8014e60:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014e62:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014e66:	441d      	add	r5, r3
 8014e68:	e6ed      	b.n	8014c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8014e6a:	2800      	cmp	r0, #0
 8014e6c:	f43f af7f 	beq.w	8014d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014e70:	5cd3      	ldrb	r3, [r2, r3]
 8014e72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014e76:	9310      	str	r3, [sp, #64]	; 0x40
 8014e78:	e779      	b.n	8014d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014e7a:	b019      	add	sp, #100	; 0x64
 8014e7c:	ecbd 8b08 	vpop	{d8-d11}
 8014e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014e88:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014e8c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014e90:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014e94:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014e98:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014e9c:	8808      	ldrh	r0, [r1, #0]
 8014e9e:	fb06 570e 	mla	r7, r6, lr, r5
 8014ea2:	2e00      	cmp	r6, #0
 8014ea4:	eb02 0807 	add.w	r8, r2, r7
 8014ea8:	db38      	blt.n	8014f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014eaa:	45b1      	cmp	r9, r6
 8014eac:	dd36      	ble.n	8014f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014eae:	2d00      	cmp	r5, #0
 8014eb0:	db32      	blt.n	8014f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014eb2:	45ae      	cmp	lr, r5
 8014eb4:	dd30      	ble.n	8014f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014eb6:	5dd2      	ldrb	r2, [r2, r7]
 8014eb8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014ebc:	1c6a      	adds	r2, r5, #1
 8014ebe:	d430      	bmi.n	8014f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ec0:	4596      	cmp	lr, r2
 8014ec2:	dd2e      	ble.n	8014f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ec4:	b36c      	cbz	r4, 8014f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ec6:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014eca:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014ece:	3601      	adds	r6, #1
 8014ed0:	d42b      	bmi.n	8014f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014ed2:	45b1      	cmp	r9, r6
 8014ed4:	dd29      	ble.n	8014f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014ed6:	f1bc 0f00 	cmp.w	ip, #0
 8014eda:	d028      	beq.n	8014f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014edc:	2d00      	cmp	r5, #0
 8014ede:	db22      	blt.n	8014f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014ee0:	45ae      	cmp	lr, r5
 8014ee2:	dd20      	ble.n	8014f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014ee4:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014ee8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014eec:	3501      	adds	r5, #1
 8014eee:	d407      	bmi.n	8014f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014ef0:	45ae      	cmp	lr, r5
 8014ef2:	dd05      	ble.n	8014f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014ef4:	b134      	cbz	r4, 8014f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014ef6:	44c6      	add	lr, r8
 8014ef8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014efc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014f00:	2c0f      	cmp	r4, #15
 8014f02:	d802      	bhi.n	8014f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f04:	f1bc 0f0f 	cmp.w	ip, #15
 8014f08:	d914      	bls.n	8014f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014f0a:	4b26      	ldr	r3, [pc, #152]	; (8014fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014f0c:	4a26      	ldr	r2, [pc, #152]	; (8014fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014f0e:	4827      	ldr	r0, [pc, #156]	; (8014fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014f10:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014f14:	f006 fde4 	bl	801bae0 <__assert_func>
 8014f18:	4607      	mov	r7, r0
 8014f1a:	e7cf      	b.n	8014ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014f1c:	4602      	mov	r2, r0
 8014f1e:	4607      	mov	r7, r0
 8014f20:	e7d5      	b.n	8014ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f22:	4602      	mov	r2, r0
 8014f24:	e7d3      	b.n	8014ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f26:	4606      	mov	r6, r0
 8014f28:	e7e0      	b.n	8014eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014f2a:	4606      	mov	r6, r0
 8014f2c:	e7e8      	b.n	8014f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f2e:	2c0f      	cmp	r4, #15
 8014f30:	d8eb      	bhi.n	8014f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f32:	4606      	mov	r6, r0
 8014f34:	043d      	lsls	r5, r7, #16
 8014f36:	fb14 f30c 	smulbb	r3, r4, ip
 8014f3a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014f3e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014f42:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014f46:	10db      	asrs	r3, r3, #3
 8014f48:	432f      	orrs	r7, r5
 8014f4a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014f4e:	f1cc 0510 	rsb	r5, ip, #16
 8014f52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014f56:	1b2d      	subs	r5, r5, r4
 8014f58:	ea4e 0202 	orr.w	r2, lr, r2
 8014f5c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014f60:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014f64:	4354      	muls	r4, r2
 8014f66:	fb05 4507 	mla	r5, r5, r7, r4
 8014f6a:	0404      	lsls	r4, r0, #16
 8014f6c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014f70:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014f74:	4320      	orrs	r0, r4
 8014f76:	fb03 5400 	mla	r4, r3, r0, r5
 8014f7a:	0430      	lsls	r0, r6, #16
 8014f7c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014f80:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014f84:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014f88:	4330      	orrs	r0, r6
 8014f8a:	fb03 4000 	mla	r0, r3, r0, r4
 8014f8e:	0d43      	lsrs	r3, r0, #21
 8014f90:	0940      	lsrs	r0, r0, #5
 8014f92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014f9a:	4318      	orrs	r0, r3
 8014f9c:	8008      	strh	r0, [r1, #0]
 8014f9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014fa2:	bf00      	nop
 8014fa4:	0801f996 	.word	0x0801f996
 8014fa8:	0802000f 	.word	0x0802000f
 8014fac:	0801fa1a 	.word	0x0801fa1a

08014fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fb4:	ed2d 8b0a 	vpush	{d8-d12}
 8014fb8:	b093      	sub	sp, #76	; 0x4c
 8014fba:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8014fbe:	920f      	str	r2, [sp, #60]	; 0x3c
 8014fc0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014fc2:	9108      	str	r1, [sp, #32]
 8014fc4:	9306      	str	r3, [sp, #24]
 8014fc6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014fca:	9010      	str	r0, [sp, #64]	; 0x40
 8014fcc:	6850      	ldr	r0, [r2, #4]
 8014fce:	6812      	ldr	r2, [r2, #0]
 8014fd0:	fb00 1303 	mla	r3, r0, r3, r1
 8014fd4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014fd8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014fda:	681b      	ldr	r3, [r3, #0]
 8014fdc:	9307      	str	r3, [sp, #28]
 8014fde:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014fe0:	685f      	ldr	r7, [r3, #4]
 8014fe2:	eeb0 aa40 	vmov.f32	s20, s0
 8014fe6:	eef0 9a60 	vmov.f32	s19, s1
 8014fea:	eeb0 9a41 	vmov.f32	s18, s2
 8014fee:	eeb0 8a62 	vmov.f32	s16, s5
 8014ff2:	eef0 8a43 	vmov.f32	s17, s6
 8014ff6:	eeb0 ca44 	vmov.f32	s24, s8
 8014ffa:	eef0 ba64 	vmov.f32	s23, s9
 8014ffe:	eeb0 ba45 	vmov.f32	s22, s10
 8015002:	3704      	adds	r7, #4
 8015004:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015008:	9b08      	ldr	r3, [sp, #32]
 801500a:	2b00      	cmp	r3, #0
 801500c:	dc03      	bgt.n	8015016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801500e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015010:	2b00      	cmp	r3, #0
 8015012:	f340 81b2 	ble.w	801537a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015016:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015018:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801501c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015020:	1e48      	subs	r0, r1, #1
 8015022:	f102 3cff 	add.w	ip, r2, #4294967295
 8015026:	9b06      	ldr	r3, [sp, #24]
 8015028:	2b00      	cmp	r3, #0
 801502a:	f340 80a9 	ble.w	8015180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801502e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8015032:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015036:	d406      	bmi.n	8015046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015038:	4586      	cmp	lr, r0
 801503a:	da04      	bge.n	8015046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801503c:	2b00      	cmp	r3, #0
 801503e:	db02      	blt.n	8015046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015040:	4563      	cmp	r3, ip
 8015042:	f2c0 809e 	blt.w	8015182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015046:	f11e 0e01 	adds.w	lr, lr, #1
 801504a:	f100 808f 	bmi.w	801516c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801504e:	4571      	cmp	r1, lr
 8015050:	f2c0 808c 	blt.w	801516c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015054:	3301      	adds	r3, #1
 8015056:	f100 8089 	bmi.w	801516c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801505a:	429a      	cmp	r2, r3
 801505c:	f2c0 8086 	blt.w	801516c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015060:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015064:	46c8      	mov	r8, r9
 8015066:	f1bb 0f00 	cmp.w	fp, #0
 801506a:	f340 80a6 	ble.w	80151ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801506e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015070:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015072:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015076:	689b      	ldr	r3, [r3, #8]
 8015078:	1422      	asrs	r2, r4, #16
 801507a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801507e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8015082:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015086:	f100 80e3 	bmi.w	8015250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801508a:	f103 3aff 	add.w	sl, r3, #4294967295
 801508e:	4552      	cmp	r2, sl
 8015090:	f280 80de 	bge.w	8015250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015094:	f1bc 0f00 	cmp.w	ip, #0
 8015098:	f2c0 80da 	blt.w	8015250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801509c:	f10e 3aff 	add.w	sl, lr, #4294967295
 80150a0:	45d4      	cmp	ip, sl
 80150a2:	f280 80d5 	bge.w	8015250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80150a6:	b21b      	sxth	r3, r3
 80150a8:	fb0c 2203 	mla	r2, ip, r3, r2
 80150ac:	9d07      	ldr	r5, [sp, #28]
 80150ae:	eb05 0a02 	add.w	sl, r5, r2
 80150b2:	5caa      	ldrb	r2, [r5, r2]
 80150b4:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80150b8:	2800      	cmp	r0, #0
 80150ba:	f000 80c0 	beq.w	801523e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80150be:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80150c2:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80150c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80150c8:	b151      	cbz	r1, 80150e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80150ca:	eb0a 0203 	add.w	r2, sl, r3
 80150ce:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80150d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80150d6:	9309      	str	r3, [sp, #36]	; 0x24
 80150d8:	7853      	ldrb	r3, [r2, #1]
 80150da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80150de:	930c      	str	r3, [sp, #48]	; 0x30
 80150e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80150e2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80150e4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80150e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80150ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80150f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80150f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80150f6:	041b      	lsls	r3, r3, #16
 80150f8:	fb10 f201 	smulbb	r2, r0, r1
 80150fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015100:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015104:	10d2      	asrs	r2, r2, #3
 8015106:	432b      	orrs	r3, r5
 8015108:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801510c:	4353      	muls	r3, r2
 801510e:	fb0a 330c 	mla	r3, sl, ip, r3
 8015112:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015116:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801511a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801511e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015122:	f1c1 0c10 	rsb	ip, r1, #16
 8015126:	ebac 0c00 	sub.w	ip, ip, r0
 801512a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801512e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015132:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015134:	0418      	lsls	r0, r3, #16
 8015136:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801513a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801513e:	4318      	orrs	r0, r3
 8015140:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015144:	fb02 c200 	mla	r2, r2, r0, ip
 8015148:	0d53      	lsrs	r3, r2, #21
 801514a:	0952      	lsrs	r2, r2, #5
 801514c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015150:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015154:	431a      	orrs	r2, r3
 8015156:	f8a8 2000 	strh.w	r2, [r8]
 801515a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801515c:	441c      	add	r4, r3
 801515e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015160:	f108 0802 	add.w	r8, r8, #2
 8015164:	441e      	add	r6, r3
 8015166:	f10b 3bff 	add.w	fp, fp, #4294967295
 801516a:	e77c      	b.n	8015066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801516c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801516e:	441c      	add	r4, r3
 8015170:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015172:	441e      	add	r6, r3
 8015174:	9b06      	ldr	r3, [sp, #24]
 8015176:	3b01      	subs	r3, #1
 8015178:	9306      	str	r3, [sp, #24]
 801517a:	f109 0902 	add.w	r9, r9, #2
 801517e:	e752      	b.n	8015026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015180:	d020      	beq.n	80151c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015182:	9b06      	ldr	r3, [sp, #24]
 8015184:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8015186:	3b01      	subs	r3, #1
 8015188:	fb00 4003 	mla	r0, r0, r3, r4
 801518c:	1400      	asrs	r0, r0, #16
 801518e:	f53f af67 	bmi.w	8015060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015192:	3901      	subs	r1, #1
 8015194:	4288      	cmp	r0, r1
 8015196:	f6bf af63 	bge.w	8015060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801519a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801519c:	fb01 6303 	mla	r3, r1, r3, r6
 80151a0:	141b      	asrs	r3, r3, #16
 80151a2:	f53f af5d 	bmi.w	8015060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80151a6:	3a01      	subs	r2, #1
 80151a8:	4293      	cmp	r3, r2
 80151aa:	f6bf af59 	bge.w	8015060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80151ae:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80151b2:	46ca      	mov	sl, r9
 80151b4:	f1b8 0f00 	cmp.w	r8, #0
 80151b8:	dc67      	bgt.n	801528a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80151ba:	9b06      	ldr	r3, [sp, #24]
 80151bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80151c0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80151c4:	9b08      	ldr	r3, [sp, #32]
 80151c6:	2b00      	cmp	r3, #0
 80151c8:	f340 80d7 	ble.w	801537a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80151cc:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80151d0:	ee79 9aab 	vadd.f32	s19, s19, s23
 80151d4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80151d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151da:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80151de:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80151e2:	eef0 6a48 	vmov.f32	s13, s16
 80151e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80151ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151ee:	ee37 8a48 	vsub.f32	s16, s14, s16
 80151f2:	ee16 4a90 	vmov	r4, s13
 80151f6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80151fa:	eef0 6a68 	vmov.f32	s13, s17
 80151fe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015202:	ee18 2a10 	vmov	r2, s16
 8015206:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801520a:	fb92 f3f3 	sdiv	r3, r2, r3
 801520e:	ee18 2a90 	vmov	r2, s17
 8015212:	9329      	str	r3, [sp, #164]	; 0xa4
 8015214:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015216:	fb92 f3f3 	sdiv	r3, r2, r3
 801521a:	932a      	str	r3, [sp, #168]	; 0xa8
 801521c:	9b08      	ldr	r3, [sp, #32]
 801521e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015220:	3b01      	subs	r3, #1
 8015222:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015226:	9308      	str	r3, [sp, #32]
 8015228:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801522a:	bf08      	it	eq
 801522c:	4613      	moveq	r3, r2
 801522e:	ee16 6a90 	vmov	r6, s13
 8015232:	9306      	str	r3, [sp, #24]
 8015234:	eef0 8a67 	vmov.f32	s17, s15
 8015238:	eeb0 8a47 	vmov.f32	s16, s14
 801523c:	e6e4      	b.n	8015008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801523e:	2900      	cmp	r1, #0
 8015240:	f43f af4e 	beq.w	80150e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015244:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015248:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801524c:	9309      	str	r3, [sp, #36]	; 0x24
 801524e:	e747      	b.n	80150e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015250:	f112 0a01 	adds.w	sl, r2, #1
 8015254:	d481      	bmi.n	801515a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015256:	4553      	cmp	r3, sl
 8015258:	f6ff af7f 	blt.w	801515a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801525c:	f11c 0a01 	adds.w	sl, ip, #1
 8015260:	f53f af7b 	bmi.w	801515a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015264:	45d6      	cmp	lr, sl
 8015266:	f6ff af78 	blt.w	801515a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801526a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801526e:	b21b      	sxth	r3, r3
 8015270:	fa0f f28e 	sxth.w	r2, lr
 8015274:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015278:	9201      	str	r2, [sp, #4]
 801527a:	9300      	str	r3, [sp, #0]
 801527c:	9a07      	ldr	r2, [sp, #28]
 801527e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015280:	463b      	mov	r3, r7
 8015282:	4641      	mov	r1, r8
 8015284:	f7ff fdfe 	bl	8014e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015288:	e767      	b.n	801515a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801528a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801528c:	9d07      	ldr	r5, [sp, #28]
 801528e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015292:	1422      	asrs	r2, r4, #16
 8015294:	1431      	asrs	r1, r6, #16
 8015296:	fb03 2101 	mla	r1, r3, r1, r2
 801529a:	9a07      	ldr	r2, [sp, #28]
 801529c:	440a      	add	r2, r1
 801529e:	5c69      	ldrb	r1, [r5, r1]
 80152a0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80152a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80152a8:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80152ac:	f1be 0f00 	cmp.w	lr, #0
 80152b0:	d05c      	beq.n	801536c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80152b2:	f892 c001 	ldrb.w	ip, [r2, #1]
 80152b6:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80152ba:	950d      	str	r5, [sp, #52]	; 0x34
 80152bc:	b150      	cbz	r0, 80152d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80152be:	eb02 0c03 	add.w	ip, r2, r3
 80152c2:	5cd3      	ldrb	r3, [r2, r3]
 80152c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152c8:	930a      	str	r3, [sp, #40]	; 0x28
 80152ca:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80152ce:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152d2:	930e      	str	r3, [sp, #56]	; 0x38
 80152d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80152d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80152d8:	fb1e f200 	smulbb	r2, lr, r0
 80152dc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80152e0:	10d2      	asrs	r2, r2, #3
 80152e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80152e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80152ea:	ea4c 0c03 	orr.w	ip, ip, r3
 80152ee:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80152f2:	9311      	str	r3, [sp, #68]	; 0x44
 80152f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152f6:	041b      	lsls	r3, r3, #16
 80152f8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80152fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015300:	ea43 030b 	orr.w	r3, r3, fp
 8015304:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015306:	4353      	muls	r3, r2
 8015308:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801530c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8015310:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015314:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015318:	ea43 0b01 	orr.w	fp, r3, r1
 801531c:	f1c0 0110 	rsb	r1, r0, #16
 8015320:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015322:	eba1 0e0e 	sub.w	lr, r1, lr
 8015326:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801532a:	fb0e cc0b 	mla	ip, lr, fp, ip
 801532e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015332:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015336:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801533a:	ea4b 0e0e 	orr.w	lr, fp, lr
 801533e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015342:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015346:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801534a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801534e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015352:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015356:	ea43 0c0c 	orr.w	ip, r3, ip
 801535a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801535c:	f82a cb02 	strh.w	ip, [sl], #2
 8015360:	441c      	add	r4, r3
 8015362:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015364:	f108 38ff 	add.w	r8, r8, #4294967295
 8015368:	441e      	add	r6, r3
 801536a:	e723      	b.n	80151b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801536c:	2800      	cmp	r0, #0
 801536e:	d0b1      	beq.n	80152d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015370:	5cd3      	ldrb	r3, [r2, r3]
 8015372:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015376:	930a      	str	r3, [sp, #40]	; 0x28
 8015378:	e7ac      	b.n	80152d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801537a:	b013      	add	sp, #76	; 0x4c
 801537c:	ecbd 8b0a 	vpop	{d8-d12}
 8015380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8015384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015388:	468b      	mov	fp, r1
 801538a:	8809      	ldrh	r1, [r1, #0]
 801538c:	b089      	sub	sp, #36	; 0x24
 801538e:	10cd      	asrs	r5, r1, #3
 8015390:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8015394:	ea4f 2921 	mov.w	r9, r1, asr #8
 8015398:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801539c:	00c9      	lsls	r1, r1, #3
 801539e:	9500      	str	r5, [sp, #0]
 80153a0:	b2c9      	uxtb	r1, r1
 80153a2:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80153a6:	9101      	str	r1, [sp, #4]
 80153a8:	9900      	ldr	r1, [sp, #0]
 80153aa:	9202      	str	r2, [sp, #8]
 80153ac:	fb04 650e 	mla	r5, r4, lr, r6
 80153b0:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80153b4:	eb02 0805 	add.w	r8, r2, r5
 80153b8:	0209      	lsls	r1, r1, #8
 80153ba:	9a01      	ldr	r2, [sp, #4]
 80153bc:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80153c0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80153c4:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80153c8:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80153cc:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80153d0:	4311      	orrs	r1, r2
 80153d2:	2c00      	cmp	r4, #0
 80153d4:	9107      	str	r1, [sp, #28]
 80153d6:	db43      	blt.n	8015460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80153d8:	45a2      	cmp	sl, r4
 80153da:	dd41      	ble.n	8015460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80153dc:	2e00      	cmp	r6, #0
 80153de:	db3d      	blt.n	801545c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80153e0:	45b6      	cmp	lr, r6
 80153e2:	dd3b      	ble.n	801545c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80153e4:	9a02      	ldr	r2, [sp, #8]
 80153e6:	5d55      	ldrb	r5, [r2, r5]
 80153e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80153ec:	441d      	add	r5, r3
 80153ee:	1c72      	adds	r2, r6, #1
 80153f0:	d439      	bmi.n	8015466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80153f2:	4596      	cmp	lr, r2
 80153f4:	dd37      	ble.n	8015466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80153f6:	2f00      	cmp	r7, #0
 80153f8:	d035      	beq.n	8015466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80153fa:	f898 1001 	ldrb.w	r1, [r8, #1]
 80153fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015402:	4419      	add	r1, r3
 8015404:	3401      	adds	r4, #1
 8015406:	d432      	bmi.n	801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015408:	45a2      	cmp	sl, r4
 801540a:	dd30      	ble.n	801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801540c:	b378      	cbz	r0, 801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801540e:	2e00      	cmp	r6, #0
 8015410:	db2b      	blt.n	801546a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015412:	45b6      	cmp	lr, r6
 8015414:	dd29      	ble.n	801546a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015416:	f818 400e 	ldrb.w	r4, [r8, lr]
 801541a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801541e:	441c      	add	r4, r3
 8015420:	3601      	adds	r6, #1
 8015422:	d427      	bmi.n	8015474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015424:	45b6      	cmp	lr, r6
 8015426:	dd25      	ble.n	8015474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015428:	b327      	cbz	r7, 8015474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801542a:	44c6      	add	lr, r8
 801542c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015430:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015434:	4413      	add	r3, r2
 8015436:	782a      	ldrb	r2, [r5, #0]
 8015438:	9202      	str	r2, [sp, #8]
 801543a:	780a      	ldrb	r2, [r1, #0]
 801543c:	9203      	str	r2, [sp, #12]
 801543e:	7822      	ldrb	r2, [r4, #0]
 8015440:	9204      	str	r2, [sp, #16]
 8015442:	2f0f      	cmp	r7, #15
 8015444:	781a      	ldrb	r2, [r3, #0]
 8015446:	9205      	str	r2, [sp, #20]
 8015448:	d801      	bhi.n	801544e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801544a:	280f      	cmp	r0, #15
 801544c:	d914      	bls.n	8015478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801544e:	4b3f      	ldr	r3, [pc, #252]	; (801554c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8015450:	4a3f      	ldr	r2, [pc, #252]	; (8015550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8015452:	4840      	ldr	r0, [pc, #256]	; (8015554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8015454:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8015458:	f006 fb42 	bl	801bae0 <__assert_func>
 801545c:	ad07      	add	r5, sp, #28
 801545e:	e7c6      	b.n	80153ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8015460:	a907      	add	r1, sp, #28
 8015462:	460d      	mov	r5, r1
 8015464:	e7ce      	b.n	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015466:	a907      	add	r1, sp, #28
 8015468:	e7cc      	b.n	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801546a:	ac07      	add	r4, sp, #28
 801546c:	e7d8      	b.n	8015420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801546e:	ab07      	add	r3, sp, #28
 8015470:	461c      	mov	r4, r3
 8015472:	e7e0      	b.n	8015436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015474:	ab07      	add	r3, sp, #28
 8015476:	e7de      	b.n	8015436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015478:	b2ba      	uxth	r2, r7
 801547a:	b280      	uxth	r0, r0
 801547c:	fb02 fa00 	mul.w	sl, r2, r0
 8015480:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8015484:	0112      	lsls	r2, r2, #4
 8015486:	b280      	uxth	r0, r0
 8015488:	f891 8002 	ldrb.w	r8, [r1, #2]
 801548c:	7849      	ldrb	r1, [r1, #1]
 801548e:	78ae      	ldrb	r6, [r5, #2]
 8015490:	786d      	ldrb	r5, [r5, #1]
 8015492:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8015496:	eba2 020a 	sub.w	r2, r2, sl
 801549a:	b292      	uxth	r2, r2
 801549c:	ebae 0e00 	sub.w	lr, lr, r0
 80154a0:	fa1f fe8e 	uxth.w	lr, lr
 80154a4:	4351      	muls	r1, r2
 80154a6:	fb02 f808 	mul.w	r8, r2, r8
 80154aa:	fb0e 8806 	mla	r8, lr, r6, r8
 80154ae:	fb0e 1505 	mla	r5, lr, r5, r1
 80154b2:	78a6      	ldrb	r6, [r4, #2]
 80154b4:	7861      	ldrb	r1, [r4, #1]
 80154b6:	fa1f f78c 	uxth.w	r7, ip
 80154ba:	fb00 8806 	mla	r8, r0, r6, r8
 80154be:	fb00 5501 	mla	r5, r0, r1, r5
 80154c2:	789e      	ldrb	r6, [r3, #2]
 80154c4:	7859      	ldrb	r1, [r3, #1]
 80154c6:	9b00      	ldr	r3, [sp, #0]
 80154c8:	ea6f 0c0c 	mvn.w	ip, ip
 80154cc:	fa5f fc8c 	uxtb.w	ip, ip
 80154d0:	fb0a 5101 	mla	r1, sl, r1, r5
 80154d4:	fb13 f50c 	smulbb	r5, r3, ip
 80154d8:	9b03      	ldr	r3, [sp, #12]
 80154da:	435a      	muls	r2, r3
 80154dc:	9b02      	ldr	r3, [sp, #8]
 80154de:	fb0e 2203 	mla	r2, lr, r3, r2
 80154e2:	9b04      	ldr	r3, [sp, #16]
 80154e4:	fb00 2003 	mla	r0, r0, r3, r2
 80154e8:	9b05      	ldr	r3, [sp, #20]
 80154ea:	fb0a 8606 	mla	r6, sl, r6, r8
 80154ee:	fb19 f90c 	smulbb	r9, r9, ip
 80154f2:	fb0a 0a03 	mla	sl, sl, r3, r0
 80154f6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80154fa:	9b01      	ldr	r3, [sp, #4]
 80154fc:	fb06 9607 	mla	r6, r6, r7, r9
 8015500:	b2b6      	uxth	r6, r6
 8015502:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8015506:	fb13 fc0c 	smulbb	ip, r3, ip
 801550a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801550e:	fb01 5107 	mla	r1, r1, r7, r5
 8015512:	f106 0901 	add.w	r9, r6, #1
 8015516:	fb0a c707 	mla	r7, sl, r7, ip
 801551a:	b2bf      	uxth	r7, r7
 801551c:	b289      	uxth	r1, r1
 801551e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8015522:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8015526:	1c4d      	adds	r5, r1, #1
 8015528:	1c7e      	adds	r6, r7, #1
 801552a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801552e:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8015532:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015536:	0949      	lsrs	r1, r1, #5
 8015538:	ea46 0609 	orr.w	r6, r6, r9
 801553c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015540:	430e      	orrs	r6, r1
 8015542:	f8ab 6000 	strh.w	r6, [fp]
 8015546:	b009      	add	sp, #36	; 0x24
 8015548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801554c:	0801f996 	.word	0x0801f996
 8015550:	0801ff66 	.word	0x0801ff66
 8015554:	0801fa1a 	.word	0x0801fa1a

08015558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801555c:	ed2d 8b08 	vpush	{d8-d11}
 8015560:	b095      	sub	sp, #84	; 0x54
 8015562:	eeb0 aa40 	vmov.f32	s20, s0
 8015566:	9212      	str	r2, [sp, #72]	; 0x48
 8015568:	9309      	str	r3, [sp, #36]	; 0x24
 801556a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801556c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8015570:	930f      	str	r3, [sp, #60]	; 0x3c
 8015572:	910e      	str	r1, [sp, #56]	; 0x38
 8015574:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015578:	9013      	str	r0, [sp, #76]	; 0x4c
 801557a:	6850      	ldr	r0, [r2, #4]
 801557c:	6812      	ldr	r2, [r2, #0]
 801557e:	fb00 1303 	mla	r3, r0, r3, r1
 8015582:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015586:	930a      	str	r3, [sp, #40]	; 0x28
 8015588:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801558a:	681b      	ldr	r3, [r3, #0]
 801558c:	930d      	str	r3, [sp, #52]	; 0x34
 801558e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015590:	685c      	ldr	r4, [r3, #4]
 8015592:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015594:	43db      	mvns	r3, r3
 8015596:	b2db      	uxtb	r3, r3
 8015598:	eef0 9a60 	vmov.f32	s19, s1
 801559c:	eeb0 9a41 	vmov.f32	s18, s2
 80155a0:	eeb0 8a62 	vmov.f32	s16, s5
 80155a4:	eef0 8a43 	vmov.f32	s17, s6
 80155a8:	eef0 ba44 	vmov.f32	s23, s8
 80155ac:	eeb0 ba64 	vmov.f32	s22, s9
 80155b0:	eef0 aa45 	vmov.f32	s21, s10
 80155b4:	3404      	adds	r4, #4
 80155b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80155b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155ba:	2b00      	cmp	r3, #0
 80155bc:	dc03      	bgt.n	80155c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80155be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80155c0:	2b00      	cmp	r3, #0
 80155c2:	f340 8255 	ble.w	8015a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80155c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80155c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80155cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80155d0:	1e48      	subs	r0, r1, #1
 80155d2:	1e55      	subs	r5, r2, #1
 80155d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155d6:	2b00      	cmp	r3, #0
 80155d8:	f340 80f9 	ble.w	80157ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80155dc:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80155de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80155e0:	1436      	asrs	r6, r6, #16
 80155e2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80155e6:	d406      	bmi.n	80155f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80155e8:	4286      	cmp	r6, r0
 80155ea:	da04      	bge.n	80155f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80155ec:	2b00      	cmp	r3, #0
 80155ee:	db02      	blt.n	80155f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80155f0:	42ab      	cmp	r3, r5
 80155f2:	f2c0 80ed 	blt.w	80157d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80155f6:	3601      	adds	r6, #1
 80155f8:	f100 80da 	bmi.w	80157b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80155fc:	42b1      	cmp	r1, r6
 80155fe:	f2c0 80d7 	blt.w	80157b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015602:	3301      	adds	r3, #1
 8015604:	f100 80d4 	bmi.w	80157b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015608:	429a      	cmp	r2, r3
 801560a:	f2c0 80d1 	blt.w	80157b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801560e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015610:	9311      	str	r3, [sp, #68]	; 0x44
 8015612:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015614:	930c      	str	r3, [sp, #48]	; 0x30
 8015616:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015618:	2b00      	cmp	r3, #0
 801561a:	f340 80fa 	ble.w	8015812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801561e:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015622:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015624:	68c6      	ldr	r6, [r0, #12]
 8015626:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8015628:	141d      	asrs	r5, r3, #16
 801562a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801562e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015630:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015632:	1400      	asrs	r0, r0, #16
 8015634:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015638:	6892      	ldr	r2, [r2, #8]
 801563a:	f100 813e 	bmi.w	80158ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801563e:	1e57      	subs	r7, r2, #1
 8015640:	42b8      	cmp	r0, r7
 8015642:	f280 813a 	bge.w	80158ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015646:	2d00      	cmp	r5, #0
 8015648:	f2c0 8137 	blt.w	80158ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801564c:	1e77      	subs	r7, r6, #1
 801564e:	42bd      	cmp	r5, r7
 8015650:	f280 8133 	bge.w	80158ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015654:	b212      	sxth	r2, r2
 8015656:	fb05 0002 	mla	r0, r5, r2, r0
 801565a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801565c:	f815 a000 	ldrb.w	sl, [r5, r0]
 8015660:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015664:	182e      	adds	r6, r5, r0
 8015666:	eb04 050a 	add.w	r5, r4, sl
 801566a:	2b00      	cmp	r3, #0
 801566c:	f000 8117 	beq.w	801589e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8015670:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015674:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015678:	44a4      	add	ip, r4
 801567a:	2900      	cmp	r1, #0
 801567c:	f000 8117 	beq.w	80158ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8015680:	18b0      	adds	r0, r6, r2
 8015682:	5cb2      	ldrb	r2, [r6, r2]
 8015684:	7840      	ldrb	r0, [r0, #1]
 8015686:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801568a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801568e:	4422      	add	r2, r4
 8015690:	4420      	add	r0, r4
 8015692:	b29b      	uxth	r3, r3
 8015694:	b289      	uxth	r1, r1
 8015696:	fb03 f901 	mul.w	r9, r3, r1
 801569a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801569e:	011b      	lsls	r3, r3, #4
 80156a0:	b289      	uxth	r1, r1
 80156a2:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80156a6:	f895 b002 	ldrb.w	fp, [r5, #2]
 80156aa:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80156ac:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80156b0:	f8b6 e000 	ldrh.w	lr, [r6]
 80156b4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80156b8:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80156bc:	eba3 0309 	sub.w	r3, r3, r9
 80156c0:	b29b      	uxth	r3, r3
 80156c2:	eba8 0801 	sub.w	r8, r8, r1
 80156c6:	fa1f f888 	uxth.w	r8, r8
 80156ca:	435f      	muls	r7, r3
 80156cc:	fb08 770b 	mla	r7, r8, fp, r7
 80156d0:	f892 b002 	ldrb.w	fp, [r2, #2]
 80156d4:	9310      	str	r3, [sp, #64]	; 0x40
 80156d6:	fb01 770b 	mla	r7, r1, fp, r7
 80156da:	f890 b002 	ldrb.w	fp, [r0, #2]
 80156de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80156e0:	fb09 770b 	mla	r7, r9, fp, r7
 80156e4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80156e8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80156ec:	fb1b fb03 	smulbb	fp, fp, r3
 80156f0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80156f4:	fb07 b706 	mla	r7, r7, r6, fp
 80156f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156fa:	f895 b001 	ldrb.w	fp, [r5, #1]
 80156fe:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015702:	f89c c000 	ldrb.w	ip, [ip]
 8015706:	435d      	muls	r5, r3
 8015708:	fb08 550b 	mla	r5, r8, fp, r5
 801570c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015710:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015712:	fb01 550b 	mla	r5, r1, fp, r5
 8015716:	f890 b001 	ldrb.w	fp, [r0, #1]
 801571a:	fb09 550b 	mla	r5, r9, fp, r5
 801571e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015722:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015726:	fb1b fb03 	smulbb	fp, fp, r3
 801572a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801572c:	fb03 f30c 	mul.w	r3, r3, ip
 8015730:	f892 c000 	ldrb.w	ip, [r2]
 8015734:	fb08 330a 	mla	r3, r8, sl, r3
 8015738:	fb01 330c 	mla	r3, r1, ip, r3
 801573c:	f890 c000 	ldrb.w	ip, [r0]
 8015740:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015744:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015748:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801574a:	fa5f fe8e 	uxtb.w	lr, lr
 801574e:	b2bf      	uxth	r7, r7
 8015750:	fb1e fe03 	smulbb	lr, lr, r3
 8015754:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015758:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801575c:	fb05 b506 	mla	r5, r5, r6, fp
 8015760:	1c7b      	adds	r3, r7, #1
 8015762:	fb0c e606 	mla	r6, ip, r6, lr
 8015766:	b2ad      	uxth	r5, r5
 8015768:	b2b6      	uxth	r6, r6
 801576a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801576e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8015772:	f105 0b01 	add.w	fp, r5, #1
 8015776:	1c77      	adds	r7, r6, #1
 8015778:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801577c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015780:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015784:	096d      	lsrs	r5, r5, #5
 8015786:	431f      	orrs	r7, r3
 8015788:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801578c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801578e:	433d      	orrs	r5, r7
 8015790:	801d      	strh	r5, [r3, #0]
 8015792:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015794:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015796:	3302      	adds	r3, #2
 8015798:	930c      	str	r3, [sp, #48]	; 0x30
 801579a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801579c:	4413      	add	r3, r2
 801579e:	9327      	str	r3, [sp, #156]	; 0x9c
 80157a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80157a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157a4:	4413      	add	r3, r2
 80157a6:	9328      	str	r3, [sp, #160]	; 0xa0
 80157a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80157aa:	3b01      	subs	r3, #1
 80157ac:	9311      	str	r3, [sp, #68]	; 0x44
 80157ae:	e732      	b.n	8015616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80157b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80157b2:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80157b4:	4433      	add	r3, r6
 80157b6:	9327      	str	r3, [sp, #156]	; 0x9c
 80157b8:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80157ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157bc:	4433      	add	r3, r6
 80157be:	9328      	str	r3, [sp, #160]	; 0xa0
 80157c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157c2:	3b01      	subs	r3, #1
 80157c4:	9309      	str	r3, [sp, #36]	; 0x24
 80157c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157c8:	3302      	adds	r3, #2
 80157ca:	930a      	str	r3, [sp, #40]	; 0x28
 80157cc:	e702      	b.n	80155d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80157ce:	d027      	beq.n	8015820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80157d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157d2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80157d4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80157d6:	3b01      	subs	r3, #1
 80157d8:	fb00 5003 	mla	r0, r0, r3, r5
 80157dc:	1400      	asrs	r0, r0, #16
 80157de:	f53f af16 	bmi.w	801560e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80157e2:	3901      	subs	r1, #1
 80157e4:	4288      	cmp	r0, r1
 80157e6:	f6bf af12 	bge.w	801560e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80157ea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80157ec:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80157ee:	fb01 0303 	mla	r3, r1, r3, r0
 80157f2:	141b      	asrs	r3, r3, #16
 80157f4:	f53f af0b 	bmi.w	801560e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80157f8:	3a01      	subs	r2, #1
 80157fa:	4293      	cmp	r3, r2
 80157fc:	f6bf af07 	bge.w	801560e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015800:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015802:	9311      	str	r3, [sp, #68]	; 0x44
 8015804:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015808:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801580a:	930c      	str	r3, [sp, #48]	; 0x30
 801580c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801580e:	2b00      	cmp	r3, #0
 8015810:	dc70      	bgt.n	80158f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8015812:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015814:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015816:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801581a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801581e:	930a      	str	r3, [sp, #40]	; 0x28
 8015820:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015822:	2b00      	cmp	r3, #0
 8015824:	f340 8124 	ble.w	8015a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8015828:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801582c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015830:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015834:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015836:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801583a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801583e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015842:	eef0 6a48 	vmov.f32	s13, s16
 8015846:	ee69 7a27 	vmul.f32	s15, s18, s15
 801584a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801584e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015852:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8015856:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801585a:	eef0 6a68 	vmov.f32	s13, s17
 801585e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015862:	ee18 2a10 	vmov	r2, s16
 8015866:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801586a:	fb92 f3f3 	sdiv	r3, r2, r3
 801586e:	ee18 2a90 	vmov	r2, s17
 8015872:	9329      	str	r3, [sp, #164]	; 0xa4
 8015874:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015876:	fb92 f3f3 	sdiv	r3, r2, r3
 801587a:	932a      	str	r3, [sp, #168]	; 0xa8
 801587c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801587e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015880:	3b01      	subs	r3, #1
 8015882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015886:	930e      	str	r3, [sp, #56]	; 0x38
 8015888:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801588a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801588e:	bf08      	it	eq
 8015890:	4613      	moveq	r3, r2
 8015892:	9309      	str	r3, [sp, #36]	; 0x24
 8015894:	eef0 8a67 	vmov.f32	s17, s15
 8015898:	eeb0 8a47 	vmov.f32	s16, s14
 801589c:	e68c      	b.n	80155b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801589e:	b149      	cbz	r1, 80158b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80158a0:	5cb2      	ldrb	r2, [r6, r2]
 80158a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158a6:	4422      	add	r2, r4
 80158a8:	4628      	mov	r0, r5
 80158aa:	46ac      	mov	ip, r5
 80158ac:	e6f1      	b.n	8015692 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80158ae:	4628      	mov	r0, r5
 80158b0:	462a      	mov	r2, r5
 80158b2:	e6ee      	b.n	8015692 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80158b4:	4628      	mov	r0, r5
 80158b6:	462a      	mov	r2, r5
 80158b8:	e7f7      	b.n	80158aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80158ba:	1c47      	adds	r7, r0, #1
 80158bc:	f53f af69 	bmi.w	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80158c0:	42ba      	cmp	r2, r7
 80158c2:	f6ff af66 	blt.w	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80158c6:	1c6f      	adds	r7, r5, #1
 80158c8:	f53f af63 	bmi.w	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80158cc:	42be      	cmp	r6, r7
 80158ce:	f6ff af60 	blt.w	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80158d2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80158d4:	9002      	str	r0, [sp, #8]
 80158d6:	b236      	sxth	r6, r6
 80158d8:	b212      	sxth	r2, r2
 80158da:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80158de:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80158e2:	9200      	str	r2, [sp, #0]
 80158e4:	9601      	str	r6, [sp, #4]
 80158e6:	4623      	mov	r3, r4
 80158e8:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80158ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80158ee:	f7ff fd49 	bl	8015384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80158f2:	e74e      	b.n	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80158f4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80158f6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80158f8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80158fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80158fc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015900:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015902:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015906:	142d      	asrs	r5, r5, #16
 8015908:	1400      	asrs	r0, r0, #16
 801590a:	fb02 5000 	mla	r0, r2, r0, r5
 801590e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015910:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015914:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015918:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801591c:	182e      	adds	r6, r5, r0
 801591e:	eb04 0509 	add.w	r5, r4, r9
 8015922:	2b00      	cmp	r3, #0
 8015924:	f000 8096 	beq.w	8015a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8015928:	7877      	ldrb	r7, [r6, #1]
 801592a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801592e:	4427      	add	r7, r4
 8015930:	2900      	cmp	r1, #0
 8015932:	f000 8097 	beq.w	8015a64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8015936:	18b0      	adds	r0, r6, r2
 8015938:	5cb2      	ldrb	r2, [r6, r2]
 801593a:	7840      	ldrb	r0, [r0, #1]
 801593c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015940:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015944:	4422      	add	r2, r4
 8015946:	4420      	add	r0, r4
 8015948:	b29b      	uxth	r3, r3
 801594a:	b289      	uxth	r1, r1
 801594c:	fb03 f801 	mul.w	r8, r3, r1
 8015950:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015952:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015956:	f8b6 c000 	ldrh.w	ip, [r6]
 801595a:	78be      	ldrb	r6, [r7, #2]
 801595c:	f814 9009 	ldrb.w	r9, [r4, r9]
 8015960:	011b      	lsls	r3, r3, #4
 8015962:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015966:	b289      	uxth	r1, r1
 8015968:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801596c:	eba3 0308 	sub.w	r3, r3, r8
 8015970:	b29b      	uxth	r3, r3
 8015972:	ebae 0e01 	sub.w	lr, lr, r1
 8015976:	fa1f fe8e 	uxth.w	lr, lr
 801597a:	435e      	muls	r6, r3
 801597c:	fb0e 660b 	mla	r6, lr, fp, r6
 8015980:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015984:	9310      	str	r3, [sp, #64]	; 0x40
 8015986:	fb01 660b 	mla	r6, r1, fp, r6
 801598a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801598e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015990:	fb08 660b 	mla	r6, r8, fp, r6
 8015994:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015998:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801599c:	fb1b fb03 	smulbb	fp, fp, r3
 80159a0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80159a4:	fb06 b60a 	mla	r6, r6, sl, fp
 80159a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159aa:	f895 b001 	ldrb.w	fp, [r5, #1]
 80159ae:	787d      	ldrb	r5, [r7, #1]
 80159b0:	783f      	ldrb	r7, [r7, #0]
 80159b2:	435d      	muls	r5, r3
 80159b4:	fb0e 550b 	mla	r5, lr, fp, r5
 80159b8:	f892 b001 	ldrb.w	fp, [r2, #1]
 80159bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80159be:	fb01 550b 	mla	r5, r1, fp, r5
 80159c2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80159c6:	fb08 550b 	mla	r5, r8, fp, r5
 80159ca:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80159ce:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80159d2:	fb1b fb03 	smulbb	fp, fp, r3
 80159d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159d8:	437b      	muls	r3, r7
 80159da:	7817      	ldrb	r7, [r2, #0]
 80159dc:	fb0e 3309 	mla	r3, lr, r9, r3
 80159e0:	fb01 3307 	mla	r3, r1, r7, r3
 80159e4:	7807      	ldrb	r7, [r0, #0]
 80159e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80159ea:	fb08 3707 	mla	r7, r8, r7, r3
 80159ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80159f0:	fa5f fc8c 	uxtb.w	ip, ip
 80159f4:	fb1c fc03 	smulbb	ip, ip, r3
 80159f8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80159fc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015a00:	fb05 b50a 	mla	r5, r5, sl, fp
 8015a04:	fb07 c70a 	mla	r7, r7, sl, ip
 8015a08:	b2b6      	uxth	r6, r6
 8015a0a:	b2ad      	uxth	r5, r5
 8015a0c:	b2bf      	uxth	r7, r7
 8015a0e:	1c73      	adds	r3, r6, #1
 8015a10:	1c7a      	adds	r2, r7, #1
 8015a12:	f105 0b01 	add.w	fp, r5, #1
 8015a16:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015a1a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015a1e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015a22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015a26:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015a2a:	096d      	lsrs	r5, r5, #5
 8015a2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a2e:	4316      	orrs	r6, r2
 8015a30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015a34:	432e      	orrs	r6, r5
 8015a36:	f823 6b02 	strh.w	r6, [r3], #2
 8015a3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015a3c:	930c      	str	r3, [sp, #48]	; 0x30
 8015a3e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015a40:	4413      	add	r3, r2
 8015a42:	9327      	str	r3, [sp, #156]	; 0x9c
 8015a44:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015a46:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015a48:	4413      	add	r3, r2
 8015a4a:	9328      	str	r3, [sp, #160]	; 0xa0
 8015a4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a4e:	3b01      	subs	r3, #1
 8015a50:	9311      	str	r3, [sp, #68]	; 0x44
 8015a52:	e6db      	b.n	801580c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8015a54:	b149      	cbz	r1, 8015a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015a56:	5cb2      	ldrb	r2, [r6, r2]
 8015a58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a5c:	4422      	add	r2, r4
 8015a5e:	4628      	mov	r0, r5
 8015a60:	462f      	mov	r7, r5
 8015a62:	e771      	b.n	8015948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015a64:	4628      	mov	r0, r5
 8015a66:	462a      	mov	r2, r5
 8015a68:	e76e      	b.n	8015948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015a6a:	4628      	mov	r0, r5
 8015a6c:	462a      	mov	r2, r5
 8015a6e:	e7f7      	b.n	8015a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8015a70:	b015      	add	sp, #84	; 0x54
 8015a72:	ecbd 8b08 	vpop	{d8-d11}
 8015a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a80:	880e      	ldrh	r6, [r1, #0]
 8015a82:	b085      	sub	sp, #20
 8015a84:	0230      	lsls	r0, r6, #8
 8015a86:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015a8a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015a8e:	0170      	lsls	r0, r6, #5
 8015a90:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015a94:	9101      	str	r1, [sp, #4]
 8015a96:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015a9a:	00f6      	lsls	r6, r6, #3
 8015a9c:	ea4b 0000 	orr.w	r0, fp, r0
 8015aa0:	b2f6      	uxtb	r6, r6
 8015aa2:	4691      	mov	r9, r2
 8015aa4:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015aa8:	4306      	orrs	r6, r0
 8015aaa:	2d00      	cmp	r5, #0
 8015aac:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015ab0:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015ab4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015ab8:	9603      	str	r6, [sp, #12]
 8015aba:	eb09 0e0a 	add.w	lr, r9, sl
 8015abe:	db42      	blt.n	8015b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015ac0:	45a8      	cmp	r8, r5
 8015ac2:	dd40      	ble.n	8015b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015ac4:	2f00      	cmp	r7, #0
 8015ac6:	db3c      	blt.n	8015b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015ac8:	45bc      	cmp	ip, r7
 8015aca:	dd3a      	ble.n	8015b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015acc:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015ad0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015ad4:	441e      	add	r6, r3
 8015ad6:	1c78      	adds	r0, r7, #1
 8015ad8:	d438      	bmi.n	8015b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015ada:	4584      	cmp	ip, r0
 8015adc:	dd36      	ble.n	8015b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015ade:	b3aa      	cbz	r2, 8015b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015ae0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015ae4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015ae8:	4418      	add	r0, r3
 8015aea:	3501      	adds	r5, #1
 8015aec:	d432      	bmi.n	8015b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015aee:	45a8      	cmp	r8, r5
 8015af0:	dd30      	ble.n	8015b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015af2:	b37c      	cbz	r4, 8015b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015af4:	2f00      	cmp	r7, #0
 8015af6:	db2b      	blt.n	8015b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015af8:	45bc      	cmp	ip, r7
 8015afa:	dd29      	ble.n	8015b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015afc:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015b00:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015b04:	441d      	add	r5, r3
 8015b06:	3701      	adds	r7, #1
 8015b08:	d427      	bmi.n	8015b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b0a:	45bc      	cmp	ip, r7
 8015b0c:	dd25      	ble.n	8015b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b0e:	b322      	cbz	r2, 8015b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b10:	44f4      	add	ip, lr
 8015b12:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015b16:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b1a:	443b      	add	r3, r7
 8015b1c:	781f      	ldrb	r7, [r3, #0]
 8015b1e:	f896 9000 	ldrb.w	r9, [r6]
 8015b22:	f890 a000 	ldrb.w	sl, [r0]
 8015b26:	f895 8000 	ldrb.w	r8, [r5]
 8015b2a:	2a0f      	cmp	r2, #15
 8015b2c:	4639      	mov	r1, r7
 8015b2e:	d801      	bhi.n	8015b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015b30:	2c0f      	cmp	r4, #15
 8015b32:	d914      	bls.n	8015b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8015b34:	4b2c      	ldr	r3, [pc, #176]	; (8015be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015b36:	4a2d      	ldr	r2, [pc, #180]	; (8015bec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015b38:	482d      	ldr	r0, [pc, #180]	; (8015bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015b3a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8015b3e:	f005 ffcf 	bl	801bae0 <__assert_func>
 8015b42:	ae03      	add	r6, sp, #12
 8015b44:	e7c7      	b.n	8015ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8015b46:	a803      	add	r0, sp, #12
 8015b48:	4606      	mov	r6, r0
 8015b4a:	e7ce      	b.n	8015aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015b4c:	a803      	add	r0, sp, #12
 8015b4e:	e7cc      	b.n	8015aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015b50:	ad03      	add	r5, sp, #12
 8015b52:	e7d8      	b.n	8015b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8015b54:	ab03      	add	r3, sp, #12
 8015b56:	461d      	mov	r5, r3
 8015b58:	e7e0      	b.n	8015b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015b5a:	ab03      	add	r3, sp, #12
 8015b5c:	e7de      	b.n	8015b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015b5e:	b292      	uxth	r2, r2
 8015b60:	b2a4      	uxth	r4, r4
 8015b62:	fb02 fe04 	mul.w	lr, r2, r4
 8015b66:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015b6a:	0112      	lsls	r2, r2, #4
 8015b6c:	b2a4      	uxth	r4, r4
 8015b6e:	f890 c002 	ldrb.w	ip, [r0, #2]
 8015b72:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015b76:	7840      	ldrb	r0, [r0, #1]
 8015b78:	7876      	ldrb	r6, [r6, #1]
 8015b7a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8015b7e:	eba2 020e 	sub.w	r2, r2, lr
 8015b82:	b292      	uxth	r2, r2
 8015b84:	1b3f      	subs	r7, r7, r4
 8015b86:	b2bf      	uxth	r7, r7
 8015b88:	fb02 fc0c 	mul.w	ip, r2, ip
 8015b8c:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015b90:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015b94:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015b98:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015b9c:	785b      	ldrb	r3, [r3, #1]
 8015b9e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015ba2:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015ba6:	fb02 fc0a 	mul.w	ip, r2, sl
 8015baa:	4342      	muls	r2, r0
 8015bac:	7868      	ldrb	r0, [r5, #1]
 8015bae:	fb07 cc09 	mla	ip, r7, r9, ip
 8015bb2:	fb07 2206 	mla	r2, r7, r6, r2
 8015bb6:	fb04 cc08 	mla	ip, r4, r8, ip
 8015bba:	fb04 2400 	mla	r4, r4, r0, r2
 8015bbe:	fb0e cc01 	mla	ip, lr, r1, ip
 8015bc2:	fb0e 4e03 	mla	lr, lr, r3, r4
 8015bc6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015bca:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015bce:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015bd2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015bd6:	9b01      	ldr	r3, [sp, #4]
 8015bd8:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015bdc:	f8a3 c000 	strh.w	ip, [r3]
 8015be0:	b005      	add	sp, #20
 8015be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015be6:	bf00      	nop
 8015be8:	0801f996 	.word	0x0801f996
 8015bec:	0801ff66 	.word	0x0801ff66
 8015bf0:	0801fa1a 	.word	0x0801fa1a

08015bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bf8:	ed2d 8b08 	vpush	{d8-d11}
 8015bfc:	b08f      	sub	sp, #60	; 0x3c
 8015bfe:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015c02:	920c      	str	r2, [sp, #48]	; 0x30
 8015c04:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015c06:	910a      	str	r1, [sp, #40]	; 0x28
 8015c08:	9306      	str	r3, [sp, #24]
 8015c0a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015c0e:	900d      	str	r0, [sp, #52]	; 0x34
 8015c10:	6850      	ldr	r0, [r2, #4]
 8015c12:	6812      	ldr	r2, [r2, #0]
 8015c14:	fb00 1303 	mla	r3, r0, r3, r1
 8015c18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c1c:	9307      	str	r3, [sp, #28]
 8015c1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c20:	681b      	ldr	r3, [r3, #0]
 8015c22:	9308      	str	r3, [sp, #32]
 8015c24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c26:	685c      	ldr	r4, [r3, #4]
 8015c28:	eeb0 aa40 	vmov.f32	s20, s0
 8015c2c:	eef0 9a60 	vmov.f32	s19, s1
 8015c30:	eeb0 9a41 	vmov.f32	s18, s2
 8015c34:	eeb0 8a62 	vmov.f32	s16, s5
 8015c38:	eef0 8a43 	vmov.f32	s17, s6
 8015c3c:	eef0 ba44 	vmov.f32	s23, s8
 8015c40:	eeb0 ba64 	vmov.f32	s22, s9
 8015c44:	eef0 aa45 	vmov.f32	s21, s10
 8015c48:	3404      	adds	r4, #4
 8015c4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c4c:	2b00      	cmp	r3, #0
 8015c4e:	dc03      	bgt.n	8015c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015c50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c52:	2b00      	cmp	r3, #0
 8015c54:	f340 81d6 	ble.w	8016004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015c58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015c5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015c62:	1e48      	subs	r0, r1, #1
 8015c64:	1e56      	subs	r6, r2, #1
 8015c66:	9b06      	ldr	r3, [sp, #24]
 8015c68:	2b00      	cmp	r3, #0
 8015c6a:	f340 80b7 	ble.w	8015ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015c6e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015c72:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015c76:	d406      	bmi.n	8015c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015c78:	4287      	cmp	r7, r0
 8015c7a:	da04      	bge.n	8015c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	db02      	blt.n	8015c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015c80:	42b3      	cmp	r3, r6
 8015c82:	f2c0 80ac 	blt.w	8015dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015c86:	3701      	adds	r7, #1
 8015c88:	f100 809d 	bmi.w	8015dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c8c:	42b9      	cmp	r1, r7
 8015c8e:	f2c0 809a 	blt.w	8015dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c92:	3301      	adds	r3, #1
 8015c94:	f100 8097 	bmi.w	8015dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c98:	429a      	cmp	r2, r3
 8015c9a:	f2c0 8094 	blt.w	8015dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c9e:	9b06      	ldr	r3, [sp, #24]
 8015ca0:	930b      	str	r3, [sp, #44]	; 0x2c
 8015ca2:	9b07      	ldr	r3, [sp, #28]
 8015ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8015ca6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ca8:	2b00      	cmp	r3, #0
 8015caa:	f340 80b5 	ble.w	8015e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015cae:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015cb0:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015cb2:	68c7      	ldr	r7, [r0, #12]
 8015cb4:	6892      	ldr	r2, [r2, #8]
 8015cb6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015cba:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015cbe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015cc2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015cc6:	f100 80fb 	bmi.w	8015ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015cca:	f102 3cff 	add.w	ip, r2, #4294967295
 8015cce:	4560      	cmp	r0, ip
 8015cd0:	f280 80f6 	bge.w	8015ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015cd4:	2e00      	cmp	r6, #0
 8015cd6:	f2c0 80f3 	blt.w	8015ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015cda:	f107 3cff 	add.w	ip, r7, #4294967295
 8015cde:	4566      	cmp	r6, ip
 8015ce0:	f280 80ee 	bge.w	8015ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015ce4:	b212      	sxth	r2, r2
 8015ce6:	fb06 0002 	mla	r0, r6, r2, r0
 8015cea:	9e08      	ldr	r6, [sp, #32]
 8015cec:	1837      	adds	r7, r6, r0
 8015cee:	5c30      	ldrb	r0, [r6, r0]
 8015cf0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015cf4:	eb04 0c08 	add.w	ip, r4, r8
 8015cf8:	2b00      	cmp	r3, #0
 8015cfa:	f000 80d3 	beq.w	8015ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015cfe:	787e      	ldrb	r6, [r7, #1]
 8015d00:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015d04:	4426      	add	r6, r4
 8015d06:	2900      	cmp	r1, #0
 8015d08:	f000 80d4 	beq.w	8015eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015d0c:	18b8      	adds	r0, r7, r2
 8015d0e:	5cba      	ldrb	r2, [r7, r2]
 8015d10:	7840      	ldrb	r0, [r0, #1]
 8015d12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015d16:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015d1a:	4422      	add	r2, r4
 8015d1c:	4420      	add	r0, r4
 8015d1e:	b29b      	uxth	r3, r3
 8015d20:	b289      	uxth	r1, r1
 8015d22:	fb03 f901 	mul.w	r9, r3, r1
 8015d26:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015d2a:	011b      	lsls	r3, r3, #4
 8015d2c:	b289      	uxth	r1, r1
 8015d2e:	78b7      	ldrb	r7, [r6, #2]
 8015d30:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015d34:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015d38:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015d3c:	eba3 0309 	sub.w	r3, r3, r9
 8015d40:	b29b      	uxth	r3, r3
 8015d42:	ebae 0e01 	sub.w	lr, lr, r1
 8015d46:	fa1f fe8e 	uxth.w	lr, lr
 8015d4a:	435f      	muls	r7, r3
 8015d4c:	fb0e 770a 	mla	r7, lr, sl, r7
 8015d50:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015d54:	fb01 770a 	mla	r7, r1, sl, r7
 8015d58:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015d5c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015d60:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015d64:	f896 8000 	ldrb.w	r8, [r6]
 8015d68:	7876      	ldrb	r6, [r6, #1]
 8015d6a:	fb03 f808 	mul.w	r8, r3, r8
 8015d6e:	fb0e 8807 	mla	r8, lr, r7, r8
 8015d72:	7817      	ldrb	r7, [r2, #0]
 8015d74:	fb01 8807 	mla	r8, r1, r7, r8
 8015d78:	7807      	ldrb	r7, [r0, #0]
 8015d7a:	fb09 8707 	mla	r7, r9, r7, r8
 8015d7e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015d82:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015d86:	ea47 070a 	orr.w	r7, r7, sl
 8015d8a:	4373      	muls	r3, r6
 8015d8c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015d90:	fb0e 330c 	mla	r3, lr, ip, r3
 8015d94:	fb01 310a 	mla	r1, r1, sl, r3
 8015d98:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015d9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d9e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015da2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015da6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015daa:	ea47 070a 	orr.w	r7, r7, sl
 8015dae:	801f      	strh	r7, [r3, #0]
 8015db0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015db2:	3302      	adds	r3, #2
 8015db4:	9309      	str	r3, [sp, #36]	; 0x24
 8015db6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015db8:	449b      	add	fp, r3
 8015dba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015dbc:	441d      	add	r5, r3
 8015dbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015dc0:	3b01      	subs	r3, #1
 8015dc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8015dc4:	e76f      	b.n	8015ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015dc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015dc8:	449b      	add	fp, r3
 8015dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015dcc:	441d      	add	r5, r3
 8015dce:	9b06      	ldr	r3, [sp, #24]
 8015dd0:	3b01      	subs	r3, #1
 8015dd2:	9306      	str	r3, [sp, #24]
 8015dd4:	9b07      	ldr	r3, [sp, #28]
 8015dd6:	3302      	adds	r3, #2
 8015dd8:	9307      	str	r3, [sp, #28]
 8015dda:	e744      	b.n	8015c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ddc:	d023      	beq.n	8015e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015dde:	9b06      	ldr	r3, [sp, #24]
 8015de0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015de2:	3b01      	subs	r3, #1
 8015de4:	fb00 b003 	mla	r0, r0, r3, fp
 8015de8:	1400      	asrs	r0, r0, #16
 8015dea:	f53f af58 	bmi.w	8015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015dee:	3901      	subs	r1, #1
 8015df0:	4288      	cmp	r0, r1
 8015df2:	f6bf af54 	bge.w	8015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015df6:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015df8:	fb01 5303 	mla	r3, r1, r3, r5
 8015dfc:	141b      	asrs	r3, r3, #16
 8015dfe:	f53f af4e 	bmi.w	8015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e02:	3a01      	subs	r2, #1
 8015e04:	4293      	cmp	r3, r2
 8015e06:	f6bf af4a 	bge.w	8015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e0a:	9b06      	ldr	r3, [sp, #24]
 8015e0c:	9309      	str	r3, [sp, #36]	; 0x24
 8015e0e:	9b07      	ldr	r3, [sp, #28]
 8015e10:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e14:	2b00      	cmp	r3, #0
 8015e16:	dc70      	bgt.n	8015efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015e18:	9b06      	ldr	r3, [sp, #24]
 8015e1a:	9a07      	ldr	r2, [sp, #28]
 8015e1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e24:	9307      	str	r3, [sp, #28]
 8015e26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e28:	2b00      	cmp	r3, #0
 8015e2a:	f340 80eb 	ble.w	8016004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015e2e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015e32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015e36:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015e3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015e3c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015e40:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015e44:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015e48:	eef0 6a48 	vmov.f32	s13, s16
 8015e4c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015e50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e54:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015e58:	ee16 ba90 	vmov	fp, s13
 8015e5c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015e60:	eef0 6a68 	vmov.f32	s13, s17
 8015e64:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015e68:	ee18 2a10 	vmov	r2, s16
 8015e6c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e74:	ee18 2a90 	vmov	r2, s17
 8015e78:	9323      	str	r3, [sp, #140]	; 0x8c
 8015e7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015e7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e80:	9324      	str	r3, [sp, #144]	; 0x90
 8015e82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015e86:	3b01      	subs	r3, #1
 8015e88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e8c:	930a      	str	r3, [sp, #40]	; 0x28
 8015e8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015e90:	bf08      	it	eq
 8015e92:	4613      	moveq	r3, r2
 8015e94:	ee16 5a90 	vmov	r5, s13
 8015e98:	9306      	str	r3, [sp, #24]
 8015e9a:	eef0 8a67 	vmov.f32	s17, s15
 8015e9e:	eeb0 8a47 	vmov.f32	s16, s14
 8015ea2:	e6d2      	b.n	8015c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8015ea4:	b149      	cbz	r1, 8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8015ea6:	5cba      	ldrb	r2, [r7, r2]
 8015ea8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015eac:	4422      	add	r2, r4
 8015eae:	4660      	mov	r0, ip
 8015eb0:	4666      	mov	r6, ip
 8015eb2:	e734      	b.n	8015d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015eb4:	4660      	mov	r0, ip
 8015eb6:	4662      	mov	r2, ip
 8015eb8:	e731      	b.n	8015d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015eba:	4660      	mov	r0, ip
 8015ebc:	4662      	mov	r2, ip
 8015ebe:	e7f7      	b.n	8015eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015ec0:	f110 0c01 	adds.w	ip, r0, #1
 8015ec4:	f53f af74 	bmi.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015ec8:	4562      	cmp	r2, ip
 8015eca:	f6ff af71 	blt.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015ece:	f116 0c01 	adds.w	ip, r6, #1
 8015ed2:	f53f af6d 	bmi.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015ed6:	4567      	cmp	r7, ip
 8015ed8:	f6ff af6a 	blt.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015edc:	b23f      	sxth	r7, r7
 8015ede:	b212      	sxth	r2, r2
 8015ee0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015ee4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015ee8:	9200      	str	r2, [sp, #0]
 8015eea:	9701      	str	r7, [sp, #4]
 8015eec:	4623      	mov	r3, r4
 8015eee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015ef2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015ef4:	f7ff fdc2 	bl	8015a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015ef8:	e75a      	b.n	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015efa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015efc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015f00:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015f04:	1428      	asrs	r0, r5, #16
 8015f06:	fb02 6000 	mla	r0, r2, r0, r6
 8015f0a:	9e08      	ldr	r6, [sp, #32]
 8015f0c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015f10:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015f14:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015f18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015f1c:	1837      	adds	r7, r6, r0
 8015f1e:	eb04 0c08 	add.w	ip, r4, r8
 8015f22:	2b00      	cmp	r3, #0
 8015f24:	d060      	beq.n	8015fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015f26:	787e      	ldrb	r6, [r7, #1]
 8015f28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015f2c:	4426      	add	r6, r4
 8015f2e:	2900      	cmp	r1, #0
 8015f30:	d062      	beq.n	8015ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015f32:	18b8      	adds	r0, r7, r2
 8015f34:	5cba      	ldrb	r2, [r7, r2]
 8015f36:	7840      	ldrb	r0, [r0, #1]
 8015f38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015f40:	4422      	add	r2, r4
 8015f42:	4420      	add	r0, r4
 8015f44:	b29b      	uxth	r3, r3
 8015f46:	b289      	uxth	r1, r1
 8015f48:	fb03 f901 	mul.w	r9, r3, r1
 8015f4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015f50:	011b      	lsls	r3, r3, #4
 8015f52:	b289      	uxth	r1, r1
 8015f54:	78b7      	ldrb	r7, [r6, #2]
 8015f56:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015f5a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015f5e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015f62:	eba3 0309 	sub.w	r3, r3, r9
 8015f66:	b29b      	uxth	r3, r3
 8015f68:	ebae 0e01 	sub.w	lr, lr, r1
 8015f6c:	fa1f fe8e 	uxth.w	lr, lr
 8015f70:	435f      	muls	r7, r3
 8015f72:	fb0e 770a 	mla	r7, lr, sl, r7
 8015f76:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015f7a:	fb01 770a 	mla	r7, r1, sl, r7
 8015f7e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015f82:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015f86:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015f8a:	f896 8000 	ldrb.w	r8, [r6]
 8015f8e:	7876      	ldrb	r6, [r6, #1]
 8015f90:	fb03 f808 	mul.w	r8, r3, r8
 8015f94:	fb0e 8807 	mla	r8, lr, r7, r8
 8015f98:	7817      	ldrb	r7, [r2, #0]
 8015f9a:	fb01 8807 	mla	r8, r1, r7, r8
 8015f9e:	7807      	ldrb	r7, [r0, #0]
 8015fa0:	fb09 8707 	mla	r7, r9, r7, r8
 8015fa4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015fa8:	4373      	muls	r3, r6
 8015faa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015fae:	7856      	ldrb	r6, [r2, #1]
 8015fb0:	ea47 070a 	orr.w	r7, r7, sl
 8015fb4:	fb0e 330c 	mla	r3, lr, ip, r3
 8015fb8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015fbc:	fb01 3306 	mla	r3, r1, r6, r3
 8015fc0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015fc4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015fc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015fca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015fce:	ea47 070a 	orr.w	r7, r7, sl
 8015fd2:	f823 7b02 	strh.w	r7, [r3], #2
 8015fd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8015fd8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015fda:	449b      	add	fp, r3
 8015fdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015fde:	441d      	add	r5, r3
 8015fe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fe2:	3b01      	subs	r3, #1
 8015fe4:	9309      	str	r3, [sp, #36]	; 0x24
 8015fe6:	e714      	b.n	8015e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015fe8:	b149      	cbz	r1, 8015ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015fea:	5cba      	ldrb	r2, [r7, r2]
 8015fec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ff0:	4422      	add	r2, r4
 8015ff2:	4660      	mov	r0, ip
 8015ff4:	4666      	mov	r6, ip
 8015ff6:	e7a5      	b.n	8015f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015ff8:	4660      	mov	r0, ip
 8015ffa:	4662      	mov	r2, ip
 8015ffc:	e7a2      	b.n	8015f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015ffe:	4660      	mov	r0, ip
 8016000:	4662      	mov	r2, ip
 8016002:	e7f7      	b.n	8015ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8016004:	b00f      	add	sp, #60	; 0x3c
 8016006:	ecbd 8b08 	vpop	{d8-d11}
 801600a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016010:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016014:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8016018:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801601c:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8016020:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8016024:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8016028:	fb04 560c 	mla	r6, r4, ip, r5
 801602c:	2c00      	cmp	r4, #0
 801602e:	eb02 0e06 	add.w	lr, r2, r6
 8016032:	db3d      	blt.n	80160b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8016034:	45a0      	cmp	r8, r4
 8016036:	dd3b      	ble.n	80160b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8016038:	2d00      	cmp	r5, #0
 801603a:	db37      	blt.n	80160ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801603c:	45ac      	cmp	ip, r5
 801603e:	dd35      	ble.n	80160ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8016040:	5d92      	ldrb	r2, [r2, r6]
 8016042:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016046:	1c6e      	adds	r6, r5, #1
 8016048:	d435      	bmi.n	80160b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801604a:	45b4      	cmp	ip, r6
 801604c:	dd33      	ble.n	80160b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801604e:	b3a0      	cbz	r0, 80160ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8016050:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016054:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016058:	3401      	adds	r4, #1
 801605a:	d432      	bmi.n	80160c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801605c:	45a0      	cmp	r8, r4
 801605e:	dd30      	ble.n	80160c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8016060:	b397      	cbz	r7, 80160c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8016062:	2d00      	cmp	r5, #0
 8016064:	db2b      	blt.n	80160be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8016066:	45ac      	cmp	ip, r5
 8016068:	dd29      	ble.n	80160be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801606a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801606e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016072:	3501      	adds	r5, #1
 8016074:	d42b      	bmi.n	80160ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016076:	45ac      	cmp	ip, r5
 8016078:	dd29      	ble.n	80160ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801607a:	b350      	cbz	r0, 80160d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801607c:	44f4      	add	ip, lr
 801607e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016082:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016086:	280f      	cmp	r0, #15
 8016088:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801608c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016090:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016094:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016098:	d801      	bhi.n	801609e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801609a:	2f0f      	cmp	r7, #15
 801609c:	d91b      	bls.n	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801609e:	4b8d      	ldr	r3, [pc, #564]	; (80162d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80160a0:	4a8d      	ldr	r2, [pc, #564]	; (80162d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 80160a2:	488e      	ldr	r0, [pc, #568]	; (80162dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 80160a4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80160a8:	f005 fd1a 	bl	801bae0 <__assert_func>
 80160ac:	2200      	movs	r2, #0
 80160ae:	e7ca      	b.n	8016046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 80160b0:	2600      	movs	r6, #0
 80160b2:	4632      	mov	r2, r6
 80160b4:	e7d0      	b.n	8016058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80160b6:	2600      	movs	r6, #0
 80160b8:	e7ce      	b.n	8016058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80160ba:	4606      	mov	r6, r0
 80160bc:	e7cc      	b.n	8016058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80160be:	2400      	movs	r4, #0
 80160c0:	e7d7      	b.n	8016072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 80160c2:	2300      	movs	r3, #0
 80160c4:	461c      	mov	r4, r3
 80160c6:	e7de      	b.n	8016086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80160c8:	463b      	mov	r3, r7
 80160ca:	463c      	mov	r4, r7
 80160cc:	e7db      	b.n	8016086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80160ce:	2300      	movs	r3, #0
 80160d0:	e7d9      	b.n	8016086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80160d2:	4603      	mov	r3, r0
 80160d4:	e7d7      	b.n	8016086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80160d6:	b280      	uxth	r0, r0
 80160d8:	b2bf      	uxth	r7, r7
 80160da:	fb07 fe00 	mul.w	lr, r7, r0
 80160de:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80160e2:	0100      	lsls	r0, r0, #4
 80160e4:	eba0 0c0e 	sub.w	ip, r0, lr
 80160e8:	b2bf      	uxth	r7, r7
 80160ea:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80160ee:	fa1f fc8c 	uxth.w	ip, ip
 80160f2:	1bed      	subs	r5, r5, r7
 80160f4:	b2ad      	uxth	r5, r5
 80160f6:	fb0a f00c 	mul.w	r0, sl, ip
 80160fa:	fb0b 0005 	mla	r0, fp, r5, r0
 80160fe:	fb07 0009 	mla	r0, r7, r9, r0
 8016102:	fb0e 0008 	mla	r0, lr, r8, r0
 8016106:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801610a:	9001      	str	r0, [sp, #4]
 801610c:	2800      	cmp	r0, #0
 801610e:	f000 80de 	beq.w	80162ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 8016112:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016116:	d018      	beq.n	801614a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8016118:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801611c:	fb0b f000 	mul.w	r0, fp, r0
 8016120:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016124:	fb0b fb02 	mul.w	fp, fp, r2
 8016128:	0a02      	lsrs	r2, r0, #8
 801612a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801612e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016132:	4402      	add	r2, r0
 8016134:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016138:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801613c:	0a12      	lsrs	r2, r2, #8
 801613e:	0a00      	lsrs	r0, r0, #8
 8016140:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016144:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016148:	4302      	orrs	r2, r0
 801614a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801614e:	d01a      	beq.n	8016186 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8016150:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8016154:	fb0a f000 	mul.w	r0, sl, r0
 8016158:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801615c:	fb0a fa06 	mul.w	sl, sl, r6
 8016160:	0a06      	lsrs	r6, r0, #8
 8016162:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016166:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801616a:	4406      	add	r6, r0
 801616c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016170:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8016174:	0a36      	lsrs	r6, r6, #8
 8016176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801617a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801617e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016182:	ea46 060a 	orr.w	r6, r6, sl
 8016186:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801618a:	d01b      	beq.n	80161c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801618c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016190:	fb09 fa0a 	mul.w	sl, r9, sl
 8016194:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016198:	fb09 f004 	mul.w	r0, r9, r4
 801619c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80161a0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80161a4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80161a8:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80161ac:	4454      	add	r4, sl
 80161ae:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80161b2:	0a24      	lsrs	r4, r4, #8
 80161b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80161b8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80161bc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80161c0:	ea44 0409 	orr.w	r4, r4, r9
 80161c4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80161c8:	d01b      	beq.n	8016202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 80161ca:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80161ce:	fb08 f909 	mul.w	r9, r8, r9
 80161d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161d6:	fb08 f003 	mul.w	r0, r8, r3
 80161da:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80161de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161e2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80161e6:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80161ea:	444b      	add	r3, r9
 80161ec:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80161f0:	0a1b      	lsrs	r3, r3, #8
 80161f2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80161f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161fa:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80161fe:	ea43 0308 	orr.w	r3, r3, r8
 8016202:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016206:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801620a:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801620e:	fb0c f808 	mul.w	r8, ip, r8
 8016212:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016216:	fb0c f606 	mul.w	r6, ip, r6
 801621a:	fb05 8909 	mla	r9, r5, r9, r8
 801621e:	fb05 6502 	mla	r5, r5, r2, r6
 8016222:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8016226:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801622a:	9a01      	ldr	r2, [sp, #4]
 801622c:	8808      	ldrh	r0, [r1, #0]
 801622e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016232:	fb07 9908 	mla	r9, r7, r8, r9
 8016236:	fb07 5704 	mla	r7, r7, r4, r5
 801623a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801623e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016242:	b2b6      	uxth	r6, r6
 8016244:	fb0e 9808 	mla	r8, lr, r8, r9
 8016248:	fb0e 7e03 	mla	lr, lr, r3, r7
 801624c:	4372      	muls	r2, r6
 801624e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016252:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016256:	1c53      	adds	r3, r2, #1
 8016258:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801625c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016260:	ea48 0e0e 	orr.w	lr, r8, lr
 8016264:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016268:	1205      	asrs	r5, r0, #8
 801626a:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801626e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8016272:	b2db      	uxtb	r3, r3
 8016274:	fb12 f206 	smulbb	r2, r2, r6
 8016278:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801627c:	fb05 2503 	mla	r5, r5, r3, r2
 8016280:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8016284:	10c2      	asrs	r2, r0, #3
 8016286:	fa5f fe8e 	uxtb.w	lr, lr
 801628a:	00c0      	lsls	r0, r0, #3
 801628c:	fb14 f406 	smulbb	r4, r4, r6
 8016290:	b2c0      	uxtb	r0, r0
 8016292:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016296:	fb1e fe06 	smulbb	lr, lr, r6
 801629a:	fb02 4203 	mla	r2, r2, r3, r4
 801629e:	b2ad      	uxth	r5, r5
 80162a0:	fb00 e303 	mla	r3, r0, r3, lr
 80162a4:	b298      	uxth	r0, r3
 80162a6:	b294      	uxth	r4, r2
 80162a8:	1c6b      	adds	r3, r5, #1
 80162aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80162ae:	1c62      	adds	r2, r4, #1
 80162b0:	1c43      	adds	r3, r0, #1
 80162b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80162b6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80162ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80162be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80162c2:	0952      	lsrs	r2, r2, #5
 80162c4:	432b      	orrs	r3, r5
 80162c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162ca:	4313      	orrs	r3, r2
 80162cc:	800b      	strh	r3, [r1, #0]
 80162ce:	b003      	add	sp, #12
 80162d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162d4:	0801f996 	.word	0x0801f996
 80162d8:	0801ff66 	.word	0x0801ff66
 80162dc:	0801fa1a 	.word	0x0801fa1a

080162e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80162e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162e4:	ed2d 8b08 	vpush	{d8-d11}
 80162e8:	b09f      	sub	sp, #124	; 0x7c
 80162ea:	eeb0 aa40 	vmov.f32	s20, s0
 80162ee:	921b      	str	r2, [sp, #108]	; 0x6c
 80162f0:	9309      	str	r3, [sp, #36]	; 0x24
 80162f2:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80162f4:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80162f8:	931c      	str	r3, [sp, #112]	; 0x70
 80162fa:	9119      	str	r1, [sp, #100]	; 0x64
 80162fc:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8016300:	901d      	str	r0, [sp, #116]	; 0x74
 8016302:	6850      	ldr	r0, [r2, #4]
 8016304:	6812      	ldr	r2, [r2, #0]
 8016306:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8016308:	fb00 1303 	mla	r3, r0, r3, r1
 801630c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016310:	930c      	str	r3, [sp, #48]	; 0x30
 8016312:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016314:	681b      	ldr	r3, [r3, #0]
 8016316:	9312      	str	r3, [sp, #72]	; 0x48
 8016318:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801631a:	685e      	ldr	r6, [r3, #4]
 801631c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8016320:	930d      	str	r3, [sp, #52]	; 0x34
 8016322:	eef0 9a60 	vmov.f32	s19, s1
 8016326:	eeb0 9a41 	vmov.f32	s18, s2
 801632a:	eeb0 8a62 	vmov.f32	s16, s5
 801632e:	eef0 8a43 	vmov.f32	s17, s6
 8016332:	eef0 ba44 	vmov.f32	s23, s8
 8016336:	eeb0 ba64 	vmov.f32	s22, s9
 801633a:	eef0 aa45 	vmov.f32	s21, s10
 801633e:	3604      	adds	r6, #4
 8016340:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016342:	2b00      	cmp	r3, #0
 8016344:	dc03      	bgt.n	801634e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016346:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016348:	2b00      	cmp	r3, #0
 801634a:	f340 8388 	ble.w	8016a5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801634e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016350:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016354:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016358:	1e48      	subs	r0, r1, #1
 801635a:	1e57      	subs	r7, r2, #1
 801635c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801635e:	2b00      	cmp	r3, #0
 8016360:	f340 8195 	ble.w	801668e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016364:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016366:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801636a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801636e:	d406      	bmi.n	801637e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016370:	4584      	cmp	ip, r0
 8016372:	da04      	bge.n	801637e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016374:	2b00      	cmp	r3, #0
 8016376:	db02      	blt.n	801637e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016378:	42bb      	cmp	r3, r7
 801637a:	f2c0 8189 	blt.w	8016690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801637e:	f11c 0c01 	adds.w	ip, ip, #1
 8016382:	f100 8177 	bmi.w	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016386:	4561      	cmp	r1, ip
 8016388:	f2c0 8174 	blt.w	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801638c:	3301      	adds	r3, #1
 801638e:	f100 8171 	bmi.w	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016392:	429a      	cmp	r2, r3
 8016394:	f2c0 816e 	blt.w	8016674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016398:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801639a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801639c:	931a      	str	r3, [sp, #104]	; 0x68
 801639e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	f340 8193 	ble.w	80166cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80163a6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80163a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80163ac:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80163ae:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80163b2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80163b4:	141b      	asrs	r3, r3, #16
 80163b6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80163ba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80163be:	f100 81d6 	bmi.w	801676e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80163c2:	f100 38ff 	add.w	r8, r0, #4294967295
 80163c6:	4543      	cmp	r3, r8
 80163c8:	f280 81d1 	bge.w	801676e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80163cc:	f1bc 0f00 	cmp.w	ip, #0
 80163d0:	f2c0 81cd 	blt.w	801676e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80163d4:	f10e 38ff 	add.w	r8, lr, #4294967295
 80163d8:	45c4      	cmp	ip, r8
 80163da:	f280 81c8 	bge.w	801676e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80163de:	b200      	sxth	r0, r0
 80163e0:	fb0c 3300 	mla	r3, ip, r0, r3
 80163e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80163e6:	eb04 0803 	add.w	r8, r4, r3
 80163ea:	5ce3      	ldrb	r3, [r4, r3]
 80163ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80163f0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80163f4:	2a00      	cmp	r2, #0
 80163f6:	f000 81af 	beq.w	8016758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80163fa:	f898 c001 	ldrb.w	ip, [r8, #1]
 80163fe:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016402:	940e      	str	r4, [sp, #56]	; 0x38
 8016404:	0e24      	lsrs	r4, r4, #24
 8016406:	9415      	str	r4, [sp, #84]	; 0x54
 8016408:	b179      	cbz	r1, 801642a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801640a:	eb08 0c00 	add.w	ip, r8, r0
 801640e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016412:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016416:	900a      	str	r0, [sp, #40]	; 0x28
 8016418:	0e00      	lsrs	r0, r0, #24
 801641a:	9013      	str	r0, [sp, #76]	; 0x4c
 801641c:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016420:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016424:	900f      	str	r0, [sp, #60]	; 0x3c
 8016426:	0e00      	lsrs	r0, r0, #24
 8016428:	9016      	str	r0, [sp, #88]	; 0x58
 801642a:	b292      	uxth	r2, r2
 801642c:	b289      	uxth	r1, r1
 801642e:	fb02 f901 	mul.w	r9, r2, r1
 8016432:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016436:	0112      	lsls	r2, r2, #4
 8016438:	eba2 0809 	sub.w	r8, r2, r9
 801643c:	b289      	uxth	r1, r1
 801643e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016442:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016444:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016446:	fa1f f888 	uxth.w	r8, r8
 801644a:	1a52      	subs	r2, r2, r1
 801644c:	b292      	uxth	r2, r2
 801644e:	fb08 f000 	mul.w	r0, r8, r0
 8016452:	fb02 000e 	mla	r0, r2, lr, r0
 8016456:	fb01 0004 	mla	r0, r1, r4, r0
 801645a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801645c:	fb09 0004 	mla	r0, r9, r4, r0
 8016460:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016464:	2800      	cmp	r0, #0
 8016466:	f000 80fa 	beq.w	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801646a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801646e:	d01b      	beq.n	80164a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016470:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016474:	fb0e fa0a 	mul.w	sl, lr, sl
 8016478:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801647c:	fb0e fe03 	mul.w	lr, lr, r3
 8016480:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016484:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016488:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801648c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016490:	4453      	add	r3, sl
 8016492:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016496:	0a1b      	lsrs	r3, r3, #8
 8016498:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801649c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80164a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80164a4:	ea43 030c 	orr.w	r3, r3, ip
 80164a8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80164aa:	2cff      	cmp	r4, #255	; 0xff
 80164ac:	d021      	beq.n	80164f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80164ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80164b0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80164b4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80164b6:	fb04 fb0b 	mul.w	fp, r4, fp
 80164ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80164bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80164c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80164c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80164c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80164ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80164ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80164d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80164d6:	44de      	add	lr, fp
 80164d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80164dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80164e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80164e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164ec:	ea4e 040a 	orr.w	r4, lr, sl
 80164f0:	940e      	str	r4, [sp, #56]	; 0x38
 80164f2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80164f4:	2cff      	cmp	r4, #255	; 0xff
 80164f6:	d021      	beq.n	801653c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80164f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80164fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80164fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016500:	fb04 fb0b 	mul.w	fp, r4, fp
 8016504:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016506:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801650a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801650c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016510:	fb04 fa0a 	mul.w	sl, r4, sl
 8016514:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016518:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801651c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016520:	44de      	add	lr, fp
 8016522:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016526:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801652a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801652e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016532:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016536:	ea4e 040a 	orr.w	r4, lr, sl
 801653a:	940a      	str	r4, [sp, #40]	; 0x28
 801653c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801653e:	2cff      	cmp	r4, #255	; 0xff
 8016540:	d021      	beq.n	8016586 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8016542:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016544:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016548:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801654a:	fb04 fb0b 	mul.w	fp, r4, fp
 801654e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016550:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016554:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016556:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801655a:	fb04 fa0a 	mul.w	sl, r4, sl
 801655e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016562:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016566:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801656a:	44de      	add	lr, fp
 801656c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016570:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016574:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016578:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801657c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016580:	ea4e 040a 	orr.w	r4, lr, sl
 8016584:	940f      	str	r4, [sp, #60]	; 0x3c
 8016586:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016588:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801658c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801658e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016592:	fb08 fc0c 	mul.w	ip, r8, ip
 8016596:	fb02 cc0e 	mla	ip, r2, lr, ip
 801659a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801659e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80165a0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80165a4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80165a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80165aa:	fb09 cc0e 	mla	ip, r9, lr, ip
 80165ae:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80165b2:	fb08 f80e 	mul.w	r8, r8, lr
 80165b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80165ba:	fb02 8303 	mla	r3, r2, r3, r8
 80165be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80165c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80165c2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80165c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165c8:	fb01 330a 	mla	r3, r1, sl, r3
 80165cc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80165d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80165d2:	fb09 3901 	mla	r9, r9, r1, r3
 80165d6:	4342      	muls	r2, r0
 80165d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80165dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80165e0:	883b      	ldrh	r3, [r7, #0]
 80165e2:	1c50      	adds	r0, r2, #1
 80165e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80165e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80165ec:	ea4c 0c09 	orr.w	ip, ip, r9
 80165f0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80165f4:	1219      	asrs	r1, r3, #8
 80165f6:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80165fa:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80165fe:	b2c0      	uxtb	r0, r0
 8016600:	fb12 f204 	smulbb	r2, r2, r4
 8016604:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016608:	fb01 2100 	mla	r1, r1, r0, r2
 801660c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016610:	10da      	asrs	r2, r3, #3
 8016612:	fa5f fc8c 	uxtb.w	ip, ip
 8016616:	00db      	lsls	r3, r3, #3
 8016618:	fb1c fc04 	smulbb	ip, ip, r4
 801661c:	b2db      	uxtb	r3, r3
 801661e:	b289      	uxth	r1, r1
 8016620:	fb03 c300 	mla	r3, r3, r0, ip
 8016624:	fa1f fc83 	uxth.w	ip, r3
 8016628:	1c4b      	adds	r3, r1, #1
 801662a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801662e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016632:	fb1e fe04 	smulbb	lr, lr, r4
 8016636:	f10c 0301 	add.w	r3, ip, #1
 801663a:	fb02 e200 	mla	r2, r2, r0, lr
 801663e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016642:	b292      	uxth	r2, r2
 8016644:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016648:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801664c:	430b      	orrs	r3, r1
 801664e:	1c51      	adds	r1, r2, #1
 8016650:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016654:	0952      	lsrs	r2, r2, #5
 8016656:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801665a:	4313      	orrs	r3, r2
 801665c:	803b      	strh	r3, [r7, #0]
 801665e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016660:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016662:	441a      	add	r2, r3
 8016664:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016666:	9231      	str	r2, [sp, #196]	; 0xc4
 8016668:	441d      	add	r5, r3
 801666a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801666c:	3b01      	subs	r3, #1
 801666e:	3702      	adds	r7, #2
 8016670:	931a      	str	r3, [sp, #104]	; 0x68
 8016672:	e694      	b.n	801639e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016674:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016676:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016678:	441c      	add	r4, r3
 801667a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801667c:	9431      	str	r4, [sp, #196]	; 0xc4
 801667e:	441d      	add	r5, r3
 8016680:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016682:	3b01      	subs	r3, #1
 8016684:	9309      	str	r3, [sp, #36]	; 0x24
 8016686:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016688:	3302      	adds	r3, #2
 801668a:	930c      	str	r3, [sp, #48]	; 0x30
 801668c:	e666      	b.n	801635c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801668e:	d024      	beq.n	80166da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8016690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016692:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8016694:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016696:	3b01      	subs	r3, #1
 8016698:	fb00 4003 	mla	r0, r0, r3, r4
 801669c:	1400      	asrs	r0, r0, #16
 801669e:	f53f ae7b 	bmi.w	8016398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80166a2:	3901      	subs	r1, #1
 80166a4:	4288      	cmp	r0, r1
 80166a6:	f6bf ae77 	bge.w	8016398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80166aa:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80166ac:	fb01 5303 	mla	r3, r1, r3, r5
 80166b0:	141b      	asrs	r3, r3, #16
 80166b2:	f53f ae71 	bmi.w	8016398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80166b6:	3a01      	subs	r2, #1
 80166b8:	4293      	cmp	r3, r2
 80166ba:	f6bf ae6d 	bge.w	8016398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80166be:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80166c2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80166c6:	f1bb 0f00 	cmp.w	fp, #0
 80166ca:	dc70      	bgt.n	80167ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80166cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80166ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80166d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80166d4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80166d8:	930c      	str	r3, [sp, #48]	; 0x30
 80166da:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80166dc:	2b00      	cmp	r3, #0
 80166de:	f340 81be 	ble.w	8016a5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80166e2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80166e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80166ea:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80166ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80166f0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80166f4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80166f8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80166fc:	eef0 6a48 	vmov.f32	s13, s16
 8016700:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016708:	ee37 8a48 	vsub.f32	s16, s14, s16
 801670c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016710:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016714:	eef0 6a68 	vmov.f32	s13, s17
 8016718:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801671c:	ee18 2a10 	vmov	r2, s16
 8016720:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016724:	fb92 f3f3 	sdiv	r3, r2, r3
 8016728:	ee18 2a90 	vmov	r2, s17
 801672c:	9333      	str	r3, [sp, #204]	; 0xcc
 801672e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016730:	fb92 f3f3 	sdiv	r3, r2, r3
 8016734:	9334      	str	r3, [sp, #208]	; 0xd0
 8016736:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016738:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801673a:	3b01      	subs	r3, #1
 801673c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016740:	9319      	str	r3, [sp, #100]	; 0x64
 8016742:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016744:	bf08      	it	eq
 8016746:	4613      	moveq	r3, r2
 8016748:	ee16 5a90 	vmov	r5, s13
 801674c:	9309      	str	r3, [sp, #36]	; 0x24
 801674e:	eef0 8a67 	vmov.f32	s17, s15
 8016752:	eeb0 8a47 	vmov.f32	s16, s14
 8016756:	e5f3      	b.n	8016340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016758:	2900      	cmp	r1, #0
 801675a:	f43f ae66 	beq.w	801642a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801675e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016762:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016766:	900a      	str	r0, [sp, #40]	; 0x28
 8016768:	0e00      	lsrs	r0, r0, #24
 801676a:	9013      	str	r0, [sp, #76]	; 0x4c
 801676c:	e65d      	b.n	801642a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801676e:	f113 0801 	adds.w	r8, r3, #1
 8016772:	f53f af74 	bmi.w	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016776:	4540      	cmp	r0, r8
 8016778:	f6ff af71 	blt.w	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801677c:	f11c 0801 	adds.w	r8, ip, #1
 8016780:	f53f af6d 	bmi.w	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016784:	45c6      	cmp	lr, r8
 8016786:	f6ff af6a 	blt.w	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801678a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801678c:	9302      	str	r3, [sp, #8]
 801678e:	b200      	sxth	r0, r0
 8016790:	fa0f f38e 	sxth.w	r3, lr
 8016794:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016798:	e9cd c203 	strd	ip, r2, [sp, #12]
 801679c:	9301      	str	r3, [sp, #4]
 801679e:	9000      	str	r0, [sp, #0]
 80167a0:	4633      	mov	r3, r6
 80167a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80167a4:	981d      	ldr	r0, [sp, #116]	; 0x74
 80167a6:	4639      	mov	r1, r7
 80167a8:	f7ff fc32 	bl	8016010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80167ac:	e757      	b.n	801665e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80167ae:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80167b0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80167b2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80167b6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80167b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80167bc:	1427      	asrs	r7, r4, #16
 80167be:	142b      	asrs	r3, r5, #16
 80167c0:	fb01 7303 	mla	r3, r1, r3, r7
 80167c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80167c6:	18e7      	adds	r7, r4, r3
 80167c8:	5ce3      	ldrb	r3, [r4, r3]
 80167ca:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80167ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80167d2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80167d6:	2a00      	cmp	r2, #0
 80167d8:	f000 8137 	beq.w	8016a4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80167dc:	f897 e001 	ldrb.w	lr, [r7, #1]
 80167e0:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80167e4:	9410      	str	r4, [sp, #64]	; 0x40
 80167e6:	0e24      	lsrs	r4, r4, #24
 80167e8:	9417      	str	r4, [sp, #92]	; 0x5c
 80167ea:	b170      	cbz	r0, 801680a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80167ec:	eb07 0e01 	add.w	lr, r7, r1
 80167f0:	5c79      	ldrb	r1, [r7, r1]
 80167f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80167f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80167f8:	0e09      	lsrs	r1, r1, #24
 80167fa:	9114      	str	r1, [sp, #80]	; 0x50
 80167fc:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016800:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016804:	9111      	str	r1, [sp, #68]	; 0x44
 8016806:	0e09      	lsrs	r1, r1, #24
 8016808:	9118      	str	r1, [sp, #96]	; 0x60
 801680a:	b292      	uxth	r2, r2
 801680c:	b280      	uxth	r0, r0
 801680e:	fb02 f800 	mul.w	r8, r2, r0
 8016812:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016816:	0112      	lsls	r2, r2, #4
 8016818:	eba2 0e08 	sub.w	lr, r2, r8
 801681c:	b280      	uxth	r0, r0
 801681e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016822:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8016824:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016826:	fa1f fe8e 	uxth.w	lr, lr
 801682a:	1a12      	subs	r2, r2, r0
 801682c:	b292      	uxth	r2, r2
 801682e:	fb0e f101 	mul.w	r1, lr, r1
 8016832:	fb02 110c 	mla	r1, r2, ip, r1
 8016836:	fb00 1104 	mla	r1, r0, r4, r1
 801683a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801683c:	fb08 1104 	mla	r1, r8, r4, r1
 8016840:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016844:	2900      	cmp	r1, #0
 8016846:	f000 80f5 	beq.w	8016a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801684a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801684e:	d019      	beq.n	8016884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8016850:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016854:	fb0c fa0a 	mul.w	sl, ip, sl
 8016858:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801685c:	fb0c fc03 	mul.w	ip, ip, r3
 8016860:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016864:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016868:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801686c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016870:	4453      	add	r3, sl
 8016872:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016876:	0a1b      	lsrs	r3, r3, #8
 8016878:	0a3f      	lsrs	r7, r7, #8
 801687a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801687e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016882:	433b      	orrs	r3, r7
 8016884:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016886:	2cff      	cmp	r4, #255	; 0xff
 8016888:	d020      	beq.n	80168cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801688a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801688c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016890:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016892:	4367      	muls	r7, r4
 8016894:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016896:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801689a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801689c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80168a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80168a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80168a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168ac:	44bc      	add	ip, r7
 80168ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80168b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80168b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80168ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80168be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80168c6:	ea4c 040a 	orr.w	r4, ip, sl
 80168ca:	9410      	str	r4, [sp, #64]	; 0x40
 80168cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80168ce:	2cff      	cmp	r4, #255	; 0xff
 80168d0:	d020      	beq.n	8016914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80168d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80168d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80168d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80168da:	4367      	muls	r7, r4
 80168dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80168de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80168e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80168e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80168e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80168ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80168f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168f4:	44bc      	add	ip, r7
 80168f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80168fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80168fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016902:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016906:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801690a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801690e:	ea4c 040a 	orr.w	r4, ip, sl
 8016912:	940b      	str	r4, [sp, #44]	; 0x2c
 8016914:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016916:	2cff      	cmp	r4, #255	; 0xff
 8016918:	d020      	beq.n	801695c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 801691a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801691c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016920:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016922:	4367      	muls	r7, r4
 8016924:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016926:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801692a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801692c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016930:	fb04 fa0a 	mul.w	sl, r4, sl
 8016934:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016938:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801693c:	44bc      	add	ip, r7
 801693e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016942:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016946:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801694a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801694e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016952:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016956:	ea4c 040a 	orr.w	r4, ip, sl
 801695a:	9411      	str	r4, [sp, #68]	; 0x44
 801695c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801695e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016962:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016964:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016968:	fb0e f707 	mul.w	r7, lr, r7
 801696c:	fb02 770c 	mla	r7, r2, ip, r7
 8016970:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016974:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016976:	fb00 770c 	mla	r7, r0, ip, r7
 801697a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801697e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016980:	fb08 770c 	mla	r7, r8, ip, r7
 8016984:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016988:	fb0e fe0c 	mul.w	lr, lr, ip
 801698c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016990:	fb02 e303 	mla	r3, r2, r3, lr
 8016994:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016996:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016998:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801699c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801699e:	fb00 330a 	mla	r3, r0, sl, r3
 80169a2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80169a6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80169aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80169ac:	f8b9 0000 	ldrh.w	r0, [r9]
 80169b0:	434b      	muls	r3, r1
 80169b2:	0a3f      	lsrs	r7, r7, #8
 80169b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80169b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80169bc:	1c59      	adds	r1, r3, #1
 80169be:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80169c2:	ea47 070c 	orr.w	r7, r7, ip
 80169c6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80169ca:	1202      	asrs	r2, r0, #8
 80169cc:	0c3b      	lsrs	r3, r7, #16
 80169ce:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80169d2:	b2c9      	uxtb	r1, r1
 80169d4:	fb13 f304 	smulbb	r3, r3, r4
 80169d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80169dc:	fb02 3201 	mla	r2, r2, r1, r3
 80169e0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80169e4:	10c3      	asrs	r3, r0, #3
 80169e6:	b2ff      	uxtb	r7, r7
 80169e8:	00c0      	lsls	r0, r0, #3
 80169ea:	b292      	uxth	r2, r2
 80169ec:	fb1c fc04 	smulbb	ip, ip, r4
 80169f0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80169f4:	b2c0      	uxtb	r0, r0
 80169f6:	fb17 f704 	smulbb	r7, r7, r4
 80169fa:	fb03 c301 	mla	r3, r3, r1, ip
 80169fe:	fb00 7001 	mla	r0, r0, r1, r7
 8016a02:	f102 0c01 	add.w	ip, r2, #1
 8016a06:	b280      	uxth	r0, r0
 8016a08:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016a0c:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016a10:	1c42      	adds	r2, r0, #1
 8016a12:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016a16:	b29b      	uxth	r3, r3
 8016a18:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a1c:	ea42 020c 	orr.w	r2, r2, ip
 8016a20:	f103 0c01 	add.w	ip, r3, #1
 8016a24:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016a28:	095b      	lsrs	r3, r3, #5
 8016a2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a2e:	431a      	orrs	r2, r3
 8016a30:	f8a9 2000 	strh.w	r2, [r9]
 8016a34:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016a36:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016a38:	441a      	add	r2, r3
 8016a3a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016a3c:	9231      	str	r2, [sp, #196]	; 0xc4
 8016a3e:	f109 0902 	add.w	r9, r9, #2
 8016a42:	441d      	add	r5, r3
 8016a44:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016a48:	e63d      	b.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016a4a:	2800      	cmp	r0, #0
 8016a4c:	f43f aedd 	beq.w	801680a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016a50:	5c79      	ldrb	r1, [r7, r1]
 8016a52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016a56:	910b      	str	r1, [sp, #44]	; 0x2c
 8016a58:	0e09      	lsrs	r1, r1, #24
 8016a5a:	9114      	str	r1, [sp, #80]	; 0x50
 8016a5c:	e6d5      	b.n	801680a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016a5e:	b01f      	add	sp, #124	; 0x7c
 8016a60:	ecbd 8b08 	vpop	{d8-d11}
 8016a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a6c:	880e      	ldrh	r6, [r1, #0]
 8016a6e:	b085      	sub	sp, #20
 8016a70:	ea4f 2826 	mov.w	r8, r6, asr #8
 8016a74:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016a78:	4691      	mov	r9, r2
 8016a7a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016a7e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8016a82:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016a86:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016a8a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016a8e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016a92:	9200      	str	r2, [sp, #0]
 8016a94:	00f6      	lsls	r6, r6, #3
 8016a96:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016a9a:	9201      	str	r2, [sp, #4]
 8016a9c:	2c00      	cmp	r4, #0
 8016a9e:	b2f2      	uxtb	r2, r6
 8016aa0:	fb04 560c 	mla	r6, r4, ip, r5
 8016aa4:	9202      	str	r2, [sp, #8]
 8016aa6:	eb09 0806 	add.w	r8, r9, r6
 8016aaa:	db3f      	blt.n	8016b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016aac:	45a6      	cmp	lr, r4
 8016aae:	dd3d      	ble.n	8016b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016ab0:	2d00      	cmp	r5, #0
 8016ab2:	db39      	blt.n	8016b28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016ab4:	45ac      	cmp	ip, r5
 8016ab6:	dd37      	ble.n	8016b28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016ab8:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016abc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016ac0:	1c6e      	adds	r6, r5, #1
 8016ac2:	d436      	bmi.n	8016b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016ac4:	45b4      	cmp	ip, r6
 8016ac6:	dd34      	ble.n	8016b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016ac8:	b3a8      	cbz	r0, 8016b36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016aca:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016ace:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016ad2:	3401      	adds	r4, #1
 8016ad4:	d433      	bmi.n	8016b3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016ad6:	45a6      	cmp	lr, r4
 8016ad8:	dd31      	ble.n	8016b3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016ada:	b39f      	cbz	r7, 8016b44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016adc:	2d00      	cmp	r5, #0
 8016ade:	eb08 0e0c 	add.w	lr, r8, ip
 8016ae2:	db2a      	blt.n	8016b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016ae4:	45ac      	cmp	ip, r5
 8016ae6:	dd28      	ble.n	8016b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016ae8:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016aec:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016af0:	3501      	adds	r5, #1
 8016af2:	d42a      	bmi.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016af4:	45ac      	cmp	ip, r5
 8016af6:	dd28      	ble.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016af8:	b348      	cbz	r0, 8016b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016afa:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016afe:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016b02:	280f      	cmp	r0, #15
 8016b04:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016b08:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016b0c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016b10:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016b14:	d801      	bhi.n	8016b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8016b16:	2f0f      	cmp	r7, #15
 8016b18:	d91b      	bls.n	8016b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016b1a:	4b7d      	ldr	r3, [pc, #500]	; (8016d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016b1c:	4a7d      	ldr	r2, [pc, #500]	; (8016d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016b1e:	487e      	ldr	r0, [pc, #504]	; (8016d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016b20:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8016b24:	f004 ffdc 	bl	801bae0 <__assert_func>
 8016b28:	2200      	movs	r2, #0
 8016b2a:	e7c9      	b.n	8016ac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016b2c:	2600      	movs	r6, #0
 8016b2e:	4632      	mov	r2, r6
 8016b30:	e7cf      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016b32:	2600      	movs	r6, #0
 8016b34:	e7cd      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016b36:	4606      	mov	r6, r0
 8016b38:	e7cb      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016b3a:	2400      	movs	r4, #0
 8016b3c:	e7d8      	b.n	8016af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016b3e:	2300      	movs	r3, #0
 8016b40:	461c      	mov	r4, r3
 8016b42:	e7de      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016b44:	463b      	mov	r3, r7
 8016b46:	463c      	mov	r4, r7
 8016b48:	e7db      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016b4a:	2300      	movs	r3, #0
 8016b4c:	e7d9      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016b4e:	4603      	mov	r3, r0
 8016b50:	e7d7      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016b52:	b280      	uxth	r0, r0
 8016b54:	b2bf      	uxth	r7, r7
 8016b56:	fb00 fe07 	mul.w	lr, r0, r7
 8016b5a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016b5e:	0100      	lsls	r0, r0, #4
 8016b60:	eba0 0c0e 	sub.w	ip, r0, lr
 8016b64:	b2bf      	uxth	r7, r7
 8016b66:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016b6a:	fa1f fc8c 	uxth.w	ip, ip
 8016b6e:	1bed      	subs	r5, r5, r7
 8016b70:	b2ad      	uxth	r5, r5
 8016b72:	fb0c f00a 	mul.w	r0, ip, sl
 8016b76:	fb05 000b 	mla	r0, r5, fp, r0
 8016b7a:	fb07 0009 	mla	r0, r7, r9, r0
 8016b7e:	fb0e 0008 	mla	r0, lr, r8, r0
 8016b82:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016b86:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b8a:	9003      	str	r0, [sp, #12]
 8016b8c:	d018      	beq.n	8016bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016b8e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016b92:	fb0b f000 	mul.w	r0, fp, r0
 8016b96:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016b9a:	fb0b fb02 	mul.w	fp, fp, r2
 8016b9e:	0a02      	lsrs	r2, r0, #8
 8016ba0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016ba4:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016ba8:	4402      	add	r2, r0
 8016baa:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016bae:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016bb2:	0a12      	lsrs	r2, r2, #8
 8016bb4:	0a00      	lsrs	r0, r0, #8
 8016bb6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016bba:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016bbe:	4302      	orrs	r2, r0
 8016bc0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016bc4:	d019      	beq.n	8016bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8016bc6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016bca:	fb0a fb0b 	mul.w	fp, sl, fp
 8016bce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016bd2:	fb0a fa06 	mul.w	sl, sl, r6
 8016bd6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016bda:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016be2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016be6:	445e      	add	r6, fp
 8016be8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016bec:	0a36      	lsrs	r6, r6, #8
 8016bee:	0a00      	lsrs	r0, r0, #8
 8016bf0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bf4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016bf8:	4306      	orrs	r6, r0
 8016bfa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016bfe:	d019      	beq.n	8016c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016c00:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016c04:	fb09 fa0a 	mul.w	sl, r9, sl
 8016c08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016c0c:	fb09 f904 	mul.w	r9, r9, r4
 8016c10:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016c14:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016c18:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016c1c:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016c20:	4454      	add	r4, sl
 8016c22:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016c26:	0a24      	lsrs	r4, r4, #8
 8016c28:	0a00      	lsrs	r0, r0, #8
 8016c2a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016c2e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c32:	4304      	orrs	r4, r0
 8016c34:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016c38:	d019      	beq.n	8016c6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016c3a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016c3e:	fb08 f909 	mul.w	r9, r8, r9
 8016c42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c46:	fb08 f803 	mul.w	r8, r8, r3
 8016c4a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016c4e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c52:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016c56:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016c5a:	444b      	add	r3, r9
 8016c5c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016c60:	0a1b      	lsrs	r3, r3, #8
 8016c62:	0a00      	lsrs	r0, r0, #8
 8016c64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c68:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c6c:	4303      	orrs	r3, r0
 8016c6e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016c72:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016c76:	fb0c f808 	mul.w	r8, ip, r8
 8016c7a:	fb05 8800 	mla	r8, r5, r0, r8
 8016c7e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016c82:	fb07 8800 	mla	r8, r7, r0, r8
 8016c86:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016c8a:	fb0e 8000 	mla	r0, lr, r0, r8
 8016c8e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c92:	fb0c f606 	mul.w	r6, ip, r6
 8016c96:	0a00      	lsrs	r0, r0, #8
 8016c98:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c9c:	fb05 6202 	mla	r2, r5, r2, r6
 8016ca0:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016ca4:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016ca8:	fb07 2700 	mla	r7, r7, r0, r2
 8016cac:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016cb0:	9b03      	ldr	r3, [sp, #12]
 8016cb2:	9d00      	ldr	r5, [sp, #0]
 8016cb4:	9a02      	ldr	r2, [sp, #8]
 8016cb6:	fb0e 7000 	mla	r0, lr, r0, r7
 8016cba:	43dc      	mvns	r4, r3
 8016cbc:	9b01      	ldr	r3, [sp, #4]
 8016cbe:	b2e4      	uxtb	r4, r4
 8016cc0:	0a00      	lsrs	r0, r0, #8
 8016cc2:	4363      	muls	r3, r4
 8016cc4:	4365      	muls	r5, r4
 8016cc6:	4362      	muls	r2, r4
 8016cc8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016ccc:	ea48 0000 	orr.w	r0, r8, r0
 8016cd0:	4614      	mov	r4, r2
 8016cd2:	1c5e      	adds	r6, r3, #1
 8016cd4:	1c6a      	adds	r2, r5, #1
 8016cd6:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016cda:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016cde:	0a03      	lsrs	r3, r0, #8
 8016ce0:	0c02      	lsrs	r2, r0, #16
 8016ce2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016ce6:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016cea:	00db      	lsls	r3, r3, #3
 8016cec:	0212      	lsls	r2, r2, #8
 8016cee:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016cf2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016cf6:	4313      	orrs	r3, r2
 8016cf8:	1c62      	adds	r2, r4, #1
 8016cfa:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016cfe:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016d02:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016d06:	4318      	orrs	r0, r3
 8016d08:	8008      	strh	r0, [r1, #0]
 8016d0a:	b005      	add	sp, #20
 8016d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d10:	0801f996 	.word	0x0801f996
 8016d14:	0801ff66 	.word	0x0801ff66
 8016d18:	0801fa1a 	.word	0x0801fa1a

08016d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d20:	ed2d 8b08 	vpush	{d8-d11}
 8016d24:	b09b      	sub	sp, #108	; 0x6c
 8016d26:	eeb0 aa40 	vmov.f32	s20, s0
 8016d2a:	9218      	str	r2, [sp, #96]	; 0x60
 8016d2c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016d2e:	9116      	str	r1, [sp, #88]	; 0x58
 8016d30:	9307      	str	r3, [sp, #28]
 8016d32:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016d36:	9019      	str	r0, [sp, #100]	; 0x64
 8016d38:	6850      	ldr	r0, [r2, #4]
 8016d3a:	6812      	ldr	r2, [r2, #0]
 8016d3c:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016d3e:	fb00 1303 	mla	r3, r0, r3, r1
 8016d42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016d46:	930a      	str	r3, [sp, #40]	; 0x28
 8016d48:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d4a:	681b      	ldr	r3, [r3, #0]
 8016d4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8016d4e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d50:	685e      	ldr	r6, [r3, #4]
 8016d52:	eef0 9a60 	vmov.f32	s19, s1
 8016d56:	eeb0 9a41 	vmov.f32	s18, s2
 8016d5a:	eeb0 8a62 	vmov.f32	s16, s5
 8016d5e:	eef0 8a43 	vmov.f32	s17, s6
 8016d62:	eef0 ba44 	vmov.f32	s23, s8
 8016d66:	eeb0 ba64 	vmov.f32	s22, s9
 8016d6a:	eef0 aa45 	vmov.f32	s21, s10
 8016d6e:	3604      	adds	r6, #4
 8016d70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016d72:	2b00      	cmp	r3, #0
 8016d74:	dc03      	bgt.n	8016d7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016d76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016d78:	2b00      	cmp	r3, #0
 8016d7a:	f340 8373 	ble.w	8017464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016d7e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016d84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016d88:	1e48      	subs	r0, r1, #1
 8016d8a:	1e57      	subs	r7, r2, #1
 8016d8c:	9b07      	ldr	r3, [sp, #28]
 8016d8e:	2b00      	cmp	r3, #0
 8016d90:	f340 8190 	ble.w	80170b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016d94:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016d96:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016d9a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016d9e:	d406      	bmi.n	8016dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016da0:	4584      	cmp	ip, r0
 8016da2:	da04      	bge.n	8016dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016da4:	2b00      	cmp	r3, #0
 8016da6:	db02      	blt.n	8016dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016da8:	42bb      	cmp	r3, r7
 8016daa:	f2c0 8184 	blt.w	80170b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016dae:	f11c 0c01 	adds.w	ip, ip, #1
 8016db2:	f100 8172 	bmi.w	801709a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016db6:	4561      	cmp	r1, ip
 8016db8:	f2c0 816f 	blt.w	801709a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016dbc:	3301      	adds	r3, #1
 8016dbe:	f100 816c 	bmi.w	801709a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016dc2:	429a      	cmp	r2, r3
 8016dc4:	f2c0 8169 	blt.w	801709a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016dc8:	9b07      	ldr	r3, [sp, #28]
 8016dca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016dcc:	9317      	str	r3, [sp, #92]	; 0x5c
 8016dce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016dd0:	2b00      	cmp	r3, #0
 8016dd2:	f340 818e 	ble.w	80170f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016dd6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016dd8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016ddc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016dde:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016de2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016de4:	141b      	asrs	r3, r3, #16
 8016de6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016dea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016dee:	f100 81d1 	bmi.w	8017194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016df2:	f101 38ff 	add.w	r8, r1, #4294967295
 8016df6:	4543      	cmp	r3, r8
 8016df8:	f280 81cc 	bge.w	8017194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016dfc:	f1bc 0f00 	cmp.w	ip, #0
 8016e00:	f2c0 81c8 	blt.w	8017194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e04:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016e08:	45c4      	cmp	ip, r8
 8016e0a:	f280 81c3 	bge.w	8017194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e0e:	b209      	sxth	r1, r1
 8016e10:	fb0c 3301 	mla	r3, ip, r1, r3
 8016e14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016e16:	eb04 0803 	add.w	r8, r4, r3
 8016e1a:	5ce3      	ldrb	r3, [r4, r3]
 8016e1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016e20:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016e24:	2a00      	cmp	r2, #0
 8016e26:	f000 81aa 	beq.w	801717e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8016e2a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016e2e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016e32:	940b      	str	r4, [sp, #44]	; 0x2c
 8016e34:	0e24      	lsrs	r4, r4, #24
 8016e36:	9412      	str	r4, [sp, #72]	; 0x48
 8016e38:	b178      	cbz	r0, 8016e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016e3a:	eb08 0c01 	add.w	ip, r8, r1
 8016e3e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016e42:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016e46:	9108      	str	r1, [sp, #32]
 8016e48:	0e09      	lsrs	r1, r1, #24
 8016e4a:	9110      	str	r1, [sp, #64]	; 0x40
 8016e4c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016e50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016e54:	910c      	str	r1, [sp, #48]	; 0x30
 8016e56:	0e09      	lsrs	r1, r1, #24
 8016e58:	9113      	str	r1, [sp, #76]	; 0x4c
 8016e5a:	b292      	uxth	r2, r2
 8016e5c:	b280      	uxth	r0, r0
 8016e5e:	fb02 f900 	mul.w	r9, r2, r0
 8016e62:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016e66:	0112      	lsls	r2, r2, #4
 8016e68:	eba2 0809 	sub.w	r8, r2, r9
 8016e6c:	b280      	uxth	r0, r0
 8016e6e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016e72:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016e74:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016e76:	fa1f f888 	uxth.w	r8, r8
 8016e7a:	1a12      	subs	r2, r2, r0
 8016e7c:	b292      	uxth	r2, r2
 8016e7e:	fb08 f101 	mul.w	r1, r8, r1
 8016e82:	fb02 110e 	mla	r1, r2, lr, r1
 8016e86:	fb00 1104 	mla	r1, r0, r4, r1
 8016e8a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016e8c:	fb09 1104 	mla	r1, r9, r4, r1
 8016e90:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016e94:	2900      	cmp	r1, #0
 8016e96:	f000 80f5 	beq.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016e9a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016e9e:	d01b      	beq.n	8016ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016ea0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016ea4:	fb0e fa0a 	mul.w	sl, lr, sl
 8016ea8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016eac:	fb0e fe03 	mul.w	lr, lr, r3
 8016eb0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016eb4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016eb8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016ebc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016ec0:	4453      	add	r3, sl
 8016ec2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016ec6:	0a1b      	lsrs	r3, r3, #8
 8016ec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016ecc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ed0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016ed4:	ea43 030c 	orr.w	r3, r3, ip
 8016ed8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016eda:	2cff      	cmp	r4, #255	; 0xff
 8016edc:	d021      	beq.n	8016f22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016ede:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016ee0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016ee4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016ee6:	fb04 fb0b 	mul.w	fp, r4, fp
 8016eea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016eec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016ef0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016ef2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016ef6:	fb04 fa0a 	mul.w	sl, r4, sl
 8016efa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016efe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016f02:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f06:	44de      	add	lr, fp
 8016f08:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f1c:	ea4e 040a 	orr.w	r4, lr, sl
 8016f20:	940b      	str	r4, [sp, #44]	; 0x2c
 8016f22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f24:	2cff      	cmp	r4, #255	; 0xff
 8016f26:	d021      	beq.n	8016f6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016f28:	9c08      	ldr	r4, [sp, #32]
 8016f2a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016f2e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f30:	fb04 fb0b 	mul.w	fp, r4, fp
 8016f34:	9c08      	ldr	r4, [sp, #32]
 8016f36:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016f3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016f40:	fb04 fa0a 	mul.w	sl, r4, sl
 8016f44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f48:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016f4c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f50:	44de      	add	lr, fp
 8016f52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f66:	ea4e 040a 	orr.w	r4, lr, sl
 8016f6a:	9408      	str	r4, [sp, #32]
 8016f6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f6e:	2cff      	cmp	r4, #255	; 0xff
 8016f70:	d021      	beq.n	8016fb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016f72:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016f74:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016f78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f7a:	fb04 fb0b 	mul.w	fp, r4, fp
 8016f7e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016f80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016f84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016f8a:	fb04 fa0a 	mul.w	sl, r4, sl
 8016f8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f92:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016f96:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f9a:	44de      	add	lr, fp
 8016f9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016fa0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016fa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016fa8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016fb0:	ea4e 040a 	orr.w	r4, lr, sl
 8016fb4:	940c      	str	r4, [sp, #48]	; 0x30
 8016fb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016fb8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016fbc:	9c08      	ldr	r4, [sp, #32]
 8016fbe:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016fc2:	fb08 fc0c 	mul.w	ip, r8, ip
 8016fc6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016fca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016fce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016fd0:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016fd4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016fd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016fda:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016fde:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016fe2:	fb08 f80e 	mul.w	r8, r8, lr
 8016fe6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016fea:	fb02 8303 	mla	r3, r2, r3, r8
 8016fee:	9a08      	ldr	r2, [sp, #32]
 8016ff0:	f8b7 8000 	ldrh.w	r8, [r7]
 8016ff4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016ff8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016ffa:	fb00 330a 	mla	r3, r0, sl, r3
 8016ffe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8017002:	fb09 3900 	mla	r9, r9, r0, r3
 8017006:	43c9      	mvns	r1, r1
 8017008:	ea4f 2228 	mov.w	r2, r8, asr #8
 801700c:	fa5f fe81 	uxtb.w	lr, r1
 8017010:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017014:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017018:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801701c:	fb02 f20e 	mul.w	r2, r2, lr
 8017020:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017024:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017028:	ea4c 0c09 	orr.w	ip, ip, r9
 801702c:	1c53      	adds	r3, r2, #1
 801702e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8017032:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8017036:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801703a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801703e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017042:	4a63      	ldr	r2, [pc, #396]	; (80171d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8017044:	fb00 f00e 	mul.w	r0, r0, lr
 8017048:	b2db      	uxtb	r3, r3
 801704a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801704e:	1c43      	adds	r3, r0, #1
 8017050:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017054:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017058:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801705c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017060:	b2c9      	uxtb	r1, r1
 8017062:	00db      	lsls	r3, r3, #3
 8017064:	fb01 f10e 	mul.w	r1, r1, lr
 8017068:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801706c:	4313      	orrs	r3, r2
 801706e:	1c4a      	adds	r2, r1, #1
 8017070:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017074:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017078:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801707c:	ea4c 0c03 	orr.w	ip, ip, r3
 8017080:	f8a7 c000 	strh.w	ip, [r7]
 8017084:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017086:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017088:	441a      	add	r2, r3
 801708a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801708c:	922d      	str	r2, [sp, #180]	; 0xb4
 801708e:	441d      	add	r5, r3
 8017090:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017092:	3b01      	subs	r3, #1
 8017094:	3702      	adds	r7, #2
 8017096:	9317      	str	r3, [sp, #92]	; 0x5c
 8017098:	e699      	b.n	8016dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801709a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801709c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801709e:	441c      	add	r4, r3
 80170a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80170a2:	942d      	str	r4, [sp, #180]	; 0xb4
 80170a4:	441d      	add	r5, r3
 80170a6:	9b07      	ldr	r3, [sp, #28]
 80170a8:	3b01      	subs	r3, #1
 80170aa:	9307      	str	r3, [sp, #28]
 80170ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80170ae:	3302      	adds	r3, #2
 80170b0:	930a      	str	r3, [sp, #40]	; 0x28
 80170b2:	e66b      	b.n	8016d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80170b4:	d024      	beq.n	8017100 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 80170b6:	9b07      	ldr	r3, [sp, #28]
 80170b8:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80170ba:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80170bc:	3b01      	subs	r3, #1
 80170be:	fb00 4003 	mla	r0, r0, r3, r4
 80170c2:	1400      	asrs	r0, r0, #16
 80170c4:	f53f ae80 	bmi.w	8016dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80170c8:	3901      	subs	r1, #1
 80170ca:	4288      	cmp	r0, r1
 80170cc:	f6bf ae7c 	bge.w	8016dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80170d0:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80170d2:	fb01 5303 	mla	r3, r1, r3, r5
 80170d6:	141b      	asrs	r3, r3, #16
 80170d8:	f53f ae76 	bmi.w	8016dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80170dc:	3a01      	subs	r2, #1
 80170de:	4293      	cmp	r3, r2
 80170e0:	f6bf ae72 	bge.w	8016dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80170e4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80170e8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80170ec:	f1bb 0f00 	cmp.w	fp, #0
 80170f0:	dc70      	bgt.n	80171d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80170f2:	9b07      	ldr	r3, [sp, #28]
 80170f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80170f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80170fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80170fe:	930a      	str	r3, [sp, #40]	; 0x28
 8017100:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017102:	2b00      	cmp	r3, #0
 8017104:	f340 81ae 	ble.w	8017464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017108:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801710c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017110:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017114:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017116:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801711a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801711e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017122:	eef0 6a48 	vmov.f32	s13, s16
 8017126:	ee69 7a27 	vmul.f32	s15, s18, s15
 801712a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801712e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017132:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8017136:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801713a:	eef0 6a68 	vmov.f32	s13, s17
 801713e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017142:	ee18 2a10 	vmov	r2, s16
 8017146:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801714a:	fb92 f3f3 	sdiv	r3, r2, r3
 801714e:	ee18 2a90 	vmov	r2, s17
 8017152:	932f      	str	r3, [sp, #188]	; 0xbc
 8017154:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017156:	fb92 f3f3 	sdiv	r3, r2, r3
 801715a:	9330      	str	r3, [sp, #192]	; 0xc0
 801715c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801715e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017160:	3b01      	subs	r3, #1
 8017162:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017166:	9316      	str	r3, [sp, #88]	; 0x58
 8017168:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801716a:	bf08      	it	eq
 801716c:	4613      	moveq	r3, r2
 801716e:	ee16 5a90 	vmov	r5, s13
 8017172:	9307      	str	r3, [sp, #28]
 8017174:	eef0 8a67 	vmov.f32	s17, s15
 8017178:	eeb0 8a47 	vmov.f32	s16, s14
 801717c:	e5f8      	b.n	8016d70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801717e:	2800      	cmp	r0, #0
 8017180:	f43f ae6b 	beq.w	8016e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017184:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017188:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801718c:	9108      	str	r1, [sp, #32]
 801718e:	0e09      	lsrs	r1, r1, #24
 8017190:	9110      	str	r1, [sp, #64]	; 0x40
 8017192:	e662      	b.n	8016e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017194:	f113 0801 	adds.w	r8, r3, #1
 8017198:	f53f af74 	bmi.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801719c:	4541      	cmp	r1, r8
 801719e:	f6ff af71 	blt.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80171a2:	f11c 0801 	adds.w	r8, ip, #1
 80171a6:	f53f af6d 	bmi.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80171aa:	45c6      	cmp	lr, r8
 80171ac:	f6ff af6a 	blt.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80171b0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80171b4:	b209      	sxth	r1, r1
 80171b6:	fa0f f38e 	sxth.w	r3, lr
 80171ba:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80171be:	9301      	str	r3, [sp, #4]
 80171c0:	9100      	str	r1, [sp, #0]
 80171c2:	4633      	mov	r3, r6
 80171c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80171c6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80171c8:	4639      	mov	r1, r7
 80171ca:	f7ff fc4d 	bl	8016a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80171ce:	e759      	b.n	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80171d0:	fffff800 	.word	0xfffff800
 80171d4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80171d6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80171d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80171dc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80171de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80171e2:	1427      	asrs	r7, r4, #16
 80171e4:	142b      	asrs	r3, r5, #16
 80171e6:	fb01 7303 	mla	r3, r1, r3, r7
 80171ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80171ec:	18e7      	adds	r7, r4, r3
 80171ee:	5ce3      	ldrb	r3, [r4, r3]
 80171f0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80171f4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80171f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80171fc:	2a00      	cmp	r2, #0
 80171fe:	f000 8127 	beq.w	8017450 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017202:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017206:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801720a:	940d      	str	r4, [sp, #52]	; 0x34
 801720c:	0e24      	lsrs	r4, r4, #24
 801720e:	9414      	str	r4, [sp, #80]	; 0x50
 8017210:	b170      	cbz	r0, 8017230 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017212:	eb07 0e01 	add.w	lr, r7, r1
 8017216:	5c79      	ldrb	r1, [r7, r1]
 8017218:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801721c:	9109      	str	r1, [sp, #36]	; 0x24
 801721e:	0e09      	lsrs	r1, r1, #24
 8017220:	9111      	str	r1, [sp, #68]	; 0x44
 8017222:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017226:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801722a:	910e      	str	r1, [sp, #56]	; 0x38
 801722c:	0e09      	lsrs	r1, r1, #24
 801722e:	9115      	str	r1, [sp, #84]	; 0x54
 8017230:	b292      	uxth	r2, r2
 8017232:	b280      	uxth	r0, r0
 8017234:	fb02 f800 	mul.w	r8, r2, r0
 8017238:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801723c:	0112      	lsls	r2, r2, #4
 801723e:	eba2 0e08 	sub.w	lr, r2, r8
 8017242:	b280      	uxth	r0, r0
 8017244:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017248:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801724a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801724c:	fa1f fe8e 	uxth.w	lr, lr
 8017250:	1a09      	subs	r1, r1, r0
 8017252:	b289      	uxth	r1, r1
 8017254:	fb0e f202 	mul.w	r2, lr, r2
 8017258:	fb01 220c 	mla	r2, r1, ip, r2
 801725c:	fb00 2204 	mla	r2, r0, r4, r2
 8017260:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017262:	fb08 2204 	mla	r2, r8, r4, r2
 8017266:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801726a:	2a00      	cmp	r2, #0
 801726c:	f000 80e5 	beq.w	801743a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8017270:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017274:	d019      	beq.n	80172aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8017276:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801727a:	fb0c fa0a 	mul.w	sl, ip, sl
 801727e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017282:	fb0c fc03 	mul.w	ip, ip, r3
 8017286:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801728a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801728e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017292:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017296:	4453      	add	r3, sl
 8017298:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801729c:	0a1b      	lsrs	r3, r3, #8
 801729e:	0a3f      	lsrs	r7, r7, #8
 80172a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80172a4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80172a8:	433b      	orrs	r3, r7
 80172aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80172ac:	2cff      	cmp	r4, #255	; 0xff
 80172ae:	d020      	beq.n	80172f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 80172b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80172b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80172b8:	4367      	muls	r7, r4
 80172ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80172c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80172c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80172c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80172ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80172ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172d2:	44bc      	add	ip, r7
 80172d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80172d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80172dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80172e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80172ec:	ea4c 040a 	orr.w	r4, ip, sl
 80172f0:	940d      	str	r4, [sp, #52]	; 0x34
 80172f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80172f4:	2cff      	cmp	r4, #255	; 0xff
 80172f6:	d020      	beq.n	801733a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80172f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80172fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80172fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017300:	4367      	muls	r7, r4
 8017302:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017304:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017308:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801730a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801730e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017312:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017316:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801731a:	44bc      	add	ip, r7
 801731c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017320:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017324:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017328:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801732c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017330:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017334:	ea4c 040a 	orr.w	r4, ip, sl
 8017338:	9409      	str	r4, [sp, #36]	; 0x24
 801733a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801733c:	2cff      	cmp	r4, #255	; 0xff
 801733e:	d020      	beq.n	8017382 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8017340:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017342:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017346:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017348:	4367      	muls	r7, r4
 801734a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801734c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017350:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017352:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017356:	fb04 fa0a 	mul.w	sl, r4, sl
 801735a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801735e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017362:	44bc      	add	ip, r7
 8017364:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017368:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801736c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017370:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017374:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017378:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801737c:	ea4c 040a 	orr.w	r4, ip, sl
 8017380:	940e      	str	r4, [sp, #56]	; 0x38
 8017382:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017384:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017388:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801738a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801738e:	fb0e f707 	mul.w	r7, lr, r7
 8017392:	fb01 770c 	mla	r7, r1, ip, r7
 8017396:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801739a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801739c:	fb00 770c 	mla	r7, r0, ip, r7
 80173a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80173a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80173a6:	fb08 770c 	mla	r7, r8, ip, r7
 80173aa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80173ae:	fb0e fe0c 	mul.w	lr, lr, ip
 80173b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80173b6:	fb01 e303 	mla	r3, r1, r3, lr
 80173ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80173bc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80173c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80173c2:	fb00 330a 	mla	r3, r0, sl, r3
 80173c6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80173ca:	fb08 3c0c 	mla	ip, r8, ip, r3
 80173ce:	f8b9 3000 	ldrh.w	r3, [r9]
 80173d2:	43d2      	mvns	r2, r2
 80173d4:	1218      	asrs	r0, r3, #8
 80173d6:	b2d2      	uxtb	r2, r2
 80173d8:	10d9      	asrs	r1, r3, #3
 80173da:	0a3f      	lsrs	r7, r7, #8
 80173dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80173e4:	00db      	lsls	r3, r3, #3
 80173e6:	4350      	muls	r0, r2
 80173e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80173ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80173f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80173f4:	b2db      	uxtb	r3, r3
 80173f6:	ea47 070c 	orr.w	r7, r7, ip
 80173fa:	4351      	muls	r1, r2
 80173fc:	4353      	muls	r3, r2
 80173fe:	1c42      	adds	r2, r0, #1
 8017400:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017404:	0c3a      	lsrs	r2, r7, #16
 8017406:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801740a:	4a19      	ldr	r2, [pc, #100]	; (8017470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 801740c:	b2c0      	uxtb	r0, r0
 801740e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017412:	1c4a      	adds	r2, r1, #1
 8017414:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017418:	0a3a      	lsrs	r2, r7, #8
 801741a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801741e:	00c9      	lsls	r1, r1, #3
 8017420:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017424:	4301      	orrs	r1, r0
 8017426:	1c58      	adds	r0, r3, #1
 8017428:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801742c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017430:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8017434:	4308      	orrs	r0, r1
 8017436:	f8a9 0000 	strh.w	r0, [r9]
 801743a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801743c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801743e:	441a      	add	r2, r3
 8017440:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017442:	922d      	str	r2, [sp, #180]	; 0xb4
 8017444:	f109 0902 	add.w	r9, r9, #2
 8017448:	441d      	add	r5, r3
 801744a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801744e:	e64d      	b.n	80170ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8017450:	2800      	cmp	r0, #0
 8017452:	f43f aeed 	beq.w	8017230 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017456:	5c79      	ldrb	r1, [r7, r1]
 8017458:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801745c:	9109      	str	r1, [sp, #36]	; 0x24
 801745e:	0e09      	lsrs	r1, r1, #24
 8017460:	9111      	str	r1, [sp, #68]	; 0x44
 8017462:	e6e5      	b.n	8017230 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017464:	b01b      	add	sp, #108	; 0x6c
 8017466:	ecbd 8b08 	vpop	{d8-d11}
 801746a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801746e:	bf00      	nop
 8017470:	fffff800 	.word	0xfffff800

08017474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017478:	b085      	sub	sp, #20
 801747a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801747e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017482:	9103      	str	r1, [sp, #12]
 8017484:	fb05 7106 	mla	r1, r5, r6, r7
 8017488:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801748c:	2d00      	cmp	r5, #0
 801748e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017492:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017496:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801749a:	9401      	str	r4, [sp, #4]
 801749c:	eb03 0901 	add.w	r9, r3, r1
 80174a0:	f2c0 80c0 	blt.w	8017624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80174a4:	45a8      	cmp	r8, r5
 80174a6:	f340 80bd 	ble.w	8017624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80174aa:	2f00      	cmp	r7, #0
 80174ac:	f2c0 80b6 	blt.w	801761c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80174b0:	42be      	cmp	r6, r7
 80174b2:	f340 80b3 	ble.w	801761c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80174b6:	f813 c001 	ldrb.w	ip, [r3, r1]
 80174ba:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80174be:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80174c2:	d019      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80174c4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80174c8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80174cc:	435a      	muls	r2, r3
 80174ce:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80174d2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80174d6:	fb0c f403 	mul.w	r4, ip, r3
 80174da:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80174de:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80174e2:	441a      	add	r2, r3
 80174e4:	f104 0320 	add.w	r3, r4, #32
 80174e8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80174ec:	0a1b      	lsrs	r3, r3, #8
 80174ee:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80174f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174f6:	4319      	orrs	r1, r3
 80174f8:	b289      	uxth	r1, r1
 80174fa:	1c7b      	adds	r3, r7, #1
 80174fc:	f100 8097 	bmi.w	801762e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017500:	429e      	cmp	r6, r3
 8017502:	f340 8094 	ble.w	801762e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017506:	2800      	cmp	r0, #0
 8017508:	f000 8094 	beq.w	8017634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801750c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017510:	9b01      	ldr	r3, [sp, #4]
 8017512:	2cff      	cmp	r4, #255	; 0xff
 8017514:	885b      	ldrh	r3, [r3, #2]
 8017516:	d01b      	beq.n	8017550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017518:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801751c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017520:	fb0a f202 	mul.w	r2, sl, r2
 8017524:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017528:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801752c:	fb04 fa03 	mul.w	sl, r4, r3
 8017530:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017534:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017538:	441a      	add	r2, r3
 801753a:	f10a 0320 	add.w	r3, sl, #32
 801753e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017542:	0a1b      	lsrs	r3, r3, #8
 8017544:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017548:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801754c:	ea4b 0303 	orr.w	r3, fp, r3
 8017550:	b29b      	uxth	r3, r3
 8017552:	3501      	adds	r5, #1
 8017554:	d474      	bmi.n	8017640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8017556:	45a8      	cmp	r8, r5
 8017558:	dd72      	ble.n	8017640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801755a:	f1be 0f00 	cmp.w	lr, #0
 801755e:	f000 8120 	beq.w	80177a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8017562:	2f00      	cmp	r7, #0
 8017564:	db69      	blt.n	801763a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8017566:	42be      	cmp	r6, r7
 8017568:	dd67      	ble.n	801763a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801756a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801756e:	9a01      	ldr	r2, [sp, #4]
 8017570:	2dff      	cmp	r5, #255	; 0xff
 8017572:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017576:	d01c      	beq.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8017578:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801757c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017580:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017584:	fb05 fa0b 	mul.w	sl, r5, fp
 8017588:	fb08 f802 	mul.w	r8, r8, r2
 801758c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017590:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017594:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017598:	4490      	add	r8, r2
 801759a:	f10a 0220 	add.w	r2, sl, #32
 801759e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80175a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80175a6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80175aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80175ae:	ea4b 0b0a 	orr.w	fp, fp, sl
 80175b2:	fa1f fb8b 	uxth.w	fp, fp
 80175b6:	3701      	adds	r7, #1
 80175b8:	d447      	bmi.n	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80175ba:	42be      	cmp	r6, r7
 80175bc:	dd45      	ble.n	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80175be:	2800      	cmp	r0, #0
 80175c0:	d046      	beq.n	8017650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80175c2:	3601      	adds	r6, #1
 80175c4:	9a01      	ldr	r2, [sp, #4]
 80175c6:	f819 7006 	ldrb.w	r7, [r9, r6]
 80175ca:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80175ce:	2fff      	cmp	r7, #255	; 0xff
 80175d0:	d01a      	beq.n	8017608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80175d2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80175d6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80175da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175de:	fb07 f902 	mul.w	r9, r7, r2
 80175e2:	fb08 f806 	mul.w	r8, r8, r6
 80175e6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80175ea:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80175ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80175f2:	44b0      	add	r8, r6
 80175f4:	f109 0620 	add.w	r6, r9, #32
 80175f8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80175fc:	0a36      	lsrs	r6, r6, #8
 80175fe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017602:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017606:	4332      	orrs	r2, r6
 8017608:	b292      	uxth	r2, r2
 801760a:	280f      	cmp	r0, #15
 801760c:	d922      	bls.n	8017654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801760e:	4b69      	ldr	r3, [pc, #420]	; (80177b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017610:	4a69      	ldr	r2, [pc, #420]	; (80177b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8017612:	486a      	ldr	r0, [pc, #424]	; (80177bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8017614:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8017618:	f004 fa62 	bl	801bae0 <__assert_func>
 801761c:	f04f 0c00 	mov.w	ip, #0
 8017620:	4661      	mov	r1, ip
 8017622:	e76a      	b.n	80174fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8017624:	2400      	movs	r4, #0
 8017626:	46a4      	mov	ip, r4
 8017628:	4623      	mov	r3, r4
 801762a:	4621      	mov	r1, r4
 801762c:	e791      	b.n	8017552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801762e:	2400      	movs	r4, #0
 8017630:	4623      	mov	r3, r4
 8017632:	e78e      	b.n	8017552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017634:	4604      	mov	r4, r0
 8017636:	4603      	mov	r3, r0
 8017638:	e78b      	b.n	8017552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801763a:	2500      	movs	r5, #0
 801763c:	46ab      	mov	fp, r5
 801763e:	e7ba      	b.n	80175b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8017640:	2700      	movs	r7, #0
 8017642:	463d      	mov	r5, r7
 8017644:	463a      	mov	r2, r7
 8017646:	46bb      	mov	fp, r7
 8017648:	e7df      	b.n	801760a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801764a:	2700      	movs	r7, #0
 801764c:	463a      	mov	r2, r7
 801764e:	e7dc      	b.n	801760a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8017650:	4607      	mov	r7, r0
 8017652:	4602      	mov	r2, r0
 8017654:	f1be 0f0f 	cmp.w	lr, #15
 8017658:	d8d9      	bhi.n	801760e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801765a:	b286      	uxth	r6, r0
 801765c:	fa1f f98e 	uxth.w	r9, lr
 8017660:	fb06 f809 	mul.w	r8, r6, r9
 8017664:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017668:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801766c:	0136      	lsls	r6, r6, #4
 801766e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017672:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017676:	9601      	str	r6, [sp, #4]
 8017678:	ea4a 0101 	orr.w	r1, sl, r1
 801767c:	fa1f f689 	uxth.w	r6, r9
 8017680:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017684:	fb10 f90e 	smulbb	r9, r0, lr
 8017688:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801768c:	9602      	str	r6, [sp, #8]
 801768e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017692:	460e      	mov	r6, r1
 8017694:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017698:	f1ce 0110 	rsb	r1, lr, #16
 801769c:	1a09      	subs	r1, r1, r0
 801769e:	ea4a 0303 	orr.w	r3, sl, r3
 80176a2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80176a6:	4343      	muls	r3, r0
 80176a8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80176ac:	9801      	ldr	r0, [sp, #4]
 80176ae:	fb01 3106 	mla	r1, r1, r6, r3
 80176b2:	9e02      	ldr	r6, [sp, #8]
 80176b4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80176b8:	1b80      	subs	r0, r0, r6
 80176ba:	9e01      	ldr	r6, [sp, #4]
 80176bc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80176c0:	eba6 0608 	sub.w	r6, r6, r8
 80176c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176c8:	b2b6      	uxth	r6, r6
 80176ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80176ce:	ea4a 0202 	orr.w	r2, sl, r2
 80176d2:	b280      	uxth	r0, r0
 80176d4:	4374      	muls	r4, r6
 80176d6:	fb09 1302 	mla	r3, r9, r2, r1
 80176da:	fb0c 4400 	mla	r4, ip, r0, r4
 80176de:	9a03      	ldr	r2, [sp, #12]
 80176e0:	9802      	ldr	r0, [sp, #8]
 80176e2:	8811      	ldrh	r1, [r2, #0]
 80176e4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80176e8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80176ec:	fb00 4505 	mla	r5, r0, r5, r4
 80176f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176f4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80176f8:	fb08 5707 	mla	r7, r8, r7, r5
 80176fc:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017700:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017704:	b292      	uxth	r2, r2
 8017706:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801770a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801770e:	4357      	muls	r7, r2
 8017710:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017714:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017718:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801771c:	f107 0801 	add.w	r8, r7, #1
 8017720:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017724:	ea43 0e0e 	orr.w	lr, r3, lr
 8017728:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801772c:	fa1f f38e 	uxth.w	r3, lr
 8017730:	1208      	asrs	r0, r1, #8
 8017732:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8017736:	b2ff      	uxtb	r7, r7
 8017738:	121c      	asrs	r4, r3, #8
 801773a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801773e:	fb10 f007 	smulbb	r0, r0, r7
 8017742:	10cd      	asrs	r5, r1, #3
 8017744:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017748:	fb04 0402 	mla	r4, r4, r2, r0
 801774c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017750:	10d8      	asrs	r0, r3, #3
 8017752:	fb15 f507 	smulbb	r5, r5, r7
 8017756:	00db      	lsls	r3, r3, #3
 8017758:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801775c:	fb00 5002 	mla	r0, r0, r2, r5
 8017760:	b2dd      	uxtb	r5, r3
 8017762:	00cb      	lsls	r3, r1, #3
 8017764:	b2db      	uxtb	r3, r3
 8017766:	fb13 f307 	smulbb	r3, r3, r7
 801776a:	fb05 3202 	mla	r2, r5, r2, r3
 801776e:	b2a4      	uxth	r4, r4
 8017770:	b292      	uxth	r2, r2
 8017772:	1c63      	adds	r3, r4, #1
 8017774:	b280      	uxth	r0, r0
 8017776:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801777a:	1c53      	adds	r3, r2, #1
 801777c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017780:	1c42      	adds	r2, r0, #1
 8017782:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017786:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801778a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801778e:	0940      	lsrs	r0, r0, #5
 8017790:	4323      	orrs	r3, r4
 8017792:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017796:	9a03      	ldr	r2, [sp, #12]
 8017798:	4303      	orrs	r3, r0
 801779a:	8013      	strh	r3, [r2, #0]
 801779c:	b005      	add	sp, #20
 801779e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177a2:	280f      	cmp	r0, #15
 80177a4:	f63f af33 	bhi.w	801760e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80177a8:	4677      	mov	r7, lr
 80177aa:	4675      	mov	r5, lr
 80177ac:	4672      	mov	r2, lr
 80177ae:	46f3      	mov	fp, lr
 80177b0:	e753      	b.n	801765a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 80177b2:	bf00      	nop
 80177b4:	0801f996 	.word	0x0801f996
 80177b8:	0801ff66 	.word	0x0801ff66
 80177bc:	0801fa1a 	.word	0x0801fa1a

080177c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80177c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177c4:	ed2d 8b08 	vpush	{d8-d11}
 80177c8:	b097      	sub	sp, #92	; 0x5c
 80177ca:	eeb0 aa40 	vmov.f32	s20, s0
 80177ce:	9214      	str	r2, [sp, #80]	; 0x50
 80177d0:	9308      	str	r3, [sp, #32]
 80177d2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80177d4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80177d8:	9312      	str	r3, [sp, #72]	; 0x48
 80177da:	9111      	str	r1, [sp, #68]	; 0x44
 80177dc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80177e0:	9015      	str	r0, [sp, #84]	; 0x54
 80177e2:	6850      	ldr	r0, [r2, #4]
 80177e4:	6812      	ldr	r2, [r2, #0]
 80177e6:	fb00 1303 	mla	r3, r0, r3, r1
 80177ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80177ee:	9309      	str	r3, [sp, #36]	; 0x24
 80177f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80177f2:	681b      	ldr	r3, [r3, #0]
 80177f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80177f6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80177f8:	685b      	ldr	r3, [r3, #4]
 80177fa:	930c      	str	r3, [sp, #48]	; 0x30
 80177fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017800:	930a      	str	r3, [sp, #40]	; 0x28
 8017802:	eef0 9a60 	vmov.f32	s19, s1
 8017806:	eeb0 9a41 	vmov.f32	s18, s2
 801780a:	eeb0 8a62 	vmov.f32	s16, s5
 801780e:	eef0 8a43 	vmov.f32	s17, s6
 8017812:	eef0 ba44 	vmov.f32	s23, s8
 8017816:	eeb0 ba64 	vmov.f32	s22, s9
 801781a:	eef0 aa45 	vmov.f32	s21, s10
 801781e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017820:	2b00      	cmp	r3, #0
 8017822:	dc03      	bgt.n	801782c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017824:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017826:	2b00      	cmp	r3, #0
 8017828:	f340 83cb 	ble.w	8017fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801782c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801782e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017832:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017836:	1e48      	subs	r0, r1, #1
 8017838:	1e55      	subs	r5, r2, #1
 801783a:	9b08      	ldr	r3, [sp, #32]
 801783c:	2b00      	cmp	r3, #0
 801783e:	f340 81a3 	ble.w	8017b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017842:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8017844:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017846:	1436      	asrs	r6, r6, #16
 8017848:	ea4f 4323 	mov.w	r3, r3, asr #16
 801784c:	d406      	bmi.n	801785c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801784e:	4286      	cmp	r6, r0
 8017850:	da04      	bge.n	801785c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017852:	2b00      	cmp	r3, #0
 8017854:	db02      	blt.n	801785c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017856:	42ab      	cmp	r3, r5
 8017858:	f2c0 8197 	blt.w	8017b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801785c:	3601      	adds	r6, #1
 801785e:	f100 8184 	bmi.w	8017b6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017862:	42b1      	cmp	r1, r6
 8017864:	f2c0 8181 	blt.w	8017b6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017868:	3301      	adds	r3, #1
 801786a:	f100 817e 	bmi.w	8017b6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801786e:	429a      	cmp	r2, r3
 8017870:	f2c0 817b 	blt.w	8017b6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017874:	9b08      	ldr	r3, [sp, #32]
 8017876:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017878:	9313      	str	r3, [sp, #76]	; 0x4c
 801787a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801787e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017880:	2b00      	cmp	r3, #0
 8017882:	f340 81a4 	ble.w	8017bce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8017886:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017888:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801788a:	1418      	asrs	r0, r3, #16
 801788c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801788e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017892:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017894:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017898:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801789a:	142d      	asrs	r5, r5, #16
 801789c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80178a0:	f100 81f8 	bmi.w	8017c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80178a4:	f102 3eff 	add.w	lr, r2, #4294967295
 80178a8:	4575      	cmp	r5, lr
 80178aa:	f280 81f3 	bge.w	8017c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80178ae:	2800      	cmp	r0, #0
 80178b0:	f2c0 81f0 	blt.w	8017c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80178b4:	f103 3eff 	add.w	lr, r3, #4294967295
 80178b8:	4570      	cmp	r0, lr
 80178ba:	f280 81eb 	bge.w	8017c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80178be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178c0:	b212      	sxth	r2, r2
 80178c2:	fb00 5002 	mla	r0, r0, r2, r5
 80178c6:	fa1f fe81 	uxth.w	lr, r1
 80178ca:	eb03 0a00 	add.w	sl, r3, r0
 80178ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80178d2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80178d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80178da:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80178de:	b29b      	uxth	r3, r3
 80178e0:	f1bc 0f00 	cmp.w	ip, #0
 80178e4:	f000 81b9 	beq.w	8017c5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80178e8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80178ec:	940d      	str	r4, [sp, #52]	; 0x34
 80178ee:	eb0a 0b02 	add.w	fp, sl, r2
 80178f2:	fa1f fa8c 	uxth.w	sl, ip
 80178f6:	fb0a fe0e 	mul.w	lr, sl, lr
 80178fa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80178fe:	fa1f fa8a 	uxth.w	sl, sl
 8017902:	eba5 050e 	sub.w	r5, r5, lr
 8017906:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801790a:	940e      	str	r4, [sp, #56]	; 0x38
 801790c:	eba3 030a 	sub.w	r3, r3, sl
 8017910:	b2ad      	uxth	r5, r5
 8017912:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017914:	b29b      	uxth	r3, r3
 8017916:	fb08 f505 	mul.w	r5, r8, r5
 801791a:	fb09 5303 	mla	r3, r9, r3, r5
 801791e:	fb0a 3304 	mla	r3, sl, r4, r3
 8017922:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017924:	fb0e 3304 	mla	r3, lr, r4, r3
 8017928:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801792c:	2b00      	cmp	r3, #0
 801792e:	f000 810f 	beq.w	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017932:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017934:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017938:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801793c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017940:	f000 8190 	beq.w	8017c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8017944:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017948:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801794c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017950:	fb09 f000 	mul.w	r0, r9, r0
 8017954:	fb0a fe0e 	mul.w	lr, sl, lr
 8017958:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801795c:	f100 0b20 	add.w	fp, r0, #32
 8017960:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017964:	44ce      	add	lr, r9
 8017966:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801796a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801796e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017972:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017976:	ea4e 0909 	orr.w	r9, lr, r9
 801797a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801797e:	8868      	ldrh	r0, [r5, #2]
 8017980:	d019      	beq.n	80179b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017982:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017986:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801798a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801798e:	fb08 f800 	mul.w	r8, r8, r0
 8017992:	fb0a fe0e 	mul.w	lr, sl, lr
 8017996:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801799a:	f108 0b20 	add.w	fp, r8, #32
 801799e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80179a2:	4486      	add	lr, r0
 80179a4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80179a8:	0a00      	lsrs	r0, r0, #8
 80179aa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80179ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179b2:	ea4e 0000 	orr.w	r0, lr, r0
 80179b6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80179ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80179be:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80179c2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80179c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80179ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80179ce:	ea4e 0909 	orr.w	r9, lr, r9
 80179d2:	ea4a 0000 	orr.w	r0, sl, r0
 80179d6:	f1bc 0f00 	cmp.w	ip, #0
 80179da:	f000 8145 	beq.w	8017c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80179de:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80179e2:	3a01      	subs	r2, #1
 80179e4:	0052      	lsls	r2, r2, #1
 80179e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80179e8:	3202      	adds	r2, #2
 80179ea:	2cff      	cmp	r4, #255	; 0xff
 80179ec:	eb05 0e02 	add.w	lr, r5, r2
 80179f0:	5aaa      	ldrh	r2, [r5, r2]
 80179f2:	d018      	beq.n	8017a26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80179f4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80179f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80179fc:	fb04 fa02 	mul.w	sl, r4, r2
 8017a00:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017a04:	fb08 f805 	mul.w	r8, r8, r5
 8017a08:	f10a 0520 	add.w	r5, sl, #32
 8017a0c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017a10:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017a14:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017a18:	4442      	add	r2, r8
 8017a1a:	0a2d      	lsrs	r5, r5, #8
 8017a1c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017a20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a24:	432a      	orrs	r2, r5
 8017a26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017a28:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017a2c:	2cff      	cmp	r4, #255	; 0xff
 8017a2e:	d01a      	beq.n	8017a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017a30:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017a34:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a38:	fb04 fa05 	mul.w	sl, r4, r5
 8017a3c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017a40:	fb08 f80e 	mul.w	r8, r8, lr
 8017a44:	f10a 0e20 	add.w	lr, sl, #32
 8017a48:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017a4c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017a50:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017a54:	4445      	add	r5, r8
 8017a56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017a5a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017a5e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017a62:	ea45 050e 	orr.w	r5, r5, lr
 8017a66:	fb1c fe01 	smulbb	lr, ip, r1
 8017a6a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017a6e:	f1cc 0810 	rsb	r8, ip, #16
 8017a72:	eba8 0801 	sub.w	r8, r8, r1
 8017a76:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017a7a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017a7e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017a82:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017a86:	4341      	muls	r1, r0
 8017a88:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a90:	ea4a 0202 	orr.w	r2, sl, r2
 8017a94:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017a98:	fb09 1108 	mla	r1, r9, r8, r1
 8017a9c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017aa0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017aa4:	fb0c 1102 	mla	r1, ip, r2, r1
 8017aa8:	ea4b 0505 	orr.w	r5, fp, r5
 8017aac:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017ab0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017ab4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017ab8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017abc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017ac0:	ea42 0e0e 	orr.w	lr, r2, lr
 8017ac4:	fa1f f28e 	uxth.w	r2, lr
 8017ac8:	2bff      	cmp	r3, #255	; 0xff
 8017aca:	d103      	bne.n	8017ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017acc:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017ace:	29ff      	cmp	r1, #255	; 0xff
 8017ad0:	f000 80de 	beq.w	8017c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017ad4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017ad6:	8838      	ldrh	r0, [r7, #0]
 8017ad8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017ada:	434b      	muls	r3, r1
 8017adc:	f103 0c01 	add.w	ip, r3, #1
 8017ae0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017ae4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017ae8:	fa5f fc83 	uxtb.w	ip, r3
 8017aec:	1203      	asrs	r3, r0, #8
 8017aee:	1215      	asrs	r5, r2, #8
 8017af0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017af4:	fb13 f30c 	smulbb	r3, r3, ip
 8017af8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017afc:	fb05 3501 	mla	r5, r5, r1, r3
 8017b00:	10c3      	asrs	r3, r0, #3
 8017b02:	10d1      	asrs	r1, r2, #3
 8017b04:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017b08:	fb13 f30c 	smulbb	r3, r3, ip
 8017b0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017b10:	fb01 3104 	mla	r1, r1, r4, r3
 8017b14:	00c3      	lsls	r3, r0, #3
 8017b16:	00d2      	lsls	r2, r2, #3
 8017b18:	b2db      	uxtb	r3, r3
 8017b1a:	b2d2      	uxtb	r2, r2
 8017b1c:	fb13 f30c 	smulbb	r3, r3, ip
 8017b20:	b2ad      	uxth	r5, r5
 8017b22:	fb02 3304 	mla	r3, r2, r4, r3
 8017b26:	b29a      	uxth	r2, r3
 8017b28:	1c6b      	adds	r3, r5, #1
 8017b2a:	b289      	uxth	r1, r1
 8017b2c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017b30:	1c53      	adds	r3, r2, #1
 8017b32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017b36:	1c4a      	adds	r2, r1, #1
 8017b38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017b3c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017b44:	0949      	lsrs	r1, r1, #5
 8017b46:	432b      	orrs	r3, r5
 8017b48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017b4c:	430b      	orrs	r3, r1
 8017b4e:	803b      	strh	r3, [r7, #0]
 8017b50:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b52:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017b54:	4413      	add	r3, r2
 8017b56:	9329      	str	r3, [sp, #164]	; 0xa4
 8017b58:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017b5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017b5c:	441a      	add	r2, r3
 8017b5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017b60:	922a      	str	r2, [sp, #168]	; 0xa8
 8017b62:	3b01      	subs	r3, #1
 8017b64:	3702      	adds	r7, #2
 8017b66:	9313      	str	r3, [sp, #76]	; 0x4c
 8017b68:	e689      	b.n	801787e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017b6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b6c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017b6e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8017b70:	4433      	add	r3, r6
 8017b72:	9329      	str	r3, [sp, #164]	; 0xa4
 8017b74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017b76:	441c      	add	r4, r3
 8017b78:	9b08      	ldr	r3, [sp, #32]
 8017b7a:	942a      	str	r4, [sp, #168]	; 0xa8
 8017b7c:	3b01      	subs	r3, #1
 8017b7e:	9308      	str	r3, [sp, #32]
 8017b80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b82:	3302      	adds	r3, #2
 8017b84:	9309      	str	r3, [sp, #36]	; 0x24
 8017b86:	e658      	b.n	801783a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017b88:	d028      	beq.n	8017bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017b8a:	9b08      	ldr	r3, [sp, #32]
 8017b8c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017b8e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017b90:	3b01      	subs	r3, #1
 8017b92:	fb00 5003 	mla	r0, r0, r3, r5
 8017b96:	1400      	asrs	r0, r0, #16
 8017b98:	f53f ae6c 	bmi.w	8017874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017b9c:	3901      	subs	r1, #1
 8017b9e:	4288      	cmp	r0, r1
 8017ba0:	f6bf ae68 	bge.w	8017874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017ba4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017ba6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017ba8:	fb01 0303 	mla	r3, r1, r3, r0
 8017bac:	141b      	asrs	r3, r3, #16
 8017bae:	f53f ae61 	bmi.w	8017874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017bb2:	3a01      	subs	r2, #1
 8017bb4:	4293      	cmp	r3, r2
 8017bb6:	f6bf ae5d 	bge.w	8017874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017bba:	9b08      	ldr	r3, [sp, #32]
 8017bbc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017bc0:	9313      	str	r3, [sp, #76]	; 0x4c
 8017bc2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017bc6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017bc8:	2b00      	cmp	r3, #0
 8017bca:	f300 8082 	bgt.w	8017cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017bce:	9b08      	ldr	r3, [sp, #32]
 8017bd0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017bd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017bd6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017bda:	9309      	str	r3, [sp, #36]	; 0x24
 8017bdc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017bde:	2b00      	cmp	r3, #0
 8017be0:	f340 81ef 	ble.w	8017fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017be4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017be8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017bec:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017bf0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bf2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017bf6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017bfa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017bfe:	eef0 6a48 	vmov.f32	s13, s16
 8017c02:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017c06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c0a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017c0e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017c12:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017c16:	eef0 6a68 	vmov.f32	s13, s17
 8017c1a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017c1e:	ee18 2a10 	vmov	r2, s16
 8017c22:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017c26:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c2a:	ee18 2a90 	vmov	r2, s17
 8017c2e:	932b      	str	r3, [sp, #172]	; 0xac
 8017c30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c32:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c36:	932c      	str	r3, [sp, #176]	; 0xb0
 8017c38:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c3c:	3b01      	subs	r3, #1
 8017c3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c42:	9311      	str	r3, [sp, #68]	; 0x44
 8017c44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c46:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017c4a:	bf08      	it	eq
 8017c4c:	4613      	moveq	r3, r2
 8017c4e:	9308      	str	r3, [sp, #32]
 8017c50:	eef0 8a67 	vmov.f32	s17, s15
 8017c54:	eeb0 8a47 	vmov.f32	s16, s14
 8017c58:	e5e1      	b.n	801781e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017c5a:	fb08 f505 	mul.w	r5, r8, r5
 8017c5e:	fb09 5303 	mla	r3, r9, r3, r5
 8017c62:	e661      	b.n	8017928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8017c64:	4681      	mov	r9, r0
 8017c66:	e688      	b.n	801797a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8017c68:	f1c1 0210 	rsb	r2, r1, #16
 8017c6c:	4341      	muls	r1, r0
 8017c6e:	fb09 1902 	mla	r9, r9, r2, r1
 8017c72:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c76:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017c7a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c82:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017c86:	ea42 0909 	orr.w	r9, r2, r9
 8017c8a:	fa1f f289 	uxth.w	r2, r9
 8017c8e:	e71b      	b.n	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017c90:	803a      	strh	r2, [r7, #0]
 8017c92:	e75d      	b.n	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c94:	f115 0e01 	adds.w	lr, r5, #1
 8017c98:	f53f af5a 	bmi.w	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c9c:	4572      	cmp	r2, lr
 8017c9e:	f6ff af57 	blt.w	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017ca2:	f110 0e01 	adds.w	lr, r0, #1
 8017ca6:	f53f af53 	bmi.w	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017caa:	4573      	cmp	r3, lr
 8017cac:	f6ff af50 	blt.w	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017cb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017cb2:	9502      	str	r5, [sp, #8]
 8017cb4:	b21b      	sxth	r3, r3
 8017cb6:	b212      	sxth	r2, r2
 8017cb8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017cbc:	9301      	str	r3, [sp, #4]
 8017cbe:	9200      	str	r2, [sp, #0]
 8017cc0:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017cc4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017cc8:	4639      	mov	r1, r7
 8017cca:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017ccc:	f7ff fbd2 	bl	8017474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017cd0:	e73e      	b.n	8017b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017cd2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017cd8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017cda:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017cde:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017ce0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ce4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017ce6:	141f      	asrs	r7, r3, #16
 8017ce8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cea:	141b      	asrs	r3, r3, #16
 8017cec:	fb01 3707 	mla	r7, r1, r7, r3
 8017cf0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cf2:	fa1f fc82 	uxth.w	ip, r2
 8017cf6:	eb03 0a07 	add.w	sl, r3, r7
 8017cfa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017cfe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017d02:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d06:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d0a:	b29b      	uxth	r3, r3
 8017d0c:	2d00      	cmp	r5, #0
 8017d0e:	f000 813d 	beq.w	8017f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017d12:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017d16:	940f      	str	r4, [sp, #60]	; 0x3c
 8017d18:	eb0a 0b01 	add.w	fp, sl, r1
 8017d1c:	fa1f fa85 	uxth.w	sl, r5
 8017d20:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d24:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017d28:	fa1f fa8a 	uxth.w	sl, sl
 8017d2c:	eba0 000c 	sub.w	r0, r0, ip
 8017d30:	eba3 030a 	sub.w	r3, r3, sl
 8017d34:	b280      	uxth	r0, r0
 8017d36:	fb08 f000 	mul.w	r0, r8, r0
 8017d3a:	b29b      	uxth	r3, r3
 8017d3c:	fb09 0303 	mla	r3, r9, r3, r0
 8017d40:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017d42:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017d46:	9410      	str	r4, [sp, #64]	; 0x40
 8017d48:	fb0a 3300 	mla	r3, sl, r0, r3
 8017d4c:	fb0c 3304 	mla	r3, ip, r4, r3
 8017d50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017d54:	2b00      	cmp	r3, #0
 8017d56:	f000 810b 	beq.w	8017f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017d5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017d5c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d5e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017d62:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017d66:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017d6a:	f000 8114 	beq.w	8017f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8017d6e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017d72:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017d76:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d7a:	fb09 f707 	mul.w	r7, r9, r7
 8017d7e:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d82:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017d86:	f107 0b20 	add.w	fp, r7, #32
 8017d8a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d8e:	44cc      	add	ip, r9
 8017d90:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017d94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d98:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017da0:	ea4c 0909 	orr.w	r9, ip, r9
 8017da4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017da8:	8847      	ldrh	r7, [r0, #2]
 8017daa:	d019      	beq.n	8017de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017dac:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017db0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017db4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017db8:	fb08 f807 	mul.w	r8, r8, r7
 8017dbc:	fb0a fc0c 	mul.w	ip, sl, ip
 8017dc0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017dc4:	f108 0b20 	add.w	fp, r8, #32
 8017dc8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017dcc:	44bc      	add	ip, r7
 8017dce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017dd2:	0a3f      	lsrs	r7, r7, #8
 8017dd4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017dd8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ddc:	ea4c 0707 	orr.w	r7, ip, r7
 8017de0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017de4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017de8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017dec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017df0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017df4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017df8:	ea4c 0909 	orr.w	r9, ip, r9
 8017dfc:	ea4a 0707 	orr.w	r7, sl, r7
 8017e00:	2d00      	cmp	r5, #0
 8017e02:	f000 80ca 	beq.w	8017f9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8017e06:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017e0a:	3901      	subs	r1, #1
 8017e0c:	0049      	lsls	r1, r1, #1
 8017e0e:	3102      	adds	r1, #2
 8017e10:	eb00 0c01 	add.w	ip, r0, r1
 8017e14:	5a41      	ldrh	r1, [r0, r1]
 8017e16:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017e18:	28ff      	cmp	r0, #255	; 0xff
 8017e1a:	d019      	beq.n	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017e1c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017e1e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017e22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e26:	fb04 fa01 	mul.w	sl, r4, r1
 8017e2a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017e2e:	fb08 f800 	mul.w	r8, r8, r0
 8017e32:	f10a 0020 	add.w	r0, sl, #32
 8017e36:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017e3a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017e3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017e42:	4441      	add	r1, r8
 8017e44:	0a00      	lsrs	r0, r0, #8
 8017e46:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017e4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e4e:	4301      	orrs	r1, r0
 8017e50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017e52:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017e56:	2cff      	cmp	r4, #255	; 0xff
 8017e58:	d01a      	beq.n	8017e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8017e5a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017e5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e62:	fb04 fa00 	mul.w	sl, r4, r0
 8017e66:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017e6a:	fb08 f80c 	mul.w	r8, r8, ip
 8017e6e:	f10a 0c20 	add.w	ip, sl, #32
 8017e72:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017e76:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8017e7a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017e7e:	4440      	add	r0, r8
 8017e80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e84:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017e88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017e8c:	ea40 000c 	orr.w	r0, r0, ip
 8017e90:	fb15 fc02 	smulbb	ip, r5, r2
 8017e94:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017e98:	f1c5 0810 	rsb	r8, r5, #16
 8017e9c:	eba8 0802 	sub.w	r8, r8, r2
 8017ea0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017ea4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017ea8:	437a      	muls	r2, r7
 8017eaa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017eae:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017eb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017eb6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017eba:	fb09 2208 	mla	r2, r9, r8, r2
 8017ebe:	ea4a 0101 	orr.w	r1, sl, r1
 8017ec2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017ec6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017eca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017ece:	fb05 2201 	mla	r2, r5, r1, r2
 8017ed2:	ea4b 0000 	orr.w	r0, fp, r0
 8017ed6:	fb0c 2200 	mla	r2, ip, r0, r2
 8017eda:	0d57      	lsrs	r7, r2, #21
 8017edc:	0952      	lsrs	r2, r2, #5
 8017ede:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ee2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017ee6:	433a      	orrs	r2, r7
 8017ee8:	2bff      	cmp	r3, #255	; 0xff
 8017eea:	b292      	uxth	r2, r2
 8017eec:	d102      	bne.n	8017ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017eee:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017ef0:	29ff      	cmp	r1, #255	; 0xff
 8017ef2:	d063      	beq.n	8017fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8017ef4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017ef6:	f8be 1000 	ldrh.w	r1, [lr]
 8017efa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017efc:	4343      	muls	r3, r0
 8017efe:	1c58      	adds	r0, r3, #1
 8017f00:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017f04:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017f08:	1208      	asrs	r0, r1, #8
 8017f0a:	b2db      	uxtb	r3, r3
 8017f0c:	1215      	asrs	r5, r2, #8
 8017f0e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f12:	fb10 f003 	smulbb	r0, r0, r3
 8017f16:	10cf      	asrs	r7, r1, #3
 8017f18:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017f1c:	00c9      	lsls	r1, r1, #3
 8017f1e:	fb05 0504 	mla	r5, r5, r4, r0
 8017f22:	b2c9      	uxtb	r1, r1
 8017f24:	10d0      	asrs	r0, r2, #3
 8017f26:	00d2      	lsls	r2, r2, #3
 8017f28:	fb11 f103 	smulbb	r1, r1, r3
 8017f2c:	b2d2      	uxtb	r2, r2
 8017f2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017f32:	fb02 1204 	mla	r2, r2, r4, r1
 8017f36:	fb17 f703 	smulbb	r7, r7, r3
 8017f3a:	b2ad      	uxth	r5, r5
 8017f3c:	b292      	uxth	r2, r2
 8017f3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017f42:	fb00 7004 	mla	r0, r0, r4, r7
 8017f46:	1c6b      	adds	r3, r5, #1
 8017f48:	1c57      	adds	r7, r2, #1
 8017f4a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017f4e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017f52:	b280      	uxth	r0, r0
 8017f54:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017f58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017f5c:	433d      	orrs	r5, r7
 8017f5e:	1c47      	adds	r7, r0, #1
 8017f60:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017f64:	097f      	lsrs	r7, r7, #5
 8017f66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f6a:	433d      	orrs	r5, r7
 8017f6c:	f8ae 5000 	strh.w	r5, [lr]
 8017f70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017f72:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017f74:	4413      	add	r3, r2
 8017f76:	9329      	str	r3, [sp, #164]	; 0xa4
 8017f78:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017f7a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017f7c:	441a      	add	r2, r3
 8017f7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017f80:	922a      	str	r2, [sp, #168]	; 0xa8
 8017f82:	3b01      	subs	r3, #1
 8017f84:	f10e 0e02 	add.w	lr, lr, #2
 8017f88:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f8a:	e61c      	b.n	8017bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017f8c:	fb08 f000 	mul.w	r0, r8, r0
 8017f90:	fb09 0303 	mla	r3, r9, r3, r0
 8017f94:	e6dc      	b.n	8017d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017f96:	46b9      	mov	r9, r7
 8017f98:	e704      	b.n	8017da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017f9a:	f1c2 0110 	rsb	r1, r2, #16
 8017f9e:	437a      	muls	r2, r7
 8017fa0:	fb09 2901 	mla	r9, r9, r1, r2
 8017fa4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017fa8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017fac:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017fb0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017fb4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017fb8:	4302      	orrs	r2, r0
 8017fba:	e795      	b.n	8017ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017fbc:	f8ae 2000 	strh.w	r2, [lr]
 8017fc0:	e7d6      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017fc2:	b017      	add	sp, #92	; 0x5c
 8017fc4:	ecbd 8b08 	vpop	{d8-d11}
 8017fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fd0:	b085      	sub	sp, #20
 8017fd2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017fd6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017fda:	9103      	str	r1, [sp, #12]
 8017fdc:	fb05 7106 	mla	r1, r5, r6, r7
 8017fe0:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8017fe4:	2d00      	cmp	r5, #0
 8017fe6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017fea:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017fee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017ff2:	9401      	str	r4, [sp, #4]
 8017ff4:	eb02 0901 	add.w	r9, r2, r1
 8017ff8:	f2c0 80c0 	blt.w	801817c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017ffc:	45a8      	cmp	r8, r5
 8017ffe:	f340 80bd 	ble.w	801817c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018002:	2f00      	cmp	r7, #0
 8018004:	f2c0 80b6 	blt.w	8018174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018008:	42be      	cmp	r6, r7
 801800a:	f340 80b3 	ble.w	8018174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801800e:	f812 c001 	ldrb.w	ip, [r2, r1]
 8018012:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8018016:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801801a:	d019      	beq.n	8018050 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801801c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8018020:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018024:	435a      	muls	r2, r3
 8018026:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801802a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801802e:	fb0c f403 	mul.w	r4, ip, r3
 8018032:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8018036:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801803a:	441a      	add	r2, r3
 801803c:	f104 0320 	add.w	r3, r4, #32
 8018040:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018044:	0a1b      	lsrs	r3, r3, #8
 8018046:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801804a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801804e:	4319      	orrs	r1, r3
 8018050:	b289      	uxth	r1, r1
 8018052:	1c7b      	adds	r3, r7, #1
 8018054:	f100 8097 	bmi.w	8018186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8018058:	429e      	cmp	r6, r3
 801805a:	f340 8094 	ble.w	8018186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801805e:	2800      	cmp	r0, #0
 8018060:	f000 8094 	beq.w	801818c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8018064:	f899 4001 	ldrb.w	r4, [r9, #1]
 8018068:	9b01      	ldr	r3, [sp, #4]
 801806a:	2cff      	cmp	r4, #255	; 0xff
 801806c:	885b      	ldrh	r3, [r3, #2]
 801806e:	d01b      	beq.n	80180a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8018070:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018074:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018078:	fb0a f202 	mul.w	r2, sl, r2
 801807c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018080:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018084:	fb04 fa03 	mul.w	sl, r4, r3
 8018088:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801808c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018090:	441a      	add	r2, r3
 8018092:	f10a 0320 	add.w	r3, sl, #32
 8018096:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801809a:	0a1b      	lsrs	r3, r3, #8
 801809c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80180a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80180a4:	ea4b 0303 	orr.w	r3, fp, r3
 80180a8:	b29b      	uxth	r3, r3
 80180aa:	3501      	adds	r5, #1
 80180ac:	d474      	bmi.n	8018198 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80180ae:	45a8      	cmp	r8, r5
 80180b0:	dd72      	ble.n	8018198 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80180b2:	f1be 0f00 	cmp.w	lr, #0
 80180b6:	f000 8110 	beq.w	80182da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 80180ba:	2f00      	cmp	r7, #0
 80180bc:	db69      	blt.n	8018192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80180be:	42be      	cmp	r6, r7
 80180c0:	dd67      	ble.n	8018192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80180c2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80180c6:	9a01      	ldr	r2, [sp, #4]
 80180c8:	2dff      	cmp	r5, #255	; 0xff
 80180ca:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80180ce:	d01c      	beq.n	801810a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80180d0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80180d4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80180d8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80180dc:	fb05 fa0b 	mul.w	sl, r5, fp
 80180e0:	fb08 f802 	mul.w	r8, r8, r2
 80180e4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80180e8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80180ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180f0:	4490      	add	r8, r2
 80180f2:	f10a 0220 	add.w	r2, sl, #32
 80180f6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80180fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180fe:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8018102:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018106:	ea4b 0b0a 	orr.w	fp, fp, sl
 801810a:	fa1f fb8b 	uxth.w	fp, fp
 801810e:	3701      	adds	r7, #1
 8018110:	d447      	bmi.n	80181a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8018112:	42be      	cmp	r6, r7
 8018114:	dd45      	ble.n	80181a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8018116:	2800      	cmp	r0, #0
 8018118:	d046      	beq.n	80181a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801811a:	3601      	adds	r6, #1
 801811c:	9a01      	ldr	r2, [sp, #4]
 801811e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018122:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8018126:	2fff      	cmp	r7, #255	; 0xff
 8018128:	d01a      	beq.n	8018160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801812a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801812e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8018132:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018136:	fb07 f902 	mul.w	r9, r7, r2
 801813a:	fb08 f806 	mul.w	r8, r8, r6
 801813e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8018142:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8018146:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801814a:	44b0      	add	r8, r6
 801814c:	f109 0620 	add.w	r6, r9, #32
 8018150:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018154:	0a36      	lsrs	r6, r6, #8
 8018156:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801815a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801815e:	4332      	orrs	r2, r6
 8018160:	b292      	uxth	r2, r2
 8018162:	280f      	cmp	r0, #15
 8018164:	d922      	bls.n	80181ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018166:	4b61      	ldr	r3, [pc, #388]	; (80182ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8018168:	4a61      	ldr	r2, [pc, #388]	; (80182f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801816a:	4862      	ldr	r0, [pc, #392]	; (80182f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801816c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8018170:	f003 fcb6 	bl	801bae0 <__assert_func>
 8018174:	f04f 0c00 	mov.w	ip, #0
 8018178:	4661      	mov	r1, ip
 801817a:	e76a      	b.n	8018052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801817c:	2400      	movs	r4, #0
 801817e:	46a4      	mov	ip, r4
 8018180:	4623      	mov	r3, r4
 8018182:	4621      	mov	r1, r4
 8018184:	e791      	b.n	80180aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018186:	2400      	movs	r4, #0
 8018188:	4623      	mov	r3, r4
 801818a:	e78e      	b.n	80180aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801818c:	4604      	mov	r4, r0
 801818e:	4603      	mov	r3, r0
 8018190:	e78b      	b.n	80180aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018192:	2500      	movs	r5, #0
 8018194:	46ab      	mov	fp, r5
 8018196:	e7ba      	b.n	801810e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8018198:	2700      	movs	r7, #0
 801819a:	463d      	mov	r5, r7
 801819c:	463a      	mov	r2, r7
 801819e:	46bb      	mov	fp, r7
 80181a0:	e7df      	b.n	8018162 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80181a2:	2700      	movs	r7, #0
 80181a4:	463a      	mov	r2, r7
 80181a6:	e7dc      	b.n	8018162 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80181a8:	4607      	mov	r7, r0
 80181aa:	4602      	mov	r2, r0
 80181ac:	f1be 0f0f 	cmp.w	lr, #15
 80181b0:	d8d9      	bhi.n	8018166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80181b2:	b286      	uxth	r6, r0
 80181b4:	fa1f f98e 	uxth.w	r9, lr
 80181b8:	fb06 f809 	mul.w	r8, r6, r9
 80181bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80181c0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80181c4:	0136      	lsls	r6, r6, #4
 80181c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80181ce:	9601      	str	r6, [sp, #4]
 80181d0:	ea4a 0101 	orr.w	r1, sl, r1
 80181d4:	fa1f f689 	uxth.w	r6, r9
 80181d8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80181dc:	fb10 f90e 	smulbb	r9, r0, lr
 80181e0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80181e4:	9602      	str	r6, [sp, #8]
 80181e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181ea:	460e      	mov	r6, r1
 80181ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80181f0:	f1ce 0110 	rsb	r1, lr, #16
 80181f4:	1a09      	subs	r1, r1, r0
 80181f6:	ea4a 0303 	orr.w	r3, sl, r3
 80181fa:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80181fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018202:	4343      	muls	r3, r0
 8018204:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018208:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801820c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018210:	fb01 3106 	mla	r1, r1, r6, r3
 8018214:	ea4a 0202 	orr.w	r2, sl, r2
 8018218:	fb09 1302 	mla	r3, r9, r2, r1
 801821c:	9a03      	ldr	r2, [sp, #12]
 801821e:	9802      	ldr	r0, [sp, #8]
 8018220:	8811      	ldrh	r1, [r2, #0]
 8018222:	9a01      	ldr	r2, [sp, #4]
 8018224:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018228:	1a12      	subs	r2, r2, r0
 801822a:	9801      	ldr	r0, [sp, #4]
 801822c:	eba0 0608 	sub.w	r6, r0, r8
 8018230:	b2b6      	uxth	r6, r6
 8018232:	b292      	uxth	r2, r2
 8018234:	4374      	muls	r4, r6
 8018236:	fb0c 4402 	mla	r4, ip, r2, r4
 801823a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801823e:	9a02      	ldr	r2, [sp, #8]
 8018240:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018244:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018248:	fb02 4505 	mla	r5, r2, r5, r4
 801824c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8018250:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018254:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8018258:	fb08 5707 	mla	r7, r8, r7, r5
 801825c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8018260:	120a      	asrs	r2, r1, #8
 8018262:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018266:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801826a:	b2ff      	uxtb	r7, r7
 801826c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018270:	10c8      	asrs	r0, r1, #3
 8018272:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018276:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801827a:	00c9      	lsls	r1, r1, #3
 801827c:	437a      	muls	r2, r7
 801827e:	ea43 0e0e 	orr.w	lr, r3, lr
 8018282:	b2c9      	uxtb	r1, r1
 8018284:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018288:	fa1f f38e 	uxth.w	r3, lr
 801828c:	4378      	muls	r0, r7
 801828e:	434f      	muls	r7, r1
 8018290:	1c51      	adds	r1, r2, #1
 8018292:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8018296:	121a      	asrs	r2, r3, #8
 8018298:	f022 0207 	bic.w	r2, r2, #7
 801829c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80182a0:	1c41      	adds	r1, r0, #1
 80182a2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80182a6:	10d9      	asrs	r1, r3, #3
 80182a8:	f021 0103 	bic.w	r1, r1, #3
 80182ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80182b0:	0212      	lsls	r2, r2, #8
 80182b2:	00c9      	lsls	r1, r1, #3
 80182b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80182b8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80182bc:	430a      	orrs	r2, r1
 80182be:	1c79      	adds	r1, r7, #1
 80182c0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80182c4:	00db      	lsls	r3, r3, #3
 80182c6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80182ca:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80182ce:	4313      	orrs	r3, r2
 80182d0:	9a03      	ldr	r2, [sp, #12]
 80182d2:	8013      	strh	r3, [r2, #0]
 80182d4:	b005      	add	sp, #20
 80182d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182da:	280f      	cmp	r0, #15
 80182dc:	f63f af43 	bhi.w	8018166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80182e0:	4677      	mov	r7, lr
 80182e2:	4675      	mov	r5, lr
 80182e4:	4672      	mov	r2, lr
 80182e6:	46f3      	mov	fp, lr
 80182e8:	e763      	b.n	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80182ea:	bf00      	nop
 80182ec:	0801f996 	.word	0x0801f996
 80182f0:	0801ff66 	.word	0x0801ff66
 80182f4:	0801fa1a 	.word	0x0801fa1a

080182f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80182f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182fc:	ed2d 8b08 	vpush	{d8-d11}
 8018300:	b093      	sub	sp, #76	; 0x4c
 8018302:	eeb0 aa40 	vmov.f32	s20, s0
 8018306:	9210      	str	r2, [sp, #64]	; 0x40
 8018308:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801830a:	910e      	str	r1, [sp, #56]	; 0x38
 801830c:	9306      	str	r3, [sp, #24]
 801830e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8018312:	9011      	str	r0, [sp, #68]	; 0x44
 8018314:	6850      	ldr	r0, [r2, #4]
 8018316:	6812      	ldr	r2, [r2, #0]
 8018318:	fb00 1303 	mla	r3, r0, r3, r1
 801831c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018320:	9307      	str	r3, [sp, #28]
 8018322:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018324:	681b      	ldr	r3, [r3, #0]
 8018326:	9308      	str	r3, [sp, #32]
 8018328:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801832a:	685b      	ldr	r3, [r3, #4]
 801832c:	9309      	str	r3, [sp, #36]	; 0x24
 801832e:	eef0 9a60 	vmov.f32	s19, s1
 8018332:	eeb0 9a41 	vmov.f32	s18, s2
 8018336:	eeb0 8a62 	vmov.f32	s16, s5
 801833a:	eef0 8a43 	vmov.f32	s17, s6
 801833e:	eef0 ba44 	vmov.f32	s23, s8
 8018342:	eeb0 ba64 	vmov.f32	s22, s9
 8018346:	eef0 aa45 	vmov.f32	s21, s10
 801834a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801834c:	2b00      	cmp	r3, #0
 801834e:	dc03      	bgt.n	8018358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018352:	2b00      	cmp	r3, #0
 8018354:	f340 83b4 	ble.w	8018ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018358:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801835a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801835e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018362:	1e48      	subs	r0, r1, #1
 8018364:	1e55      	subs	r5, r2, #1
 8018366:	9b06      	ldr	r3, [sp, #24]
 8018368:	2b00      	cmp	r3, #0
 801836a:	f340 8163 	ble.w	8018634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801836e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8018370:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018372:	1436      	asrs	r6, r6, #16
 8018374:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018378:	d406      	bmi.n	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801837a:	4286      	cmp	r6, r0
 801837c:	da04      	bge.n	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801837e:	2b00      	cmp	r3, #0
 8018380:	db02      	blt.n	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018382:	42ab      	cmp	r3, r5
 8018384:	f2c0 8157 	blt.w	8018636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018388:	3601      	adds	r6, #1
 801838a:	f100 8144 	bmi.w	8018616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801838e:	42b1      	cmp	r1, r6
 8018390:	f2c0 8141 	blt.w	8018616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018394:	3301      	adds	r3, #1
 8018396:	f100 813e 	bmi.w	8018616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801839a:	429a      	cmp	r2, r3
 801839c:	f2c0 813b 	blt.w	8018616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80183a0:	9b06      	ldr	r3, [sp, #24]
 80183a2:	9f07      	ldr	r7, [sp, #28]
 80183a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80183a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80183aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80183ac:	2b00      	cmp	r3, #0
 80183ae:	f340 8164 	ble.w	801867a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 80183b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80183b4:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80183b6:	1418      	asrs	r0, r3, #16
 80183b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80183ba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80183be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80183c0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80183c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80183c6:	142d      	asrs	r5, r5, #16
 80183c8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80183cc:	f100 81ee 	bmi.w	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80183d0:	f102 3eff 	add.w	lr, r2, #4294967295
 80183d4:	4575      	cmp	r5, lr
 80183d6:	f280 81e9 	bge.w	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80183da:	2800      	cmp	r0, #0
 80183dc:	f2c0 81e6 	blt.w	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80183e0:	f103 3eff 	add.w	lr, r3, #4294967295
 80183e4:	4570      	cmp	r0, lr
 80183e6:	f280 81e1 	bge.w	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80183ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183ec:	b212      	sxth	r2, r2
 80183ee:	fb00 5002 	mla	r0, r0, r2, r5
 80183f2:	fa1f fe81 	uxth.w	lr, r1
 80183f6:	eb03 0a00 	add.w	sl, r3, r0
 80183fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80183fe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8018402:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018406:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801840a:	b29b      	uxth	r3, r3
 801840c:	f1bc 0f00 	cmp.w	ip, #0
 8018410:	f000 8179 	beq.w	8018706 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8018414:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018418:	940a      	str	r4, [sp, #40]	; 0x28
 801841a:	eb0a 0b02 	add.w	fp, sl, r2
 801841e:	fa1f fa8c 	uxth.w	sl, ip
 8018422:	fb0a fe0e 	mul.w	lr, sl, lr
 8018426:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801842a:	fa1f fa8a 	uxth.w	sl, sl
 801842e:	eba5 050e 	sub.w	r5, r5, lr
 8018432:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018436:	940b      	str	r4, [sp, #44]	; 0x2c
 8018438:	eba3 030a 	sub.w	r3, r3, sl
 801843c:	b2ad      	uxth	r5, r5
 801843e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018440:	b29b      	uxth	r3, r3
 8018442:	fb08 f505 	mul.w	r5, r8, r5
 8018446:	fb09 5303 	mla	r3, r9, r3, r5
 801844a:	fb0a 3304 	mla	r3, sl, r4, r3
 801844e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018450:	fb0e 3304 	mla	r3, lr, r4, r3
 8018454:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018458:	2b00      	cmp	r3, #0
 801845a:	f000 80cf 	beq.w	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801845e:	9c08      	ldr	r4, [sp, #32]
 8018460:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018464:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018468:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801846c:	f000 8150 	beq.w	8018710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8018470:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018474:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018478:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801847c:	fb09 f000 	mul.w	r0, r9, r0
 8018480:	fb0a fe0e 	mul.w	lr, sl, lr
 8018484:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018488:	f100 0b20 	add.w	fp, r0, #32
 801848c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018490:	44ce      	add	lr, r9
 8018492:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018496:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801849a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801849e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80184a2:	ea4e 0909 	orr.w	r9, lr, r9
 80184a6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80184aa:	8868      	ldrh	r0, [r5, #2]
 80184ac:	d019      	beq.n	80184e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80184ae:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80184b2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80184b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184ba:	fb08 f800 	mul.w	r8, r8, r0
 80184be:	fb0a fe0e 	mul.w	lr, sl, lr
 80184c2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80184c6:	f108 0b20 	add.w	fp, r8, #32
 80184ca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80184ce:	4486      	add	lr, r0
 80184d0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80184d4:	0a00      	lsrs	r0, r0, #8
 80184d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80184da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184de:	ea4e 0000 	orr.w	r0, lr, r0
 80184e2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80184e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80184ea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80184ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80184f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80184f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80184fa:	ea4e 0909 	orr.w	r9, lr, r9
 80184fe:	ea4a 0000 	orr.w	r0, sl, r0
 8018502:	f1bc 0f00 	cmp.w	ip, #0
 8018506:	f000 8105 	beq.w	8018714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801850a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801850e:	3a01      	subs	r2, #1
 8018510:	0052      	lsls	r2, r2, #1
 8018512:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018514:	3202      	adds	r2, #2
 8018516:	2cff      	cmp	r4, #255	; 0xff
 8018518:	eb05 0e02 	add.w	lr, r5, r2
 801851c:	5aaa      	ldrh	r2, [r5, r2]
 801851e:	d018      	beq.n	8018552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018520:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018524:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018528:	fb04 fa02 	mul.w	sl, r4, r2
 801852c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018530:	fb08 f805 	mul.w	r8, r8, r5
 8018534:	f10a 0520 	add.w	r5, sl, #32
 8018538:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801853c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018540:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018544:	4442      	add	r2, r8
 8018546:	0a2d      	lsrs	r5, r5, #8
 8018548:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801854c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018550:	432a      	orrs	r2, r5
 8018552:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018554:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018558:	2cff      	cmp	r4, #255	; 0xff
 801855a:	d01a      	beq.n	8018592 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801855c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018560:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018564:	fb04 fa05 	mul.w	sl, r4, r5
 8018568:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801856c:	fb08 f80e 	mul.w	r8, r8, lr
 8018570:	f10a 0e20 	add.w	lr, sl, #32
 8018574:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018578:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801857c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018580:	4445      	add	r5, r8
 8018582:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018586:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801858a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801858e:	ea45 050e 	orr.w	r5, r5, lr
 8018592:	fb1c fe01 	smulbb	lr, ip, r1
 8018596:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801859a:	f1cc 0810 	rsb	r8, ip, #16
 801859e:	eba8 0801 	sub.w	r8, r8, r1
 80185a2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80185a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80185aa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80185ae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80185b2:	4341      	muls	r1, r0
 80185b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80185b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80185bc:	ea4a 0202 	orr.w	r2, sl, r2
 80185c0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80185c4:	fb09 1108 	mla	r1, r9, r8, r1
 80185c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80185cc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80185d0:	fb0c 1102 	mla	r1, ip, r2, r1
 80185d4:	ea4b 0505 	orr.w	r5, fp, r5
 80185d8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80185dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80185e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80185e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185e8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80185ec:	ea42 0e0e 	orr.w	lr, r2, lr
 80185f0:	fa1f f28e 	uxth.w	r2, lr
 80185f4:	2bff      	cmp	r3, #255	; 0xff
 80185f6:	f040 80a1 	bne.w	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80185fa:	803a      	strh	r2, [r7, #0]
 80185fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80185fe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018600:	4413      	add	r3, r2
 8018602:	9325      	str	r3, [sp, #148]	; 0x94
 8018604:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018608:	441a      	add	r2, r3
 801860a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801860c:	9226      	str	r2, [sp, #152]	; 0x98
 801860e:	3b01      	subs	r3, #1
 8018610:	3702      	adds	r7, #2
 8018612:	930f      	str	r3, [sp, #60]	; 0x3c
 8018614:	e6c9      	b.n	80183aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018616:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018618:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801861a:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801861c:	4433      	add	r3, r6
 801861e:	9325      	str	r3, [sp, #148]	; 0x94
 8018620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018622:	441c      	add	r4, r3
 8018624:	9b06      	ldr	r3, [sp, #24]
 8018626:	9426      	str	r4, [sp, #152]	; 0x98
 8018628:	3b01      	subs	r3, #1
 801862a:	9306      	str	r3, [sp, #24]
 801862c:	9b07      	ldr	r3, [sp, #28]
 801862e:	3302      	adds	r3, #2
 8018630:	9307      	str	r3, [sp, #28]
 8018632:	e698      	b.n	8018366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018634:	d028      	beq.n	8018688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018636:	9b06      	ldr	r3, [sp, #24]
 8018638:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801863a:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801863c:	3b01      	subs	r3, #1
 801863e:	fb00 5003 	mla	r0, r0, r3, r5
 8018642:	1400      	asrs	r0, r0, #16
 8018644:	f53f aeac 	bmi.w	80183a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018648:	3901      	subs	r1, #1
 801864a:	4288      	cmp	r0, r1
 801864c:	f6bf aea8 	bge.w	80183a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018650:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018652:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018654:	fb01 0303 	mla	r3, r1, r3, r0
 8018658:	141b      	asrs	r3, r3, #16
 801865a:	f53f aea1 	bmi.w	80183a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801865e:	3a01      	subs	r2, #1
 8018660:	4293      	cmp	r3, r2
 8018662:	f6bf ae9d 	bge.w	80183a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018666:	9b06      	ldr	r3, [sp, #24]
 8018668:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801866c:	930f      	str	r3, [sp, #60]	; 0x3c
 801866e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018672:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018674:	2b00      	cmp	r3, #0
 8018676:	f300 80b6 	bgt.w	80187e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801867a:	9b06      	ldr	r3, [sp, #24]
 801867c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018680:	9b07      	ldr	r3, [sp, #28]
 8018682:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018686:	9307      	str	r3, [sp, #28]
 8018688:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801868a:	2b00      	cmp	r3, #0
 801868c:	f340 8218 	ble.w	8018ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018690:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018694:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018698:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801869c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801869e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80186a2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80186a6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186aa:	eef0 6a48 	vmov.f32	s13, s16
 80186ae:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186b6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80186ba:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80186be:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80186c2:	eef0 6a68 	vmov.f32	s13, s17
 80186c6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80186ca:	ee18 2a10 	vmov	r2, s16
 80186ce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80186d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80186d6:	ee18 2a90 	vmov	r2, s17
 80186da:	9327      	str	r3, [sp, #156]	; 0x9c
 80186dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80186de:	fb92 f3f3 	sdiv	r3, r2, r3
 80186e2:	9328      	str	r3, [sp, #160]	; 0xa0
 80186e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80186e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80186e8:	3b01      	subs	r3, #1
 80186ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186ee:	930e      	str	r3, [sp, #56]	; 0x38
 80186f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80186f2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80186f6:	bf08      	it	eq
 80186f8:	4613      	moveq	r3, r2
 80186fa:	9306      	str	r3, [sp, #24]
 80186fc:	eef0 8a67 	vmov.f32	s17, s15
 8018700:	eeb0 8a47 	vmov.f32	s16, s14
 8018704:	e621      	b.n	801834a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018706:	fb08 f505 	mul.w	r5, r8, r5
 801870a:	fb09 5303 	mla	r3, r9, r3, r5
 801870e:	e6a1      	b.n	8018454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018710:	4681      	mov	r9, r0
 8018712:	e6c8      	b.n	80184a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8018714:	f1c1 0210 	rsb	r2, r1, #16
 8018718:	4341      	muls	r1, r0
 801871a:	fb09 1902 	mla	r9, r9, r2, r1
 801871e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018722:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018726:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801872a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801872e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018732:	ea42 0909 	orr.w	r9, r2, r9
 8018736:	fa1f f289 	uxth.w	r2, r9
 801873a:	e75b      	b.n	80185f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801873c:	f8b7 c000 	ldrh.w	ip, [r7]
 8018740:	43db      	mvns	r3, r3
 8018742:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018746:	fa5f fe83 	uxtb.w	lr, r3
 801874a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801874e:	fb00 f00e 	mul.w	r0, r0, lr
 8018752:	1c41      	adds	r1, r0, #1
 8018754:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018758:	1211      	asrs	r1, r2, #8
 801875a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801875e:	f021 0107 	bic.w	r1, r1, #7
 8018762:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018766:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801876a:	48d8      	ldr	r0, [pc, #864]	; (8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801876c:	fb05 f50e 	mul.w	r5, r5, lr
 8018770:	b2c9      	uxtb	r1, r1
 8018772:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8018776:	1c69      	adds	r1, r5, #1
 8018778:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801877c:	10d1      	asrs	r1, r2, #3
 801877e:	f021 0103 	bic.w	r1, r1, #3
 8018782:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018786:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801878a:	b2db      	uxtb	r3, r3
 801878c:	00c9      	lsls	r1, r1, #3
 801878e:	fb03 f30e 	mul.w	r3, r3, lr
 8018792:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018796:	4301      	orrs	r1, r0
 8018798:	1c58      	adds	r0, r3, #1
 801879a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801879e:	00d2      	lsls	r2, r2, #3
 80187a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80187a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80187a8:	430a      	orrs	r2, r1
 80187aa:	e726      	b.n	80185fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80187ac:	f115 0e01 	adds.w	lr, r5, #1
 80187b0:	f53f af24 	bmi.w	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80187b4:	4572      	cmp	r2, lr
 80187b6:	f6ff af21 	blt.w	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80187ba:	f110 0e01 	adds.w	lr, r0, #1
 80187be:	f53f af1d 	bmi.w	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80187c2:	4573      	cmp	r3, lr
 80187c4:	f6ff af1a 	blt.w	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80187c8:	b21b      	sxth	r3, r3
 80187ca:	b212      	sxth	r2, r2
 80187cc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80187d0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80187d4:	9301      	str	r3, [sp, #4]
 80187d6:	9200      	str	r2, [sp, #0]
 80187d8:	4639      	mov	r1, r7
 80187da:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80187de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80187e0:	f7ff fbf4 	bl	8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80187e4:	e70a      	b.n	80185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80187e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80187e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80187ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80187ee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80187f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80187f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80187fa:	141f      	asrs	r7, r3, #16
 80187fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80187fe:	141b      	asrs	r3, r3, #16
 8018800:	fb01 3707 	mla	r7, r1, r7, r3
 8018804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018806:	fa1f fc82 	uxth.w	ip, r2
 801880a:	eb03 0a07 	add.w	sl, r3, r7
 801880e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018812:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018816:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801881a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801881e:	b29b      	uxth	r3, r3
 8018820:	2d00      	cmp	r5, #0
 8018822:	f000 80fe 	beq.w	8018a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 8018826:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801882a:	940c      	str	r4, [sp, #48]	; 0x30
 801882c:	eb0a 0b01 	add.w	fp, sl, r1
 8018830:	fa1f fa85 	uxth.w	sl, r5
 8018834:	fb0a fc0c 	mul.w	ip, sl, ip
 8018838:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801883c:	fa1f fa8a 	uxth.w	sl, sl
 8018840:	eba0 000c 	sub.w	r0, r0, ip
 8018844:	eba3 030a 	sub.w	r3, r3, sl
 8018848:	b280      	uxth	r0, r0
 801884a:	fb08 f000 	mul.w	r0, r8, r0
 801884e:	b29b      	uxth	r3, r3
 8018850:	fb09 0303 	mla	r3, r9, r3, r0
 8018854:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018856:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801885a:	940d      	str	r4, [sp, #52]	; 0x34
 801885c:	fb0a 3300 	mla	r3, sl, r0, r3
 8018860:	fb0c 3304 	mla	r3, ip, r4, r3
 8018864:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018868:	2b00      	cmp	r3, #0
 801886a:	f000 80cc 	beq.w	8018a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801886e:	9808      	ldr	r0, [sp, #32]
 8018870:	9c08      	ldr	r4, [sp, #32]
 8018872:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018876:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801887a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801887e:	f000 80d5 	beq.w	8018a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8018882:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018886:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801888a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801888e:	fb09 f707 	mul.w	r7, r9, r7
 8018892:	fb0a fc0c 	mul.w	ip, sl, ip
 8018896:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801889a:	f107 0b20 	add.w	fp, r7, #32
 801889e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80188a2:	44cc      	add	ip, r9
 80188a4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80188a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80188ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80188b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80188b4:	ea4c 0909 	orr.w	r9, ip, r9
 80188b8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80188bc:	8847      	ldrh	r7, [r0, #2]
 80188be:	d019      	beq.n	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80188c0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80188c4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80188c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80188cc:	fb08 f807 	mul.w	r8, r8, r7
 80188d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80188d4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80188d8:	f108 0b20 	add.w	fp, r8, #32
 80188dc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80188e0:	44bc      	add	ip, r7
 80188e2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80188e6:	0a3f      	lsrs	r7, r7, #8
 80188e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80188ec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80188f0:	ea4c 0707 	orr.w	r7, ip, r7
 80188f4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80188f8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80188fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018900:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018904:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018908:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801890c:	ea4c 0909 	orr.w	r9, ip, r9
 8018910:	ea4a 0707 	orr.w	r7, sl, r7
 8018914:	2d00      	cmp	r5, #0
 8018916:	f000 808b 	beq.w	8018a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 801891a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801891e:	3901      	subs	r1, #1
 8018920:	0049      	lsls	r1, r1, #1
 8018922:	3102      	adds	r1, #2
 8018924:	eb00 0c01 	add.w	ip, r0, r1
 8018928:	5a41      	ldrh	r1, [r0, r1]
 801892a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801892c:	28ff      	cmp	r0, #255	; 0xff
 801892e:	d019      	beq.n	8018964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8018930:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018932:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018936:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801893a:	fb04 fa01 	mul.w	sl, r4, r1
 801893e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018942:	fb08 f800 	mul.w	r8, r8, r0
 8018946:	f10a 0020 	add.w	r0, sl, #32
 801894a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801894e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018952:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018956:	4441      	add	r1, r8
 8018958:	0a00      	lsrs	r0, r0, #8
 801895a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801895e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018962:	4301      	orrs	r1, r0
 8018964:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018966:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801896a:	2cff      	cmp	r4, #255	; 0xff
 801896c:	d01a      	beq.n	80189a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801896e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018972:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018976:	fb04 fa00 	mul.w	sl, r4, r0
 801897a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801897e:	fb08 f80c 	mul.w	r8, r8, ip
 8018982:	f10a 0c20 	add.w	ip, sl, #32
 8018986:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801898a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801898e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018992:	4440      	add	r0, r8
 8018994:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018998:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801899c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80189a0:	ea40 000c 	orr.w	r0, r0, ip
 80189a4:	fb15 fc02 	smulbb	ip, r5, r2
 80189a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80189ac:	f1c5 0810 	rsb	r8, r5, #16
 80189b0:	eba8 0802 	sub.w	r8, r8, r2
 80189b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80189b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80189bc:	437a      	muls	r2, r7
 80189be:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80189c2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80189c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80189ce:	fb09 2208 	mla	r2, r9, r8, r2
 80189d2:	ea4a 0101 	orr.w	r1, sl, r1
 80189d6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80189da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80189de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189e2:	fb05 2201 	mla	r2, r5, r1, r2
 80189e6:	ea4b 0000 	orr.w	r0, fp, r0
 80189ea:	fb0c 2200 	mla	r2, ip, r0, r2
 80189ee:	0d57      	lsrs	r7, r2, #21
 80189f0:	0952      	lsrs	r2, r2, #5
 80189f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80189f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189fa:	433a      	orrs	r2, r7
 80189fc:	2bff      	cmp	r3, #255	; 0xff
 80189fe:	b292      	uxth	r2, r2
 8018a00:	d127      	bne.n	8018a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018a02:	f8ae 2000 	strh.w	r2, [lr]
 8018a06:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018a08:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018a0a:	4413      	add	r3, r2
 8018a0c:	9325      	str	r3, [sp, #148]	; 0x94
 8018a0e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018a10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018a12:	441a      	add	r2, r3
 8018a14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a16:	9226      	str	r2, [sp, #152]	; 0x98
 8018a18:	3b01      	subs	r3, #1
 8018a1a:	f10e 0e02 	add.w	lr, lr, #2
 8018a1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a20:	e627      	b.n	8018672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8018a22:	fb08 f000 	mul.w	r0, r8, r0
 8018a26:	fb09 0303 	mla	r3, r9, r3, r0
 8018a2a:	e71b      	b.n	8018864 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8018a2c:	46b9      	mov	r9, r7
 8018a2e:	e743      	b.n	80188b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8018a30:	f1c2 0110 	rsb	r1, r2, #16
 8018a34:	437a      	muls	r2, r7
 8018a36:	fb09 2901 	mla	r9, r9, r1, r2
 8018a3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018a3e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018a42:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018a46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018a4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a4e:	4302      	orrs	r2, r0
 8018a50:	e7d4      	b.n	80189fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018a52:	f8be 7000 	ldrh.w	r7, [lr]
 8018a56:	4c1d      	ldr	r4, [pc, #116]	; (8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018a58:	43db      	mvns	r3, r3
 8018a5a:	1238      	asrs	r0, r7, #8
 8018a5c:	fa5f fc83 	uxtb.w	ip, r3
 8018a60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a64:	10fd      	asrs	r5, r7, #3
 8018a66:	fb00 f00c 	mul.w	r0, r0, ip
 8018a6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018a6e:	fb05 f10c 	mul.w	r1, r5, ip
 8018a72:	1c45      	adds	r5, r0, #1
 8018a74:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018a78:	1215      	asrs	r5, r2, #8
 8018a7a:	f025 0507 	bic.w	r5, r5, #7
 8018a7e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018a82:	1c4d      	adds	r5, r1, #1
 8018a84:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018a88:	10d1      	asrs	r1, r2, #3
 8018a8a:	f021 0103 	bic.w	r1, r1, #3
 8018a8e:	00fb      	lsls	r3, r7, #3
 8018a90:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018a94:	b2db      	uxtb	r3, r3
 8018a96:	b2c0      	uxtb	r0, r0
 8018a98:	00c9      	lsls	r1, r1, #3
 8018a9a:	fb03 f30c 	mul.w	r3, r3, ip
 8018a9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018aa2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018aa6:	4308      	orrs	r0, r1
 8018aa8:	1c59      	adds	r1, r3, #1
 8018aaa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018aae:	00d2      	lsls	r2, r2, #3
 8018ab0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018ab4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018ab8:	4318      	orrs	r0, r3
 8018aba:	f8ae 0000 	strh.w	r0, [lr]
 8018abe:	e7a2      	b.n	8018a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018ac0:	b013      	add	sp, #76	; 0x4c
 8018ac2:	ecbd 8b08 	vpop	{d8-d11}
 8018ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018aca:	bf00      	nop
 8018acc:	fffff800 	.word	0xfffff800

08018ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ad4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018ad8:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018adc:	f1bc 0f00 	cmp.w	ip, #0
 8018ae0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018ae4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018ae8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018aec:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018af0:	8808      	ldrh	r0, [r1, #0]
 8018af2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018af6:	db2f      	blt.n	8018b58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018af8:	45e2      	cmp	sl, ip
 8018afa:	dd2d      	ble.n	8018b58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018afc:	2c00      	cmp	r4, #0
 8018afe:	db29      	blt.n	8018b54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018b00:	42a3      	cmp	r3, r4
 8018b02:	dd27      	ble.n	8018b54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018b04:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018b08:	1c62      	adds	r2, r4, #1
 8018b0a:	d428      	bmi.n	8018b5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b0c:	4293      	cmp	r3, r2
 8018b0e:	dd26      	ble.n	8018b5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b10:	b32f      	cbz	r7, 8018b5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b12:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018b16:	f11c 0c01 	adds.w	ip, ip, #1
 8018b1a:	d424      	bmi.n	8018b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018b1c:	45e2      	cmp	sl, ip
 8018b1e:	dd22      	ble.n	8018b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018b20:	2e00      	cmp	r6, #0
 8018b22:	f000 809d 	beq.w	8018c60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018b26:	2c00      	cmp	r4, #0
 8018b28:	db1b      	blt.n	8018b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018b2a:	42a3      	cmp	r3, r4
 8018b2c:	dd19      	ble.n	8018b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018b2e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018b32:	3401      	adds	r4, #1
 8018b34:	d41a      	bmi.n	8018b6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018b36:	42a3      	cmp	r3, r4
 8018b38:	dd18      	ble.n	8018b6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018b3a:	b1cf      	cbz	r7, 8018b70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018b3c:	3301      	adds	r3, #1
 8018b3e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018b42:	2f0f      	cmp	r7, #15
 8018b44:	d915      	bls.n	8018b72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018b46:	4b49      	ldr	r3, [pc, #292]	; (8018c6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018b48:	4a49      	ldr	r2, [pc, #292]	; (8018c70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018b4a:	484a      	ldr	r0, [pc, #296]	; (8018c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018b4c:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8018b50:	f002 ffc6 	bl	801bae0 <__assert_func>
 8018b54:	4681      	mov	r9, r0
 8018b56:	e7d7      	b.n	8018b08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018b58:	4686      	mov	lr, r0
 8018b5a:	4681      	mov	r9, r0
 8018b5c:	e7db      	b.n	8018b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018b5e:	4686      	mov	lr, r0
 8018b60:	e7d9      	b.n	8018b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018b62:	4684      	mov	ip, r0
 8018b64:	e7e5      	b.n	8018b32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018b66:	4603      	mov	r3, r0
 8018b68:	4684      	mov	ip, r0
 8018b6a:	e7ea      	b.n	8018b42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018b6c:	4603      	mov	r3, r0
 8018b6e:	e7e8      	b.n	8018b42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018b70:	4603      	mov	r3, r0
 8018b72:	2e0f      	cmp	r6, #15
 8018b74:	d8e7      	bhi.n	8018b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018b76:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018b7a:	fb17 f806 	smulbb	r8, r7, r6
 8018b7e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b82:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018b86:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b8a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018b8e:	ea44 0909 	orr.w	r9, r4, r9
 8018b92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b96:	f1c6 0410 	rsb	r4, r6, #16
 8018b9a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018b9e:	1be4      	subs	r4, r4, r7
 8018ba0:	041a      	lsls	r2, r3, #16
 8018ba2:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018ba6:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018baa:	fb07 fe0e 	mul.w	lr, r7, lr
 8018bae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018bb2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018bb6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018bba:	fb04 e409 	mla	r4, r4, r9, lr
 8018bbe:	4313      	orrs	r3, r2
 8018bc0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018bc4:	fb08 4303 	mla	r3, r8, r3, r4
 8018bc8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018bcc:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018bd0:	4322      	orrs	r2, r4
 8018bd2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018bd6:	fb06 3202 	mla	r2, r6, r2, r3
 8018bda:	0d53      	lsrs	r3, r2, #21
 8018bdc:	0952      	lsrs	r2, r2, #5
 8018bde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018be2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018be6:	431a      	orrs	r2, r3
 8018be8:	b293      	uxth	r3, r2
 8018bea:	b2af      	uxth	r7, r5
 8018bec:	1202      	asrs	r2, r0, #8
 8018bee:	43ed      	mvns	r5, r5
 8018bf0:	b2ed      	uxtb	r5, r5
 8018bf2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018bf6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018bfa:	fb12 f205 	smulbb	r2, r2, r5
 8018bfe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c02:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018c06:	00dc      	lsls	r4, r3, #3
 8018c08:	10da      	asrs	r2, r3, #3
 8018c0a:	10c6      	asrs	r6, r0, #3
 8018c0c:	00c3      	lsls	r3, r0, #3
 8018c0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018c12:	b2db      	uxtb	r3, r3
 8018c14:	fb16 f605 	smulbb	r6, r6, r5
 8018c18:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018c1c:	b2e4      	uxtb	r4, r4
 8018c1e:	fb13 f305 	smulbb	r3, r3, r5
 8018c22:	fa1f fc8c 	uxth.w	ip, ip
 8018c26:	fb02 6207 	mla	r2, r2, r7, r6
 8018c2a:	fb04 3307 	mla	r3, r4, r7, r3
 8018c2e:	b296      	uxth	r6, r2
 8018c30:	b29a      	uxth	r2, r3
 8018c32:	f10c 0301 	add.w	r3, ip, #1
 8018c36:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018c3a:	1c53      	adds	r3, r2, #1
 8018c3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018c40:	1c72      	adds	r2, r6, #1
 8018c42:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018c46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018c4e:	0952      	lsrs	r2, r2, #5
 8018c50:	ea43 030c 	orr.w	r3, r3, ip
 8018c54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c58:	4313      	orrs	r3, r2
 8018c5a:	800b      	strh	r3, [r1, #0]
 8018c5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c60:	2f0f      	cmp	r7, #15
 8018c62:	f63f af70 	bhi.w	8018b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018c66:	4603      	mov	r3, r0
 8018c68:	4684      	mov	ip, r0
 8018c6a:	e784      	b.n	8018b76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018c6c:	0801f996 	.word	0x0801f996
 8018c70:	0802000f 	.word	0x0802000f
 8018c74:	0801fa1a 	.word	0x0801fa1a

08018c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c7c:	ed2d 8b08 	vpush	{d8-d11}
 8018c80:	b093      	sub	sp, #76	; 0x4c
 8018c82:	461d      	mov	r5, r3
 8018c84:	9210      	str	r2, [sp, #64]	; 0x40
 8018c86:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018c88:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018c8c:	920b      	str	r2, [sp, #44]	; 0x2c
 8018c8e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018c92:	910a      	str	r1, [sp, #40]	; 0x28
 8018c94:	6859      	ldr	r1, [r3, #4]
 8018c96:	681b      	ldr	r3, [r3, #0]
 8018c98:	9011      	str	r0, [sp, #68]	; 0x44
 8018c9a:	fb01 2707 	mla	r7, r1, r7, r2
 8018c9e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018ca2:	9307      	str	r3, [sp, #28]
 8018ca4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ca6:	681b      	ldr	r3, [r3, #0]
 8018ca8:	9309      	str	r3, [sp, #36]	; 0x24
 8018caa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cac:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018cb0:	43db      	mvns	r3, r3
 8018cb2:	b2db      	uxtb	r3, r3
 8018cb4:	eeb0 aa40 	vmov.f32	s20, s0
 8018cb8:	eef0 9a60 	vmov.f32	s19, s1
 8018cbc:	eeb0 9a41 	vmov.f32	s18, s2
 8018cc0:	eeb0 8a62 	vmov.f32	s16, s5
 8018cc4:	eef0 8a43 	vmov.f32	s17, s6
 8018cc8:	eef0 ba44 	vmov.f32	s23, s8
 8018ccc:	eeb0 ba64 	vmov.f32	s22, s9
 8018cd0:	eef0 aa45 	vmov.f32	s21, s10
 8018cd4:	9308      	str	r3, [sp, #32]
 8018cd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018cd8:	2b00      	cmp	r3, #0
 8018cda:	dc03      	bgt.n	8018ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018cdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cde:	2b00      	cmp	r3, #0
 8018ce0:	f340 8203 	ble.w	80190ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018ce4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ce6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018cea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018cee:	1e48      	subs	r0, r1, #1
 8018cf0:	f102 3cff 	add.w	ip, r2, #4294967295
 8018cf4:	2d00      	cmp	r5, #0
 8018cf6:	f340 80da 	ble.w	8018eae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018cfa:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018cfe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d02:	d406      	bmi.n	8018d12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d04:	4586      	cmp	lr, r0
 8018d06:	da04      	bge.n	8018d12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d08:	2b00      	cmp	r3, #0
 8018d0a:	db02      	blt.n	8018d12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d0c:	4563      	cmp	r3, ip
 8018d0e:	f2c0 80cf 	blt.w	8018eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018d12:	f11e 0e01 	adds.w	lr, lr, #1
 8018d16:	f100 80c1 	bmi.w	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d1a:	4571      	cmp	r1, lr
 8018d1c:	f2c0 80be 	blt.w	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d20:	3301      	adds	r3, #1
 8018d22:	f100 80bb 	bmi.w	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d26:	429a      	cmp	r2, r3
 8018d28:	f2c0 80b8 	blt.w	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d2c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018d30:	46a9      	mov	r9, r5
 8018d32:	f1b9 0f00 	cmp.w	r9, #0
 8018d36:	f340 80d8 	ble.w	8018eea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018d3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d3c:	1421      	asrs	r1, r4, #16
 8018d3e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018d42:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018d46:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018d4a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018d4e:	f100 8111 	bmi.w	8018f74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018d52:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018d56:	4551      	cmp	r1, sl
 8018d58:	f280 810c 	bge.w	8018f74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018d5c:	2800      	cmp	r0, #0
 8018d5e:	f2c0 8109 	blt.w	8018f74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018d62:	f103 3aff 	add.w	sl, r3, #4294967295
 8018d66:	4550      	cmp	r0, sl
 8018d68:	f280 8104 	bge.w	8018f74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018d6c:	fa0f f38e 	sxth.w	r3, lr
 8018d70:	fb00 1103 	mla	r1, r0, r3, r1
 8018d74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018d76:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018d7a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018d7e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018d82:	f1bc 0f00 	cmp.w	ip, #0
 8018d86:	d007      	beq.n	8018d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018d88:	005b      	lsls	r3, r3, #1
 8018d8a:	eb0a 0003 	add.w	r0, sl, r3
 8018d8e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018d92:	930c      	str	r3, [sp, #48]	; 0x30
 8018d94:	8843      	ldrh	r3, [r0, #2]
 8018d96:	930d      	str	r3, [sp, #52]	; 0x34
 8018d98:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018d9c:	fb12 f30c 	smulbb	r3, r2, ip
 8018da0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018da4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018da8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018dac:	10db      	asrs	r3, r3, #3
 8018dae:	ea40 000e 	orr.w	r0, r0, lr
 8018db2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018db6:	f1cc 0e10 	rsb	lr, ip, #16
 8018dba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018dbe:	ebae 0e02 	sub.w	lr, lr, r2
 8018dc2:	ea4a 0101 	orr.w	r1, sl, r1
 8018dc6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018dca:	4351      	muls	r1, r2
 8018dcc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018dce:	9f08      	ldr	r7, [sp, #32]
 8018dd0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018dd4:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018dd8:	0410      	lsls	r0, r2, #16
 8018dda:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018dde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018de2:	4310      	orrs	r0, r2
 8018de4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018de6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018de8:	0412      	lsls	r2, r2, #16
 8018dea:	fb03 e000 	mla	r0, r3, r0, lr
 8018dee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018df2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018df6:	ea42 020e 	orr.w	r2, r2, lr
 8018dfa:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018dfe:	fb03 0302 	mla	r3, r3, r2, r0
 8018e02:	0d5a      	lsrs	r2, r3, #21
 8018e04:	095b      	lsrs	r3, r3, #5
 8018e06:	f8b8 0000 	ldrh.w	r0, [r8]
 8018e0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e0e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018e12:	4313      	orrs	r3, r2
 8018e14:	b29b      	uxth	r3, r3
 8018e16:	1201      	asrs	r1, r0, #8
 8018e18:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018e1c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018e20:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018e24:	fb11 f107 	smulbb	r1, r1, r7
 8018e28:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018e2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e30:	00c0      	lsls	r0, r0, #3
 8018e32:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018e36:	b2c0      	uxtb	r0, r0
 8018e38:	10d9      	asrs	r1, r3, #3
 8018e3a:	00db      	lsls	r3, r3, #3
 8018e3c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018e40:	b2db      	uxtb	r3, r3
 8018e42:	fb10 f007 	smulbb	r0, r0, r7
 8018e46:	fa1f fc8c 	uxth.w	ip, ip
 8018e4a:	fb03 0302 	mla	r3, r3, r2, r0
 8018e4e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e52:	fb1e fe07 	smulbb	lr, lr, r7
 8018e56:	fb01 e102 	mla	r1, r1, r2, lr
 8018e5a:	b29a      	uxth	r2, r3
 8018e5c:	f10c 0301 	add.w	r3, ip, #1
 8018e60:	b289      	uxth	r1, r1
 8018e62:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018e66:	1c53      	adds	r3, r2, #1
 8018e68:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e6c:	1c4a      	adds	r2, r1, #1
 8018e6e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e7a:	0949      	lsrs	r1, r1, #5
 8018e7c:	ea43 030c 	orr.w	r3, r3, ip
 8018e80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e84:	430b      	orrs	r3, r1
 8018e86:	f8a8 3000 	strh.w	r3, [r8]
 8018e8a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018e8c:	441c      	add	r4, r3
 8018e8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e90:	f108 0802 	add.w	r8, r8, #2
 8018e94:	441e      	add	r6, r3
 8018e96:	f109 39ff 	add.w	r9, r9, #4294967295
 8018e9a:	e74a      	b.n	8018d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8018e9c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018e9e:	441c      	add	r4, r3
 8018ea0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018ea2:	441e      	add	r6, r3
 8018ea4:	9b07      	ldr	r3, [sp, #28]
 8018ea6:	3302      	adds	r3, #2
 8018ea8:	3d01      	subs	r5, #1
 8018eaa:	9307      	str	r3, [sp, #28]
 8018eac:	e722      	b.n	8018cf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018eae:	d022      	beq.n	8018ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018eb0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018eb2:	1e6b      	subs	r3, r5, #1
 8018eb4:	fb00 4003 	mla	r0, r0, r3, r4
 8018eb8:	1400      	asrs	r0, r0, #16
 8018eba:	f53f af37 	bmi.w	8018d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ebe:	3901      	subs	r1, #1
 8018ec0:	4288      	cmp	r0, r1
 8018ec2:	f6bf af33 	bge.w	8018d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ec6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018ec8:	fb01 6303 	mla	r3, r1, r3, r6
 8018ecc:	141b      	asrs	r3, r3, #16
 8018ece:	f53f af2d 	bmi.w	8018d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ed2:	3a01      	subs	r2, #1
 8018ed4:	4293      	cmp	r3, r2
 8018ed6:	f6bf af29 	bge.w	8018d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018eda:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018ede:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018ee2:	46a8      	mov	r8, r5
 8018ee4:	f1b8 0f00 	cmp.w	r8, #0
 8018ee8:	dc5e      	bgt.n	8018fa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018eea:	9b07      	ldr	r3, [sp, #28]
 8018eec:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018ef0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018ef4:	9307      	str	r3, [sp, #28]
 8018ef6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ef8:	2b00      	cmp	r3, #0
 8018efa:	f340 80f6 	ble.w	80190ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018efe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f02:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f06:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f0c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f10:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f14:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f18:	eef0 6a48 	vmov.f32	s13, s16
 8018f1c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f24:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f28:	ee16 4a90 	vmov	r4, s13
 8018f2c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f30:	eef0 6a68 	vmov.f32	s13, s17
 8018f34:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f38:	ee18 2a10 	vmov	r2, s16
 8018f3c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f40:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f44:	ee18 2a90 	vmov	r2, s17
 8018f48:	9327      	str	r3, [sp, #156]	; 0x9c
 8018f4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f50:	9328      	str	r3, [sp, #160]	; 0xa0
 8018f52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f56:	3b01      	subs	r3, #1
 8018f58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f5c:	930a      	str	r3, [sp, #40]	; 0x28
 8018f5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f60:	ee16 6a90 	vmov	r6, s13
 8018f64:	bf14      	ite	ne
 8018f66:	461d      	movne	r5, r3
 8018f68:	4615      	moveq	r5, r2
 8018f6a:	eef0 8a67 	vmov.f32	s17, s15
 8018f6e:	eeb0 8a47 	vmov.f32	s16, s14
 8018f72:	e6b0      	b.n	8018cd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018f74:	f111 0a01 	adds.w	sl, r1, #1
 8018f78:	d487      	bmi.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f7a:	45d6      	cmp	lr, sl
 8018f7c:	db85      	blt.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f7e:	f110 0a01 	adds.w	sl, r0, #1
 8018f82:	d482      	bmi.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f84:	4553      	cmp	r3, sl
 8018f86:	db80      	blt.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f88:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018f8a:	9101      	str	r1, [sp, #4]
 8018f8c:	b21b      	sxth	r3, r3
 8018f8e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018f92:	9300      	str	r3, [sp, #0]
 8018f94:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018f98:	fa0f f38e 	sxth.w	r3, lr
 8018f9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f9e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018fa0:	4641      	mov	r1, r8
 8018fa2:	f7ff fd95 	bl	8018ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018fa6:	e770      	b.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018fa8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018faa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018fac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018fb0:	1430      	asrs	r0, r6, #16
 8018fb2:	1423      	asrs	r3, r4, #16
 8018fb4:	fb01 3000 	mla	r0, r1, r0, r3
 8018fb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fba:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018fbe:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018fc2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018fc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018fca:	8858      	ldrh	r0, [r3, #2]
 8018fcc:	f1be 0f00 	cmp.w	lr, #0
 8018fd0:	d00b      	beq.n	8018fea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018fd2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018fd6:	3901      	subs	r1, #1
 8018fd8:	0049      	lsls	r1, r1, #1
 8018fda:	3102      	adds	r1, #2
 8018fdc:	eb03 0b01 	add.w	fp, r3, r1
 8018fe0:	5a5b      	ldrh	r3, [r3, r1]
 8018fe2:	930e      	str	r3, [sp, #56]	; 0x38
 8018fe4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018fe8:	930f      	str	r3, [sp, #60]	; 0x3c
 8018fea:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018fee:	fb12 f30e 	smulbb	r3, r2, lr
 8018ff2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018ff6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018ffa:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018ffe:	10db      	asrs	r3, r3, #3
 8019000:	ea41 010c 	orr.w	r1, r1, ip
 8019004:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019008:	f1ce 0c10 	rsb	ip, lr, #16
 801900c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019010:	ebac 0c02 	sub.w	ip, ip, r2
 8019014:	ea4b 0000 	orr.w	r0, fp, r0
 8019018:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801901c:	4350      	muls	r0, r2
 801901e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019020:	9f08      	ldr	r7, [sp, #32]
 8019022:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019026:	fb0c 0c01 	mla	ip, ip, r1, r0
 801902a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801902e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8019032:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019034:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019036:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801903a:	0412      	lsls	r2, r2, #16
 801903c:	ea4b 0101 	orr.w	r1, fp, r1
 8019040:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019044:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019048:	fb03 c101 	mla	r1, r3, r1, ip
 801904c:	4302      	orrs	r2, r0
 801904e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019052:	fb03 1202 	mla	r2, r3, r2, r1
 8019056:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801905a:	0952      	lsrs	r2, r2, #5
 801905c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8019060:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019064:	f8b9 2000 	ldrh.w	r2, [r9]
 8019068:	ea4b 0303 	orr.w	r3, fp, r3
 801906c:	b29b      	uxth	r3, r3
 801906e:	1211      	asrs	r1, r2, #8
 8019070:	1218      	asrs	r0, r3, #8
 8019072:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019076:	fb11 f107 	smulbb	r1, r1, r7
 801907a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801907e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019082:	00d2      	lsls	r2, r2, #3
 8019084:	fb00 100a 	mla	r0, r0, sl, r1
 8019088:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801908c:	10d9      	asrs	r1, r3, #3
 801908e:	b2d2      	uxtb	r2, r2
 8019090:	00db      	lsls	r3, r3, #3
 8019092:	fb1c fc07 	smulbb	ip, ip, r7
 8019096:	fb12 f207 	smulbb	r2, r2, r7
 801909a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801909e:	b2db      	uxtb	r3, r3
 80190a0:	b280      	uxth	r0, r0
 80190a2:	fb01 c10a 	mla	r1, r1, sl, ip
 80190a6:	fb03 230a 	mla	r3, r3, sl, r2
 80190aa:	b29b      	uxth	r3, r3
 80190ac:	b289      	uxth	r1, r1
 80190ae:	1c42      	adds	r2, r0, #1
 80190b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80190b4:	f101 0c01 	add.w	ip, r1, #1
 80190b8:	1c5a      	adds	r2, r3, #1
 80190ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80190be:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80190c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80190c4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80190c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80190cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80190d0:	4310      	orrs	r0, r2
 80190d2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80190d6:	441c      	add	r4, r3
 80190d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80190da:	ea40 000c 	orr.w	r0, r0, ip
 80190de:	f829 0b02 	strh.w	r0, [r9], #2
 80190e2:	441e      	add	r6, r3
 80190e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80190e8:	e6fc      	b.n	8018ee4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80190ea:	b013      	add	sp, #76	; 0x4c
 80190ec:	ecbd 8b08 	vpop	{d8-d11}
 80190f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80190f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80190f8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80190fc:	fb06 5c03 	mla	ip, r6, r3, r5
 8019100:	2e00      	cmp	r6, #0
 8019102:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8019106:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801910a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801910e:	8808      	ldrh	r0, [r1, #0]
 8019110:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019114:	db2e      	blt.n	8019174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019116:	45b0      	cmp	r8, r6
 8019118:	dd2c      	ble.n	8019174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801911a:	2d00      	cmp	r5, #0
 801911c:	db28      	blt.n	8019170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801911e:	42ab      	cmp	r3, r5
 8019120:	dd26      	ble.n	8019170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019122:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8019126:	1c6a      	adds	r2, r5, #1
 8019128:	d427      	bmi.n	801917a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801912a:	4293      	cmp	r3, r2
 801912c:	dd25      	ble.n	801917a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801912e:	b324      	cbz	r4, 801917a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019130:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8019134:	3601      	adds	r6, #1
 8019136:	d424      	bmi.n	8019182 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019138:	45b0      	cmp	r8, r6
 801913a:	dd22      	ble.n	8019182 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801913c:	b31f      	cbz	r7, 8019186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801913e:	2d00      	cmp	r5, #0
 8019140:	db1d      	blt.n	801917e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019142:	42ab      	cmp	r3, r5
 8019144:	dd1b      	ble.n	801917e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019146:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801914a:	3501      	adds	r5, #1
 801914c:	d405      	bmi.n	801915a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801914e:	42ab      	cmp	r3, r5
 8019150:	dd03      	ble.n	801915a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019152:	b124      	cbz	r4, 801915e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019154:	3301      	adds	r3, #1
 8019156:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801915a:	2c0f      	cmp	r4, #15
 801915c:	d801      	bhi.n	8019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801915e:	2f0f      	cmp	r7, #15
 8019160:	d914      	bls.n	801918c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8019162:	4b27      	ldr	r3, [pc, #156]	; (8019200 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019164:	4a27      	ldr	r2, [pc, #156]	; (8019204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8019166:	4828      	ldr	r0, [pc, #160]	; (8019208 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8019168:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801916c:	f002 fcb8 	bl	801bae0 <__assert_func>
 8019170:	4684      	mov	ip, r0
 8019172:	e7d8      	b.n	8019126 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019174:	4602      	mov	r2, r0
 8019176:	4684      	mov	ip, r0
 8019178:	e7dc      	b.n	8019134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801917a:	4602      	mov	r2, r0
 801917c:	e7da      	b.n	8019134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801917e:	4606      	mov	r6, r0
 8019180:	e7e3      	b.n	801914a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8019182:	4606      	mov	r6, r0
 8019184:	e7e9      	b.n	801915a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019186:	2c0f      	cmp	r4, #15
 8019188:	d8eb      	bhi.n	8019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801918a:	4606      	mov	r6, r0
 801918c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019190:	fb14 f307 	smulbb	r3, r4, r7
 8019194:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019198:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801919c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80191a0:	10db      	asrs	r3, r3, #3
 80191a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80191a6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80191aa:	f1c7 0510 	rsb	r5, r7, #16
 80191ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80191b2:	1b2d      	subs	r5, r5, r4
 80191b4:	ea4e 0202 	orr.w	r2, lr, r2
 80191b8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80191bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80191c0:	4354      	muls	r4, r2
 80191c2:	fb05 450c 	mla	r5, r5, ip, r4
 80191c6:	0404      	lsls	r4, r0, #16
 80191c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80191cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191d0:	4320      	orrs	r0, r4
 80191d2:	fb03 5400 	mla	r4, r3, r0, r5
 80191d6:	0430      	lsls	r0, r6, #16
 80191d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80191dc:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80191e0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80191e4:	4330      	orrs	r0, r6
 80191e6:	fb07 4000 	mla	r0, r7, r0, r4
 80191ea:	0d43      	lsrs	r3, r0, #21
 80191ec:	0940      	lsrs	r0, r0, #5
 80191ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80191f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191f6:	4318      	orrs	r0, r3
 80191f8:	8008      	strh	r0, [r1, #0]
 80191fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80191fe:	bf00      	nop
 8019200:	0801f996 	.word	0x0801f996
 8019204:	0802000f 	.word	0x0802000f
 8019208:	0801fa1a 	.word	0x0801fa1a

0801920c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801920c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019210:	ed2d 8b08 	vpush	{d8-d11}
 8019214:	b08f      	sub	sp, #60	; 0x3c
 8019216:	461d      	mov	r5, r3
 8019218:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801921a:	920c      	str	r2, [sp, #48]	; 0x30
 801921c:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8019220:	9107      	str	r1, [sp, #28]
 8019222:	6859      	ldr	r1, [r3, #4]
 8019224:	681b      	ldr	r3, [r3, #0]
 8019226:	900d      	str	r0, [sp, #52]	; 0x34
 8019228:	fb01 2707 	mla	r7, r1, r7, r2
 801922c:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8019230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019232:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8019236:	f8d3 8000 	ldr.w	r8, [r3]
 801923a:	eeb0 aa40 	vmov.f32	s20, s0
 801923e:	eef0 9a60 	vmov.f32	s19, s1
 8019242:	eeb0 9a41 	vmov.f32	s18, s2
 8019246:	eeb0 8a62 	vmov.f32	s16, s5
 801924a:	eef0 8a43 	vmov.f32	s17, s6
 801924e:	eef0 ba44 	vmov.f32	s23, s8
 8019252:	eeb0 ba64 	vmov.f32	s22, s9
 8019256:	eef0 aa45 	vmov.f32	s21, s10
 801925a:	9b07      	ldr	r3, [sp, #28]
 801925c:	2b00      	cmp	r3, #0
 801925e:	dc03      	bgt.n	8019268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019260:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019262:	2b00      	cmp	r3, #0
 8019264:	f340 8181 	ble.w	801956a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019268:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801926a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801926e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019272:	1e48      	subs	r0, r1, #1
 8019274:	f102 3cff 	add.w	ip, r2, #4294967295
 8019278:	2d00      	cmp	r5, #0
 801927a:	f340 809b 	ble.w	80193b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801927e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019282:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019286:	d406      	bmi.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019288:	4586      	cmp	lr, r0
 801928a:	da04      	bge.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801928c:	2b00      	cmp	r3, #0
 801928e:	db02      	blt.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019290:	4563      	cmp	r3, ip
 8019292:	f2c0 8090 	blt.w	80193b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8019296:	f11e 0e01 	adds.w	lr, lr, #1
 801929a:	f100 8084 	bmi.w	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801929e:	4571      	cmp	r1, lr
 80192a0:	f2c0 8081 	blt.w	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80192a4:	3301      	adds	r3, #1
 80192a6:	d47e      	bmi.n	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80192a8:	429a      	cmp	r2, r3
 80192aa:	db7c      	blt.n	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80192ac:	46aa      	mov	sl, r5
 80192ae:	46b9      	mov	r9, r7
 80192b0:	f1ba 0f00 	cmp.w	sl, #0
 80192b4:	f340 8099 	ble.w	80193ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80192b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80192ba:	1421      	asrs	r1, r4, #16
 80192bc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80192c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80192c4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80192c8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80192cc:	f100 80d0 	bmi.w	8019470 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80192d0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80192d4:	4559      	cmp	r1, fp
 80192d6:	f280 80cb 	bge.w	8019470 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80192da:	2800      	cmp	r0, #0
 80192dc:	f2c0 80c8 	blt.w	8019470 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80192e0:	f103 3bff 	add.w	fp, r3, #4294967295
 80192e4:	4558      	cmp	r0, fp
 80192e6:	f280 80c3 	bge.w	8019470 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80192ea:	fa0f fe8e 	sxth.w	lr, lr
 80192ee:	fb00 110e 	mla	r1, r0, lr, r1
 80192f2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80192f6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80192fa:	8841      	ldrh	r1, [r0, #2]
 80192fc:	f1bc 0f00 	cmp.w	ip, #0
 8019300:	d00b      	beq.n	801931a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019302:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8019306:	3b01      	subs	r3, #1
 8019308:	005b      	lsls	r3, r3, #1
 801930a:	3302      	adds	r3, #2
 801930c:	eb00 0e03 	add.w	lr, r0, r3
 8019310:	5ac3      	ldrh	r3, [r0, r3]
 8019312:	9308      	str	r3, [sp, #32]
 8019314:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8019318:	9309      	str	r3, [sp, #36]	; 0x24
 801931a:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801931e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019322:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019326:	ea40 000b 	orr.w	r0, r0, fp
 801932a:	fb12 f30c 	smulbb	r3, r2, ip
 801932e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019332:	10db      	asrs	r3, r3, #3
 8019334:	f1cc 0e10 	rsb	lr, ip, #16
 8019338:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801933c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019340:	ebae 0e02 	sub.w	lr, lr, r2
 8019344:	ea4b 0101 	orr.w	r1, fp, r1
 8019348:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801934c:	4351      	muls	r1, r2
 801934e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019350:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019354:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019358:	0410      	lsls	r0, r2, #16
 801935a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801935e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019362:	4310      	orrs	r0, r2
 8019364:	9a08      	ldr	r2, [sp, #32]
 8019366:	9908      	ldr	r1, [sp, #32]
 8019368:	0412      	lsls	r2, r2, #16
 801936a:	fb03 e000 	mla	r0, r3, r0, lr
 801936e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019372:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019376:	ea42 020e 	orr.w	r2, r2, lr
 801937a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801937e:	fb03 0302 	mla	r3, r3, r2, r0
 8019382:	0d5a      	lsrs	r2, r3, #21
 8019384:	095b      	lsrs	r3, r3, #5
 8019386:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801938a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801938e:	4313      	orrs	r3, r2
 8019390:	f8a9 3000 	strh.w	r3, [r9]
 8019394:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019396:	441c      	add	r4, r3
 8019398:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801939a:	f109 0902 	add.w	r9, r9, #2
 801939e:	441e      	add	r6, r3
 80193a0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80193a4:	e784      	b.n	80192b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80193a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80193a8:	441c      	add	r4, r3
 80193aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80193ac:	3d01      	subs	r5, #1
 80193ae:	441e      	add	r6, r3
 80193b0:	3702      	adds	r7, #2
 80193b2:	e761      	b.n	8019278 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80193b4:	d01d      	beq.n	80193f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80193b6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80193b8:	1e6b      	subs	r3, r5, #1
 80193ba:	fb00 4003 	mla	r0, r0, r3, r4
 80193be:	1400      	asrs	r0, r0, #16
 80193c0:	f53f af74 	bmi.w	80192ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80193c4:	3901      	subs	r1, #1
 80193c6:	4288      	cmp	r0, r1
 80193c8:	f6bf af70 	bge.w	80192ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80193cc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80193ce:	fb01 6303 	mla	r3, r1, r3, r6
 80193d2:	141b      	asrs	r3, r3, #16
 80193d4:	f53f af6a 	bmi.w	80192ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80193d8:	3a01      	subs	r2, #1
 80193da:	4293      	cmp	r3, r2
 80193dc:	f6bf af66 	bge.w	80192ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80193e0:	46a9      	mov	r9, r5
 80193e2:	46ba      	mov	sl, r7
 80193e4:	f1b9 0f00 	cmp.w	r9, #0
 80193e8:	dc5a      	bgt.n	80194a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80193ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80193ee:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80193f2:	9b07      	ldr	r3, [sp, #28]
 80193f4:	2b00      	cmp	r3, #0
 80193f6:	f340 80b8 	ble.w	801956a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80193fa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80193fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019402:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019406:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019408:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801940c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019410:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019414:	eef0 6a48 	vmov.f32	s13, s16
 8019418:	ee69 7a27 	vmul.f32	s15, s18, s15
 801941c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019420:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019424:	ee16 4a90 	vmov	r4, s13
 8019428:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801942c:	eef0 6a68 	vmov.f32	s13, s17
 8019430:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019434:	ee18 2a10 	vmov	r2, s16
 8019438:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801943c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019440:	ee18 2a90 	vmov	r2, s17
 8019444:	9323      	str	r3, [sp, #140]	; 0x8c
 8019446:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019448:	fb92 f3f3 	sdiv	r3, r2, r3
 801944c:	9324      	str	r3, [sp, #144]	; 0x90
 801944e:	9b07      	ldr	r3, [sp, #28]
 8019450:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019452:	3b01      	subs	r3, #1
 8019454:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019458:	9307      	str	r3, [sp, #28]
 801945a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801945c:	ee16 6a90 	vmov	r6, s13
 8019460:	bf14      	ite	ne
 8019462:	461d      	movne	r5, r3
 8019464:	4615      	moveq	r5, r2
 8019466:	eef0 8a67 	vmov.f32	s17, s15
 801946a:	eeb0 8a47 	vmov.f32	s16, s14
 801946e:	e6f4      	b.n	801925a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8019470:	f111 0b01 	adds.w	fp, r1, #1
 8019474:	d48e      	bmi.n	8019394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019476:	45de      	cmp	lr, fp
 8019478:	db8c      	blt.n	8019394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801947a:	f110 0b01 	adds.w	fp, r0, #1
 801947e:	d489      	bmi.n	8019394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019480:	455b      	cmp	r3, fp
 8019482:	db87      	blt.n	8019394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019484:	b21b      	sxth	r3, r3
 8019486:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801948a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801948e:	9300      	str	r3, [sp, #0]
 8019490:	4642      	mov	r2, r8
 8019492:	fa0f f38e 	sxth.w	r3, lr
 8019496:	4649      	mov	r1, r9
 8019498:	980d      	ldr	r0, [sp, #52]	; 0x34
 801949a:	f7ff fe2b 	bl	80190f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801949e:	e779      	b.n	8019394 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80194a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80194a2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80194a6:	1420      	asrs	r0, r4, #16
 80194a8:	1431      	asrs	r1, r6, #16
 80194aa:	fb03 0101 	mla	r1, r3, r1, r0
 80194ae:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80194b2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80194b6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80194ba:	8841      	ldrh	r1, [r0, #2]
 80194bc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80194c0:	f1be 0f00 	cmp.w	lr, #0
 80194c4:	d00b      	beq.n	80194de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80194c6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80194ca:	3b01      	subs	r3, #1
 80194cc:	005b      	lsls	r3, r3, #1
 80194ce:	3302      	adds	r3, #2
 80194d0:	eb00 0b03 	add.w	fp, r0, r3
 80194d4:	5ac3      	ldrh	r3, [r0, r3]
 80194d6:	930a      	str	r3, [sp, #40]	; 0x28
 80194d8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80194dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80194de:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80194e2:	fb12 f30e 	smulbb	r3, r2, lr
 80194e6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80194ea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80194ee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80194f2:	10db      	asrs	r3, r3, #3
 80194f4:	ea40 000c 	orr.w	r0, r0, ip
 80194f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80194fc:	f1ce 0c10 	rsb	ip, lr, #16
 8019500:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019504:	ebac 0c02 	sub.w	ip, ip, r2
 8019508:	ea4b 0101 	orr.w	r1, fp, r1
 801950c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019510:	4351      	muls	r1, r2
 8019512:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019514:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019518:	fb0c 1c00 	mla	ip, ip, r0, r1
 801951c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019520:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8019524:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019526:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019528:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801952c:	0412      	lsls	r2, r2, #16
 801952e:	ea4b 0000 	orr.w	r0, fp, r0
 8019532:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019536:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801953a:	fb03 c000 	mla	r0, r3, r0, ip
 801953e:	ea42 0b0b 	orr.w	fp, r2, fp
 8019542:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019546:	fb03 000b 	mla	r0, r3, fp, r0
 801954a:	0d43      	lsrs	r3, r0, #21
 801954c:	0940      	lsrs	r0, r0, #5
 801954e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019552:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019556:	4318      	orrs	r0, r3
 8019558:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801955a:	f82a 0b02 	strh.w	r0, [sl], #2
 801955e:	441c      	add	r4, r3
 8019560:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019562:	f109 39ff 	add.w	r9, r9, #4294967295
 8019566:	441e      	add	r6, r3
 8019568:	e73c      	b.n	80193e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801956a:	b00f      	add	sp, #60	; 0x3c
 801956c:	ecbd 8b08 	vpop	{d8-d11}
 8019570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8019574:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019578:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801957c:	fb04 5603 	mla	r6, r4, r3, r5
 8019580:	2c00      	cmp	r4, #0
 8019582:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019586:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801958a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801958e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8019592:	db36      	blt.n	8019602 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019594:	45a6      	cmp	lr, r4
 8019596:	dd34      	ble.n	8019602 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019598:	2d00      	cmp	r5, #0
 801959a:	db30      	blt.n	80195fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801959c:	42ab      	cmp	r3, r5
 801959e:	dd2e      	ble.n	80195fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 80195a0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80195a4:	1c6e      	adds	r6, r5, #1
 80195a6:	d42f      	bmi.n	8019608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80195a8:	42b3      	cmp	r3, r6
 80195aa:	dd2d      	ble.n	8019608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80195ac:	b370      	cbz	r0, 801960c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195ae:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80195b2:	3401      	adds	r4, #1
 80195b4:	d42e      	bmi.n	8019614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80195b6:	45a6      	cmp	lr, r4
 80195b8:	dd2c      	ble.n	8019614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80195ba:	b377      	cbz	r7, 801961a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 80195bc:	2d00      	cmp	r5, #0
 80195be:	db27      	blt.n	8019610 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80195c0:	42ab      	cmp	r3, r5
 80195c2:	dd25      	ble.n	8019610 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80195c4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80195c8:	3501      	adds	r5, #1
 80195ca:	d429      	bmi.n	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80195cc:	42ab      	cmp	r3, r5
 80195ce:	dd27      	ble.n	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80195d0:	b340      	cbz	r0, 8019624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80195d2:	3301      	adds	r3, #1
 80195d4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80195d8:	280f      	cmp	r0, #15
 80195da:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80195de:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80195e2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80195e6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80195ea:	d801      	bhi.n	80195f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80195ec:	2f0f      	cmp	r7, #15
 80195ee:	d91b      	bls.n	8019628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80195f0:	4b8d      	ldr	r3, [pc, #564]	; (8019828 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80195f2:	4a8e      	ldr	r2, [pc, #568]	; (801982c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80195f4:	488e      	ldr	r0, [pc, #568]	; (8019830 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80195f6:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80195fa:	f002 fa71 	bl	801bae0 <__assert_func>
 80195fe:	2200      	movs	r2, #0
 8019600:	e7d0      	b.n	80195a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 8019602:	2600      	movs	r6, #0
 8019604:	4632      	mov	r2, r6
 8019606:	e7d4      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019608:	2600      	movs	r6, #0
 801960a:	e7d2      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801960c:	4606      	mov	r6, r0
 801960e:	e7d0      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019610:	2400      	movs	r4, #0
 8019612:	e7d9      	b.n	80195c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 8019614:	2300      	movs	r3, #0
 8019616:	461c      	mov	r4, r3
 8019618:	e7de      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801961a:	463b      	mov	r3, r7
 801961c:	463c      	mov	r4, r7
 801961e:	e7db      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019620:	2300      	movs	r3, #0
 8019622:	e7d9      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019624:	4603      	mov	r3, r0
 8019626:	e7d7      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019628:	b280      	uxth	r0, r0
 801962a:	b2bf      	uxth	r7, r7
 801962c:	fb07 fe00 	mul.w	lr, r7, r0
 8019630:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019634:	0100      	lsls	r0, r0, #4
 8019636:	eba0 0c0e 	sub.w	ip, r0, lr
 801963a:	b2bf      	uxth	r7, r7
 801963c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019640:	fa1f fc8c 	uxth.w	ip, ip
 8019644:	1bed      	subs	r5, r5, r7
 8019646:	b2ad      	uxth	r5, r5
 8019648:	fb0a f00c 	mul.w	r0, sl, ip
 801964c:	fb0b 0005 	mla	r0, fp, r5, r0
 8019650:	fb07 0009 	mla	r0, r7, r9, r0
 8019654:	fb0e 0008 	mla	r0, lr, r8, r0
 8019658:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801965c:	9001      	str	r0, [sp, #4]
 801965e:	2800      	cmp	r0, #0
 8019660:	f000 80de 	beq.w	8019820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8019664:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019668:	d018      	beq.n	801969c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 801966a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801966e:	fb0b f000 	mul.w	r0, fp, r0
 8019672:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019676:	fb0b fb02 	mul.w	fp, fp, r2
 801967a:	0a02      	lsrs	r2, r0, #8
 801967c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019680:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019684:	4402      	add	r2, r0
 8019686:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801968a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801968e:	0a12      	lsrs	r2, r2, #8
 8019690:	0a00      	lsrs	r0, r0, #8
 8019692:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019696:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801969a:	4302      	orrs	r2, r0
 801969c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80196a0:	d01a      	beq.n	80196d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 80196a2:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80196a6:	fb0a f000 	mul.w	r0, sl, r0
 80196aa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80196ae:	fb0a fa06 	mul.w	sl, sl, r6
 80196b2:	0a06      	lsrs	r6, r0, #8
 80196b4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80196b8:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80196bc:	4406      	add	r6, r0
 80196be:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80196c2:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80196c6:	0a36      	lsrs	r6, r6, #8
 80196c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80196cc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80196d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80196d4:	ea46 060a 	orr.w	r6, r6, sl
 80196d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80196dc:	d01b      	beq.n	8019716 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 80196de:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80196e2:	fb09 fa0a 	mul.w	sl, r9, sl
 80196e6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80196ea:	fb09 f004 	mul.w	r0, r9, r4
 80196ee:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80196f2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80196f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80196fa:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80196fe:	4454      	add	r4, sl
 8019700:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8019704:	0a24      	lsrs	r4, r4, #8
 8019706:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801970a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801970e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019712:	ea44 0409 	orr.w	r4, r4, r9
 8019716:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801971a:	d01b      	beq.n	8019754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 801971c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019720:	fb08 f909 	mul.w	r9, r8, r9
 8019724:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019728:	fb08 f003 	mul.w	r0, r8, r3
 801972c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019730:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019734:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019738:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801973c:	444b      	add	r3, r9
 801973e:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8019742:	0a1b      	lsrs	r3, r3, #8
 8019744:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019748:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801974c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019750:	ea43 0308 	orr.w	r3, r3, r8
 8019754:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019758:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801975c:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8019760:	fb0c f808 	mul.w	r8, ip, r8
 8019764:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019768:	fb0c f606 	mul.w	r6, ip, r6
 801976c:	fb05 8909 	mla	r9, r5, r9, r8
 8019770:	fb05 6502 	mla	r5, r5, r2, r6
 8019774:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019778:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801977c:	9a01      	ldr	r2, [sp, #4]
 801977e:	8808      	ldrh	r0, [r1, #0]
 8019780:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019784:	fb07 9908 	mla	r9, r7, r8, r9
 8019788:	fb07 5704 	mla	r7, r7, r4, r5
 801978c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8019790:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019794:	b2b6      	uxth	r6, r6
 8019796:	fb0e 9808 	mla	r8, lr, r8, r9
 801979a:	fb0e 7e03 	mla	lr, lr, r3, r7
 801979e:	4372      	muls	r2, r6
 80197a0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80197a4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80197a8:	1c53      	adds	r3, r2, #1
 80197aa:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80197ae:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80197b2:	ea48 0e0e 	orr.w	lr, r8, lr
 80197b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80197ba:	1205      	asrs	r5, r0, #8
 80197bc:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80197c0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80197c4:	b2db      	uxtb	r3, r3
 80197c6:	fb12 f206 	smulbb	r2, r2, r6
 80197ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80197ce:	fb05 2503 	mla	r5, r5, r3, r2
 80197d2:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80197d6:	10c2      	asrs	r2, r0, #3
 80197d8:	fa5f fe8e 	uxtb.w	lr, lr
 80197dc:	00c0      	lsls	r0, r0, #3
 80197de:	fb14 f406 	smulbb	r4, r4, r6
 80197e2:	b2c0      	uxtb	r0, r0
 80197e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80197e8:	fb1e fe06 	smulbb	lr, lr, r6
 80197ec:	fb02 4203 	mla	r2, r2, r3, r4
 80197f0:	b2ad      	uxth	r5, r5
 80197f2:	fb00 e303 	mla	r3, r0, r3, lr
 80197f6:	b298      	uxth	r0, r3
 80197f8:	b294      	uxth	r4, r2
 80197fa:	1c6b      	adds	r3, r5, #1
 80197fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019800:	1c62      	adds	r2, r4, #1
 8019802:	1c43      	adds	r3, r0, #1
 8019804:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019808:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801980c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019810:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019814:	0952      	lsrs	r2, r2, #5
 8019816:	432b      	orrs	r3, r5
 8019818:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801981c:	4313      	orrs	r3, r2
 801981e:	800b      	strh	r3, [r1, #0]
 8019820:	b003      	add	sp, #12
 8019822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019826:	bf00      	nop
 8019828:	0801f996 	.word	0x0801f996
 801982c:	0801ff66 	.word	0x0801ff66
 8019830:	0801fa1a 	.word	0x0801fa1a

08019834 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019838:	ed2d 8b08 	vpush	{d8-d11}
 801983c:	b09d      	sub	sp, #116	; 0x74
 801983e:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8019842:	9219      	str	r2, [sp, #100]	; 0x64
 8019844:	9307      	str	r3, [sp, #28]
 8019846:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019848:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801984c:	931a      	str	r3, [sp, #104]	; 0x68
 801984e:	9117      	str	r1, [sp, #92]	; 0x5c
 8019850:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8019854:	901b      	str	r0, [sp, #108]	; 0x6c
 8019856:	6850      	ldr	r0, [r2, #4]
 8019858:	6812      	ldr	r2, [r2, #0]
 801985a:	fb00 1303 	mla	r3, r0, r3, r1
 801985e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019862:	930a      	str	r3, [sp, #40]	; 0x28
 8019864:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019866:	681b      	ldr	r3, [r3, #0]
 8019868:	9310      	str	r3, [sp, #64]	; 0x40
 801986a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801986e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019870:	eeb0 aa40 	vmov.f32	s20, s0
 8019874:	eef0 9a60 	vmov.f32	s19, s1
 8019878:	eeb0 9a41 	vmov.f32	s18, s2
 801987c:	eeb0 8a62 	vmov.f32	s16, s5
 8019880:	eef0 8a43 	vmov.f32	s17, s6
 8019884:	eef0 ba44 	vmov.f32	s23, s8
 8019888:	eeb0 ba64 	vmov.f32	s22, s9
 801988c:	eef0 aa45 	vmov.f32	s21, s10
 8019890:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019892:	2b00      	cmp	r3, #0
 8019894:	dc03      	bgt.n	801989e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019896:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019898:	2b00      	cmp	r3, #0
 801989a:	f340 8375 	ble.w	8019f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801989e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80198a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80198a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80198a8:	1e48      	subs	r0, r1, #1
 80198aa:	1e57      	subs	r7, r2, #1
 80198ac:	9b07      	ldr	r3, [sp, #28]
 80198ae:	2b00      	cmp	r3, #0
 80198b0:	f340 818e 	ble.w	8019bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80198b4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80198b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80198bc:	d406      	bmi.n	80198cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80198be:	4584      	cmp	ip, r0
 80198c0:	da04      	bge.n	80198cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80198c2:	2b00      	cmp	r3, #0
 80198c4:	db02      	blt.n	80198cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80198c6:	42bb      	cmp	r3, r7
 80198c8:	f2c0 8183 	blt.w	8019bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 80198cc:	f11c 0c01 	adds.w	ip, ip, #1
 80198d0:	f100 8173 	bmi.w	8019bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80198d4:	4561      	cmp	r1, ip
 80198d6:	f2c0 8170 	blt.w	8019bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80198da:	3301      	adds	r3, #1
 80198dc:	f100 816d 	bmi.w	8019bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80198e0:	429a      	cmp	r2, r3
 80198e2:	f2c0 816a 	blt.w	8019bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80198e6:	9b07      	ldr	r3, [sp, #28]
 80198e8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80198ea:	9318      	str	r3, [sp, #96]	; 0x60
 80198ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80198ee:	2b00      	cmp	r3, #0
 80198f0:	f340 818c 	ble.w	8019c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 80198f4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80198f6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80198f8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80198fc:	689b      	ldr	r3, [r3, #8]
 80198fe:	1422      	asrs	r2, r4, #16
 8019900:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019904:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019908:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801990c:	f100 81cd 	bmi.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019910:	f103 38ff 	add.w	r8, r3, #4294967295
 8019914:	4542      	cmp	r2, r8
 8019916:	f280 81c8 	bge.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801991a:	f1bc 0f00 	cmp.w	ip, #0
 801991e:	f2c0 81c4 	blt.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019922:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019926:	45c4      	cmp	ip, r8
 8019928:	f280 81bf 	bge.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801992c:	b21b      	sxth	r3, r3
 801992e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019932:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019934:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019938:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801993c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019940:	2800      	cmp	r0, #0
 8019942:	f000 81a9 	beq.w	8019c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8019946:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801994a:	950c      	str	r5, [sp, #48]	; 0x30
 801994c:	0e2d      	lsrs	r5, r5, #24
 801994e:	9513      	str	r5, [sp, #76]	; 0x4c
 8019950:	b181      	cbz	r1, 8019974 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019952:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019956:	3b01      	subs	r3, #1
 8019958:	009b      	lsls	r3, r3, #2
 801995a:	3304      	adds	r3, #4
 801995c:	eb08 0c03 	add.w	ip, r8, r3
 8019960:	f858 3003 	ldr.w	r3, [r8, r3]
 8019964:	9308      	str	r3, [sp, #32]
 8019966:	0e1b      	lsrs	r3, r3, #24
 8019968:	9311      	str	r3, [sp, #68]	; 0x44
 801996a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801996e:	930d      	str	r3, [sp, #52]	; 0x34
 8019970:	0e1b      	lsrs	r3, r3, #24
 8019972:	9314      	str	r3, [sp, #80]	; 0x50
 8019974:	b280      	uxth	r0, r0
 8019976:	b289      	uxth	r1, r1
 8019978:	fb00 f901 	mul.w	r9, r0, r1
 801997c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019980:	0100      	lsls	r0, r0, #4
 8019982:	eba0 0809 	sub.w	r8, r0, r9
 8019986:	b289      	uxth	r1, r1
 8019988:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801998c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801998e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019990:	fa1f f888 	uxth.w	r8, r8
 8019994:	1a5b      	subs	r3, r3, r1
 8019996:	b29b      	uxth	r3, r3
 8019998:	fb08 f000 	mul.w	r0, r8, r0
 801999c:	fb03 000e 	mla	r0, r3, lr, r0
 80199a0:	fb01 0005 	mla	r0, r1, r5, r0
 80199a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80199a6:	fb09 0005 	mla	r0, r9, r5, r0
 80199aa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80199ae:	2800      	cmp	r0, #0
 80199b0:	f000 80fa 	beq.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80199b4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80199b8:	d01b      	beq.n	80199f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80199ba:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80199be:	fb0e fa0a 	mul.w	sl, lr, sl
 80199c2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80199c6:	fb0e fe02 	mul.w	lr, lr, r2
 80199ca:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80199ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80199d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80199d6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80199da:	4452      	add	r2, sl
 80199dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80199e0:	0a12      	lsrs	r2, r2, #8
 80199e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80199ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80199ee:	ea42 020c 	orr.w	r2, r2, ip
 80199f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80199f4:	2dff      	cmp	r5, #255	; 0xff
 80199f6:	d021      	beq.n	8019a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80199f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80199fa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80199fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a00:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a04:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a10:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a20:	44de      	add	lr, fp
 8019a22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a36:	ea4e 050a 	orr.w	r5, lr, sl
 8019a3a:	950c      	str	r5, [sp, #48]	; 0x30
 8019a3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a3e:	2dff      	cmp	r5, #255	; 0xff
 8019a40:	d021      	beq.n	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019a42:	9d08      	ldr	r5, [sp, #32]
 8019a44:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019a48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a4a:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a4e:	9d08      	ldr	r5, [sp, #32]
 8019a50:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a54:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a56:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a5a:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a66:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a6a:	44de      	add	lr, fp
 8019a6c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a80:	ea4e 050a 	orr.w	r5, lr, sl
 8019a84:	9508      	str	r5, [sp, #32]
 8019a86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a88:	2dff      	cmp	r5, #255	; 0xff
 8019a8a:	d021      	beq.n	8019ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019a8c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a8e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019a92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a94:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a98:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a9a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a9e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019aa0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019aa4:	fb05 fa0a 	mul.w	sl, r5, sl
 8019aa8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019aac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019ab0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019ab4:	44de      	add	lr, fp
 8019ab6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019aba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019abe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ac2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ac6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019aca:	ea4e 050a 	orr.w	r5, lr, sl
 8019ace:	950d      	str	r5, [sp, #52]	; 0x34
 8019ad0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ad2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019ad6:	9d08      	ldr	r5, [sp, #32]
 8019ad8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019adc:	fb08 fc0c 	mul.w	ip, r8, ip
 8019ae0:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019ae4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019ae8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019aea:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019aee:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019af2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019af4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019af8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019afc:	fb08 f80e 	mul.w	r8, r8, lr
 8019b00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b04:	fb03 8202 	mla	r2, r3, r2, r8
 8019b08:	9b08      	ldr	r3, [sp, #32]
 8019b0a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019b0c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019b10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b12:	fb01 220a 	mla	r2, r1, sl, r2
 8019b16:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019b1a:	fb09 2901 	mla	r9, r9, r1, r2
 8019b1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019b20:	883b      	ldrh	r3, [r7, #0]
 8019b22:	4342      	muls	r2, r0
 8019b24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019b28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019b2c:	1c50      	adds	r0, r2, #1
 8019b2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019b32:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019b36:	ea4c 0c09 	orr.w	ip, ip, r9
 8019b3a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019b3e:	1219      	asrs	r1, r3, #8
 8019b40:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019b44:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019b48:	b2c0      	uxtb	r0, r0
 8019b4a:	fb12 f205 	smulbb	r2, r2, r5
 8019b4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019b52:	fb01 2100 	mla	r1, r1, r0, r2
 8019b56:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019b5a:	10da      	asrs	r2, r3, #3
 8019b5c:	fa5f fc8c 	uxtb.w	ip, ip
 8019b60:	00db      	lsls	r3, r3, #3
 8019b62:	fb1c fc05 	smulbb	ip, ip, r5
 8019b66:	b2db      	uxtb	r3, r3
 8019b68:	b289      	uxth	r1, r1
 8019b6a:	fb03 c300 	mla	r3, r3, r0, ip
 8019b6e:	fa1f fc83 	uxth.w	ip, r3
 8019b72:	1c4b      	adds	r3, r1, #1
 8019b74:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019b78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019b7c:	fb1e fe05 	smulbb	lr, lr, r5
 8019b80:	f10c 0301 	add.w	r3, ip, #1
 8019b84:	fb02 e200 	mla	r2, r2, r0, lr
 8019b88:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019b8c:	b292      	uxth	r2, r2
 8019b8e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019b92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019b96:	430b      	orrs	r3, r1
 8019b98:	1c51      	adds	r1, r2, #1
 8019b9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b9e:	0952      	lsrs	r2, r2, #5
 8019ba0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019ba4:	4313      	orrs	r3, r2
 8019ba6:	803b      	strh	r3, [r7, #0]
 8019ba8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019baa:	441c      	add	r4, r3
 8019bac:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019bae:	441e      	add	r6, r3
 8019bb0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019bb2:	3b01      	subs	r3, #1
 8019bb4:	3702      	adds	r7, #2
 8019bb6:	9318      	str	r3, [sp, #96]	; 0x60
 8019bb8:	e698      	b.n	80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019bba:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019bbc:	441c      	add	r4, r3
 8019bbe:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019bc0:	441e      	add	r6, r3
 8019bc2:	9b07      	ldr	r3, [sp, #28]
 8019bc4:	3b01      	subs	r3, #1
 8019bc6:	9307      	str	r3, [sp, #28]
 8019bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019bca:	3302      	adds	r3, #2
 8019bcc:	930a      	str	r3, [sp, #40]	; 0x28
 8019bce:	e66d      	b.n	80198ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019bd0:	d023      	beq.n	8019c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019bd2:	9b07      	ldr	r3, [sp, #28]
 8019bd4:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019bd6:	3b01      	subs	r3, #1
 8019bd8:	fb00 4003 	mla	r0, r0, r3, r4
 8019bdc:	1400      	asrs	r0, r0, #16
 8019bde:	f53f ae82 	bmi.w	80198e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019be2:	3901      	subs	r1, #1
 8019be4:	4288      	cmp	r0, r1
 8019be6:	f6bf ae7e 	bge.w	80198e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019bea:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019bec:	fb01 6303 	mla	r3, r1, r3, r6
 8019bf0:	141b      	asrs	r3, r3, #16
 8019bf2:	f53f ae78 	bmi.w	80198e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019bf6:	3a01      	subs	r2, #1
 8019bf8:	4293      	cmp	r3, r2
 8019bfa:	f6bf ae74 	bge.w	80198e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019bfe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019c02:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019c06:	f1bb 0f00 	cmp.w	fp, #0
 8019c0a:	dc6c      	bgt.n	8019ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019c0c:	9b07      	ldr	r3, [sp, #28]
 8019c0e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c14:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019c18:	930a      	str	r3, [sp, #40]	; 0x28
 8019c1a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019c1c:	2b00      	cmp	r3, #0
 8019c1e:	f340 81b3 	ble.w	8019f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019c22:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019c26:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019c2a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019c2e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019c30:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019c34:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019c38:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019c3c:	eef0 6a48 	vmov.f32	s13, s16
 8019c40:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019c44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c48:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019c4c:	ee16 4a90 	vmov	r4, s13
 8019c50:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019c54:	eef0 6a68 	vmov.f32	s13, s17
 8019c58:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019c5c:	ee18 2a10 	vmov	r2, s16
 8019c60:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c68:	ee18 2a90 	vmov	r2, s17
 8019c6c:	9331      	str	r3, [sp, #196]	; 0xc4
 8019c6e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019c70:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c74:	9332      	str	r3, [sp, #200]	; 0xc8
 8019c76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019c78:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019c7a:	3b01      	subs	r3, #1
 8019c7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c80:	9317      	str	r3, [sp, #92]	; 0x5c
 8019c82:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019c84:	bf08      	it	eq
 8019c86:	4613      	moveq	r3, r2
 8019c88:	ee16 6a90 	vmov	r6, s13
 8019c8c:	9307      	str	r3, [sp, #28]
 8019c8e:	eef0 8a67 	vmov.f32	s17, s15
 8019c92:	eeb0 8a47 	vmov.f32	s16, s14
 8019c96:	e5fb      	b.n	8019890 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019c98:	2900      	cmp	r1, #0
 8019c9a:	f43f ae6b 	beq.w	8019974 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019c9e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019ca2:	9308      	str	r3, [sp, #32]
 8019ca4:	0e1b      	lsrs	r3, r3, #24
 8019ca6:	9311      	str	r3, [sp, #68]	; 0x44
 8019ca8:	e664      	b.n	8019974 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019caa:	f112 0801 	adds.w	r8, r2, #1
 8019cae:	f53f af7b 	bmi.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019cb2:	4543      	cmp	r3, r8
 8019cb4:	f6ff af78 	blt.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019cb8:	f11c 0801 	adds.w	r8, ip, #1
 8019cbc:	f53f af74 	bmi.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019cc0:	45c6      	cmp	lr, r8
 8019cc2:	f6ff af71 	blt.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019cc6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019cc8:	9201      	str	r2, [sp, #4]
 8019cca:	fa0f f28e 	sxth.w	r2, lr
 8019cce:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019cd2:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019cd6:	9200      	str	r2, [sp, #0]
 8019cd8:	b21b      	sxth	r3, r3
 8019cda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019cdc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019cde:	4639      	mov	r1, r7
 8019ce0:	f7ff fc48 	bl	8019574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019ce4:	e760      	b.n	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019ce6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019ce8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019cea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019cee:	1427      	asrs	r7, r4, #16
 8019cf0:	1433      	asrs	r3, r6, #16
 8019cf2:	fb01 7303 	mla	r3, r1, r3, r7
 8019cf6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019cfa:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019cfe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019d02:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d06:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019d0a:	2a00      	cmp	r2, #0
 8019d0c:	f000 8133 	beq.w	8019f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019d10:	687d      	ldr	r5, [r7, #4]
 8019d12:	950e      	str	r5, [sp, #56]	; 0x38
 8019d14:	0e2d      	lsrs	r5, r5, #24
 8019d16:	9515      	str	r5, [sp, #84]	; 0x54
 8019d18:	b178      	cbz	r0, 8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019d1a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019d1e:	3901      	subs	r1, #1
 8019d20:	0089      	lsls	r1, r1, #2
 8019d22:	3104      	adds	r1, #4
 8019d24:	eb07 0e01 	add.w	lr, r7, r1
 8019d28:	5879      	ldr	r1, [r7, r1]
 8019d2a:	9109      	str	r1, [sp, #36]	; 0x24
 8019d2c:	0e09      	lsrs	r1, r1, #24
 8019d2e:	9112      	str	r1, [sp, #72]	; 0x48
 8019d30:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019d34:	910f      	str	r1, [sp, #60]	; 0x3c
 8019d36:	0e09      	lsrs	r1, r1, #24
 8019d38:	9116      	str	r1, [sp, #88]	; 0x58
 8019d3a:	b292      	uxth	r2, r2
 8019d3c:	b280      	uxth	r0, r0
 8019d3e:	fb02 f800 	mul.w	r8, r2, r0
 8019d42:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019d46:	0112      	lsls	r2, r2, #4
 8019d48:	eba2 0e08 	sub.w	lr, r2, r8
 8019d4c:	b280      	uxth	r0, r0
 8019d4e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019d52:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019d54:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d56:	fa1f fe8e 	uxth.w	lr, lr
 8019d5a:	1a12      	subs	r2, r2, r0
 8019d5c:	b292      	uxth	r2, r2
 8019d5e:	fb0e f101 	mul.w	r1, lr, r1
 8019d62:	fb02 110c 	mla	r1, r2, ip, r1
 8019d66:	fb00 1105 	mla	r1, r0, r5, r1
 8019d6a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d6c:	fb08 1105 	mla	r1, r8, r5, r1
 8019d70:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019d74:	2900      	cmp	r1, #0
 8019d76:	f000 80f5 	beq.w	8019f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019d7a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019d7e:	d019      	beq.n	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019d80:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019d84:	fb0c fa0a 	mul.w	sl, ip, sl
 8019d88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d8c:	fb0c fc03 	mul.w	ip, ip, r3
 8019d90:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019d94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d98:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019d9c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019da0:	4453      	add	r3, sl
 8019da2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019da6:	0a1b      	lsrs	r3, r3, #8
 8019da8:	0a3f      	lsrs	r7, r7, #8
 8019daa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019dae:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019db2:	433b      	orrs	r3, r7
 8019db4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019db6:	2dff      	cmp	r5, #255	; 0xff
 8019db8:	d020      	beq.n	8019dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019dba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019dbc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019dc0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019dc2:	436f      	muls	r7, r5
 8019dc4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019dc6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019dca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019dcc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019dd0:	fb05 fa0a 	mul.w	sl, r5, sl
 8019dd4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019dd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ddc:	44bc      	add	ip, r7
 8019dde:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019de2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019de6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019dee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019df2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019df6:	ea4c 050a 	orr.w	r5, ip, sl
 8019dfa:	950e      	str	r5, [sp, #56]	; 0x38
 8019dfc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019dfe:	2dff      	cmp	r5, #255	; 0xff
 8019e00:	d020      	beq.n	8019e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8019e02:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e04:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e08:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e0a:	436f      	muls	r7, r5
 8019e0c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e0e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e12:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e18:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e1c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019e20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e24:	44bc      	add	ip, r7
 8019e26:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019e2a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e3e:	ea4c 050a 	orr.w	r5, ip, sl
 8019e42:	9509      	str	r5, [sp, #36]	; 0x24
 8019e44:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e46:	2dff      	cmp	r5, #255	; 0xff
 8019e48:	d020      	beq.n	8019e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8019e4a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019e4c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e50:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e52:	436f      	muls	r7, r5
 8019e54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019e56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e5a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e5c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e60:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e64:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019e68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e6c:	44bc      	add	ip, r7
 8019e6e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019e72:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e86:	ea4c 050a 	orr.w	r5, ip, sl
 8019e8a:	950f      	str	r5, [sp, #60]	; 0x3c
 8019e8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e8e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e92:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e94:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019e98:	fb0e f707 	mul.w	r7, lr, r7
 8019e9c:	fb02 770c 	mla	r7, r2, ip, r7
 8019ea0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019ea4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019ea6:	fb00 770c 	mla	r7, r0, ip, r7
 8019eaa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019eae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019eb0:	fb08 770c 	mla	r7, r8, ip, r7
 8019eb4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019eb8:	fb0e fe0c 	mul.w	lr, lr, ip
 8019ebc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ec0:	fb02 e303 	mla	r3, r2, r3, lr
 8019ec4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019ec6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019ec8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019ecc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ece:	fb00 330a 	mla	r3, r0, sl, r3
 8019ed2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019ed6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019eda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019edc:	f8b9 0000 	ldrh.w	r0, [r9]
 8019ee0:	4359      	muls	r1, r3
 8019ee2:	0a3f      	lsrs	r7, r7, #8
 8019ee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ee8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019eec:	1c4b      	adds	r3, r1, #1
 8019eee:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019ef2:	ea47 070c 	orr.w	r7, r7, ip
 8019ef6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019efa:	1202      	asrs	r2, r0, #8
 8019efc:	0c3b      	lsrs	r3, r7, #16
 8019efe:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019f02:	b2c9      	uxtb	r1, r1
 8019f04:	fb13 f305 	smulbb	r3, r3, r5
 8019f08:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019f0c:	fb02 3201 	mla	r2, r2, r1, r3
 8019f10:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019f14:	10c3      	asrs	r3, r0, #3
 8019f16:	b2ff      	uxtb	r7, r7
 8019f18:	00c0      	lsls	r0, r0, #3
 8019f1a:	b2c0      	uxtb	r0, r0
 8019f1c:	fb17 f705 	smulbb	r7, r7, r5
 8019f20:	fb00 7001 	mla	r0, r0, r1, r7
 8019f24:	b292      	uxth	r2, r2
 8019f26:	fb1c fc05 	smulbb	ip, ip, r5
 8019f2a:	b280      	uxth	r0, r0
 8019f2c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019f30:	fb03 c301 	mla	r3, r3, r1, ip
 8019f34:	1c51      	adds	r1, r2, #1
 8019f36:	f100 0c01 	add.w	ip, r0, #1
 8019f3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019f3e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019f42:	b29b      	uxth	r3, r3
 8019f44:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f48:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019f4c:	ea4c 0202 	orr.w	r2, ip, r2
 8019f50:	f103 0c01 	add.w	ip, r3, #1
 8019f54:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019f58:	095b      	lsrs	r3, r3, #5
 8019f5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f5e:	431a      	orrs	r2, r3
 8019f60:	f8a9 2000 	strh.w	r2, [r9]
 8019f64:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019f66:	441c      	add	r4, r3
 8019f68:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019f6a:	f109 0902 	add.w	r9, r9, #2
 8019f6e:	441e      	add	r6, r3
 8019f70:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019f74:	e647      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8019f76:	2800      	cmp	r0, #0
 8019f78:	f43f aedf 	beq.w	8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019f7c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019f80:	9109      	str	r1, [sp, #36]	; 0x24
 8019f82:	0e09      	lsrs	r1, r1, #24
 8019f84:	9112      	str	r1, [sp, #72]	; 0x48
 8019f86:	e6d8      	b.n	8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019f88:	b01d      	add	sp, #116	; 0x74
 8019f8a:	ecbd 8b08 	vpop	{d8-d11}
 8019f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019f94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f98:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8019f9c:	fb04 5603 	mla	r6, r4, r3, r5
 8019fa0:	2c00      	cmp	r4, #0
 8019fa2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019fa6:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8019faa:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8019fae:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8019fb2:	db37      	blt.n	801a024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019fb4:	45a6      	cmp	lr, r4
 8019fb6:	dd35      	ble.n	801a024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019fb8:	2d00      	cmp	r5, #0
 8019fba:	db31      	blt.n	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019fbc:	42ab      	cmp	r3, r5
 8019fbe:	dd2f      	ble.n	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019fc0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8019fc4:	1c6e      	adds	r6, r5, #1
 8019fc6:	d430      	bmi.n	801a02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8019fc8:	42b3      	cmp	r3, r6
 8019fca:	dd2e      	ble.n	801a02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8019fcc:	b378      	cbz	r0, 801a02e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8019fce:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8019fd2:	3401      	adds	r4, #1
 8019fd4:	d42f      	bmi.n	801a036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8019fd6:	45a6      	cmp	lr, r4
 8019fd8:	dd2d      	ble.n	801a036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8019fda:	b37f      	cbz	r7, 801a03c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8019fdc:	2d00      	cmp	r5, #0
 8019fde:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8019fe2:	db26      	blt.n	801a032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019fe4:	42ab      	cmp	r3, r5
 8019fe6:	dd24      	ble.n	801a032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019fe8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019fec:	3501      	adds	r5, #1
 8019fee:	d428      	bmi.n	801a042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019ff0:	42ab      	cmp	r3, r5
 8019ff2:	dd26      	ble.n	801a042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019ff4:	b338      	cbz	r0, 801a046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8019ff6:	f8de 3004 	ldr.w	r3, [lr, #4]
 8019ffa:	280f      	cmp	r0, #15
 8019ffc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a000:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a004:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a008:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a00c:	d801      	bhi.n	801a012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801a00e:	2f0f      	cmp	r7, #15
 801a010:	d91b      	bls.n	801a04a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801a012:	4b87      	ldr	r3, [pc, #540]	; (801a230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801a014:	4a87      	ldr	r2, [pc, #540]	; (801a234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801a016:	4888      	ldr	r0, [pc, #544]	; (801a238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801a018:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801a01c:	f001 fd60 	bl	801bae0 <__assert_func>
 801a020:	2200      	movs	r2, #0
 801a022:	e7cf      	b.n	8019fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801a024:	2600      	movs	r6, #0
 801a026:	4632      	mov	r2, r6
 801a028:	e7d3      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a02a:	2600      	movs	r6, #0
 801a02c:	e7d1      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a02e:	4606      	mov	r6, r0
 801a030:	e7cf      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a032:	2400      	movs	r4, #0
 801a034:	e7da      	b.n	8019fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801a036:	2300      	movs	r3, #0
 801a038:	461c      	mov	r4, r3
 801a03a:	e7de      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a03c:	463b      	mov	r3, r7
 801a03e:	463c      	mov	r4, r7
 801a040:	e7db      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a042:	2300      	movs	r3, #0
 801a044:	e7d9      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a046:	4603      	mov	r3, r0
 801a048:	e7d7      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a04a:	b280      	uxth	r0, r0
 801a04c:	b2bf      	uxth	r7, r7
 801a04e:	fb07 fe00 	mul.w	lr, r7, r0
 801a052:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a056:	0100      	lsls	r0, r0, #4
 801a058:	eba0 0c0e 	sub.w	ip, r0, lr
 801a05c:	b2bf      	uxth	r7, r7
 801a05e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a062:	fa1f fc8c 	uxth.w	ip, ip
 801a066:	1bed      	subs	r5, r5, r7
 801a068:	b2ad      	uxth	r5, r5
 801a06a:	fb0c f00a 	mul.w	r0, ip, sl
 801a06e:	fb0b 0005 	mla	r0, fp, r5, r0
 801a072:	fb07 0009 	mla	r0, r7, r9, r0
 801a076:	fb0e 0008 	mla	r0, lr, r8, r0
 801a07a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a07e:	9001      	str	r0, [sp, #4]
 801a080:	2800      	cmp	r0, #0
 801a082:	f000 80d1 	beq.w	801a228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801a086:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a08a:	d018      	beq.n	801a0be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801a08c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a090:	fb0b f000 	mul.w	r0, fp, r0
 801a094:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a098:	fb0b fb02 	mul.w	fp, fp, r2
 801a09c:	0a02      	lsrs	r2, r0, #8
 801a09e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a0a2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a0a6:	4402      	add	r2, r0
 801a0a8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a0ac:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a0b0:	0a12      	lsrs	r2, r2, #8
 801a0b2:	0a00      	lsrs	r0, r0, #8
 801a0b4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a0b8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0bc:	4302      	orrs	r2, r0
 801a0be:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a0c2:	d01a      	beq.n	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801a0c4:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a0c8:	fb0a f000 	mul.w	r0, sl, r0
 801a0cc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0d0:	fb0a fa06 	mul.w	sl, sl, r6
 801a0d4:	0a06      	lsrs	r6, r0, #8
 801a0d6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a0da:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a0de:	4406      	add	r6, r0
 801a0e0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a0e4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a0e8:	0a36      	lsrs	r6, r6, #8
 801a0ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a0ee:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a0f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a0f6:	ea46 060a 	orr.w	r6, r6, sl
 801a0fa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a0fe:	d01b      	beq.n	801a138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801a100:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a104:	fb09 fa0a 	mul.w	sl, r9, sl
 801a108:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a10c:	fb09 f004 	mul.w	r0, r9, r4
 801a110:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a114:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a118:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a11c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a120:	4454      	add	r4, sl
 801a122:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a126:	0a24      	lsrs	r4, r4, #8
 801a128:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a12c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a130:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a134:	ea44 0409 	orr.w	r4, r4, r9
 801a138:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a13c:	d01b      	beq.n	801a176 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801a13e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a142:	fb08 f909 	mul.w	r9, r8, r9
 801a146:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a14a:	fb08 f003 	mul.w	r0, r8, r3
 801a14e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a152:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a156:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a15a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a15e:	444b      	add	r3, r9
 801a160:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a164:	0a1b      	lsrs	r3, r3, #8
 801a166:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a16a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a16e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a172:	ea43 0308 	orr.w	r3, r3, r8
 801a176:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a17a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a17e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a182:	fb0c f808 	mul.w	r8, ip, r8
 801a186:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a18a:	fb0c f606 	mul.w	r6, ip, r6
 801a18e:	fb05 8909 	mla	r9, r5, r9, r8
 801a192:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a196:	fb05 6502 	mla	r5, r5, r2, r6
 801a19a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a19e:	fb07 9908 	mla	r9, r7, r8, r9
 801a1a2:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a1a6:	fb07 5704 	mla	r7, r7, r4, r5
 801a1aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a1ae:	8808      	ldrh	r0, [r1, #0]
 801a1b0:	fb0e 9808 	mla	r8, lr, r8, r9
 801a1b4:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a1b8:	9b01      	ldr	r3, [sp, #4]
 801a1ba:	43da      	mvns	r2, r3
 801a1bc:	1203      	asrs	r3, r0, #8
 801a1be:	b2d2      	uxtb	r2, r2
 801a1c0:	10c4      	asrs	r4, r0, #3
 801a1c2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a1c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a1ca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a1ce:	00c0      	lsls	r0, r0, #3
 801a1d0:	4353      	muls	r3, r2
 801a1d2:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a1d6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a1da:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a1de:	b2c0      	uxtb	r0, r0
 801a1e0:	ea48 0e0e 	orr.w	lr, r8, lr
 801a1e4:	4354      	muls	r4, r2
 801a1e6:	4350      	muls	r0, r2
 801a1e8:	1c5a      	adds	r2, r3, #1
 801a1ea:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a1ee:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a1f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a1f6:	1c62      	adds	r2, r4, #1
 801a1f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a1fc:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801a200:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a204:	021b      	lsls	r3, r3, #8
 801a206:	00d2      	lsls	r2, r2, #3
 801a208:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a20c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a210:	4313      	orrs	r3, r2
 801a212:	1c42      	adds	r2, r0, #1
 801a214:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a218:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801a21c:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801a220:	ea4e 0e03 	orr.w	lr, lr, r3
 801a224:	f8a1 e000 	strh.w	lr, [r1]
 801a228:	b003      	add	sp, #12
 801a22a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a22e:	bf00      	nop
 801a230:	0801f996 	.word	0x0801f996
 801a234:	0801ff66 	.word	0x0801ff66
 801a238:	0801fa1a 	.word	0x0801fa1a

0801a23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a23c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a240:	ed2d 8b08 	vpush	{d8-d11}
 801a244:	b09b      	sub	sp, #108	; 0x6c
 801a246:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801a24a:	9218      	str	r2, [sp, #96]	; 0x60
 801a24c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a24e:	9116      	str	r1, [sp, #88]	; 0x58
 801a250:	9307      	str	r3, [sp, #28]
 801a252:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a256:	9019      	str	r0, [sp, #100]	; 0x64
 801a258:	6850      	ldr	r0, [r2, #4]
 801a25a:	6812      	ldr	r2, [r2, #0]
 801a25c:	fb00 1303 	mla	r3, r0, r3, r1
 801a260:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a264:	930a      	str	r3, [sp, #40]	; 0x28
 801a266:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a268:	681b      	ldr	r3, [r3, #0]
 801a26a:	930f      	str	r3, [sp, #60]	; 0x3c
 801a26c:	eeb0 aa40 	vmov.f32	s20, s0
 801a270:	eef0 9a60 	vmov.f32	s19, s1
 801a274:	eeb0 9a41 	vmov.f32	s18, s2
 801a278:	eeb0 8a62 	vmov.f32	s16, s5
 801a27c:	eef0 8a43 	vmov.f32	s17, s6
 801a280:	eef0 ba44 	vmov.f32	s23, s8
 801a284:	eeb0 ba64 	vmov.f32	s22, s9
 801a288:	eef0 aa45 	vmov.f32	s21, s10
 801a28c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a28e:	2b00      	cmp	r3, #0
 801a290:	dc03      	bgt.n	801a29a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a292:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a294:	2b00      	cmp	r3, #0
 801a296:	f340 8386 	ble.w	801a9a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a29a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a29c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2a4:	1e48      	subs	r0, r1, #1
 801a2a6:	1e57      	subs	r7, r2, #1
 801a2a8:	9b07      	ldr	r3, [sp, #28]
 801a2aa:	2b00      	cmp	r3, #0
 801a2ac:	f340 8166 	ble.w	801a57c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801a2b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a2b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a2b8:	d406      	bmi.n	801a2c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2ba:	4584      	cmp	ip, r0
 801a2bc:	da04      	bge.n	801a2c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2be:	2b00      	cmp	r3, #0
 801a2c0:	db02      	blt.n	801a2c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2c2:	42bb      	cmp	r3, r7
 801a2c4:	f2c0 815b 	blt.w	801a57e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a2c8:	f11c 0c01 	adds.w	ip, ip, #1
 801a2cc:	f100 814b 	bmi.w	801a566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a2d0:	4561      	cmp	r1, ip
 801a2d2:	f2c0 8148 	blt.w	801a566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a2d6:	3301      	adds	r3, #1
 801a2d8:	f100 8145 	bmi.w	801a566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a2dc:	429a      	cmp	r2, r3
 801a2de:	f2c0 8142 	blt.w	801a566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a2e2:	9b07      	ldr	r3, [sp, #28]
 801a2e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a2e6:	9317      	str	r3, [sp, #92]	; 0x5c
 801a2e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a2ea:	2b00      	cmp	r3, #0
 801a2ec:	f340 8165 	ble.w	801a5ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a2f0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801a2f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a2f4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a2f8:	689b      	ldr	r3, [r3, #8]
 801a2fa:	1422      	asrs	r2, r4, #16
 801a2fc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a300:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a304:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a308:	f100 81d5 	bmi.w	801a6b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a30c:	f103 38ff 	add.w	r8, r3, #4294967295
 801a310:	4542      	cmp	r2, r8
 801a312:	f280 81d0 	bge.w	801a6b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a316:	f1bc 0f00 	cmp.w	ip, #0
 801a31a:	f2c0 81cc 	blt.w	801a6b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a31e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a322:	45c4      	cmp	ip, r8
 801a324:	f280 81c7 	bge.w	801a6b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a328:	b21b      	sxth	r3, r3
 801a32a:	fb0c 2203 	mla	r2, ip, r3, r2
 801a32e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a330:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a334:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a338:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a33c:	2900      	cmp	r1, #0
 801a33e:	f000 8182 	beq.w	801a646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801a342:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a346:	950b      	str	r5, [sp, #44]	; 0x2c
 801a348:	0e2d      	lsrs	r5, r5, #24
 801a34a:	9512      	str	r5, [sp, #72]	; 0x48
 801a34c:	b180      	cbz	r0, 801a370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a34e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a352:	3b01      	subs	r3, #1
 801a354:	009b      	lsls	r3, r3, #2
 801a356:	3304      	adds	r3, #4
 801a358:	eb08 0c03 	add.w	ip, r8, r3
 801a35c:	f858 3003 	ldr.w	r3, [r8, r3]
 801a360:	9308      	str	r3, [sp, #32]
 801a362:	0e1b      	lsrs	r3, r3, #24
 801a364:	9310      	str	r3, [sp, #64]	; 0x40
 801a366:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a36a:	930c      	str	r3, [sp, #48]	; 0x30
 801a36c:	0e1b      	lsrs	r3, r3, #24
 801a36e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a370:	b289      	uxth	r1, r1
 801a372:	b280      	uxth	r0, r0
 801a374:	fb01 f900 	mul.w	r9, r1, r0
 801a378:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a37c:	0109      	lsls	r1, r1, #4
 801a37e:	eba1 0809 	sub.w	r8, r1, r9
 801a382:	b280      	uxth	r0, r0
 801a384:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a388:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a38a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a38c:	fa1f f888 	uxth.w	r8, r8
 801a390:	1a09      	subs	r1, r1, r0
 801a392:	b289      	uxth	r1, r1
 801a394:	fb08 f303 	mul.w	r3, r8, r3
 801a398:	fb01 330e 	mla	r3, r1, lr, r3
 801a39c:	fb00 3305 	mla	r3, r0, r5, r3
 801a3a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a3a2:	fb09 3305 	mla	r3, r9, r5, r3
 801a3a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a3aa:	2b00      	cmp	r3, #0
 801a3ac:	f000 80d2 	beq.w	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a3b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a3b4:	d01b      	beq.n	801a3ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801a3b6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a3ba:	fb0e fa0a 	mul.w	sl, lr, sl
 801a3be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a3c2:	fb0e fe02 	mul.w	lr, lr, r2
 801a3c6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a3ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a3ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a3d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a3d6:	4452      	add	r2, sl
 801a3d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a3dc:	0a12      	lsrs	r2, r2, #8
 801a3de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a3e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a3ea:	ea42 020c 	orr.w	r2, r2, ip
 801a3ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a3f0:	2dff      	cmp	r5, #255	; 0xff
 801a3f2:	d021      	beq.n	801a438 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a3f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a3f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a3fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a3fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801a400:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a402:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a406:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a408:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a40c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a410:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a414:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a418:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a41c:	44de      	add	lr, fp
 801a41e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a422:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a426:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a42a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a42e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a432:	ea4e 050a 	orr.w	r5, lr, sl
 801a436:	950b      	str	r5, [sp, #44]	; 0x2c
 801a438:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a43a:	2dff      	cmp	r5, #255	; 0xff
 801a43c:	d021      	beq.n	801a482 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a43e:	9d08      	ldr	r5, [sp, #32]
 801a440:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a444:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a446:	fb05 fb0b 	mul.w	fp, r5, fp
 801a44a:	9d08      	ldr	r5, [sp, #32]
 801a44c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a450:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a452:	fb05 fa0e 	mul.w	sl, r5, lr
 801a456:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a45a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a45e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a462:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a466:	44de      	add	lr, fp
 801a468:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a46c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a470:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a474:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a478:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a47c:	ea4e 050a 	orr.w	r5, lr, sl
 801a480:	9508      	str	r5, [sp, #32]
 801a482:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a484:	2dff      	cmp	r5, #255	; 0xff
 801a486:	d021      	beq.n	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a488:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a48a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a48e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a490:	fb05 fb0b 	mul.w	fp, r5, fp
 801a494:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a496:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a49a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a49c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a4a0:	fb05 fa0a 	mul.w	sl, r5, sl
 801a4a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a4ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a4b0:	44de      	add	lr, fp
 801a4b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a4b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a4ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4c6:	ea4e 050a 	orr.w	r5, lr, sl
 801a4ca:	950c      	str	r5, [sp, #48]	; 0x30
 801a4cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a4ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a4d2:	9d08      	ldr	r5, [sp, #32]
 801a4d4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a4d8:	fb08 fc0c 	mul.w	ip, r8, ip
 801a4dc:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a4e0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a4e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4e6:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a4ea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a4ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a4f0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a4f4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a4f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a4fc:	fb08 f80e 	mul.w	r8, r8, lr
 801a500:	fb01 8202 	mla	r2, r1, r2, r8
 801a504:	9908      	ldr	r1, [sp, #32]
 801a506:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a50a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a50c:	fb00 220a 	mla	r2, r0, sl, r2
 801a510:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a514:	fb09 2900 	mla	r9, r9, r0, r2
 801a518:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a51c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a520:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a524:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a528:	ea4c 0c09 	orr.w	ip, ip, r9
 801a52c:	2bff      	cmp	r3, #255	; 0xff
 801a52e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a532:	f040 8091 	bne.w	801a658 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a536:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a53a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a53e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a542:	f022 0207 	bic.w	r2, r2, #7
 801a546:	431a      	orrs	r2, r3
 801a548:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a54c:	ea4c 0c02 	orr.w	ip, ip, r2
 801a550:	f8a7 c000 	strh.w	ip, [r7]
 801a554:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a556:	441c      	add	r4, r3
 801a558:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a55a:	441e      	add	r6, r3
 801a55c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a55e:	3b01      	subs	r3, #1
 801a560:	3702      	adds	r7, #2
 801a562:	9317      	str	r3, [sp, #92]	; 0x5c
 801a564:	e6c0      	b.n	801a2e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a566:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a568:	441c      	add	r4, r3
 801a56a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a56c:	441e      	add	r6, r3
 801a56e:	9b07      	ldr	r3, [sp, #28]
 801a570:	3b01      	subs	r3, #1
 801a572:	9307      	str	r3, [sp, #28]
 801a574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a576:	3302      	adds	r3, #2
 801a578:	930a      	str	r3, [sp, #40]	; 0x28
 801a57a:	e695      	b.n	801a2a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a57c:	d024      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a57e:	9b07      	ldr	r3, [sp, #28]
 801a580:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a582:	3b01      	subs	r3, #1
 801a584:	fb00 4003 	mla	r0, r0, r3, r4
 801a588:	1400      	asrs	r0, r0, #16
 801a58a:	f53f aeaa 	bmi.w	801a2e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a58e:	3901      	subs	r1, #1
 801a590:	4288      	cmp	r0, r1
 801a592:	f6bf aea6 	bge.w	801a2e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a596:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a598:	fb01 6303 	mla	r3, r1, r3, r6
 801a59c:	141b      	asrs	r3, r3, #16
 801a59e:	f53f aea0 	bmi.w	801a2e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a5a2:	3a01      	subs	r2, #1
 801a5a4:	4293      	cmp	r3, r2
 801a5a6:	f6bf ae9c 	bge.w	801a2e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a5aa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a5ae:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a5b2:	f1bb 0f00 	cmp.w	fp, #0
 801a5b6:	f300 809a 	bgt.w	801a6ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801a5ba:	9b07      	ldr	r3, [sp, #28]
 801a5bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a5c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5c2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a5c6:	930a      	str	r3, [sp, #40]	; 0x28
 801a5c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a5ca:	2b00      	cmp	r3, #0
 801a5cc:	f340 81eb 	ble.w	801a9a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a5d0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a5d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a5dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a5de:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a5e2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a5e6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a5ea:	eef0 6a48 	vmov.f32	s13, s16
 801a5ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a5f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5f6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a5fa:	ee16 4a90 	vmov	r4, s13
 801a5fe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a602:	eef0 6a68 	vmov.f32	s13, s17
 801a606:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a60a:	ee18 2a10 	vmov	r2, s16
 801a60e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a612:	fb92 f3f3 	sdiv	r3, r2, r3
 801a616:	ee18 2a90 	vmov	r2, s17
 801a61a:	932f      	str	r3, [sp, #188]	; 0xbc
 801a61c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a61e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a622:	9330      	str	r3, [sp, #192]	; 0xc0
 801a624:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a626:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a628:	3b01      	subs	r3, #1
 801a62a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a62e:	9316      	str	r3, [sp, #88]	; 0x58
 801a630:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a632:	bf08      	it	eq
 801a634:	4613      	moveq	r3, r2
 801a636:	ee16 6a90 	vmov	r6, s13
 801a63a:	9307      	str	r3, [sp, #28]
 801a63c:	eef0 8a67 	vmov.f32	s17, s15
 801a640:	eeb0 8a47 	vmov.f32	s16, s14
 801a644:	e622      	b.n	801a28c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a646:	2800      	cmp	r0, #0
 801a648:	f43f ae92 	beq.w	801a370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a64c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a650:	9308      	str	r3, [sp, #32]
 801a652:	0e1b      	lsrs	r3, r3, #24
 801a654:	9310      	str	r3, [sp, #64]	; 0x40
 801a656:	e68b      	b.n	801a370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a658:	8839      	ldrh	r1, [r7, #0]
 801a65a:	4dd5      	ldr	r5, [pc, #852]	; (801a9b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a65c:	43db      	mvns	r3, r3
 801a65e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a662:	fa5f f883 	uxtb.w	r8, r3
 801a666:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a66a:	fb0e fe08 	mul.w	lr, lr, r8
 801a66e:	10c8      	asrs	r0, r1, #3
 801a670:	00cb      	lsls	r3, r1, #3
 801a672:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a676:	f10e 0101 	add.w	r1, lr, #1
 801a67a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a67e:	fb00 f008 	mul.w	r0, r0, r8
 801a682:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a686:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a68a:	f100 0e01 	add.w	lr, r0, #1
 801a68e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a692:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a696:	b2db      	uxtb	r3, r3
 801a698:	b2c9      	uxtb	r1, r1
 801a69a:	00d2      	lsls	r2, r2, #3
 801a69c:	fb03 f308 	mul.w	r3, r3, r8
 801a6a0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a6a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a6a8:	430a      	orrs	r2, r1
 801a6aa:	1c59      	adds	r1, r3, #1
 801a6ac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a6b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a6b4:	e748      	b.n	801a548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a6b6:	f112 0801 	adds.w	r8, r2, #1
 801a6ba:	f53f af4b 	bmi.w	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a6be:	4543      	cmp	r3, r8
 801a6c0:	f6ff af48 	blt.w	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a6c4:	f11c 0801 	adds.w	r8, ip, #1
 801a6c8:	f53f af44 	bmi.w	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a6cc:	45c6      	cmp	lr, r8
 801a6ce:	f6ff af41 	blt.w	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a6d2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a6d6:	fa0f f28e 	sxth.w	r2, lr
 801a6da:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a6de:	9200      	str	r2, [sp, #0]
 801a6e0:	b21b      	sxth	r3, r3
 801a6e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a6e4:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a6e6:	4639      	mov	r1, r7
 801a6e8:	f7ff fc54 	bl	8019f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a6ec:	e732      	b.n	801a554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a6ee:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a6f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a6f2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a6f6:	1421      	asrs	r1, r4, #16
 801a6f8:	1433      	asrs	r3, r6, #16
 801a6fa:	fb07 1303 	mla	r3, r7, r3, r1
 801a6fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a700:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a704:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a708:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a70c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a710:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a714:	2a00      	cmp	r2, #0
 801a716:	f000 8107 	beq.w	801a928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801a71a:	684d      	ldr	r5, [r1, #4]
 801a71c:	950d      	str	r5, [sp, #52]	; 0x34
 801a71e:	0e2d      	lsrs	r5, r5, #24
 801a720:	9514      	str	r5, [sp, #80]	; 0x50
 801a722:	b178      	cbz	r0, 801a744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a724:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a728:	3f01      	subs	r7, #1
 801a72a:	00bf      	lsls	r7, r7, #2
 801a72c:	3704      	adds	r7, #4
 801a72e:	eb01 0e07 	add.w	lr, r1, r7
 801a732:	59c9      	ldr	r1, [r1, r7]
 801a734:	9109      	str	r1, [sp, #36]	; 0x24
 801a736:	0e09      	lsrs	r1, r1, #24
 801a738:	9111      	str	r1, [sp, #68]	; 0x44
 801a73a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a73e:	910e      	str	r1, [sp, #56]	; 0x38
 801a740:	0e09      	lsrs	r1, r1, #24
 801a742:	9115      	str	r1, [sp, #84]	; 0x54
 801a744:	b292      	uxth	r2, r2
 801a746:	b280      	uxth	r0, r0
 801a748:	fb02 f900 	mul.w	r9, r2, r0
 801a74c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a750:	0112      	lsls	r2, r2, #4
 801a752:	eba2 0e09 	sub.w	lr, r2, r9
 801a756:	b280      	uxth	r0, r0
 801a758:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a75c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a75e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a760:	fa1f fe8e 	uxth.w	lr, lr
 801a764:	1a09      	subs	r1, r1, r0
 801a766:	b289      	uxth	r1, r1
 801a768:	fb0e f202 	mul.w	r2, lr, r2
 801a76c:	fb01 220c 	mla	r2, r1, ip, r2
 801a770:	fb00 2205 	mla	r2, r0, r5, r2
 801a774:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a776:	fb09 2205 	mla	r2, r9, r5, r2
 801a77a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a77e:	2a00      	cmp	r2, #0
 801a780:	f000 80c9 	beq.w	801a916 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a784:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a788:	d019      	beq.n	801a7be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a78a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a78e:	fb0c fa0a 	mul.w	sl, ip, sl
 801a792:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a796:	fb0c fc03 	mul.w	ip, ip, r3
 801a79a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a79e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a7a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a7a6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a7aa:	4453      	add	r3, sl
 801a7ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a7b0:	0a1b      	lsrs	r3, r3, #8
 801a7b2:	0a3f      	lsrs	r7, r7, #8
 801a7b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a7b8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a7bc:	433b      	orrs	r3, r7
 801a7be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7c0:	2dff      	cmp	r5, #255	; 0xff
 801a7c2:	d020      	beq.n	801a806 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a7c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a7c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a7ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7cc:	436f      	muls	r7, r5
 801a7ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a7d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a7d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a7da:	fb05 fa0a 	mul.w	sl, r5, sl
 801a7de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a7e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7e6:	44bc      	add	ip, r7
 801a7e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a7ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a800:	ea4c 050a 	orr.w	r5, ip, sl
 801a804:	950d      	str	r5, [sp, #52]	; 0x34
 801a806:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a808:	2dff      	cmp	r5, #255	; 0xff
 801a80a:	d020      	beq.n	801a84e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801a80c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a80e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a812:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a814:	436f      	muls	r7, r5
 801a816:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a818:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a81c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a81e:	fb05 fa0c 	mul.w	sl, r5, ip
 801a822:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a826:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a82a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a82e:	44bc      	add	ip, r7
 801a830:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a834:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a838:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a83c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a840:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a844:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a848:	ea4c 050a 	orr.w	r5, ip, sl
 801a84c:	9509      	str	r5, [sp, #36]	; 0x24
 801a84e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a850:	2dff      	cmp	r5, #255	; 0xff
 801a852:	d020      	beq.n	801a896 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801a854:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a856:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a85a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a85c:	436f      	muls	r7, r5
 801a85e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a860:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a864:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a866:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a86a:	fb05 fa0a 	mul.w	sl, r5, sl
 801a86e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a872:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a876:	44bc      	add	ip, r7
 801a878:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a87c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a880:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a884:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a888:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a88c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a890:	ea4c 050a 	orr.w	r5, ip, sl
 801a894:	950e      	str	r5, [sp, #56]	; 0x38
 801a896:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a898:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a89c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a89e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a8a2:	fb0e f707 	mul.w	r7, lr, r7
 801a8a6:	fb01 770c 	mla	r7, r1, ip, r7
 801a8aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a8ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a8b0:	fb00 770c 	mla	r7, r0, ip, r7
 801a8b4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a8b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a8ba:	fb09 770c 	mla	r7, r9, ip, r7
 801a8be:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a8c2:	fb0e fe0c 	mul.w	lr, lr, ip
 801a8c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a8ca:	fb01 e303 	mla	r3, r1, r3, lr
 801a8ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a8d0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a8d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8d6:	fb00 330a 	mla	r3, r0, sl, r3
 801a8da:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a8de:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a8e2:	0a3f      	lsrs	r7, r7, #8
 801a8e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a8ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a8f0:	ea47 070c 	orr.w	r7, r7, ip
 801a8f4:	2aff      	cmp	r2, #255	; 0xff
 801a8f6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a8fa:	d11e      	bne.n	801a93a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801a8fc:	097a      	lsrs	r2, r7, #5
 801a8fe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a902:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a906:	f023 0307 	bic.w	r3, r3, #7
 801a90a:	4313      	orrs	r3, r2
 801a90c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a910:	431f      	orrs	r7, r3
 801a912:	f8a8 7000 	strh.w	r7, [r8]
 801a916:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a918:	441c      	add	r4, r3
 801a91a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a91c:	f108 0802 	add.w	r8, r8, #2
 801a920:	441e      	add	r6, r3
 801a922:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a926:	e644      	b.n	801a5b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801a928:	2800      	cmp	r0, #0
 801a92a:	f43f af0b 	beq.w	801a744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a92e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a932:	9109      	str	r1, [sp, #36]	; 0x24
 801a934:	0e09      	lsrs	r1, r1, #24
 801a936:	9111      	str	r1, [sp, #68]	; 0x44
 801a938:	e704      	b.n	801a744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a93a:	f8b8 1000 	ldrh.w	r1, [r8]
 801a93e:	43d2      	mvns	r2, r2
 801a940:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a944:	fa5f fe82 	uxtb.w	lr, r2
 801a948:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a94c:	fb0c fc0e 	mul.w	ip, ip, lr
 801a950:	10c8      	asrs	r0, r1, #3
 801a952:	00ca      	lsls	r2, r1, #3
 801a954:	f10c 0101 	add.w	r1, ip, #1
 801a958:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a95c:	0c39      	lsrs	r1, r7, #16
 801a95e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a962:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a966:	4912      	ldr	r1, [pc, #72]	; (801a9b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a968:	fb00 f00e 	mul.w	r0, r0, lr
 801a96c:	fa5f fc8c 	uxtb.w	ip, ip
 801a970:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a974:	b2d2      	uxtb	r2, r2
 801a976:	1c41      	adds	r1, r0, #1
 801a978:	fb02 f20e 	mul.w	r2, r2, lr
 801a97c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a980:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a984:	1c51      	adds	r1, r2, #1
 801a986:	00c0      	lsls	r0, r0, #3
 801a988:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a98c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a990:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a994:	ea4c 0c00 	orr.w	ip, ip, r0
 801a998:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a99c:	ea47 0c0c 	orr.w	ip, r7, ip
 801a9a0:	f8a8 c000 	strh.w	ip, [r8]
 801a9a4:	e7b7      	b.n	801a916 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a9a6:	b01b      	add	sp, #108	; 0x6c
 801a9a8:	ecbd 8b08 	vpop	{d8-d11}
 801a9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9b0:	fffff800 	.word	0xfffff800

0801a9b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a9b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a9b8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a9bc:	2c00      	cmp	r4, #0
 801a9be:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a9c2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a9c6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a9ca:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a9ce:	fb04 ce03 	mla	lr, r4, r3, ip
 801a9d2:	db60      	blt.n	801aa96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a9d4:	45a1      	cmp	r9, r4
 801a9d6:	dd5e      	ble.n	801aa96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a9d8:	f1bc 0f00 	cmp.w	ip, #0
 801a9dc:	db59      	blt.n	801aa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a9de:	45e0      	cmp	r8, ip
 801a9e0:	dd57      	ble.n	801aa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a9e2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a9e6:	f01e 0f01 	tst.w	lr, #1
 801a9ea:	5c16      	ldrb	r6, [r2, r0]
 801a9ec:	bf0c      	ite	eq
 801a9ee:	f006 060f 	andeq.w	r6, r6, #15
 801a9f2:	1136      	asrne	r6, r6, #4
 801a9f4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a9f8:	b2f6      	uxtb	r6, r6
 801a9fa:	f11c 0001 	adds.w	r0, ip, #1
 801a9fe:	d44d      	bmi.n	801aa9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801aa00:	4580      	cmp	r8, r0
 801aa02:	dd4b      	ble.n	801aa9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801aa04:	2d00      	cmp	r5, #0
 801aa06:	d04b      	beq.n	801aaa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801aa08:	f10e 0a01 	add.w	sl, lr, #1
 801aa0c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801aa10:	f01a 0f01 	tst.w	sl, #1
 801aa14:	5c10      	ldrb	r0, [r2, r0]
 801aa16:	bf0c      	ite	eq
 801aa18:	f000 000f 	andeq.w	r0, r0, #15
 801aa1c:	1100      	asrne	r0, r0, #4
 801aa1e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aa22:	b2c0      	uxtb	r0, r0
 801aa24:	3401      	adds	r4, #1
 801aa26:	d43f      	bmi.n	801aaa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801aa28:	45a1      	cmp	r9, r4
 801aa2a:	dd3d      	ble.n	801aaa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801aa2c:	2f00      	cmp	r7, #0
 801aa2e:	f000 80a8 	beq.w	801ab82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801aa32:	f1bc 0f00 	cmp.w	ip, #0
 801aa36:	db35      	blt.n	801aaa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801aa38:	45e0      	cmp	r8, ip
 801aa3a:	dd33      	ble.n	801aaa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801aa3c:	eb03 090e 	add.w	r9, r3, lr
 801aa40:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801aa44:	f019 0f01 	tst.w	r9, #1
 801aa48:	5d14      	ldrb	r4, [r2, r4]
 801aa4a:	bf0c      	ite	eq
 801aa4c:	f004 040f 	andeq.w	r4, r4, #15
 801aa50:	1124      	asrne	r4, r4, #4
 801aa52:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801aa56:	b2e4      	uxtb	r4, r4
 801aa58:	f11c 0c01 	adds.w	ip, ip, #1
 801aa5c:	d427      	bmi.n	801aaae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801aa5e:	45e0      	cmp	r8, ip
 801aa60:	dd25      	ble.n	801aaae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801aa62:	b335      	cbz	r5, 801aab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801aa64:	3301      	adds	r3, #1
 801aa66:	449e      	add	lr, r3
 801aa68:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801aa6c:	f01e 0f01 	tst.w	lr, #1
 801aa70:	5cd2      	ldrb	r2, [r2, r3]
 801aa72:	bf0c      	ite	eq
 801aa74:	f002 020f 	andeq.w	r2, r2, #15
 801aa78:	1112      	asrne	r2, r2, #4
 801aa7a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa7e:	b2d3      	uxtb	r3, r2
 801aa80:	2d0f      	cmp	r5, #15
 801aa82:	d917      	bls.n	801aab4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801aa84:	4b42      	ldr	r3, [pc, #264]	; (801ab90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801aa86:	4a43      	ldr	r2, [pc, #268]	; (801ab94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801aa88:	4843      	ldr	r0, [pc, #268]	; (801ab98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801aa8a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801aa8e:	f001 f827 	bl	801bae0 <__assert_func>
 801aa92:	2600      	movs	r6, #0
 801aa94:	e7b1      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801aa96:	2000      	movs	r0, #0
 801aa98:	4606      	mov	r6, r0
 801aa9a:	e7c3      	b.n	801aa24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aa9c:	2000      	movs	r0, #0
 801aa9e:	e7c1      	b.n	801aa24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aaa0:	4628      	mov	r0, r5
 801aaa2:	e7bf      	b.n	801aa24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aaa4:	2400      	movs	r4, #0
 801aaa6:	e7d7      	b.n	801aa58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801aaa8:	2300      	movs	r3, #0
 801aaaa:	461c      	mov	r4, r3
 801aaac:	e7e8      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801aaae:	2300      	movs	r3, #0
 801aab0:	e7e6      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801aab2:	462b      	mov	r3, r5
 801aab4:	2f0f      	cmp	r7, #15
 801aab6:	d8e5      	bhi.n	801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801aab8:	b2ad      	uxth	r5, r5
 801aaba:	b2bf      	uxth	r7, r7
 801aabc:	fb05 fc07 	mul.w	ip, r5, r7
 801aac0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801aac4:	012d      	lsls	r5, r5, #4
 801aac6:	b2bf      	uxth	r7, r7
 801aac8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801aacc:	eba5 050c 	sub.w	r5, r5, ip
 801aad0:	1bd2      	subs	r2, r2, r7
 801aad2:	b2ad      	uxth	r5, r5
 801aad4:	b292      	uxth	r2, r2
 801aad6:	4368      	muls	r0, r5
 801aad8:	fb06 0002 	mla	r0, r6, r2, r0
 801aadc:	fb07 0404 	mla	r4, r7, r4, r0
 801aae0:	fb0c 4303 	mla	r3, ip, r3, r4
 801aae4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aae8:	b1b3      	cbz	r3, 801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801aaea:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801aaee:	435a      	muls	r2, r3
 801aaf0:	1c53      	adds	r3, r2, #1
 801aaf2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aaf6:	4a29      	ldr	r2, [pc, #164]	; (801ab9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801aaf8:	121b      	asrs	r3, r3, #8
 801aafa:	6812      	ldr	r2, [r2, #0]
 801aafc:	2bff      	cmp	r3, #255	; 0xff
 801aafe:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ab02:	d10b      	bne.n	801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801ab04:	4b26      	ldr	r3, [pc, #152]	; (801aba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801ab06:	0950      	lsrs	r0, r2, #5
 801ab08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab0c:	4033      	ands	r3, r6
 801ab0e:	4318      	orrs	r0, r3
 801ab10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab14:	4302      	orrs	r2, r0
 801ab16:	800a      	strh	r2, [r1, #0]
 801ab18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab1c:	880d      	ldrh	r5, [r1, #0]
 801ab1e:	b29f      	uxth	r7, r3
 801ab20:	122c      	asrs	r4, r5, #8
 801ab22:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ab26:	43db      	mvns	r3, r3
 801ab28:	b2db      	uxtb	r3, r3
 801ab2a:	fb10 f007 	smulbb	r0, r0, r7
 801ab2e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ab32:	fb04 0403 	mla	r4, r4, r3, r0
 801ab36:	b2f6      	uxtb	r6, r6
 801ab38:	10e8      	asrs	r0, r5, #3
 801ab3a:	b2d2      	uxtb	r2, r2
 801ab3c:	00ed      	lsls	r5, r5, #3
 801ab3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ab42:	fb12 f207 	smulbb	r2, r2, r7
 801ab46:	fb16 f607 	smulbb	r6, r6, r7
 801ab4a:	b2ed      	uxtb	r5, r5
 801ab4c:	b2a4      	uxth	r4, r4
 801ab4e:	fb00 6603 	mla	r6, r0, r3, r6
 801ab52:	fb05 2303 	mla	r3, r5, r3, r2
 801ab56:	b29a      	uxth	r2, r3
 801ab58:	1c63      	adds	r3, r4, #1
 801ab5a:	b2b0      	uxth	r0, r6
 801ab5c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ab60:	1c53      	adds	r3, r2, #1
 801ab62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ab66:	1c42      	adds	r2, r0, #1
 801ab68:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ab6c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ab70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab74:	0940      	lsrs	r0, r0, #5
 801ab76:	4323      	orrs	r3, r4
 801ab78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab7c:	4303      	orrs	r3, r0
 801ab7e:	800b      	strh	r3, [r1, #0]
 801ab80:	e7ca      	b.n	801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ab82:	2d0f      	cmp	r5, #15
 801ab84:	f63f af7e 	bhi.w	801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ab88:	463b      	mov	r3, r7
 801ab8a:	463c      	mov	r4, r7
 801ab8c:	e794      	b.n	801aab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801ab8e:	bf00      	nop
 801ab90:	0801f996 	.word	0x0801f996
 801ab94:	0801ff66 	.word	0x0801ff66
 801ab98:	0801fa1a 	.word	0x0801fa1a
 801ab9c:	2000a2c0 	.word	0x2000a2c0
 801aba0:	00fff800 	.word	0x00fff800

0801aba4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aba8:	ed2d 8b08 	vpush	{d8-d11}
 801abac:	b097      	sub	sp, #92	; 0x5c
 801abae:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801abb2:	9214      	str	r2, [sp, #80]	; 0x50
 801abb4:	9309      	str	r3, [sp, #36]	; 0x24
 801abb6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801abb8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801abbc:	910d      	str	r1, [sp, #52]	; 0x34
 801abbe:	930f      	str	r3, [sp, #60]	; 0x3c
 801abc0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801abc4:	9015      	str	r0, [sp, #84]	; 0x54
 801abc6:	6850      	ldr	r0, [r2, #4]
 801abc8:	6812      	ldr	r2, [r2, #0]
 801abca:	fb00 1303 	mla	r3, r0, r3, r1
 801abce:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801abd2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abd4:	689b      	ldr	r3, [r3, #8]
 801abd6:	3301      	adds	r3, #1
 801abd8:	f023 0301 	bic.w	r3, r3, #1
 801abdc:	930a      	str	r3, [sp, #40]	; 0x28
 801abde:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abe0:	681f      	ldr	r7, [r3, #0]
 801abe2:	eeb0 aa40 	vmov.f32	s20, s0
 801abe6:	eef0 9a60 	vmov.f32	s19, s1
 801abea:	eeb0 9a41 	vmov.f32	s18, s2
 801abee:	eeb0 8a62 	vmov.f32	s16, s5
 801abf2:	eef0 8a43 	vmov.f32	s17, s6
 801abf6:	eef0 ba44 	vmov.f32	s23, s8
 801abfa:	eeb0 ba64 	vmov.f32	s22, s9
 801abfe:	eef0 aa45 	vmov.f32	s21, s10
 801ac02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac04:	2b00      	cmp	r3, #0
 801ac06:	dc03      	bgt.n	801ac10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ac08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ac0a:	2b00      	cmp	r3, #0
 801ac0c:	f340 8287 	ble.w	801b11e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ac10:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac16:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac1a:	1e48      	subs	r0, r1, #1
 801ac1c:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac22:	2b00      	cmp	r3, #0
 801ac24:	f340 80c4 	ble.w	801adb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801ac28:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ac2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ac30:	d406      	bmi.n	801ac40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ac32:	4586      	cmp	lr, r0
 801ac34:	da04      	bge.n	801ac40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ac36:	2b00      	cmp	r3, #0
 801ac38:	db02      	blt.n	801ac40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ac3a:	4563      	cmp	r3, ip
 801ac3c:	f2c0 80b9 	blt.w	801adb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ac40:	f11e 0e01 	adds.w	lr, lr, #1
 801ac44:	f100 80aa 	bmi.w	801ad9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ac48:	4571      	cmp	r1, lr
 801ac4a:	f2c0 80a7 	blt.w	801ad9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ac4e:	3301      	adds	r3, #1
 801ac50:	f100 80a4 	bmi.w	801ad9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ac54:	429a      	cmp	r2, r3
 801ac56:	f2c0 80a1 	blt.w	801ad9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ac5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac5c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801ac60:	930e      	str	r3, [sp, #56]	; 0x38
 801ac62:	46c8      	mov	r8, r9
 801ac64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac66:	2b00      	cmp	r3, #0
 801ac68:	f340 80c3 	ble.w	801adf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ac6c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac6e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ac72:	1423      	asrs	r3, r4, #16
 801ac74:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ac78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ac7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ac80:	f100 814d 	bmi.w	801af1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac84:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ac88:	455b      	cmp	r3, fp
 801ac8a:	f280 8148 	bge.w	801af1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac8e:	2800      	cmp	r0, #0
 801ac90:	f2c0 8145 	blt.w	801af1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac94:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ac98:	4558      	cmp	r0, fp
 801ac9a:	f280 8140 	bge.w	801af1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac9e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aca0:	fb00 3305 	mla	r3, r0, r5, r3
 801aca4:	0858      	lsrs	r0, r3, #1
 801aca6:	07dd      	lsls	r5, r3, #31
 801aca8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801acac:	bf54      	ite	pl
 801acae:	f00c 0c0f 	andpl.w	ip, ip, #15
 801acb2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801acb6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801acba:	fa5f fc8c 	uxtb.w	ip, ip
 801acbe:	2a00      	cmp	r2, #0
 801acc0:	f000 80db 	beq.w	801ae7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801acc4:	1c58      	adds	r0, r3, #1
 801acc6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801acca:	07c0      	lsls	r0, r0, #31
 801accc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801acd0:	bf54      	ite	pl
 801acd2:	f00e 0e0f 	andpl.w	lr, lr, #15
 801acd6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801acda:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801acde:	fa5f f08e 	uxtb.w	r0, lr
 801ace2:	9010      	str	r0, [sp, #64]	; 0x40
 801ace4:	b1c9      	cbz	r1, 801ad1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ace6:	4453      	add	r3, sl
 801ace8:	0858      	lsrs	r0, r3, #1
 801acea:	07dd      	lsls	r5, r3, #31
 801acec:	5c38      	ldrb	r0, [r7, r0]
 801acee:	bf54      	ite	pl
 801acf0:	f000 000f 	andpl.w	r0, r0, #15
 801acf4:	1100      	asrmi	r0, r0, #4
 801acf6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801acfa:	3301      	adds	r3, #1
 801acfc:	b2c0      	uxtb	r0, r0
 801acfe:	900b      	str	r0, [sp, #44]	; 0x2c
 801ad00:	0858      	lsrs	r0, r3, #1
 801ad02:	07dd      	lsls	r5, r3, #31
 801ad04:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ad08:	bf54      	ite	pl
 801ad0a:	f00e 030f 	andpl.w	r3, lr, #15
 801ad0e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ad12:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ad16:	b2db      	uxtb	r3, r3
 801ad18:	9311      	str	r3, [sp, #68]	; 0x44
 801ad1a:	b292      	uxth	r2, r2
 801ad1c:	b289      	uxth	r1, r1
 801ad1e:	fb02 f301 	mul.w	r3, r2, r1
 801ad22:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ad26:	0112      	lsls	r2, r2, #4
 801ad28:	b289      	uxth	r1, r1
 801ad2a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ad2e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ad30:	1ad2      	subs	r2, r2, r3
 801ad32:	1a40      	subs	r0, r0, r1
 801ad34:	b292      	uxth	r2, r2
 801ad36:	436a      	muls	r2, r5
 801ad38:	b280      	uxth	r0, r0
 801ad3a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ad3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad40:	fb01 c102 	mla	r1, r1, r2, ip
 801ad44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad46:	fb03 1302 	mla	r3, r3, r2, r1
 801ad4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad4e:	b1db      	cbz	r3, 801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ad50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad52:	4353      	muls	r3, r2
 801ad54:	1c5a      	adds	r2, r3, #1
 801ad56:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ad5a:	4ac6      	ldr	r2, [pc, #792]	; (801b074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801ad5c:	121b      	asrs	r3, r3, #8
 801ad5e:	6812      	ldr	r2, [r2, #0]
 801ad60:	2bff      	cmp	r3, #255	; 0xff
 801ad62:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ad66:	f040 8099 	bne.w	801ae9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801ad6a:	0953      	lsrs	r3, r2, #5
 801ad6c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ad70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ad74:	f02c 0c07 	bic.w	ip, ip, #7
 801ad78:	ea43 0c0c 	orr.w	ip, r3, ip
 801ad7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ad80:	ea4c 0202 	orr.w	r2, ip, r2
 801ad84:	f8a8 2000 	strh.w	r2, [r8]
 801ad88:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad8a:	441c      	add	r4, r3
 801ad8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad8e:	441e      	add	r6, r3
 801ad90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad92:	3b01      	subs	r3, #1
 801ad94:	f108 0802 	add.w	r8, r8, #2
 801ad98:	930e      	str	r3, [sp, #56]	; 0x38
 801ad9a:	e763      	b.n	801ac64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801ad9c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad9e:	441c      	add	r4, r3
 801ada0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ada2:	441e      	add	r6, r3
 801ada4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ada6:	3b01      	subs	r3, #1
 801ada8:	9309      	str	r3, [sp, #36]	; 0x24
 801adaa:	f109 0902 	add.w	r9, r9, #2
 801adae:	e737      	b.n	801ac20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adb0:	d024      	beq.n	801adfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801adb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adb4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801adb6:	3b01      	subs	r3, #1
 801adb8:	fb00 4003 	mla	r0, r0, r3, r4
 801adbc:	1400      	asrs	r0, r0, #16
 801adbe:	f53f af4c 	bmi.w	801ac5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801adc2:	3901      	subs	r1, #1
 801adc4:	4288      	cmp	r0, r1
 801adc6:	f6bf af48 	bge.w	801ac5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801adca:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801adcc:	fb01 6303 	mla	r3, r1, r3, r6
 801add0:	141b      	asrs	r3, r3, #16
 801add2:	f53f af42 	bmi.w	801ac5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801add6:	3a01      	subs	r2, #1
 801add8:	4293      	cmp	r3, r2
 801adda:	f6bf af3e 	bge.w	801ac5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801adde:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ade2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ade6:	930e      	str	r3, [sp, #56]	; 0x38
 801ade8:	46c8      	mov	r8, r9
 801adea:	f1bb 0f00 	cmp.w	fp, #0
 801adee:	f300 80b7 	bgt.w	801af60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801adf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adf4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801adf8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801adfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801adfe:	2b00      	cmp	r3, #0
 801ae00:	f340 818d 	ble.w	801b11e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ae04:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ae08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae0c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ae10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae12:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ae16:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ae1a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ae1e:	eef0 6a48 	vmov.f32	s13, s16
 801ae22:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ae26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae2a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ae2e:	ee16 4a90 	vmov	r4, s13
 801ae32:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ae36:	eef0 6a68 	vmov.f32	s13, s17
 801ae3a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ae3e:	ee18 2a10 	vmov	r2, s16
 801ae42:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ae46:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae4a:	ee18 2a90 	vmov	r2, s17
 801ae4e:	932b      	str	r3, [sp, #172]	; 0xac
 801ae50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae52:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae56:	932c      	str	r3, [sp, #176]	; 0xb0
 801ae58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae5c:	3b01      	subs	r3, #1
 801ae5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae62:	930d      	str	r3, [sp, #52]	; 0x34
 801ae64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae66:	bf08      	it	eq
 801ae68:	4613      	moveq	r3, r2
 801ae6a:	ee16 6a90 	vmov	r6, s13
 801ae6e:	9309      	str	r3, [sp, #36]	; 0x24
 801ae70:	eef0 8a67 	vmov.f32	s17, s15
 801ae74:	eeb0 8a47 	vmov.f32	s16, s14
 801ae78:	e6c3      	b.n	801ac02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ae7a:	2900      	cmp	r1, #0
 801ae7c:	f43f af4d 	beq.w	801ad1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ae80:	eb0a 0003 	add.w	r0, sl, r3
 801ae84:	0843      	lsrs	r3, r0, #1
 801ae86:	07c0      	lsls	r0, r0, #31
 801ae88:	5cfb      	ldrb	r3, [r7, r3]
 801ae8a:	bf54      	ite	pl
 801ae8c:	f003 030f 	andpl.w	r3, r3, #15
 801ae90:	111b      	asrmi	r3, r3, #4
 801ae92:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ae96:	b2db      	uxtb	r3, r3
 801ae98:	930b      	str	r3, [sp, #44]	; 0x2c
 801ae9a:	e73e      	b.n	801ad1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ae9c:	f8b8 e000 	ldrh.w	lr, [r8]
 801aea0:	fa1f fb83 	uxth.w	fp, r3
 801aea4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801aea8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801aeac:	43db      	mvns	r3, r3
 801aeae:	b2db      	uxtb	r3, r3
 801aeb0:	fb11 f10b 	smulbb	r1, r1, fp
 801aeb4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aeb8:	fb00 1003 	mla	r0, r0, r3, r1
 801aebc:	fa5f fc8c 	uxtb.w	ip, ip
 801aec0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801aec4:	b2d2      	uxtb	r2, r2
 801aec6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aeca:	b280      	uxth	r0, r0
 801aecc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801aed0:	fb1c fc0b 	smulbb	ip, ip, fp
 801aed4:	fa5f fe8e 	uxtb.w	lr, lr
 801aed8:	fb12 fb0b 	smulbb	fp, r2, fp
 801aedc:	fb01 cc03 	mla	ip, r1, r3, ip
 801aee0:	fb0e bb03 	mla	fp, lr, r3, fp
 801aee4:	1c43      	adds	r3, r0, #1
 801aee6:	fa1f fc8c 	uxth.w	ip, ip
 801aeea:	fa1f fb8b 	uxth.w	fp, fp
 801aeee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aef2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801aef6:	f10c 0101 	add.w	r1, ip, #1
 801aefa:	f10b 0001 	add.w	r0, fp, #1
 801aefe:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801af02:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801af06:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801af0a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af0e:	4318      	orrs	r0, r3
 801af10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801af14:	ea40 000c 	orr.w	r0, r0, ip
 801af18:	f8a8 0000 	strh.w	r0, [r8]
 801af1c:	e734      	b.n	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af1e:	f113 0b01 	adds.w	fp, r3, #1
 801af22:	f53f af31 	bmi.w	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af26:	45dc      	cmp	ip, fp
 801af28:	f6ff af2e 	blt.w	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af2c:	f110 0b01 	adds.w	fp, r0, #1
 801af30:	f53f af2a 	bmi.w	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af34:	45de      	cmp	lr, fp
 801af36:	f6ff af27 	blt.w	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af3a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801af3c:	9302      	str	r3, [sp, #8]
 801af3e:	fa0f f38e 	sxth.w	r3, lr
 801af42:	9301      	str	r3, [sp, #4]
 801af44:	fa0f f38c 	sxth.w	r3, ip
 801af48:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801af4c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801af50:	9300      	str	r3, [sp, #0]
 801af52:	463a      	mov	r2, r7
 801af54:	4653      	mov	r3, sl
 801af56:	4641      	mov	r1, r8
 801af58:	9815      	ldr	r0, [sp, #84]	; 0x54
 801af5a:	f7ff fd2b 	bl	801a9b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801af5e:	e713      	b.n	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af60:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801af62:	1422      	asrs	r2, r4, #16
 801af64:	1433      	asrs	r3, r6, #16
 801af66:	fb05 2303 	mla	r3, r5, r3, r2
 801af6a:	085a      	lsrs	r2, r3, #1
 801af6c:	07dd      	lsls	r5, r3, #31
 801af6e:	5cba      	ldrb	r2, [r7, r2]
 801af70:	bf54      	ite	pl
 801af72:	f002 020f 	andpl.w	r2, r2, #15
 801af76:	1112      	asrmi	r2, r2, #4
 801af78:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801af7c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801af80:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801af84:	b2d2      	uxtb	r2, r2
 801af86:	2900      	cmp	r1, #0
 801af88:	d076      	beq.n	801b078 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801af8a:	f103 0e01 	add.w	lr, r3, #1
 801af8e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801af92:	f01e 0f01 	tst.w	lr, #1
 801af96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801af9a:	bf0c      	ite	eq
 801af9c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801afa0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801afa4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801afa8:	fa5f f58c 	uxtb.w	r5, ip
 801afac:	9512      	str	r5, [sp, #72]	; 0x48
 801afae:	b300      	cbz	r0, 801aff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801afb0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afb2:	442b      	add	r3, r5
 801afb4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801afb8:	07dd      	lsls	r5, r3, #31
 801afba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801afbe:	bf54      	ite	pl
 801afc0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801afc4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801afc8:	3301      	adds	r3, #1
 801afca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801afce:	fa5f f58c 	uxtb.w	r5, ip
 801afd2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801afd6:	950c      	str	r5, [sp, #48]	; 0x30
 801afd8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801afdc:	07dd      	lsls	r5, r3, #31
 801afde:	bf54      	ite	pl
 801afe0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801afe4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801afe8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801afec:	fa5f f38c 	uxtb.w	r3, ip
 801aff0:	9313      	str	r3, [sp, #76]	; 0x4c
 801aff2:	b289      	uxth	r1, r1
 801aff4:	b280      	uxth	r0, r0
 801aff6:	fb01 f300 	mul.w	r3, r1, r0
 801affa:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801affe:	0109      	lsls	r1, r1, #4
 801b000:	b280      	uxth	r0, r0
 801b002:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b006:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b008:	1ac9      	subs	r1, r1, r3
 801b00a:	ebac 0c00 	sub.w	ip, ip, r0
 801b00e:	b289      	uxth	r1, r1
 801b010:	4369      	muls	r1, r5
 801b012:	fa1f fc8c 	uxth.w	ip, ip
 801b016:	fb02 120c 	mla	r2, r2, ip, r1
 801b01a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b01c:	fb00 2001 	mla	r0, r0, r1, r2
 801b020:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b022:	fb03 0302 	mla	r3, r3, r2, r0
 801b026:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b02a:	b1d3      	cbz	r3, 801b062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b02c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b02e:	4353      	muls	r3, r2
 801b030:	1c5a      	adds	r2, r3, #1
 801b032:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b036:	4a0f      	ldr	r2, [pc, #60]	; (801b074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801b038:	121b      	asrs	r3, r3, #8
 801b03a:	6812      	ldr	r2, [r2, #0]
 801b03c:	2bff      	cmp	r3, #255	; 0xff
 801b03e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801b042:	d12d      	bne.n	801b0a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801b044:	0953      	lsrs	r3, r2, #5
 801b046:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b04a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b04e:	f02c 0c07 	bic.w	ip, ip, #7
 801b052:	ea43 0c0c 	orr.w	ip, r3, ip
 801b056:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b05a:	ea4c 0202 	orr.w	r2, ip, r2
 801b05e:	f8a8 2000 	strh.w	r2, [r8]
 801b062:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b064:	441c      	add	r4, r3
 801b066:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b068:	f108 0802 	add.w	r8, r8, #2
 801b06c:	441e      	add	r6, r3
 801b06e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b072:	e6ba      	b.n	801adea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b074:	2000a2c0 	.word	0x2000a2c0
 801b078:	2800      	cmp	r0, #0
 801b07a:	d0ba      	beq.n	801aff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b07c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b07e:	442b      	add	r3, r5
 801b080:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b084:	07db      	lsls	r3, r3, #31
 801b086:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b08a:	bf54      	ite	pl
 801b08c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b090:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b094:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b098:	fa5f f38c 	uxtb.w	r3, ip
 801b09c:	930c      	str	r3, [sp, #48]	; 0x30
 801b09e:	e7a8      	b.n	801aff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b0a0:	f8b8 e000 	ldrh.w	lr, [r8]
 801b0a4:	fa1f fa83 	uxth.w	sl, r3
 801b0a8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b0ac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b0b0:	43db      	mvns	r3, r3
 801b0b2:	b2db      	uxtb	r3, r3
 801b0b4:	fb11 f10a 	smulbb	r1, r1, sl
 801b0b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b0bc:	fb00 1003 	mla	r0, r0, r3, r1
 801b0c0:	b2d2      	uxtb	r2, r2
 801b0c2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b0c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b0ca:	fa5f fe8e 	uxtb.w	lr, lr
 801b0ce:	fb12 f20a 	smulbb	r2, r2, sl
 801b0d2:	fb0e 2203 	mla	r2, lr, r3, r2
 801b0d6:	fa5f fc8c 	uxtb.w	ip, ip
 801b0da:	b280      	uxth	r0, r0
 801b0dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b0e0:	b292      	uxth	r2, r2
 801b0e2:	fb1c fc0a 	smulbb	ip, ip, sl
 801b0e6:	fb01 cc03 	mla	ip, r1, r3, ip
 801b0ea:	1c43      	adds	r3, r0, #1
 801b0ec:	1c51      	adds	r1, r2, #1
 801b0ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b0f2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b0f6:	fa1f fc8c 	uxth.w	ip, ip
 801b0fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b0fe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b102:	4308      	orrs	r0, r1
 801b104:	f10c 0101 	add.w	r1, ip, #1
 801b108:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b10c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b110:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b114:	ea40 000c 	orr.w	r0, r0, ip
 801b118:	f8a8 0000 	strh.w	r0, [r8]
 801b11c:	e7a1      	b.n	801b062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b11e:	b017      	add	sp, #92	; 0x5c
 801b120:	ecbd 8b08 	vpop	{d8-d11}
 801b124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b12c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b130:	2c00      	cmp	r4, #0
 801b132:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b136:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b13a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b13e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b142:	fb04 ce03 	mla	lr, r4, r3, ip
 801b146:	db60      	blt.n	801b20a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b148:	45a1      	cmp	r9, r4
 801b14a:	dd5e      	ble.n	801b20a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b14c:	f1bc 0f00 	cmp.w	ip, #0
 801b150:	db59      	blt.n	801b206 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b152:	45e0      	cmp	r8, ip
 801b154:	dd57      	ble.n	801b206 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b156:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b15a:	f01e 0f01 	tst.w	lr, #1
 801b15e:	5c16      	ldrb	r6, [r2, r0]
 801b160:	bf0c      	ite	eq
 801b162:	f006 060f 	andeq.w	r6, r6, #15
 801b166:	1136      	asrne	r6, r6, #4
 801b168:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b16c:	b2f6      	uxtb	r6, r6
 801b16e:	f11c 0001 	adds.w	r0, ip, #1
 801b172:	d44d      	bmi.n	801b210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b174:	4580      	cmp	r8, r0
 801b176:	dd4b      	ble.n	801b210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b178:	2d00      	cmp	r5, #0
 801b17a:	d04b      	beq.n	801b214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b17c:	f10e 0a01 	add.w	sl, lr, #1
 801b180:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b184:	f01a 0f01 	tst.w	sl, #1
 801b188:	5c10      	ldrb	r0, [r2, r0]
 801b18a:	bf0c      	ite	eq
 801b18c:	f000 000f 	andeq.w	r0, r0, #15
 801b190:	1100      	asrne	r0, r0, #4
 801b192:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b196:	b2c0      	uxtb	r0, r0
 801b198:	3401      	adds	r4, #1
 801b19a:	d43f      	bmi.n	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b19c:	45a1      	cmp	r9, r4
 801b19e:	dd3d      	ble.n	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b1a0:	2f00      	cmp	r7, #0
 801b1a2:	f000 8093 	beq.w	801b2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b1a6:	f1bc 0f00 	cmp.w	ip, #0
 801b1aa:	db35      	blt.n	801b218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b1ac:	45e0      	cmp	r8, ip
 801b1ae:	dd33      	ble.n	801b218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b1b0:	eb03 090e 	add.w	r9, r3, lr
 801b1b4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b1b8:	f019 0f01 	tst.w	r9, #1
 801b1bc:	5d14      	ldrb	r4, [r2, r4]
 801b1be:	bf0c      	ite	eq
 801b1c0:	f004 040f 	andeq.w	r4, r4, #15
 801b1c4:	1124      	asrne	r4, r4, #4
 801b1c6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b1ca:	b2e4      	uxtb	r4, r4
 801b1cc:	f11c 0c01 	adds.w	ip, ip, #1
 801b1d0:	d427      	bmi.n	801b222 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b1d2:	45e0      	cmp	r8, ip
 801b1d4:	dd25      	ble.n	801b222 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b1d6:	b335      	cbz	r5, 801b226 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b1d8:	3301      	adds	r3, #1
 801b1da:	449e      	add	lr, r3
 801b1dc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b1e0:	f01e 0f01 	tst.w	lr, #1
 801b1e4:	5cd2      	ldrb	r2, [r2, r3]
 801b1e6:	bf0c      	ite	eq
 801b1e8:	f002 020f 	andeq.w	r2, r2, #15
 801b1ec:	1112      	asrne	r2, r2, #4
 801b1ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b1f2:	b2d3      	uxtb	r3, r2
 801b1f4:	2d0f      	cmp	r5, #15
 801b1f6:	d917      	bls.n	801b228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b1f8:	4b37      	ldr	r3, [pc, #220]	; (801b2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801b1fa:	4a38      	ldr	r2, [pc, #224]	; (801b2dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801b1fc:	4838      	ldr	r0, [pc, #224]	; (801b2e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801b1fe:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801b202:	f000 fc6d 	bl	801bae0 <__assert_func>
 801b206:	2600      	movs	r6, #0
 801b208:	e7b1      	b.n	801b16e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b20a:	2000      	movs	r0, #0
 801b20c:	4606      	mov	r6, r0
 801b20e:	e7c3      	b.n	801b198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b210:	2000      	movs	r0, #0
 801b212:	e7c1      	b.n	801b198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b214:	4628      	mov	r0, r5
 801b216:	e7bf      	b.n	801b198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b218:	2400      	movs	r4, #0
 801b21a:	e7d7      	b.n	801b1cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b21c:	2300      	movs	r3, #0
 801b21e:	461c      	mov	r4, r3
 801b220:	e7e8      	b.n	801b1f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b222:	2300      	movs	r3, #0
 801b224:	e7e6      	b.n	801b1f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b226:	462b      	mov	r3, r5
 801b228:	2f0f      	cmp	r7, #15
 801b22a:	d8e5      	bhi.n	801b1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b22c:	b2ad      	uxth	r5, r5
 801b22e:	b2bf      	uxth	r7, r7
 801b230:	fb05 fc07 	mul.w	ip, r5, r7
 801b234:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b238:	012d      	lsls	r5, r5, #4
 801b23a:	b2bf      	uxth	r7, r7
 801b23c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b240:	eba5 050c 	sub.w	r5, r5, ip
 801b244:	1bd2      	subs	r2, r2, r7
 801b246:	b2ad      	uxth	r5, r5
 801b248:	b292      	uxth	r2, r2
 801b24a:	4368      	muls	r0, r5
 801b24c:	fb06 0002 	mla	r0, r6, r2, r0
 801b250:	fb07 0404 	mla	r4, r7, r4, r0
 801b254:	fb0c 4303 	mla	r3, ip, r3, r4
 801b258:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b25c:	b3a3      	cbz	r3, 801b2c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b25e:	4a21      	ldr	r2, [pc, #132]	; (801b2e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b260:	880e      	ldrh	r6, [r1, #0]
 801b262:	6815      	ldr	r5, [r2, #0]
 801b264:	1234      	asrs	r4, r6, #8
 801b266:	b29a      	uxth	r2, r3
 801b268:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b26c:	43db      	mvns	r3, r3
 801b26e:	b2db      	uxtb	r3, r3
 801b270:	fb10 f002 	smulbb	r0, r0, r2
 801b274:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b278:	fb04 0403 	mla	r4, r4, r3, r0
 801b27c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b280:	10f0      	asrs	r0, r6, #3
 801b282:	b2ed      	uxtb	r5, r5
 801b284:	00f6      	lsls	r6, r6, #3
 801b286:	fb17 f702 	smulbb	r7, r7, r2
 801b28a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b28e:	fb15 f202 	smulbb	r2, r5, r2
 801b292:	b2f6      	uxtb	r6, r6
 801b294:	b2a4      	uxth	r4, r4
 801b296:	fb00 7003 	mla	r0, r0, r3, r7
 801b29a:	fb06 2303 	mla	r3, r6, r3, r2
 801b29e:	b29a      	uxth	r2, r3
 801b2a0:	1c63      	adds	r3, r4, #1
 801b2a2:	b280      	uxth	r0, r0
 801b2a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b2a8:	1c53      	adds	r3, r2, #1
 801b2aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b2ae:	1c42      	adds	r2, r0, #1
 801b2b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b2b4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b2b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b2bc:	0940      	lsrs	r0, r0, #5
 801b2be:	4323      	orrs	r3, r4
 801b2c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b2c4:	4303      	orrs	r3, r0
 801b2c6:	800b      	strh	r3, [r1, #0]
 801b2c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b2cc:	2d0f      	cmp	r5, #15
 801b2ce:	d893      	bhi.n	801b1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b2d0:	463b      	mov	r3, r7
 801b2d2:	463c      	mov	r4, r7
 801b2d4:	e7aa      	b.n	801b22c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b2d6:	bf00      	nop
 801b2d8:	0801f996 	.word	0x0801f996
 801b2dc:	0801ff66 	.word	0x0801ff66
 801b2e0:	0801fa1a 	.word	0x0801fa1a
 801b2e4:	2000a2c0 	.word	0x2000a2c0

0801b2e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2ec:	ed2d 8b08 	vpush	{d8-d11}
 801b2f0:	b093      	sub	sp, #76	; 0x4c
 801b2f2:	461d      	mov	r5, r3
 801b2f4:	920c      	str	r2, [sp, #48]	; 0x30
 801b2f6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b2f8:	9107      	str	r1, [sp, #28]
 801b2fa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b2fe:	9011      	str	r0, [sp, #68]	; 0x44
 801b300:	6850      	ldr	r0, [r2, #4]
 801b302:	6812      	ldr	r2, [r2, #0]
 801b304:	fb00 1303 	mla	r3, r0, r3, r1
 801b308:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b30c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b30e:	689b      	ldr	r3, [r3, #8]
 801b310:	3301      	adds	r3, #1
 801b312:	f023 0301 	bic.w	r3, r3, #1
 801b316:	9306      	str	r3, [sp, #24]
 801b318:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b31a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b31e:	681f      	ldr	r7, [r3, #0]
 801b320:	eeb0 aa40 	vmov.f32	s20, s0
 801b324:	eef0 9a60 	vmov.f32	s19, s1
 801b328:	eeb0 9a41 	vmov.f32	s18, s2
 801b32c:	eeb0 8a62 	vmov.f32	s16, s5
 801b330:	eef0 8a43 	vmov.f32	s17, s6
 801b334:	eef0 ba44 	vmov.f32	s23, s8
 801b338:	eeb0 ba64 	vmov.f32	s22, s9
 801b33c:	eef0 aa45 	vmov.f32	s21, s10
 801b340:	9b07      	ldr	r3, [sp, #28]
 801b342:	2b00      	cmp	r3, #0
 801b344:	dc03      	bgt.n	801b34e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b346:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b348:	2b00      	cmp	r3, #0
 801b34a:	f340 8267 	ble.w	801b81c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b34e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b350:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b354:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b358:	1e48      	subs	r0, r1, #1
 801b35a:	f102 3cff 	add.w	ip, r2, #4294967295
 801b35e:	2d00      	cmp	r5, #0
 801b360:	f340 80b8 	ble.w	801b4d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b364:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b368:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b36c:	d406      	bmi.n	801b37c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b36e:	4586      	cmp	lr, r0
 801b370:	da04      	bge.n	801b37c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b372:	2b00      	cmp	r3, #0
 801b374:	db02      	blt.n	801b37c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b376:	4563      	cmp	r3, ip
 801b378:	f2c0 80ad 	blt.w	801b4d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b37c:	f11e 0e01 	adds.w	lr, lr, #1
 801b380:	f100 80a0 	bmi.w	801b4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b384:	4571      	cmp	r1, lr
 801b386:	f2c0 809d 	blt.w	801b4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b38a:	3301      	adds	r3, #1
 801b38c:	f100 809a 	bmi.w	801b4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b390:	429a      	cmp	r2, r3
 801b392:	f2c0 8097 	blt.w	801b4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b396:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b39a:	9509      	str	r5, [sp, #36]	; 0x24
 801b39c:	46c8      	mov	r8, r9
 801b39e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b3a0:	2b00      	cmp	r3, #0
 801b3a2:	f340 80b6 	ble.w	801b512 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b3a6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b3aa:	9308      	str	r3, [sp, #32]
 801b3ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3ae:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b3b2:	1423      	asrs	r3, r4, #16
 801b3b4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b3b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b3bc:	f100 813e 	bmi.w	801b63c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b3c0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b3c4:	455b      	cmp	r3, fp
 801b3c6:	f280 8139 	bge.w	801b63c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b3ca:	2800      	cmp	r0, #0
 801b3cc:	f2c0 8136 	blt.w	801b63c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b3d0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b3d4:	4558      	cmp	r0, fp
 801b3d6:	f280 8131 	bge.w	801b63c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b3da:	9a06      	ldr	r2, [sp, #24]
 801b3dc:	fb00 3302 	mla	r3, r0, r2, r3
 801b3e0:	0858      	lsrs	r0, r3, #1
 801b3e2:	07da      	lsls	r2, r3, #31
 801b3e4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b3e8:	9a08      	ldr	r2, [sp, #32]
 801b3ea:	bf54      	ite	pl
 801b3ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b3f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b3f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b3f8:	fa5f fc8c 	uxtb.w	ip, ip
 801b3fc:	2a00      	cmp	r2, #0
 801b3fe:	f000 80cb 	beq.w	801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801b402:	1c58      	adds	r0, r3, #1
 801b404:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b408:	07c0      	lsls	r0, r0, #31
 801b40a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b40e:	bf54      	ite	pl
 801b410:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b414:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b418:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b41c:	fa5f fe8e 	uxtb.w	lr, lr
 801b420:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b424:	b1b9      	cbz	r1, 801b456 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b426:	4453      	add	r3, sl
 801b428:	0858      	lsrs	r0, r3, #1
 801b42a:	07da      	lsls	r2, r3, #31
 801b42c:	5c38      	ldrb	r0, [r7, r0]
 801b42e:	bf54      	ite	pl
 801b430:	f000 000f 	andpl.w	r0, r0, #15
 801b434:	1100      	asrmi	r0, r0, #4
 801b436:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b43a:	b2c0      	uxtb	r0, r0
 801b43c:	900a      	str	r0, [sp, #40]	; 0x28
 801b43e:	1c58      	adds	r0, r3, #1
 801b440:	0843      	lsrs	r3, r0, #1
 801b442:	07c2      	lsls	r2, r0, #31
 801b444:	5cfb      	ldrb	r3, [r7, r3]
 801b446:	bf54      	ite	pl
 801b448:	f003 030f 	andpl.w	r3, r3, #15
 801b44c:	111b      	asrmi	r3, r3, #4
 801b44e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b452:	b2db      	uxtb	r3, r3
 801b454:	930e      	str	r3, [sp, #56]	; 0x38
 801b456:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b45a:	b289      	uxth	r1, r1
 801b45c:	fb02 f301 	mul.w	r3, r2, r1
 801b460:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b464:	0112      	lsls	r2, r2, #4
 801b466:	b289      	uxth	r1, r1
 801b468:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b46c:	1a40      	subs	r0, r0, r1
 801b46e:	fa1f fe80 	uxth.w	lr, r0
 801b472:	1ad2      	subs	r2, r2, r3
 801b474:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b476:	b292      	uxth	r2, r2
 801b478:	4342      	muls	r2, r0
 801b47a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b47e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b480:	fb01 c102 	mla	r1, r1, r2, ip
 801b484:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b486:	fb03 1302 	mla	r3, r3, r2, r1
 801b48a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b48e:	2bff      	cmp	r3, #255	; 0xff
 801b490:	f040 8093 	bne.w	801b5ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b494:	4bbe      	ldr	r3, [pc, #760]	; (801b790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b496:	681a      	ldr	r2, [r3, #0]
 801b498:	4bbe      	ldr	r3, [pc, #760]	; (801b794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b49a:	0951      	lsrs	r1, r2, #5
 801b49c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b4a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b4a4:	430b      	orrs	r3, r1
 801b4a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b4aa:	4313      	orrs	r3, r2
 801b4ac:	f8a8 3000 	strh.w	r3, [r8]
 801b4b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b4b2:	441c      	add	r4, r3
 801b4b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4b6:	441e      	add	r6, r3
 801b4b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4ba:	3b01      	subs	r3, #1
 801b4bc:	f108 0802 	add.w	r8, r8, #2
 801b4c0:	9309      	str	r3, [sp, #36]	; 0x24
 801b4c2:	e76c      	b.n	801b39e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b4c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b4c6:	441c      	add	r4, r3
 801b4c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4ca:	3d01      	subs	r5, #1
 801b4cc:	441e      	add	r6, r3
 801b4ce:	f109 0902 	add.w	r9, r9, #2
 801b4d2:	e744      	b.n	801b35e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b4d4:	d021      	beq.n	801b51a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b4d6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b4d8:	1e6b      	subs	r3, r5, #1
 801b4da:	fb00 4003 	mla	r0, r0, r3, r4
 801b4de:	1400      	asrs	r0, r0, #16
 801b4e0:	f53f af59 	bmi.w	801b396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b4e4:	3901      	subs	r1, #1
 801b4e6:	4288      	cmp	r0, r1
 801b4e8:	f6bf af55 	bge.w	801b396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b4ec:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b4ee:	fb01 6303 	mla	r3, r1, r3, r6
 801b4f2:	141b      	asrs	r3, r3, #16
 801b4f4:	f53f af4f 	bmi.w	801b396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b4f8:	3a01      	subs	r2, #1
 801b4fa:	4293      	cmp	r3, r2
 801b4fc:	f6bf af4b 	bge.w	801b396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b500:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b504:	9308      	str	r3, [sp, #32]
 801b506:	46a8      	mov	r8, r5
 801b508:	46ce      	mov	lr, r9
 801b50a:	f1b8 0f00 	cmp.w	r8, #0
 801b50e:	f300 80b5 	bgt.w	801b67c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b512:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b516:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b51a:	9b07      	ldr	r3, [sp, #28]
 801b51c:	2b00      	cmp	r3, #0
 801b51e:	f340 817d 	ble.w	801b81c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b522:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b526:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b52a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b52e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b530:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b534:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b538:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b53c:	eef0 6a48 	vmov.f32	s13, s16
 801b540:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b544:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b548:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b54c:	ee16 4a90 	vmov	r4, s13
 801b550:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b554:	eef0 6a68 	vmov.f32	s13, s17
 801b558:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b55c:	ee18 2a10 	vmov	r2, s16
 801b560:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b564:	fb92 f3f3 	sdiv	r3, r2, r3
 801b568:	ee18 2a90 	vmov	r2, s17
 801b56c:	9327      	str	r3, [sp, #156]	; 0x9c
 801b56e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b570:	fb92 f3f3 	sdiv	r3, r2, r3
 801b574:	9328      	str	r3, [sp, #160]	; 0xa0
 801b576:	9b07      	ldr	r3, [sp, #28]
 801b578:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b57a:	3b01      	subs	r3, #1
 801b57c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b580:	9307      	str	r3, [sp, #28]
 801b582:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b584:	ee16 6a90 	vmov	r6, s13
 801b588:	bf14      	ite	ne
 801b58a:	461d      	movne	r5, r3
 801b58c:	4615      	moveq	r5, r2
 801b58e:	eef0 8a67 	vmov.f32	s17, s15
 801b592:	eeb0 8a47 	vmov.f32	s16, s14
 801b596:	e6d3      	b.n	801b340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b598:	2900      	cmp	r1, #0
 801b59a:	f43f af5c 	beq.w	801b456 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b59e:	eb0a 0003 	add.w	r0, sl, r3
 801b5a2:	0843      	lsrs	r3, r0, #1
 801b5a4:	07c0      	lsls	r0, r0, #31
 801b5a6:	5cfb      	ldrb	r3, [r7, r3]
 801b5a8:	bf54      	ite	pl
 801b5aa:	f003 030f 	andpl.w	r3, r3, #15
 801b5ae:	111b      	asrmi	r3, r3, #4
 801b5b0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b5b4:	b2db      	uxtb	r3, r3
 801b5b6:	930a      	str	r3, [sp, #40]	; 0x28
 801b5b8:	e74d      	b.n	801b456 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b5ba:	2b00      	cmp	r3, #0
 801b5bc:	f43f af78 	beq.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5c0:	4a73      	ldr	r2, [pc, #460]	; (801b790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b5c2:	f8b8 c000 	ldrh.w	ip, [r8]
 801b5c6:	6810      	ldr	r0, [r2, #0]
 801b5c8:	fa1f fe83 	uxth.w	lr, r3
 801b5cc:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b5d0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b5d4:	43db      	mvns	r3, r3
 801b5d6:	b2db      	uxtb	r3, r3
 801b5d8:	fb12 f20e 	smulbb	r2, r2, lr
 801b5dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b5e0:	fb01 2103 	mla	r1, r1, r3, r2
 801b5e4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b5e8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b5ec:	b2c0      	uxtb	r0, r0
 801b5ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5f2:	fb1b fb0e 	smulbb	fp, fp, lr
 801b5f6:	b289      	uxth	r1, r1
 801b5f8:	fb10 fe0e 	smulbb	lr, r0, lr
 801b5fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b600:	fa5f fc8c 	uxtb.w	ip, ip
 801b604:	fb02 b203 	mla	r2, r2, r3, fp
 801b608:	1c48      	adds	r0, r1, #1
 801b60a:	fb0c e303 	mla	r3, ip, r3, lr
 801b60e:	b292      	uxth	r2, r2
 801b610:	b29b      	uxth	r3, r3
 801b612:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b616:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b61a:	f102 0b01 	add.w	fp, r2, #1
 801b61e:	1c59      	adds	r1, r3, #1
 801b620:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b624:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b628:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b62c:	0952      	lsrs	r2, r2, #5
 801b62e:	4301      	orrs	r1, r0
 801b630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b634:	4311      	orrs	r1, r2
 801b636:	f8a8 1000 	strh.w	r1, [r8]
 801b63a:	e739      	b.n	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b63c:	f113 0b01 	adds.w	fp, r3, #1
 801b640:	f53f af36 	bmi.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b644:	45dc      	cmp	ip, fp
 801b646:	f6ff af33 	blt.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b64a:	f110 0b01 	adds.w	fp, r0, #1
 801b64e:	f53f af2f 	bmi.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b652:	45de      	cmp	lr, fp
 801b654:	f6ff af2c 	blt.w	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b658:	9a08      	ldr	r2, [sp, #32]
 801b65a:	9302      	str	r3, [sp, #8]
 801b65c:	fa0f f38e 	sxth.w	r3, lr
 801b660:	9301      	str	r3, [sp, #4]
 801b662:	fa0f f38c 	sxth.w	r3, ip
 801b666:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b66a:	9105      	str	r1, [sp, #20]
 801b66c:	9300      	str	r3, [sp, #0]
 801b66e:	463a      	mov	r2, r7
 801b670:	4653      	mov	r3, sl
 801b672:	4641      	mov	r1, r8
 801b674:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b676:	f7ff fd57 	bl	801b128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b67a:	e719      	b.n	801b4b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b67c:	9906      	ldr	r1, [sp, #24]
 801b67e:	1422      	asrs	r2, r4, #16
 801b680:	1433      	asrs	r3, r6, #16
 801b682:	fb01 2303 	mla	r3, r1, r3, r2
 801b686:	085a      	lsrs	r2, r3, #1
 801b688:	07d9      	lsls	r1, r3, #31
 801b68a:	5cba      	ldrb	r2, [r7, r2]
 801b68c:	bf54      	ite	pl
 801b68e:	f002 020f 	andpl.w	r2, r2, #15
 801b692:	1112      	asrmi	r2, r2, #4
 801b694:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b698:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b69c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b6a0:	b2d2      	uxtb	r2, r2
 801b6a2:	2800      	cmp	r0, #0
 801b6a4:	d062      	beq.n	801b76c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b6a6:	f103 0a01 	add.w	sl, r3, #1
 801b6aa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b6ae:	f01a 0f01 	tst.w	sl, #1
 801b6b2:	5c79      	ldrb	r1, [r7, r1]
 801b6b4:	bf0c      	ite	eq
 801b6b6:	f001 010f 	andeq.w	r1, r1, #15
 801b6ba:	1109      	asrne	r1, r1, #4
 801b6bc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6c0:	b2c9      	uxtb	r1, r1
 801b6c2:	910f      	str	r1, [sp, #60]	; 0x3c
 801b6c4:	f1bc 0f00 	cmp.w	ip, #0
 801b6c8:	d019      	beq.n	801b6fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b6ca:	9908      	ldr	r1, [sp, #32]
 801b6cc:	440b      	add	r3, r1
 801b6ce:	0859      	lsrs	r1, r3, #1
 801b6d0:	f013 0f01 	tst.w	r3, #1
 801b6d4:	5c79      	ldrb	r1, [r7, r1]
 801b6d6:	bf0c      	ite	eq
 801b6d8:	f001 010f 	andeq.w	r1, r1, #15
 801b6dc:	1109      	asrne	r1, r1, #4
 801b6de:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6e2:	b2c9      	uxtb	r1, r1
 801b6e4:	3301      	adds	r3, #1
 801b6e6:	910b      	str	r1, [sp, #44]	; 0x2c
 801b6e8:	0859      	lsrs	r1, r3, #1
 801b6ea:	07db      	lsls	r3, r3, #31
 801b6ec:	5c79      	ldrb	r1, [r7, r1]
 801b6ee:	bf54      	ite	pl
 801b6f0:	f001 010f 	andpl.w	r1, r1, #15
 801b6f4:	1109      	asrmi	r1, r1, #4
 801b6f6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6fa:	b2c9      	uxtb	r1, r1
 801b6fc:	9110      	str	r1, [sp, #64]	; 0x40
 801b6fe:	b280      	uxth	r0, r0
 801b700:	fa1f fc8c 	uxth.w	ip, ip
 801b704:	fb00 f30c 	mul.w	r3, r0, ip
 801b708:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b70c:	0100      	lsls	r0, r0, #4
 801b70e:	fa1f fc8c 	uxth.w	ip, ip
 801b712:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b716:	eba1 010c 	sub.w	r1, r1, ip
 801b71a:	fa1f fa81 	uxth.w	sl, r1
 801b71e:	1ac0      	subs	r0, r0, r3
 801b720:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b722:	b280      	uxth	r0, r0
 801b724:	4348      	muls	r0, r1
 801b726:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b728:	fb02 020a 	mla	r2, r2, sl, r0
 801b72c:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b730:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b732:	fb03 c302 	mla	r3, r3, r2, ip
 801b736:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b73a:	2bff      	cmp	r3, #255	; 0xff
 801b73c:	d12c      	bne.n	801b798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b73e:	4b14      	ldr	r3, [pc, #80]	; (801b790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b740:	681a      	ldr	r2, [r3, #0]
 801b742:	4b14      	ldr	r3, [pc, #80]	; (801b794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b744:	0951      	lsrs	r1, r2, #5
 801b746:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b74a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b74e:	430b      	orrs	r3, r1
 801b750:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b754:	4313      	orrs	r3, r2
 801b756:	f8ae 3000 	strh.w	r3, [lr]
 801b75a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b75c:	441c      	add	r4, r3
 801b75e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b760:	f10e 0e02 	add.w	lr, lr, #2
 801b764:	441e      	add	r6, r3
 801b766:	f108 38ff 	add.w	r8, r8, #4294967295
 801b76a:	e6ce      	b.n	801b50a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b76c:	f1bc 0f00 	cmp.w	ip, #0
 801b770:	d0c5      	beq.n	801b6fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b772:	9908      	ldr	r1, [sp, #32]
 801b774:	440b      	add	r3, r1
 801b776:	0859      	lsrs	r1, r3, #1
 801b778:	07db      	lsls	r3, r3, #31
 801b77a:	5c79      	ldrb	r1, [r7, r1]
 801b77c:	bf54      	ite	pl
 801b77e:	f001 010f 	andpl.w	r1, r1, #15
 801b782:	1109      	asrmi	r1, r1, #4
 801b784:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b788:	b2c9      	uxtb	r1, r1
 801b78a:	910b      	str	r1, [sp, #44]	; 0x2c
 801b78c:	e7b7      	b.n	801b6fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b78e:	bf00      	nop
 801b790:	2000a2c0 	.word	0x2000a2c0
 801b794:	fffff800 	.word	0xfffff800
 801b798:	2b00      	cmp	r3, #0
 801b79a:	d0de      	beq.n	801b75a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b79c:	4a22      	ldr	r2, [pc, #136]	; (801b828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b79e:	f8be c000 	ldrh.w	ip, [lr]
 801b7a2:	6810      	ldr	r0, [r2, #0]
 801b7a4:	fa1f fa83 	uxth.w	sl, r3
 801b7a8:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b7ac:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b7b0:	43db      	mvns	r3, r3
 801b7b2:	b2db      	uxtb	r3, r3
 801b7b4:	fb12 f20a 	smulbb	r2, r2, sl
 801b7b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b7bc:	fb01 2103 	mla	r1, r1, r3, r2
 801b7c0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b7c4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b7c8:	b2c0      	uxtb	r0, r0
 801b7ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7ce:	fa5f fc8c 	uxtb.w	ip, ip
 801b7d2:	fb10 f00a 	smulbb	r0, r0, sl
 801b7d6:	fb0c 0003 	mla	r0, ip, r3, r0
 801b7da:	b289      	uxth	r1, r1
 801b7dc:	fb1b fb0a 	smulbb	fp, fp, sl
 801b7e0:	b280      	uxth	r0, r0
 801b7e2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b7e6:	fb02 b203 	mla	r2, r2, r3, fp
 801b7ea:	1c4b      	adds	r3, r1, #1
 801b7ec:	f100 0b01 	add.w	fp, r0, #1
 801b7f0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b7f4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b7f8:	b292      	uxth	r2, r2
 801b7fa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b7fe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b802:	ea4b 0101 	orr.w	r1, fp, r1
 801b806:	f102 0b01 	add.w	fp, r2, #1
 801b80a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b80e:	0952      	lsrs	r2, r2, #5
 801b810:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b814:	4311      	orrs	r1, r2
 801b816:	f8ae 1000 	strh.w	r1, [lr]
 801b81a:	e79e      	b.n	801b75a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b81c:	b013      	add	sp, #76	; 0x4c
 801b81e:	ecbd 8b08 	vpop	{d8-d11}
 801b822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b826:	bf00      	nop
 801b828:	2000a2c0 	.word	0x2000a2c0

0801b82c <CRC_Lock>:
 801b82c:	b530      	push	{r4, r5, lr}
 801b82e:	4a20      	ldr	r2, [pc, #128]	; (801b8b0 <CRC_Lock+0x84>)
 801b830:	6813      	ldr	r3, [r2, #0]
 801b832:	f023 0301 	bic.w	r3, r3, #1
 801b836:	6013      	str	r3, [r2, #0]
 801b838:	4b1e      	ldr	r3, [pc, #120]	; (801b8b4 <CRC_Lock+0x88>)
 801b83a:	681a      	ldr	r2, [r3, #0]
 801b83c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b840:	4022      	ands	r2, r4
 801b842:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b846:	42aa      	cmp	r2, r5
 801b848:	d005      	beq.n	801b856 <CRC_Lock+0x2a>
 801b84a:	681b      	ldr	r3, [r3, #0]
 801b84c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b850:	4023      	ands	r3, r4
 801b852:	4293      	cmp	r3, r2
 801b854:	d124      	bne.n	801b8a0 <CRC_Lock+0x74>
 801b856:	4b18      	ldr	r3, [pc, #96]	; (801b8b8 <CRC_Lock+0x8c>)
 801b858:	681b      	ldr	r3, [r3, #0]
 801b85a:	bb0b      	cbnz	r3, 801b8a0 <CRC_Lock+0x74>
 801b85c:	4b17      	ldr	r3, [pc, #92]	; (801b8bc <CRC_Lock+0x90>)
 801b85e:	681a      	ldr	r2, [r3, #0]
 801b860:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b864:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b868:	d00d      	beq.n	801b886 <CRC_Lock+0x5a>
 801b86a:	681a      	ldr	r2, [r3, #0]
 801b86c:	f240 4483 	movw	r4, #1155	; 0x483
 801b870:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b874:	42a2      	cmp	r2, r4
 801b876:	d006      	beq.n	801b886 <CRC_Lock+0x5a>
 801b878:	681b      	ldr	r3, [r3, #0]
 801b87a:	f240 4285 	movw	r2, #1157	; 0x485
 801b87e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b882:	4293      	cmp	r3, r2
 801b884:	d10c      	bne.n	801b8a0 <CRC_Lock+0x74>
 801b886:	4b0e      	ldr	r3, [pc, #56]	; (801b8c0 <CRC_Lock+0x94>)
 801b888:	2201      	movs	r2, #1
 801b88a:	601a      	str	r2, [r3, #0]
 801b88c:	681a      	ldr	r2, [r3, #0]
 801b88e:	2a00      	cmp	r2, #0
 801b890:	d1fc      	bne.n	801b88c <CRC_Lock+0x60>
 801b892:	4b0c      	ldr	r3, [pc, #48]	; (801b8c4 <CRC_Lock+0x98>)
 801b894:	6018      	str	r0, [r3, #0]
 801b896:	6818      	ldr	r0, [r3, #0]
 801b898:	1a43      	subs	r3, r0, r1
 801b89a:	4258      	negs	r0, r3
 801b89c:	4158      	adcs	r0, r3
 801b89e:	bd30      	pop	{r4, r5, pc}
 801b8a0:	4b09      	ldr	r3, [pc, #36]	; (801b8c8 <CRC_Lock+0x9c>)
 801b8a2:	2201      	movs	r2, #1
 801b8a4:	601a      	str	r2, [r3, #0]
 801b8a6:	681a      	ldr	r2, [r3, #0]
 801b8a8:	2a00      	cmp	r2, #0
 801b8aa:	d1fc      	bne.n	801b8a6 <CRC_Lock+0x7a>
 801b8ac:	4b07      	ldr	r3, [pc, #28]	; (801b8cc <CRC_Lock+0xa0>)
 801b8ae:	e7f1      	b.n	801b894 <CRC_Lock+0x68>
 801b8b0:	e0002000 	.word	0xe0002000
 801b8b4:	e000ed00 	.word	0xe000ed00
 801b8b8:	e0042000 	.word	0xe0042000
 801b8bc:	5c001000 	.word	0x5c001000
 801b8c0:	58024c08 	.word	0x58024c08
 801b8c4:	58024c00 	.word	0x58024c00
 801b8c8:	40023008 	.word	0x40023008
 801b8cc:	40023000 	.word	0x40023000

0801b8d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b8d0:	6101      	str	r1, [r0, #16]
 801b8d2:	4770      	bx	lr

0801b8d4 <_ZN8touchgfx8Gestures4tickEv>:
 801b8d4:	7b83      	ldrb	r3, [r0, #14]
 801b8d6:	b14b      	cbz	r3, 801b8ec <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b8d8:	8903      	ldrh	r3, [r0, #8]
 801b8da:	3301      	adds	r3, #1
 801b8dc:	b29b      	uxth	r3, r3
 801b8de:	2b07      	cmp	r3, #7
 801b8e0:	8103      	strh	r3, [r0, #8]
 801b8e2:	bf81      	itttt	hi
 801b8e4:	2300      	movhi	r3, #0
 801b8e6:	8143      	strhhi	r3, [r0, #10]
 801b8e8:	8183      	strhhi	r3, [r0, #12]
 801b8ea:	7383      	strbhi	r3, [r0, #14]
 801b8ec:	4770      	bx	lr
	...

0801b8f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b8f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b8f4:	4604      	mov	r4, r0
 801b8f6:	8880      	ldrh	r0, [r0, #4]
 801b8f8:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b8fc:	4698      	mov	r8, r3
 801b8fe:	eba8 0000 	sub.w	r0, r8, r0
 801b902:	4b1c      	ldr	r3, [pc, #112]	; (801b974 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b904:	9300      	str	r3, [sp, #0]
 801b906:	b280      	uxth	r0, r0
 801b908:	2300      	movs	r3, #0
 801b90a:	f88d 3004 	strb.w	r3, [sp, #4]
 801b90e:	b203      	sxth	r3, r0
 801b910:	2b00      	cmp	r3, #0
 801b912:	bfb8      	it	lt
 801b914:	4240      	neglt	r0, r0
 801b916:	4617      	mov	r7, r2
 801b918:	8aa2      	ldrh	r2, [r4, #20]
 801b91a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b91e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b922:	bfb8      	it	lt
 801b924:	b203      	sxthlt	r3, r0
 801b926:	460e      	mov	r6, r1
 801b928:	4293      	cmp	r3, r2
 801b92a:	88e1      	ldrh	r1, [r4, #6]
 801b92c:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b930:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b934:	dc08      	bgt.n	801b948 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b936:	1a69      	subs	r1, r5, r1
 801b938:	b289      	uxth	r1, r1
 801b93a:	b20b      	sxth	r3, r1
 801b93c:	2b00      	cmp	r3, #0
 801b93e:	bfbc      	itt	lt
 801b940:	4249      	neglt	r1, r1
 801b942:	b20b      	sxthlt	r3, r1
 801b944:	429a      	cmp	r2, r3
 801b946:	da13      	bge.n	801b970 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b948:	6920      	ldr	r0, [r4, #16]
 801b94a:	6803      	ldr	r3, [r0, #0]
 801b94c:	4669      	mov	r1, sp
 801b94e:	685b      	ldr	r3, [r3, #4]
 801b950:	4798      	blx	r3
 801b952:	eba8 0606 	sub.w	r6, r8, r6
 801b956:	2300      	movs	r3, #0
 801b958:	1bef      	subs	r7, r5, r7
 801b95a:	2001      	movs	r0, #1
 801b95c:	8123      	strh	r3, [r4, #8]
 801b95e:	8166      	strh	r6, [r4, #10]
 801b960:	81a7      	strh	r7, [r4, #12]
 801b962:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b966:	80e5      	strh	r5, [r4, #6]
 801b968:	73a0      	strb	r0, [r4, #14]
 801b96a:	b004      	add	sp, #16
 801b96c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b970:	2000      	movs	r0, #0
 801b972:	e7fa      	b.n	801b96a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b974:	0801ee68 	.word	0x0801ee68

0801b978 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b978:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b97a:	461e      	mov	r6, r3
 801b97c:	1e4b      	subs	r3, r1, #1
 801b97e:	2b01      	cmp	r3, #1
 801b980:	b085      	sub	sp, #20
 801b982:	4604      	mov	r4, r0
 801b984:	460d      	mov	r5, r1
 801b986:	4617      	mov	r7, r2
 801b988:	d84b      	bhi.n	801ba22 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b98a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b98e:	1cd3      	adds	r3, r2, #3
 801b990:	b29b      	uxth	r3, r3
 801b992:	2b06      	cmp	r3, #6
 801b994:	d916      	bls.n	801b9c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b996:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801ba38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b99a:	f8cd c004 	str.w	ip, [sp, #4]
 801b99e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b9a2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b9a6:	6900      	ldr	r0, [r0, #16]
 801b9a8:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b9ac:	f04f 0c00 	mov.w	ip, #0
 801b9b0:	f88d c008 	strb.w	ip, [sp, #8]
 801b9b4:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b9b8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b9bc:	6803      	ldr	r3, [r0, #0]
 801b9be:	a901      	add	r1, sp, #4
 801b9c0:	689b      	ldr	r3, [r3, #8]
 801b9c2:	4798      	blx	r3
 801b9c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b9c8:	1cd3      	adds	r3, r2, #3
 801b9ca:	b29b      	uxth	r3, r3
 801b9cc:	2b06      	cmp	r3, #6
 801b9ce:	d916      	bls.n	801b9fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b9d0:	f8df c064 	ldr.w	ip, [pc, #100]	; 801ba38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b9d4:	f8cd c004 	str.w	ip, [sp, #4]
 801b9d8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b9dc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b9e0:	6920      	ldr	r0, [r4, #16]
 801b9e2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b9e6:	f04f 0c01 	mov.w	ip, #1
 801b9ea:	f88d c008 	strb.w	ip, [sp, #8]
 801b9ee:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b9f2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b9f6:	6803      	ldr	r3, [r0, #0]
 801b9f8:	a901      	add	r1, sp, #4
 801b9fa:	689b      	ldr	r3, [r3, #8]
 801b9fc:	4798      	blx	r3
 801b9fe:	4b0d      	ldr	r3, [pc, #52]	; (801ba34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801ba00:	9301      	str	r3, [sp, #4]
 801ba02:	6920      	ldr	r0, [r4, #16]
 801ba04:	f88d 5008 	strb.w	r5, [sp, #8]
 801ba08:	2300      	movs	r3, #0
 801ba0a:	f8ad 700a 	strh.w	r7, [sp, #10]
 801ba0e:	f8ad 600c 	strh.w	r6, [sp, #12]
 801ba12:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ba16:	6803      	ldr	r3, [r0, #0]
 801ba18:	a901      	add	r1, sp, #4
 801ba1a:	681b      	ldr	r3, [r3, #0]
 801ba1c:	4798      	blx	r3
 801ba1e:	b005      	add	sp, #20
 801ba20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ba22:	2900      	cmp	r1, #0
 801ba24:	d1eb      	bne.n	801b9fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba26:	80a2      	strh	r2, [r4, #4]
 801ba28:	80c6      	strh	r6, [r0, #6]
 801ba2a:	60a1      	str	r1, [r4, #8]
 801ba2c:	81a1      	strh	r1, [r4, #12]
 801ba2e:	73a1      	strb	r1, [r4, #14]
 801ba30:	e7e5      	b.n	801b9fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba32:	bf00      	nop
 801ba34:	0801ee54 	.word	0x0801ee54
 801ba38:	0801ee7c 	.word	0x0801ee7c

0801ba3c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801ba3c:	b570      	push	{r4, r5, r6, lr}
 801ba3e:	790b      	ldrb	r3, [r1, #4]
 801ba40:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801ba44:	2b00      	cmp	r3, #0
 801ba46:	bf0c      	ite	eq
 801ba48:	2301      	moveq	r3, #1
 801ba4a:	2300      	movne	r3, #0
 801ba4c:	4604      	mov	r4, r0
 801ba4e:	460e      	mov	r6, r1
 801ba50:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801ba54:	d109      	bne.n	801ba6a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801ba56:	b14d      	cbz	r5, 801ba6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801ba58:	7933      	ldrb	r3, [r6, #4]
 801ba5a:	2b01      	cmp	r3, #1
 801ba5c:	d10c      	bne.n	801ba78 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ba5e:	6823      	ldr	r3, [r4, #0]
 801ba60:	4620      	mov	r0, r4
 801ba62:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ba64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ba68:	4718      	bx	r3
 801ba6a:	b12d      	cbz	r5, 801ba78 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ba6c:	6823      	ldr	r3, [r4, #0]
 801ba6e:	4620      	mov	r0, r4
 801ba70:	695b      	ldr	r3, [r3, #20]
 801ba72:	4798      	blx	r3
 801ba74:	2d00      	cmp	r5, #0
 801ba76:	d1ef      	bne.n	801ba58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801ba78:	bd70      	pop	{r4, r5, r6, pc}

0801ba7a <__aeabi_atexit>:
 801ba7a:	460b      	mov	r3, r1
 801ba7c:	4601      	mov	r1, r0
 801ba7e:	4618      	mov	r0, r3
 801ba80:	f000 b852 	b.w	801bb28 <__cxa_atexit>

0801ba84 <_ZdlPvj>:
 801ba84:	f000 b812 	b.w	801baac <_ZdlPv>

0801ba88 <__cxa_guard_acquire>:
 801ba88:	6803      	ldr	r3, [r0, #0]
 801ba8a:	07db      	lsls	r3, r3, #31
 801ba8c:	d406      	bmi.n	801ba9c <__cxa_guard_acquire+0x14>
 801ba8e:	7843      	ldrb	r3, [r0, #1]
 801ba90:	b103      	cbz	r3, 801ba94 <__cxa_guard_acquire+0xc>
 801ba92:	deff      	udf	#255	; 0xff
 801ba94:	2301      	movs	r3, #1
 801ba96:	7043      	strb	r3, [r0, #1]
 801ba98:	4618      	mov	r0, r3
 801ba9a:	4770      	bx	lr
 801ba9c:	2000      	movs	r0, #0
 801ba9e:	4770      	bx	lr

0801baa0 <__cxa_guard_release>:
 801baa0:	2301      	movs	r3, #1
 801baa2:	6003      	str	r3, [r0, #0]
 801baa4:	4770      	bx	lr

0801baa6 <__cxa_pure_virtual>:
 801baa6:	b508      	push	{r3, lr}
 801baa8:	f000 f80e 	bl	801bac8 <_ZSt9terminatev>

0801baac <_ZdlPv>:
 801baac:	f000 b88e 	b.w	801bbcc <free>

0801bab0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801bab0:	b508      	push	{r3, lr}
 801bab2:	4780      	blx	r0
 801bab4:	f000 f80d 	bl	801bad2 <abort>

0801bab8 <_ZSt13get_terminatev>:
 801bab8:	4b02      	ldr	r3, [pc, #8]	; (801bac4 <_ZSt13get_terminatev+0xc>)
 801baba:	6818      	ldr	r0, [r3, #0]
 801babc:	f3bf 8f5b 	dmb	ish
 801bac0:	4770      	bx	lr
 801bac2:	bf00      	nop
 801bac4:	200000d4 	.word	0x200000d4

0801bac8 <_ZSt9terminatev>:
 801bac8:	b508      	push	{r3, lr}
 801baca:	f7ff fff5 	bl	801bab8 <_ZSt13get_terminatev>
 801bace:	f7ff ffef 	bl	801bab0 <_ZN10__cxxabiv111__terminateEPFvvE>

0801bad2 <abort>:
 801bad2:	b508      	push	{r3, lr}
 801bad4:	2006      	movs	r0, #6
 801bad6:	f000 fc67 	bl	801c3a8 <raise>
 801bada:	2001      	movs	r0, #1
 801badc:	f7e6 fa5a 	bl	8001f94 <_exit>

0801bae0 <__assert_func>:
 801bae0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801bae2:	4614      	mov	r4, r2
 801bae4:	461a      	mov	r2, r3
 801bae6:	4b09      	ldr	r3, [pc, #36]	; (801bb0c <__assert_func+0x2c>)
 801bae8:	681b      	ldr	r3, [r3, #0]
 801baea:	4605      	mov	r5, r0
 801baec:	68d8      	ldr	r0, [r3, #12]
 801baee:	b14c      	cbz	r4, 801bb04 <__assert_func+0x24>
 801baf0:	4b07      	ldr	r3, [pc, #28]	; (801bb10 <__assert_func+0x30>)
 801baf2:	9100      	str	r1, [sp, #0]
 801baf4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801baf8:	4906      	ldr	r1, [pc, #24]	; (801bb14 <__assert_func+0x34>)
 801bafa:	462b      	mov	r3, r5
 801bafc:	f000 f828 	bl	801bb50 <fiprintf>
 801bb00:	f7ff ffe7 	bl	801bad2 <abort>
 801bb04:	4b04      	ldr	r3, [pc, #16]	; (801bb18 <__assert_func+0x38>)
 801bb06:	461c      	mov	r4, r3
 801bb08:	e7f3      	b.n	801baf2 <__assert_func+0x12>
 801bb0a:	bf00      	nop
 801bb0c:	200000d8 	.word	0x200000d8
 801bb10:	080201a1 	.word	0x080201a1
 801bb14:	080201ae 	.word	0x080201ae
 801bb18:	080201dc 	.word	0x080201dc

0801bb1c <atexit>:
 801bb1c:	2300      	movs	r3, #0
 801bb1e:	4601      	mov	r1, r0
 801bb20:	461a      	mov	r2, r3
 801bb22:	4618      	mov	r0, r3
 801bb24:	f000 bd1c 	b.w	801c560 <__register_exitproc>

0801bb28 <__cxa_atexit>:
 801bb28:	b510      	push	{r4, lr}
 801bb2a:	4c05      	ldr	r4, [pc, #20]	; (801bb40 <__cxa_atexit+0x18>)
 801bb2c:	4613      	mov	r3, r2
 801bb2e:	b12c      	cbz	r4, 801bb3c <__cxa_atexit+0x14>
 801bb30:	460a      	mov	r2, r1
 801bb32:	4601      	mov	r1, r0
 801bb34:	2002      	movs	r0, #2
 801bb36:	f000 fd13 	bl	801c560 <__register_exitproc>
 801bb3a:	bd10      	pop	{r4, pc}
 801bb3c:	4620      	mov	r0, r4
 801bb3e:	e7fc      	b.n	801bb3a <__cxa_atexit+0x12>
 801bb40:	0801c561 	.word	0x0801c561

0801bb44 <__errno>:
 801bb44:	4b01      	ldr	r3, [pc, #4]	; (801bb4c <__errno+0x8>)
 801bb46:	6818      	ldr	r0, [r3, #0]
 801bb48:	4770      	bx	lr
 801bb4a:	bf00      	nop
 801bb4c:	200000d8 	.word	0x200000d8

0801bb50 <fiprintf>:
 801bb50:	b40e      	push	{r1, r2, r3}
 801bb52:	b503      	push	{r0, r1, lr}
 801bb54:	4601      	mov	r1, r0
 801bb56:	ab03      	add	r3, sp, #12
 801bb58:	4805      	ldr	r0, [pc, #20]	; (801bb70 <fiprintf+0x20>)
 801bb5a:	f853 2b04 	ldr.w	r2, [r3], #4
 801bb5e:	6800      	ldr	r0, [r0, #0]
 801bb60:	9301      	str	r3, [sp, #4]
 801bb62:	f000 f925 	bl	801bdb0 <_vfiprintf_r>
 801bb66:	b002      	add	sp, #8
 801bb68:	f85d eb04 	ldr.w	lr, [sp], #4
 801bb6c:	b003      	add	sp, #12
 801bb6e:	4770      	bx	lr
 801bb70:	200000d8 	.word	0x200000d8

0801bb74 <__libc_init_array>:
 801bb74:	b570      	push	{r4, r5, r6, lr}
 801bb76:	4d0d      	ldr	r5, [pc, #52]	; (801bbac <__libc_init_array+0x38>)
 801bb78:	4c0d      	ldr	r4, [pc, #52]	; (801bbb0 <__libc_init_array+0x3c>)
 801bb7a:	1b64      	subs	r4, r4, r5
 801bb7c:	10a4      	asrs	r4, r4, #2
 801bb7e:	2600      	movs	r6, #0
 801bb80:	42a6      	cmp	r6, r4
 801bb82:	d109      	bne.n	801bb98 <__libc_init_array+0x24>
 801bb84:	4d0b      	ldr	r5, [pc, #44]	; (801bbb4 <__libc_init_array+0x40>)
 801bb86:	4c0c      	ldr	r4, [pc, #48]	; (801bbb8 <__libc_init_array+0x44>)
 801bb88:	f001 f824 	bl	801cbd4 <_init>
 801bb8c:	1b64      	subs	r4, r4, r5
 801bb8e:	10a4      	asrs	r4, r4, #2
 801bb90:	2600      	movs	r6, #0
 801bb92:	42a6      	cmp	r6, r4
 801bb94:	d105      	bne.n	801bba2 <__libc_init_array+0x2e>
 801bb96:	bd70      	pop	{r4, r5, r6, pc}
 801bb98:	f855 3b04 	ldr.w	r3, [r5], #4
 801bb9c:	4798      	blx	r3
 801bb9e:	3601      	adds	r6, #1
 801bba0:	e7ee      	b.n	801bb80 <__libc_init_array+0xc>
 801bba2:	f855 3b04 	ldr.w	r3, [r5], #4
 801bba6:	4798      	blx	r3
 801bba8:	3601      	adds	r6, #1
 801bbaa:	e7f2      	b.n	801bb92 <__libc_init_array+0x1e>
 801bbac:	0802029c 	.word	0x0802029c
 801bbb0:	0802029c 	.word	0x0802029c
 801bbb4:	0802029c 	.word	0x0802029c
 801bbb8:	080202b4 	.word	0x080202b4

0801bbbc <malloc>:
 801bbbc:	4b02      	ldr	r3, [pc, #8]	; (801bbc8 <malloc+0xc>)
 801bbbe:	4601      	mov	r1, r0
 801bbc0:	6818      	ldr	r0, [r3, #0]
 801bbc2:	f000 b871 	b.w	801bca8 <_malloc_r>
 801bbc6:	bf00      	nop
 801bbc8:	200000d8 	.word	0x200000d8

0801bbcc <free>:
 801bbcc:	4b02      	ldr	r3, [pc, #8]	; (801bbd8 <free+0xc>)
 801bbce:	4601      	mov	r1, r0
 801bbd0:	6818      	ldr	r0, [r3, #0]
 801bbd2:	f000 b819 	b.w	801bc08 <_free_r>
 801bbd6:	bf00      	nop
 801bbd8:	200000d8 	.word	0x200000d8

0801bbdc <memcpy>:
 801bbdc:	440a      	add	r2, r1
 801bbde:	4291      	cmp	r1, r2
 801bbe0:	f100 33ff 	add.w	r3, r0, #4294967295
 801bbe4:	d100      	bne.n	801bbe8 <memcpy+0xc>
 801bbe6:	4770      	bx	lr
 801bbe8:	b510      	push	{r4, lr}
 801bbea:	f811 4b01 	ldrb.w	r4, [r1], #1
 801bbee:	f803 4f01 	strb.w	r4, [r3, #1]!
 801bbf2:	4291      	cmp	r1, r2
 801bbf4:	d1f9      	bne.n	801bbea <memcpy+0xe>
 801bbf6:	bd10      	pop	{r4, pc}

0801bbf8 <memset>:
 801bbf8:	4402      	add	r2, r0
 801bbfa:	4603      	mov	r3, r0
 801bbfc:	4293      	cmp	r3, r2
 801bbfe:	d100      	bne.n	801bc02 <memset+0xa>
 801bc00:	4770      	bx	lr
 801bc02:	f803 1b01 	strb.w	r1, [r3], #1
 801bc06:	e7f9      	b.n	801bbfc <memset+0x4>

0801bc08 <_free_r>:
 801bc08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801bc0a:	2900      	cmp	r1, #0
 801bc0c:	d048      	beq.n	801bca0 <_free_r+0x98>
 801bc0e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bc12:	9001      	str	r0, [sp, #4]
 801bc14:	2b00      	cmp	r3, #0
 801bc16:	f1a1 0404 	sub.w	r4, r1, #4
 801bc1a:	bfb8      	it	lt
 801bc1c:	18e4      	addlt	r4, r4, r3
 801bc1e:	f000 ff21 	bl	801ca64 <__malloc_lock>
 801bc22:	4a20      	ldr	r2, [pc, #128]	; (801bca4 <_free_r+0x9c>)
 801bc24:	9801      	ldr	r0, [sp, #4]
 801bc26:	6813      	ldr	r3, [r2, #0]
 801bc28:	4615      	mov	r5, r2
 801bc2a:	b933      	cbnz	r3, 801bc3a <_free_r+0x32>
 801bc2c:	6063      	str	r3, [r4, #4]
 801bc2e:	6014      	str	r4, [r2, #0]
 801bc30:	b003      	add	sp, #12
 801bc32:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801bc36:	f000 bf1b 	b.w	801ca70 <__malloc_unlock>
 801bc3a:	42a3      	cmp	r3, r4
 801bc3c:	d90b      	bls.n	801bc56 <_free_r+0x4e>
 801bc3e:	6821      	ldr	r1, [r4, #0]
 801bc40:	1862      	adds	r2, r4, r1
 801bc42:	4293      	cmp	r3, r2
 801bc44:	bf04      	itt	eq
 801bc46:	681a      	ldreq	r2, [r3, #0]
 801bc48:	685b      	ldreq	r3, [r3, #4]
 801bc4a:	6063      	str	r3, [r4, #4]
 801bc4c:	bf04      	itt	eq
 801bc4e:	1852      	addeq	r2, r2, r1
 801bc50:	6022      	streq	r2, [r4, #0]
 801bc52:	602c      	str	r4, [r5, #0]
 801bc54:	e7ec      	b.n	801bc30 <_free_r+0x28>
 801bc56:	461a      	mov	r2, r3
 801bc58:	685b      	ldr	r3, [r3, #4]
 801bc5a:	b10b      	cbz	r3, 801bc60 <_free_r+0x58>
 801bc5c:	42a3      	cmp	r3, r4
 801bc5e:	d9fa      	bls.n	801bc56 <_free_r+0x4e>
 801bc60:	6811      	ldr	r1, [r2, #0]
 801bc62:	1855      	adds	r5, r2, r1
 801bc64:	42a5      	cmp	r5, r4
 801bc66:	d10b      	bne.n	801bc80 <_free_r+0x78>
 801bc68:	6824      	ldr	r4, [r4, #0]
 801bc6a:	4421      	add	r1, r4
 801bc6c:	1854      	adds	r4, r2, r1
 801bc6e:	42a3      	cmp	r3, r4
 801bc70:	6011      	str	r1, [r2, #0]
 801bc72:	d1dd      	bne.n	801bc30 <_free_r+0x28>
 801bc74:	681c      	ldr	r4, [r3, #0]
 801bc76:	685b      	ldr	r3, [r3, #4]
 801bc78:	6053      	str	r3, [r2, #4]
 801bc7a:	4421      	add	r1, r4
 801bc7c:	6011      	str	r1, [r2, #0]
 801bc7e:	e7d7      	b.n	801bc30 <_free_r+0x28>
 801bc80:	d902      	bls.n	801bc88 <_free_r+0x80>
 801bc82:	230c      	movs	r3, #12
 801bc84:	6003      	str	r3, [r0, #0]
 801bc86:	e7d3      	b.n	801bc30 <_free_r+0x28>
 801bc88:	6825      	ldr	r5, [r4, #0]
 801bc8a:	1961      	adds	r1, r4, r5
 801bc8c:	428b      	cmp	r3, r1
 801bc8e:	bf04      	itt	eq
 801bc90:	6819      	ldreq	r1, [r3, #0]
 801bc92:	685b      	ldreq	r3, [r3, #4]
 801bc94:	6063      	str	r3, [r4, #4]
 801bc96:	bf04      	itt	eq
 801bc98:	1949      	addeq	r1, r1, r5
 801bc9a:	6021      	streq	r1, [r4, #0]
 801bc9c:	6054      	str	r4, [r2, #4]
 801bc9e:	e7c7      	b.n	801bc30 <_free_r+0x28>
 801bca0:	b003      	add	sp, #12
 801bca2:	bd30      	pop	{r4, r5, pc}
 801bca4:	2000a3b4 	.word	0x2000a3b4

0801bca8 <_malloc_r>:
 801bca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bcaa:	1ccd      	adds	r5, r1, #3
 801bcac:	f025 0503 	bic.w	r5, r5, #3
 801bcb0:	3508      	adds	r5, #8
 801bcb2:	2d0c      	cmp	r5, #12
 801bcb4:	bf38      	it	cc
 801bcb6:	250c      	movcc	r5, #12
 801bcb8:	2d00      	cmp	r5, #0
 801bcba:	4606      	mov	r6, r0
 801bcbc:	db01      	blt.n	801bcc2 <_malloc_r+0x1a>
 801bcbe:	42a9      	cmp	r1, r5
 801bcc0:	d903      	bls.n	801bcca <_malloc_r+0x22>
 801bcc2:	230c      	movs	r3, #12
 801bcc4:	6033      	str	r3, [r6, #0]
 801bcc6:	2000      	movs	r0, #0
 801bcc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bcca:	f000 fecb 	bl	801ca64 <__malloc_lock>
 801bcce:	4921      	ldr	r1, [pc, #132]	; (801bd54 <_malloc_r+0xac>)
 801bcd0:	680a      	ldr	r2, [r1, #0]
 801bcd2:	4614      	mov	r4, r2
 801bcd4:	b99c      	cbnz	r4, 801bcfe <_malloc_r+0x56>
 801bcd6:	4f20      	ldr	r7, [pc, #128]	; (801bd58 <_malloc_r+0xb0>)
 801bcd8:	683b      	ldr	r3, [r7, #0]
 801bcda:	b923      	cbnz	r3, 801bce6 <_malloc_r+0x3e>
 801bcdc:	4621      	mov	r1, r4
 801bcde:	4630      	mov	r0, r6
 801bce0:	f000 fb2a 	bl	801c338 <_sbrk_r>
 801bce4:	6038      	str	r0, [r7, #0]
 801bce6:	4629      	mov	r1, r5
 801bce8:	4630      	mov	r0, r6
 801bcea:	f000 fb25 	bl	801c338 <_sbrk_r>
 801bcee:	1c43      	adds	r3, r0, #1
 801bcf0:	d123      	bne.n	801bd3a <_malloc_r+0x92>
 801bcf2:	230c      	movs	r3, #12
 801bcf4:	6033      	str	r3, [r6, #0]
 801bcf6:	4630      	mov	r0, r6
 801bcf8:	f000 feba 	bl	801ca70 <__malloc_unlock>
 801bcfc:	e7e3      	b.n	801bcc6 <_malloc_r+0x1e>
 801bcfe:	6823      	ldr	r3, [r4, #0]
 801bd00:	1b5b      	subs	r3, r3, r5
 801bd02:	d417      	bmi.n	801bd34 <_malloc_r+0x8c>
 801bd04:	2b0b      	cmp	r3, #11
 801bd06:	d903      	bls.n	801bd10 <_malloc_r+0x68>
 801bd08:	6023      	str	r3, [r4, #0]
 801bd0a:	441c      	add	r4, r3
 801bd0c:	6025      	str	r5, [r4, #0]
 801bd0e:	e004      	b.n	801bd1a <_malloc_r+0x72>
 801bd10:	6863      	ldr	r3, [r4, #4]
 801bd12:	42a2      	cmp	r2, r4
 801bd14:	bf0c      	ite	eq
 801bd16:	600b      	streq	r3, [r1, #0]
 801bd18:	6053      	strne	r3, [r2, #4]
 801bd1a:	4630      	mov	r0, r6
 801bd1c:	f000 fea8 	bl	801ca70 <__malloc_unlock>
 801bd20:	f104 000b 	add.w	r0, r4, #11
 801bd24:	1d23      	adds	r3, r4, #4
 801bd26:	f020 0007 	bic.w	r0, r0, #7
 801bd2a:	1ac2      	subs	r2, r0, r3
 801bd2c:	d0cc      	beq.n	801bcc8 <_malloc_r+0x20>
 801bd2e:	1a1b      	subs	r3, r3, r0
 801bd30:	50a3      	str	r3, [r4, r2]
 801bd32:	e7c9      	b.n	801bcc8 <_malloc_r+0x20>
 801bd34:	4622      	mov	r2, r4
 801bd36:	6864      	ldr	r4, [r4, #4]
 801bd38:	e7cc      	b.n	801bcd4 <_malloc_r+0x2c>
 801bd3a:	1cc4      	adds	r4, r0, #3
 801bd3c:	f024 0403 	bic.w	r4, r4, #3
 801bd40:	42a0      	cmp	r0, r4
 801bd42:	d0e3      	beq.n	801bd0c <_malloc_r+0x64>
 801bd44:	1a21      	subs	r1, r4, r0
 801bd46:	4630      	mov	r0, r6
 801bd48:	f000 faf6 	bl	801c338 <_sbrk_r>
 801bd4c:	3001      	adds	r0, #1
 801bd4e:	d1dd      	bne.n	801bd0c <_malloc_r+0x64>
 801bd50:	e7cf      	b.n	801bcf2 <_malloc_r+0x4a>
 801bd52:	bf00      	nop
 801bd54:	2000a3b4 	.word	0x2000a3b4
 801bd58:	2000a3b8 	.word	0x2000a3b8

0801bd5c <__sfputc_r>:
 801bd5c:	6893      	ldr	r3, [r2, #8]
 801bd5e:	3b01      	subs	r3, #1
 801bd60:	2b00      	cmp	r3, #0
 801bd62:	b410      	push	{r4}
 801bd64:	6093      	str	r3, [r2, #8]
 801bd66:	da08      	bge.n	801bd7a <__sfputc_r+0x1e>
 801bd68:	6994      	ldr	r4, [r2, #24]
 801bd6a:	42a3      	cmp	r3, r4
 801bd6c:	db01      	blt.n	801bd72 <__sfputc_r+0x16>
 801bd6e:	290a      	cmp	r1, #10
 801bd70:	d103      	bne.n	801bd7a <__sfputc_r+0x1e>
 801bd72:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bd76:	f000 bb33 	b.w	801c3e0 <__swbuf_r>
 801bd7a:	6813      	ldr	r3, [r2, #0]
 801bd7c:	1c58      	adds	r0, r3, #1
 801bd7e:	6010      	str	r0, [r2, #0]
 801bd80:	7019      	strb	r1, [r3, #0]
 801bd82:	4608      	mov	r0, r1
 801bd84:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bd88:	4770      	bx	lr

0801bd8a <__sfputs_r>:
 801bd8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bd8c:	4606      	mov	r6, r0
 801bd8e:	460f      	mov	r7, r1
 801bd90:	4614      	mov	r4, r2
 801bd92:	18d5      	adds	r5, r2, r3
 801bd94:	42ac      	cmp	r4, r5
 801bd96:	d101      	bne.n	801bd9c <__sfputs_r+0x12>
 801bd98:	2000      	movs	r0, #0
 801bd9a:	e007      	b.n	801bdac <__sfputs_r+0x22>
 801bd9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bda0:	463a      	mov	r2, r7
 801bda2:	4630      	mov	r0, r6
 801bda4:	f7ff ffda 	bl	801bd5c <__sfputc_r>
 801bda8:	1c43      	adds	r3, r0, #1
 801bdaa:	d1f3      	bne.n	801bd94 <__sfputs_r+0xa>
 801bdac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bdb0 <_vfiprintf_r>:
 801bdb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdb4:	460d      	mov	r5, r1
 801bdb6:	b09d      	sub	sp, #116	; 0x74
 801bdb8:	4614      	mov	r4, r2
 801bdba:	4698      	mov	r8, r3
 801bdbc:	4606      	mov	r6, r0
 801bdbe:	b118      	cbz	r0, 801bdc8 <_vfiprintf_r+0x18>
 801bdc0:	6983      	ldr	r3, [r0, #24]
 801bdc2:	b90b      	cbnz	r3, 801bdc8 <_vfiprintf_r+0x18>
 801bdc4:	f000 fd48 	bl	801c858 <__sinit>
 801bdc8:	4b89      	ldr	r3, [pc, #548]	; (801bff0 <_vfiprintf_r+0x240>)
 801bdca:	429d      	cmp	r5, r3
 801bdcc:	d11b      	bne.n	801be06 <_vfiprintf_r+0x56>
 801bdce:	6875      	ldr	r5, [r6, #4]
 801bdd0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bdd2:	07d9      	lsls	r1, r3, #31
 801bdd4:	d405      	bmi.n	801bde2 <_vfiprintf_r+0x32>
 801bdd6:	89ab      	ldrh	r3, [r5, #12]
 801bdd8:	059a      	lsls	r2, r3, #22
 801bdda:	d402      	bmi.n	801bde2 <_vfiprintf_r+0x32>
 801bddc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bdde:	f000 fdd9 	bl	801c994 <__retarget_lock_acquire_recursive>
 801bde2:	89ab      	ldrh	r3, [r5, #12]
 801bde4:	071b      	lsls	r3, r3, #28
 801bde6:	d501      	bpl.n	801bdec <_vfiprintf_r+0x3c>
 801bde8:	692b      	ldr	r3, [r5, #16]
 801bdea:	b9eb      	cbnz	r3, 801be28 <_vfiprintf_r+0x78>
 801bdec:	4629      	mov	r1, r5
 801bdee:	4630      	mov	r0, r6
 801bdf0:	f000 fb48 	bl	801c484 <__swsetup_r>
 801bdf4:	b1c0      	cbz	r0, 801be28 <_vfiprintf_r+0x78>
 801bdf6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bdf8:	07dc      	lsls	r4, r3, #31
 801bdfa:	d50e      	bpl.n	801be1a <_vfiprintf_r+0x6a>
 801bdfc:	f04f 30ff 	mov.w	r0, #4294967295
 801be00:	b01d      	add	sp, #116	; 0x74
 801be02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be06:	4b7b      	ldr	r3, [pc, #492]	; (801bff4 <_vfiprintf_r+0x244>)
 801be08:	429d      	cmp	r5, r3
 801be0a:	d101      	bne.n	801be10 <_vfiprintf_r+0x60>
 801be0c:	68b5      	ldr	r5, [r6, #8]
 801be0e:	e7df      	b.n	801bdd0 <_vfiprintf_r+0x20>
 801be10:	4b79      	ldr	r3, [pc, #484]	; (801bff8 <_vfiprintf_r+0x248>)
 801be12:	429d      	cmp	r5, r3
 801be14:	bf08      	it	eq
 801be16:	68f5      	ldreq	r5, [r6, #12]
 801be18:	e7da      	b.n	801bdd0 <_vfiprintf_r+0x20>
 801be1a:	89ab      	ldrh	r3, [r5, #12]
 801be1c:	0598      	lsls	r0, r3, #22
 801be1e:	d4ed      	bmi.n	801bdfc <_vfiprintf_r+0x4c>
 801be20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801be22:	f000 fdb9 	bl	801c998 <__retarget_lock_release_recursive>
 801be26:	e7e9      	b.n	801bdfc <_vfiprintf_r+0x4c>
 801be28:	2300      	movs	r3, #0
 801be2a:	9309      	str	r3, [sp, #36]	; 0x24
 801be2c:	2320      	movs	r3, #32
 801be2e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801be32:	f8cd 800c 	str.w	r8, [sp, #12]
 801be36:	2330      	movs	r3, #48	; 0x30
 801be38:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801bffc <_vfiprintf_r+0x24c>
 801be3c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801be40:	f04f 0901 	mov.w	r9, #1
 801be44:	4623      	mov	r3, r4
 801be46:	469a      	mov	sl, r3
 801be48:	f813 2b01 	ldrb.w	r2, [r3], #1
 801be4c:	b10a      	cbz	r2, 801be52 <_vfiprintf_r+0xa2>
 801be4e:	2a25      	cmp	r2, #37	; 0x25
 801be50:	d1f9      	bne.n	801be46 <_vfiprintf_r+0x96>
 801be52:	ebba 0b04 	subs.w	fp, sl, r4
 801be56:	d00b      	beq.n	801be70 <_vfiprintf_r+0xc0>
 801be58:	465b      	mov	r3, fp
 801be5a:	4622      	mov	r2, r4
 801be5c:	4629      	mov	r1, r5
 801be5e:	4630      	mov	r0, r6
 801be60:	f7ff ff93 	bl	801bd8a <__sfputs_r>
 801be64:	3001      	adds	r0, #1
 801be66:	f000 80aa 	beq.w	801bfbe <_vfiprintf_r+0x20e>
 801be6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801be6c:	445a      	add	r2, fp
 801be6e:	9209      	str	r2, [sp, #36]	; 0x24
 801be70:	f89a 3000 	ldrb.w	r3, [sl]
 801be74:	2b00      	cmp	r3, #0
 801be76:	f000 80a2 	beq.w	801bfbe <_vfiprintf_r+0x20e>
 801be7a:	2300      	movs	r3, #0
 801be7c:	f04f 32ff 	mov.w	r2, #4294967295
 801be80:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801be84:	f10a 0a01 	add.w	sl, sl, #1
 801be88:	9304      	str	r3, [sp, #16]
 801be8a:	9307      	str	r3, [sp, #28]
 801be8c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801be90:	931a      	str	r3, [sp, #104]	; 0x68
 801be92:	4654      	mov	r4, sl
 801be94:	2205      	movs	r2, #5
 801be96:	f814 1b01 	ldrb.w	r1, [r4], #1
 801be9a:	4858      	ldr	r0, [pc, #352]	; (801bffc <_vfiprintf_r+0x24c>)
 801be9c:	f7e4 f9b0 	bl	8000200 <memchr>
 801bea0:	9a04      	ldr	r2, [sp, #16]
 801bea2:	b9d8      	cbnz	r0, 801bedc <_vfiprintf_r+0x12c>
 801bea4:	06d1      	lsls	r1, r2, #27
 801bea6:	bf44      	itt	mi
 801bea8:	2320      	movmi	r3, #32
 801beaa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801beae:	0713      	lsls	r3, r2, #28
 801beb0:	bf44      	itt	mi
 801beb2:	232b      	movmi	r3, #43	; 0x2b
 801beb4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801beb8:	f89a 3000 	ldrb.w	r3, [sl]
 801bebc:	2b2a      	cmp	r3, #42	; 0x2a
 801bebe:	d015      	beq.n	801beec <_vfiprintf_r+0x13c>
 801bec0:	9a07      	ldr	r2, [sp, #28]
 801bec2:	4654      	mov	r4, sl
 801bec4:	2000      	movs	r0, #0
 801bec6:	f04f 0c0a 	mov.w	ip, #10
 801beca:	4621      	mov	r1, r4
 801becc:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bed0:	3b30      	subs	r3, #48	; 0x30
 801bed2:	2b09      	cmp	r3, #9
 801bed4:	d94e      	bls.n	801bf74 <_vfiprintf_r+0x1c4>
 801bed6:	b1b0      	cbz	r0, 801bf06 <_vfiprintf_r+0x156>
 801bed8:	9207      	str	r2, [sp, #28]
 801beda:	e014      	b.n	801bf06 <_vfiprintf_r+0x156>
 801bedc:	eba0 0308 	sub.w	r3, r0, r8
 801bee0:	fa09 f303 	lsl.w	r3, r9, r3
 801bee4:	4313      	orrs	r3, r2
 801bee6:	9304      	str	r3, [sp, #16]
 801bee8:	46a2      	mov	sl, r4
 801beea:	e7d2      	b.n	801be92 <_vfiprintf_r+0xe2>
 801beec:	9b03      	ldr	r3, [sp, #12]
 801beee:	1d19      	adds	r1, r3, #4
 801bef0:	681b      	ldr	r3, [r3, #0]
 801bef2:	9103      	str	r1, [sp, #12]
 801bef4:	2b00      	cmp	r3, #0
 801bef6:	bfbb      	ittet	lt
 801bef8:	425b      	neglt	r3, r3
 801befa:	f042 0202 	orrlt.w	r2, r2, #2
 801befe:	9307      	strge	r3, [sp, #28]
 801bf00:	9307      	strlt	r3, [sp, #28]
 801bf02:	bfb8      	it	lt
 801bf04:	9204      	strlt	r2, [sp, #16]
 801bf06:	7823      	ldrb	r3, [r4, #0]
 801bf08:	2b2e      	cmp	r3, #46	; 0x2e
 801bf0a:	d10c      	bne.n	801bf26 <_vfiprintf_r+0x176>
 801bf0c:	7863      	ldrb	r3, [r4, #1]
 801bf0e:	2b2a      	cmp	r3, #42	; 0x2a
 801bf10:	d135      	bne.n	801bf7e <_vfiprintf_r+0x1ce>
 801bf12:	9b03      	ldr	r3, [sp, #12]
 801bf14:	1d1a      	adds	r2, r3, #4
 801bf16:	681b      	ldr	r3, [r3, #0]
 801bf18:	9203      	str	r2, [sp, #12]
 801bf1a:	2b00      	cmp	r3, #0
 801bf1c:	bfb8      	it	lt
 801bf1e:	f04f 33ff 	movlt.w	r3, #4294967295
 801bf22:	3402      	adds	r4, #2
 801bf24:	9305      	str	r3, [sp, #20]
 801bf26:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801c00c <_vfiprintf_r+0x25c>
 801bf2a:	7821      	ldrb	r1, [r4, #0]
 801bf2c:	2203      	movs	r2, #3
 801bf2e:	4650      	mov	r0, sl
 801bf30:	f7e4 f966 	bl	8000200 <memchr>
 801bf34:	b140      	cbz	r0, 801bf48 <_vfiprintf_r+0x198>
 801bf36:	2340      	movs	r3, #64	; 0x40
 801bf38:	eba0 000a 	sub.w	r0, r0, sl
 801bf3c:	fa03 f000 	lsl.w	r0, r3, r0
 801bf40:	9b04      	ldr	r3, [sp, #16]
 801bf42:	4303      	orrs	r3, r0
 801bf44:	3401      	adds	r4, #1
 801bf46:	9304      	str	r3, [sp, #16]
 801bf48:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bf4c:	482c      	ldr	r0, [pc, #176]	; (801c000 <_vfiprintf_r+0x250>)
 801bf4e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bf52:	2206      	movs	r2, #6
 801bf54:	f7e4 f954 	bl	8000200 <memchr>
 801bf58:	2800      	cmp	r0, #0
 801bf5a:	d03f      	beq.n	801bfdc <_vfiprintf_r+0x22c>
 801bf5c:	4b29      	ldr	r3, [pc, #164]	; (801c004 <_vfiprintf_r+0x254>)
 801bf5e:	bb1b      	cbnz	r3, 801bfa8 <_vfiprintf_r+0x1f8>
 801bf60:	9b03      	ldr	r3, [sp, #12]
 801bf62:	3307      	adds	r3, #7
 801bf64:	f023 0307 	bic.w	r3, r3, #7
 801bf68:	3308      	adds	r3, #8
 801bf6a:	9303      	str	r3, [sp, #12]
 801bf6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf6e:	443b      	add	r3, r7
 801bf70:	9309      	str	r3, [sp, #36]	; 0x24
 801bf72:	e767      	b.n	801be44 <_vfiprintf_r+0x94>
 801bf74:	fb0c 3202 	mla	r2, ip, r2, r3
 801bf78:	460c      	mov	r4, r1
 801bf7a:	2001      	movs	r0, #1
 801bf7c:	e7a5      	b.n	801beca <_vfiprintf_r+0x11a>
 801bf7e:	2300      	movs	r3, #0
 801bf80:	3401      	adds	r4, #1
 801bf82:	9305      	str	r3, [sp, #20]
 801bf84:	4619      	mov	r1, r3
 801bf86:	f04f 0c0a 	mov.w	ip, #10
 801bf8a:	4620      	mov	r0, r4
 801bf8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bf90:	3a30      	subs	r2, #48	; 0x30
 801bf92:	2a09      	cmp	r2, #9
 801bf94:	d903      	bls.n	801bf9e <_vfiprintf_r+0x1ee>
 801bf96:	2b00      	cmp	r3, #0
 801bf98:	d0c5      	beq.n	801bf26 <_vfiprintf_r+0x176>
 801bf9a:	9105      	str	r1, [sp, #20]
 801bf9c:	e7c3      	b.n	801bf26 <_vfiprintf_r+0x176>
 801bf9e:	fb0c 2101 	mla	r1, ip, r1, r2
 801bfa2:	4604      	mov	r4, r0
 801bfa4:	2301      	movs	r3, #1
 801bfa6:	e7f0      	b.n	801bf8a <_vfiprintf_r+0x1da>
 801bfa8:	ab03      	add	r3, sp, #12
 801bfaa:	9300      	str	r3, [sp, #0]
 801bfac:	462a      	mov	r2, r5
 801bfae:	4b16      	ldr	r3, [pc, #88]	; (801c008 <_vfiprintf_r+0x258>)
 801bfb0:	a904      	add	r1, sp, #16
 801bfb2:	4630      	mov	r0, r6
 801bfb4:	f3af 8000 	nop.w
 801bfb8:	4607      	mov	r7, r0
 801bfba:	1c78      	adds	r0, r7, #1
 801bfbc:	d1d6      	bne.n	801bf6c <_vfiprintf_r+0x1bc>
 801bfbe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bfc0:	07d9      	lsls	r1, r3, #31
 801bfc2:	d405      	bmi.n	801bfd0 <_vfiprintf_r+0x220>
 801bfc4:	89ab      	ldrh	r3, [r5, #12]
 801bfc6:	059a      	lsls	r2, r3, #22
 801bfc8:	d402      	bmi.n	801bfd0 <_vfiprintf_r+0x220>
 801bfca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bfcc:	f000 fce4 	bl	801c998 <__retarget_lock_release_recursive>
 801bfd0:	89ab      	ldrh	r3, [r5, #12]
 801bfd2:	065b      	lsls	r3, r3, #25
 801bfd4:	f53f af12 	bmi.w	801bdfc <_vfiprintf_r+0x4c>
 801bfd8:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bfda:	e711      	b.n	801be00 <_vfiprintf_r+0x50>
 801bfdc:	ab03      	add	r3, sp, #12
 801bfde:	9300      	str	r3, [sp, #0]
 801bfe0:	462a      	mov	r2, r5
 801bfe2:	4b09      	ldr	r3, [pc, #36]	; (801c008 <_vfiprintf_r+0x258>)
 801bfe4:	a904      	add	r1, sp, #16
 801bfe6:	4630      	mov	r0, r6
 801bfe8:	f000 f880 	bl	801c0ec <_printf_i>
 801bfec:	e7e4      	b.n	801bfb8 <_vfiprintf_r+0x208>
 801bfee:	bf00      	nop
 801bff0:	0802023c 	.word	0x0802023c
 801bff4:	0802025c 	.word	0x0802025c
 801bff8:	0802021c 	.word	0x0802021c
 801bffc:	080201e4 	.word	0x080201e4
 801c000:	080201ee 	.word	0x080201ee
 801c004:	00000000 	.word	0x00000000
 801c008:	0801bd8b 	.word	0x0801bd8b
 801c00c:	080201ea 	.word	0x080201ea

0801c010 <_printf_common>:
 801c010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c014:	4616      	mov	r6, r2
 801c016:	4699      	mov	r9, r3
 801c018:	688a      	ldr	r2, [r1, #8]
 801c01a:	690b      	ldr	r3, [r1, #16]
 801c01c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c020:	4293      	cmp	r3, r2
 801c022:	bfb8      	it	lt
 801c024:	4613      	movlt	r3, r2
 801c026:	6033      	str	r3, [r6, #0]
 801c028:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c02c:	4607      	mov	r7, r0
 801c02e:	460c      	mov	r4, r1
 801c030:	b10a      	cbz	r2, 801c036 <_printf_common+0x26>
 801c032:	3301      	adds	r3, #1
 801c034:	6033      	str	r3, [r6, #0]
 801c036:	6823      	ldr	r3, [r4, #0]
 801c038:	0699      	lsls	r1, r3, #26
 801c03a:	bf42      	ittt	mi
 801c03c:	6833      	ldrmi	r3, [r6, #0]
 801c03e:	3302      	addmi	r3, #2
 801c040:	6033      	strmi	r3, [r6, #0]
 801c042:	6825      	ldr	r5, [r4, #0]
 801c044:	f015 0506 	ands.w	r5, r5, #6
 801c048:	d106      	bne.n	801c058 <_printf_common+0x48>
 801c04a:	f104 0a19 	add.w	sl, r4, #25
 801c04e:	68e3      	ldr	r3, [r4, #12]
 801c050:	6832      	ldr	r2, [r6, #0]
 801c052:	1a9b      	subs	r3, r3, r2
 801c054:	42ab      	cmp	r3, r5
 801c056:	dc26      	bgt.n	801c0a6 <_printf_common+0x96>
 801c058:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c05c:	1e13      	subs	r3, r2, #0
 801c05e:	6822      	ldr	r2, [r4, #0]
 801c060:	bf18      	it	ne
 801c062:	2301      	movne	r3, #1
 801c064:	0692      	lsls	r2, r2, #26
 801c066:	d42b      	bmi.n	801c0c0 <_printf_common+0xb0>
 801c068:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c06c:	4649      	mov	r1, r9
 801c06e:	4638      	mov	r0, r7
 801c070:	47c0      	blx	r8
 801c072:	3001      	adds	r0, #1
 801c074:	d01e      	beq.n	801c0b4 <_printf_common+0xa4>
 801c076:	6823      	ldr	r3, [r4, #0]
 801c078:	68e5      	ldr	r5, [r4, #12]
 801c07a:	6832      	ldr	r2, [r6, #0]
 801c07c:	f003 0306 	and.w	r3, r3, #6
 801c080:	2b04      	cmp	r3, #4
 801c082:	bf08      	it	eq
 801c084:	1aad      	subeq	r5, r5, r2
 801c086:	68a3      	ldr	r3, [r4, #8]
 801c088:	6922      	ldr	r2, [r4, #16]
 801c08a:	bf0c      	ite	eq
 801c08c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c090:	2500      	movne	r5, #0
 801c092:	4293      	cmp	r3, r2
 801c094:	bfc4      	itt	gt
 801c096:	1a9b      	subgt	r3, r3, r2
 801c098:	18ed      	addgt	r5, r5, r3
 801c09a:	2600      	movs	r6, #0
 801c09c:	341a      	adds	r4, #26
 801c09e:	42b5      	cmp	r5, r6
 801c0a0:	d11a      	bne.n	801c0d8 <_printf_common+0xc8>
 801c0a2:	2000      	movs	r0, #0
 801c0a4:	e008      	b.n	801c0b8 <_printf_common+0xa8>
 801c0a6:	2301      	movs	r3, #1
 801c0a8:	4652      	mov	r2, sl
 801c0aa:	4649      	mov	r1, r9
 801c0ac:	4638      	mov	r0, r7
 801c0ae:	47c0      	blx	r8
 801c0b0:	3001      	adds	r0, #1
 801c0b2:	d103      	bne.n	801c0bc <_printf_common+0xac>
 801c0b4:	f04f 30ff 	mov.w	r0, #4294967295
 801c0b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c0bc:	3501      	adds	r5, #1
 801c0be:	e7c6      	b.n	801c04e <_printf_common+0x3e>
 801c0c0:	18e1      	adds	r1, r4, r3
 801c0c2:	1c5a      	adds	r2, r3, #1
 801c0c4:	2030      	movs	r0, #48	; 0x30
 801c0c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c0ca:	4422      	add	r2, r4
 801c0cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c0d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c0d4:	3302      	adds	r3, #2
 801c0d6:	e7c7      	b.n	801c068 <_printf_common+0x58>
 801c0d8:	2301      	movs	r3, #1
 801c0da:	4622      	mov	r2, r4
 801c0dc:	4649      	mov	r1, r9
 801c0de:	4638      	mov	r0, r7
 801c0e0:	47c0      	blx	r8
 801c0e2:	3001      	adds	r0, #1
 801c0e4:	d0e6      	beq.n	801c0b4 <_printf_common+0xa4>
 801c0e6:	3601      	adds	r6, #1
 801c0e8:	e7d9      	b.n	801c09e <_printf_common+0x8e>
	...

0801c0ec <_printf_i>:
 801c0ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c0f0:	460c      	mov	r4, r1
 801c0f2:	4691      	mov	r9, r2
 801c0f4:	7e27      	ldrb	r7, [r4, #24]
 801c0f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c0f8:	2f78      	cmp	r7, #120	; 0x78
 801c0fa:	4680      	mov	r8, r0
 801c0fc:	469a      	mov	sl, r3
 801c0fe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c102:	d807      	bhi.n	801c114 <_printf_i+0x28>
 801c104:	2f62      	cmp	r7, #98	; 0x62
 801c106:	d80a      	bhi.n	801c11e <_printf_i+0x32>
 801c108:	2f00      	cmp	r7, #0
 801c10a:	f000 80d8 	beq.w	801c2be <_printf_i+0x1d2>
 801c10e:	2f58      	cmp	r7, #88	; 0x58
 801c110:	f000 80a3 	beq.w	801c25a <_printf_i+0x16e>
 801c114:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c118:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c11c:	e03a      	b.n	801c194 <_printf_i+0xa8>
 801c11e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c122:	2b15      	cmp	r3, #21
 801c124:	d8f6      	bhi.n	801c114 <_printf_i+0x28>
 801c126:	a001      	add	r0, pc, #4	; (adr r0, 801c12c <_printf_i+0x40>)
 801c128:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801c12c:	0801c185 	.word	0x0801c185
 801c130:	0801c199 	.word	0x0801c199
 801c134:	0801c115 	.word	0x0801c115
 801c138:	0801c115 	.word	0x0801c115
 801c13c:	0801c115 	.word	0x0801c115
 801c140:	0801c115 	.word	0x0801c115
 801c144:	0801c199 	.word	0x0801c199
 801c148:	0801c115 	.word	0x0801c115
 801c14c:	0801c115 	.word	0x0801c115
 801c150:	0801c115 	.word	0x0801c115
 801c154:	0801c115 	.word	0x0801c115
 801c158:	0801c2a5 	.word	0x0801c2a5
 801c15c:	0801c1c9 	.word	0x0801c1c9
 801c160:	0801c287 	.word	0x0801c287
 801c164:	0801c115 	.word	0x0801c115
 801c168:	0801c115 	.word	0x0801c115
 801c16c:	0801c2c7 	.word	0x0801c2c7
 801c170:	0801c115 	.word	0x0801c115
 801c174:	0801c1c9 	.word	0x0801c1c9
 801c178:	0801c115 	.word	0x0801c115
 801c17c:	0801c115 	.word	0x0801c115
 801c180:	0801c28f 	.word	0x0801c28f
 801c184:	680b      	ldr	r3, [r1, #0]
 801c186:	1d1a      	adds	r2, r3, #4
 801c188:	681b      	ldr	r3, [r3, #0]
 801c18a:	600a      	str	r2, [r1, #0]
 801c18c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c190:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c194:	2301      	movs	r3, #1
 801c196:	e0a3      	b.n	801c2e0 <_printf_i+0x1f4>
 801c198:	6825      	ldr	r5, [r4, #0]
 801c19a:	6808      	ldr	r0, [r1, #0]
 801c19c:	062e      	lsls	r6, r5, #24
 801c19e:	f100 0304 	add.w	r3, r0, #4
 801c1a2:	d50a      	bpl.n	801c1ba <_printf_i+0xce>
 801c1a4:	6805      	ldr	r5, [r0, #0]
 801c1a6:	600b      	str	r3, [r1, #0]
 801c1a8:	2d00      	cmp	r5, #0
 801c1aa:	da03      	bge.n	801c1b4 <_printf_i+0xc8>
 801c1ac:	232d      	movs	r3, #45	; 0x2d
 801c1ae:	426d      	negs	r5, r5
 801c1b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c1b4:	485e      	ldr	r0, [pc, #376]	; (801c330 <_printf_i+0x244>)
 801c1b6:	230a      	movs	r3, #10
 801c1b8:	e019      	b.n	801c1ee <_printf_i+0x102>
 801c1ba:	f015 0f40 	tst.w	r5, #64	; 0x40
 801c1be:	6805      	ldr	r5, [r0, #0]
 801c1c0:	600b      	str	r3, [r1, #0]
 801c1c2:	bf18      	it	ne
 801c1c4:	b22d      	sxthne	r5, r5
 801c1c6:	e7ef      	b.n	801c1a8 <_printf_i+0xbc>
 801c1c8:	680b      	ldr	r3, [r1, #0]
 801c1ca:	6825      	ldr	r5, [r4, #0]
 801c1cc:	1d18      	adds	r0, r3, #4
 801c1ce:	6008      	str	r0, [r1, #0]
 801c1d0:	0628      	lsls	r0, r5, #24
 801c1d2:	d501      	bpl.n	801c1d8 <_printf_i+0xec>
 801c1d4:	681d      	ldr	r5, [r3, #0]
 801c1d6:	e002      	b.n	801c1de <_printf_i+0xf2>
 801c1d8:	0669      	lsls	r1, r5, #25
 801c1da:	d5fb      	bpl.n	801c1d4 <_printf_i+0xe8>
 801c1dc:	881d      	ldrh	r5, [r3, #0]
 801c1de:	4854      	ldr	r0, [pc, #336]	; (801c330 <_printf_i+0x244>)
 801c1e0:	2f6f      	cmp	r7, #111	; 0x6f
 801c1e2:	bf0c      	ite	eq
 801c1e4:	2308      	moveq	r3, #8
 801c1e6:	230a      	movne	r3, #10
 801c1e8:	2100      	movs	r1, #0
 801c1ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c1ee:	6866      	ldr	r6, [r4, #4]
 801c1f0:	60a6      	str	r6, [r4, #8]
 801c1f2:	2e00      	cmp	r6, #0
 801c1f4:	bfa2      	ittt	ge
 801c1f6:	6821      	ldrge	r1, [r4, #0]
 801c1f8:	f021 0104 	bicge.w	r1, r1, #4
 801c1fc:	6021      	strge	r1, [r4, #0]
 801c1fe:	b90d      	cbnz	r5, 801c204 <_printf_i+0x118>
 801c200:	2e00      	cmp	r6, #0
 801c202:	d04d      	beq.n	801c2a0 <_printf_i+0x1b4>
 801c204:	4616      	mov	r6, r2
 801c206:	fbb5 f1f3 	udiv	r1, r5, r3
 801c20a:	fb03 5711 	mls	r7, r3, r1, r5
 801c20e:	5dc7      	ldrb	r7, [r0, r7]
 801c210:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c214:	462f      	mov	r7, r5
 801c216:	42bb      	cmp	r3, r7
 801c218:	460d      	mov	r5, r1
 801c21a:	d9f4      	bls.n	801c206 <_printf_i+0x11a>
 801c21c:	2b08      	cmp	r3, #8
 801c21e:	d10b      	bne.n	801c238 <_printf_i+0x14c>
 801c220:	6823      	ldr	r3, [r4, #0]
 801c222:	07df      	lsls	r7, r3, #31
 801c224:	d508      	bpl.n	801c238 <_printf_i+0x14c>
 801c226:	6923      	ldr	r3, [r4, #16]
 801c228:	6861      	ldr	r1, [r4, #4]
 801c22a:	4299      	cmp	r1, r3
 801c22c:	bfde      	ittt	le
 801c22e:	2330      	movle	r3, #48	; 0x30
 801c230:	f806 3c01 	strble.w	r3, [r6, #-1]
 801c234:	f106 36ff 	addle.w	r6, r6, #4294967295
 801c238:	1b92      	subs	r2, r2, r6
 801c23a:	6122      	str	r2, [r4, #16]
 801c23c:	f8cd a000 	str.w	sl, [sp]
 801c240:	464b      	mov	r3, r9
 801c242:	aa03      	add	r2, sp, #12
 801c244:	4621      	mov	r1, r4
 801c246:	4640      	mov	r0, r8
 801c248:	f7ff fee2 	bl	801c010 <_printf_common>
 801c24c:	3001      	adds	r0, #1
 801c24e:	d14c      	bne.n	801c2ea <_printf_i+0x1fe>
 801c250:	f04f 30ff 	mov.w	r0, #4294967295
 801c254:	b004      	add	sp, #16
 801c256:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c25a:	4835      	ldr	r0, [pc, #212]	; (801c330 <_printf_i+0x244>)
 801c25c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801c260:	6823      	ldr	r3, [r4, #0]
 801c262:	680e      	ldr	r6, [r1, #0]
 801c264:	061f      	lsls	r7, r3, #24
 801c266:	f856 5b04 	ldr.w	r5, [r6], #4
 801c26a:	600e      	str	r6, [r1, #0]
 801c26c:	d514      	bpl.n	801c298 <_printf_i+0x1ac>
 801c26e:	07d9      	lsls	r1, r3, #31
 801c270:	bf44      	itt	mi
 801c272:	f043 0320 	orrmi.w	r3, r3, #32
 801c276:	6023      	strmi	r3, [r4, #0]
 801c278:	b91d      	cbnz	r5, 801c282 <_printf_i+0x196>
 801c27a:	6823      	ldr	r3, [r4, #0]
 801c27c:	f023 0320 	bic.w	r3, r3, #32
 801c280:	6023      	str	r3, [r4, #0]
 801c282:	2310      	movs	r3, #16
 801c284:	e7b0      	b.n	801c1e8 <_printf_i+0xfc>
 801c286:	6823      	ldr	r3, [r4, #0]
 801c288:	f043 0320 	orr.w	r3, r3, #32
 801c28c:	6023      	str	r3, [r4, #0]
 801c28e:	2378      	movs	r3, #120	; 0x78
 801c290:	4828      	ldr	r0, [pc, #160]	; (801c334 <_printf_i+0x248>)
 801c292:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c296:	e7e3      	b.n	801c260 <_printf_i+0x174>
 801c298:	065e      	lsls	r6, r3, #25
 801c29a:	bf48      	it	mi
 801c29c:	b2ad      	uxthmi	r5, r5
 801c29e:	e7e6      	b.n	801c26e <_printf_i+0x182>
 801c2a0:	4616      	mov	r6, r2
 801c2a2:	e7bb      	b.n	801c21c <_printf_i+0x130>
 801c2a4:	680b      	ldr	r3, [r1, #0]
 801c2a6:	6826      	ldr	r6, [r4, #0]
 801c2a8:	6960      	ldr	r0, [r4, #20]
 801c2aa:	1d1d      	adds	r5, r3, #4
 801c2ac:	600d      	str	r5, [r1, #0]
 801c2ae:	0635      	lsls	r5, r6, #24
 801c2b0:	681b      	ldr	r3, [r3, #0]
 801c2b2:	d501      	bpl.n	801c2b8 <_printf_i+0x1cc>
 801c2b4:	6018      	str	r0, [r3, #0]
 801c2b6:	e002      	b.n	801c2be <_printf_i+0x1d2>
 801c2b8:	0671      	lsls	r1, r6, #25
 801c2ba:	d5fb      	bpl.n	801c2b4 <_printf_i+0x1c8>
 801c2bc:	8018      	strh	r0, [r3, #0]
 801c2be:	2300      	movs	r3, #0
 801c2c0:	6123      	str	r3, [r4, #16]
 801c2c2:	4616      	mov	r6, r2
 801c2c4:	e7ba      	b.n	801c23c <_printf_i+0x150>
 801c2c6:	680b      	ldr	r3, [r1, #0]
 801c2c8:	1d1a      	adds	r2, r3, #4
 801c2ca:	600a      	str	r2, [r1, #0]
 801c2cc:	681e      	ldr	r6, [r3, #0]
 801c2ce:	6862      	ldr	r2, [r4, #4]
 801c2d0:	2100      	movs	r1, #0
 801c2d2:	4630      	mov	r0, r6
 801c2d4:	f7e3 ff94 	bl	8000200 <memchr>
 801c2d8:	b108      	cbz	r0, 801c2de <_printf_i+0x1f2>
 801c2da:	1b80      	subs	r0, r0, r6
 801c2dc:	6060      	str	r0, [r4, #4]
 801c2de:	6863      	ldr	r3, [r4, #4]
 801c2e0:	6123      	str	r3, [r4, #16]
 801c2e2:	2300      	movs	r3, #0
 801c2e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c2e8:	e7a8      	b.n	801c23c <_printf_i+0x150>
 801c2ea:	6923      	ldr	r3, [r4, #16]
 801c2ec:	4632      	mov	r2, r6
 801c2ee:	4649      	mov	r1, r9
 801c2f0:	4640      	mov	r0, r8
 801c2f2:	47d0      	blx	sl
 801c2f4:	3001      	adds	r0, #1
 801c2f6:	d0ab      	beq.n	801c250 <_printf_i+0x164>
 801c2f8:	6823      	ldr	r3, [r4, #0]
 801c2fa:	079b      	lsls	r3, r3, #30
 801c2fc:	d413      	bmi.n	801c326 <_printf_i+0x23a>
 801c2fe:	68e0      	ldr	r0, [r4, #12]
 801c300:	9b03      	ldr	r3, [sp, #12]
 801c302:	4298      	cmp	r0, r3
 801c304:	bfb8      	it	lt
 801c306:	4618      	movlt	r0, r3
 801c308:	e7a4      	b.n	801c254 <_printf_i+0x168>
 801c30a:	2301      	movs	r3, #1
 801c30c:	4632      	mov	r2, r6
 801c30e:	4649      	mov	r1, r9
 801c310:	4640      	mov	r0, r8
 801c312:	47d0      	blx	sl
 801c314:	3001      	adds	r0, #1
 801c316:	d09b      	beq.n	801c250 <_printf_i+0x164>
 801c318:	3501      	adds	r5, #1
 801c31a:	68e3      	ldr	r3, [r4, #12]
 801c31c:	9903      	ldr	r1, [sp, #12]
 801c31e:	1a5b      	subs	r3, r3, r1
 801c320:	42ab      	cmp	r3, r5
 801c322:	dcf2      	bgt.n	801c30a <_printf_i+0x21e>
 801c324:	e7eb      	b.n	801c2fe <_printf_i+0x212>
 801c326:	2500      	movs	r5, #0
 801c328:	f104 0619 	add.w	r6, r4, #25
 801c32c:	e7f5      	b.n	801c31a <_printf_i+0x22e>
 801c32e:	bf00      	nop
 801c330:	080201f5 	.word	0x080201f5
 801c334:	08020206 	.word	0x08020206

0801c338 <_sbrk_r>:
 801c338:	b538      	push	{r3, r4, r5, lr}
 801c33a:	4d06      	ldr	r5, [pc, #24]	; (801c354 <_sbrk_r+0x1c>)
 801c33c:	2300      	movs	r3, #0
 801c33e:	4604      	mov	r4, r0
 801c340:	4608      	mov	r0, r1
 801c342:	602b      	str	r3, [r5, #0]
 801c344:	f7e5 fe52 	bl	8001fec <_sbrk>
 801c348:	1c43      	adds	r3, r0, #1
 801c34a:	d102      	bne.n	801c352 <_sbrk_r+0x1a>
 801c34c:	682b      	ldr	r3, [r5, #0]
 801c34e:	b103      	cbz	r3, 801c352 <_sbrk_r+0x1a>
 801c350:	6023      	str	r3, [r4, #0]
 801c352:	bd38      	pop	{r3, r4, r5, pc}
 801c354:	2000a820 	.word	0x2000a820

0801c358 <_raise_r>:
 801c358:	291f      	cmp	r1, #31
 801c35a:	b538      	push	{r3, r4, r5, lr}
 801c35c:	4604      	mov	r4, r0
 801c35e:	460d      	mov	r5, r1
 801c360:	d904      	bls.n	801c36c <_raise_r+0x14>
 801c362:	2316      	movs	r3, #22
 801c364:	6003      	str	r3, [r0, #0]
 801c366:	f04f 30ff 	mov.w	r0, #4294967295
 801c36a:	bd38      	pop	{r3, r4, r5, pc}
 801c36c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c36e:	b112      	cbz	r2, 801c376 <_raise_r+0x1e>
 801c370:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c374:	b94b      	cbnz	r3, 801c38a <_raise_r+0x32>
 801c376:	4620      	mov	r0, r4
 801c378:	f000 f830 	bl	801c3dc <_getpid_r>
 801c37c:	462a      	mov	r2, r5
 801c37e:	4601      	mov	r1, r0
 801c380:	4620      	mov	r0, r4
 801c382:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c386:	f000 b817 	b.w	801c3b8 <_kill_r>
 801c38a:	2b01      	cmp	r3, #1
 801c38c:	d00a      	beq.n	801c3a4 <_raise_r+0x4c>
 801c38e:	1c59      	adds	r1, r3, #1
 801c390:	d103      	bne.n	801c39a <_raise_r+0x42>
 801c392:	2316      	movs	r3, #22
 801c394:	6003      	str	r3, [r0, #0]
 801c396:	2001      	movs	r0, #1
 801c398:	e7e7      	b.n	801c36a <_raise_r+0x12>
 801c39a:	2400      	movs	r4, #0
 801c39c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c3a0:	4628      	mov	r0, r5
 801c3a2:	4798      	blx	r3
 801c3a4:	2000      	movs	r0, #0
 801c3a6:	e7e0      	b.n	801c36a <_raise_r+0x12>

0801c3a8 <raise>:
 801c3a8:	4b02      	ldr	r3, [pc, #8]	; (801c3b4 <raise+0xc>)
 801c3aa:	4601      	mov	r1, r0
 801c3ac:	6818      	ldr	r0, [r3, #0]
 801c3ae:	f7ff bfd3 	b.w	801c358 <_raise_r>
 801c3b2:	bf00      	nop
 801c3b4:	200000d8 	.word	0x200000d8

0801c3b8 <_kill_r>:
 801c3b8:	b538      	push	{r3, r4, r5, lr}
 801c3ba:	4d07      	ldr	r5, [pc, #28]	; (801c3d8 <_kill_r+0x20>)
 801c3bc:	2300      	movs	r3, #0
 801c3be:	4604      	mov	r4, r0
 801c3c0:	4608      	mov	r0, r1
 801c3c2:	4611      	mov	r1, r2
 801c3c4:	602b      	str	r3, [r5, #0]
 801c3c6:	f7e5 fddd 	bl	8001f84 <_kill>
 801c3ca:	1c43      	adds	r3, r0, #1
 801c3cc:	d102      	bne.n	801c3d4 <_kill_r+0x1c>
 801c3ce:	682b      	ldr	r3, [r5, #0]
 801c3d0:	b103      	cbz	r3, 801c3d4 <_kill_r+0x1c>
 801c3d2:	6023      	str	r3, [r4, #0]
 801c3d4:	bd38      	pop	{r3, r4, r5, pc}
 801c3d6:	bf00      	nop
 801c3d8:	2000a820 	.word	0x2000a820

0801c3dc <_getpid_r>:
 801c3dc:	f7e5 bdd0 	b.w	8001f80 <_getpid>

0801c3e0 <__swbuf_r>:
 801c3e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c3e2:	460e      	mov	r6, r1
 801c3e4:	4614      	mov	r4, r2
 801c3e6:	4605      	mov	r5, r0
 801c3e8:	b118      	cbz	r0, 801c3f2 <__swbuf_r+0x12>
 801c3ea:	6983      	ldr	r3, [r0, #24]
 801c3ec:	b90b      	cbnz	r3, 801c3f2 <__swbuf_r+0x12>
 801c3ee:	f000 fa33 	bl	801c858 <__sinit>
 801c3f2:	4b21      	ldr	r3, [pc, #132]	; (801c478 <__swbuf_r+0x98>)
 801c3f4:	429c      	cmp	r4, r3
 801c3f6:	d12b      	bne.n	801c450 <__swbuf_r+0x70>
 801c3f8:	686c      	ldr	r4, [r5, #4]
 801c3fa:	69a3      	ldr	r3, [r4, #24]
 801c3fc:	60a3      	str	r3, [r4, #8]
 801c3fe:	89a3      	ldrh	r3, [r4, #12]
 801c400:	071a      	lsls	r2, r3, #28
 801c402:	d52f      	bpl.n	801c464 <__swbuf_r+0x84>
 801c404:	6923      	ldr	r3, [r4, #16]
 801c406:	b36b      	cbz	r3, 801c464 <__swbuf_r+0x84>
 801c408:	6923      	ldr	r3, [r4, #16]
 801c40a:	6820      	ldr	r0, [r4, #0]
 801c40c:	1ac0      	subs	r0, r0, r3
 801c40e:	6963      	ldr	r3, [r4, #20]
 801c410:	b2f6      	uxtb	r6, r6
 801c412:	4283      	cmp	r3, r0
 801c414:	4637      	mov	r7, r6
 801c416:	dc04      	bgt.n	801c422 <__swbuf_r+0x42>
 801c418:	4621      	mov	r1, r4
 801c41a:	4628      	mov	r0, r5
 801c41c:	f000 f988 	bl	801c730 <_fflush_r>
 801c420:	bb30      	cbnz	r0, 801c470 <__swbuf_r+0x90>
 801c422:	68a3      	ldr	r3, [r4, #8]
 801c424:	3b01      	subs	r3, #1
 801c426:	60a3      	str	r3, [r4, #8]
 801c428:	6823      	ldr	r3, [r4, #0]
 801c42a:	1c5a      	adds	r2, r3, #1
 801c42c:	6022      	str	r2, [r4, #0]
 801c42e:	701e      	strb	r6, [r3, #0]
 801c430:	6963      	ldr	r3, [r4, #20]
 801c432:	3001      	adds	r0, #1
 801c434:	4283      	cmp	r3, r0
 801c436:	d004      	beq.n	801c442 <__swbuf_r+0x62>
 801c438:	89a3      	ldrh	r3, [r4, #12]
 801c43a:	07db      	lsls	r3, r3, #31
 801c43c:	d506      	bpl.n	801c44c <__swbuf_r+0x6c>
 801c43e:	2e0a      	cmp	r6, #10
 801c440:	d104      	bne.n	801c44c <__swbuf_r+0x6c>
 801c442:	4621      	mov	r1, r4
 801c444:	4628      	mov	r0, r5
 801c446:	f000 f973 	bl	801c730 <_fflush_r>
 801c44a:	b988      	cbnz	r0, 801c470 <__swbuf_r+0x90>
 801c44c:	4638      	mov	r0, r7
 801c44e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c450:	4b0a      	ldr	r3, [pc, #40]	; (801c47c <__swbuf_r+0x9c>)
 801c452:	429c      	cmp	r4, r3
 801c454:	d101      	bne.n	801c45a <__swbuf_r+0x7a>
 801c456:	68ac      	ldr	r4, [r5, #8]
 801c458:	e7cf      	b.n	801c3fa <__swbuf_r+0x1a>
 801c45a:	4b09      	ldr	r3, [pc, #36]	; (801c480 <__swbuf_r+0xa0>)
 801c45c:	429c      	cmp	r4, r3
 801c45e:	bf08      	it	eq
 801c460:	68ec      	ldreq	r4, [r5, #12]
 801c462:	e7ca      	b.n	801c3fa <__swbuf_r+0x1a>
 801c464:	4621      	mov	r1, r4
 801c466:	4628      	mov	r0, r5
 801c468:	f000 f80c 	bl	801c484 <__swsetup_r>
 801c46c:	2800      	cmp	r0, #0
 801c46e:	d0cb      	beq.n	801c408 <__swbuf_r+0x28>
 801c470:	f04f 37ff 	mov.w	r7, #4294967295
 801c474:	e7ea      	b.n	801c44c <__swbuf_r+0x6c>
 801c476:	bf00      	nop
 801c478:	0802023c 	.word	0x0802023c
 801c47c:	0802025c 	.word	0x0802025c
 801c480:	0802021c 	.word	0x0802021c

0801c484 <__swsetup_r>:
 801c484:	4b32      	ldr	r3, [pc, #200]	; (801c550 <__swsetup_r+0xcc>)
 801c486:	b570      	push	{r4, r5, r6, lr}
 801c488:	681d      	ldr	r5, [r3, #0]
 801c48a:	4606      	mov	r6, r0
 801c48c:	460c      	mov	r4, r1
 801c48e:	b125      	cbz	r5, 801c49a <__swsetup_r+0x16>
 801c490:	69ab      	ldr	r3, [r5, #24]
 801c492:	b913      	cbnz	r3, 801c49a <__swsetup_r+0x16>
 801c494:	4628      	mov	r0, r5
 801c496:	f000 f9df 	bl	801c858 <__sinit>
 801c49a:	4b2e      	ldr	r3, [pc, #184]	; (801c554 <__swsetup_r+0xd0>)
 801c49c:	429c      	cmp	r4, r3
 801c49e:	d10f      	bne.n	801c4c0 <__swsetup_r+0x3c>
 801c4a0:	686c      	ldr	r4, [r5, #4]
 801c4a2:	89a3      	ldrh	r3, [r4, #12]
 801c4a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c4a8:	0719      	lsls	r1, r3, #28
 801c4aa:	d42c      	bmi.n	801c506 <__swsetup_r+0x82>
 801c4ac:	06dd      	lsls	r5, r3, #27
 801c4ae:	d411      	bmi.n	801c4d4 <__swsetup_r+0x50>
 801c4b0:	2309      	movs	r3, #9
 801c4b2:	6033      	str	r3, [r6, #0]
 801c4b4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c4b8:	81a3      	strh	r3, [r4, #12]
 801c4ba:	f04f 30ff 	mov.w	r0, #4294967295
 801c4be:	e03e      	b.n	801c53e <__swsetup_r+0xba>
 801c4c0:	4b25      	ldr	r3, [pc, #148]	; (801c558 <__swsetup_r+0xd4>)
 801c4c2:	429c      	cmp	r4, r3
 801c4c4:	d101      	bne.n	801c4ca <__swsetup_r+0x46>
 801c4c6:	68ac      	ldr	r4, [r5, #8]
 801c4c8:	e7eb      	b.n	801c4a2 <__swsetup_r+0x1e>
 801c4ca:	4b24      	ldr	r3, [pc, #144]	; (801c55c <__swsetup_r+0xd8>)
 801c4cc:	429c      	cmp	r4, r3
 801c4ce:	bf08      	it	eq
 801c4d0:	68ec      	ldreq	r4, [r5, #12]
 801c4d2:	e7e6      	b.n	801c4a2 <__swsetup_r+0x1e>
 801c4d4:	0758      	lsls	r0, r3, #29
 801c4d6:	d512      	bpl.n	801c4fe <__swsetup_r+0x7a>
 801c4d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c4da:	b141      	cbz	r1, 801c4ee <__swsetup_r+0x6a>
 801c4dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c4e0:	4299      	cmp	r1, r3
 801c4e2:	d002      	beq.n	801c4ea <__swsetup_r+0x66>
 801c4e4:	4630      	mov	r0, r6
 801c4e6:	f7ff fb8f 	bl	801bc08 <_free_r>
 801c4ea:	2300      	movs	r3, #0
 801c4ec:	6363      	str	r3, [r4, #52]	; 0x34
 801c4ee:	89a3      	ldrh	r3, [r4, #12]
 801c4f0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c4f4:	81a3      	strh	r3, [r4, #12]
 801c4f6:	2300      	movs	r3, #0
 801c4f8:	6063      	str	r3, [r4, #4]
 801c4fa:	6923      	ldr	r3, [r4, #16]
 801c4fc:	6023      	str	r3, [r4, #0]
 801c4fe:	89a3      	ldrh	r3, [r4, #12]
 801c500:	f043 0308 	orr.w	r3, r3, #8
 801c504:	81a3      	strh	r3, [r4, #12]
 801c506:	6923      	ldr	r3, [r4, #16]
 801c508:	b94b      	cbnz	r3, 801c51e <__swsetup_r+0x9a>
 801c50a:	89a3      	ldrh	r3, [r4, #12]
 801c50c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c510:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c514:	d003      	beq.n	801c51e <__swsetup_r+0x9a>
 801c516:	4621      	mov	r1, r4
 801c518:	4630      	mov	r0, r6
 801c51a:	f000 fa63 	bl	801c9e4 <__smakebuf_r>
 801c51e:	89a0      	ldrh	r0, [r4, #12]
 801c520:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c524:	f010 0301 	ands.w	r3, r0, #1
 801c528:	d00a      	beq.n	801c540 <__swsetup_r+0xbc>
 801c52a:	2300      	movs	r3, #0
 801c52c:	60a3      	str	r3, [r4, #8]
 801c52e:	6963      	ldr	r3, [r4, #20]
 801c530:	425b      	negs	r3, r3
 801c532:	61a3      	str	r3, [r4, #24]
 801c534:	6923      	ldr	r3, [r4, #16]
 801c536:	b943      	cbnz	r3, 801c54a <__swsetup_r+0xc6>
 801c538:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c53c:	d1ba      	bne.n	801c4b4 <__swsetup_r+0x30>
 801c53e:	bd70      	pop	{r4, r5, r6, pc}
 801c540:	0781      	lsls	r1, r0, #30
 801c542:	bf58      	it	pl
 801c544:	6963      	ldrpl	r3, [r4, #20]
 801c546:	60a3      	str	r3, [r4, #8]
 801c548:	e7f4      	b.n	801c534 <__swsetup_r+0xb0>
 801c54a:	2000      	movs	r0, #0
 801c54c:	e7f7      	b.n	801c53e <__swsetup_r+0xba>
 801c54e:	bf00      	nop
 801c550:	200000d8 	.word	0x200000d8
 801c554:	0802023c 	.word	0x0802023c
 801c558:	0802025c 	.word	0x0802025c
 801c55c:	0802021c 	.word	0x0802021c

0801c560 <__register_exitproc>:
 801c560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c564:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c620 <__register_exitproc+0xc0>
 801c568:	4606      	mov	r6, r0
 801c56a:	f8d8 0000 	ldr.w	r0, [r8]
 801c56e:	461f      	mov	r7, r3
 801c570:	460d      	mov	r5, r1
 801c572:	4691      	mov	r9, r2
 801c574:	f000 fa0e 	bl	801c994 <__retarget_lock_acquire_recursive>
 801c578:	4b25      	ldr	r3, [pc, #148]	; (801c610 <__register_exitproc+0xb0>)
 801c57a:	681c      	ldr	r4, [r3, #0]
 801c57c:	b934      	cbnz	r4, 801c58c <__register_exitproc+0x2c>
 801c57e:	4c25      	ldr	r4, [pc, #148]	; (801c614 <__register_exitproc+0xb4>)
 801c580:	601c      	str	r4, [r3, #0]
 801c582:	4b25      	ldr	r3, [pc, #148]	; (801c618 <__register_exitproc+0xb8>)
 801c584:	b113      	cbz	r3, 801c58c <__register_exitproc+0x2c>
 801c586:	681b      	ldr	r3, [r3, #0]
 801c588:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c58c:	6863      	ldr	r3, [r4, #4]
 801c58e:	2b1f      	cmp	r3, #31
 801c590:	dd07      	ble.n	801c5a2 <__register_exitproc+0x42>
 801c592:	f8d8 0000 	ldr.w	r0, [r8]
 801c596:	f000 f9ff 	bl	801c998 <__retarget_lock_release_recursive>
 801c59a:	f04f 30ff 	mov.w	r0, #4294967295
 801c59e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c5a2:	b34e      	cbz	r6, 801c5f8 <__register_exitproc+0x98>
 801c5a4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c5a8:	b988      	cbnz	r0, 801c5ce <__register_exitproc+0x6e>
 801c5aa:	4b1c      	ldr	r3, [pc, #112]	; (801c61c <__register_exitproc+0xbc>)
 801c5ac:	b923      	cbnz	r3, 801c5b8 <__register_exitproc+0x58>
 801c5ae:	f8d8 0000 	ldr.w	r0, [r8]
 801c5b2:	f000 f9f0 	bl	801c996 <__retarget_lock_release>
 801c5b6:	e7f0      	b.n	801c59a <__register_exitproc+0x3a>
 801c5b8:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c5bc:	f7ff fafe 	bl	801bbbc <malloc>
 801c5c0:	2800      	cmp	r0, #0
 801c5c2:	d0f4      	beq.n	801c5ae <__register_exitproc+0x4e>
 801c5c4:	2300      	movs	r3, #0
 801c5c6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c5ca:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c5ce:	6863      	ldr	r3, [r4, #4]
 801c5d0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c5d4:	2201      	movs	r2, #1
 801c5d6:	409a      	lsls	r2, r3
 801c5d8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c5dc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c5e0:	4313      	orrs	r3, r2
 801c5e2:	2e02      	cmp	r6, #2
 801c5e4:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c5e8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c5ec:	bf02      	ittt	eq
 801c5ee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c5f2:	431a      	orreq	r2, r3
 801c5f4:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801c5f8:	6863      	ldr	r3, [r4, #4]
 801c5fa:	f8d8 0000 	ldr.w	r0, [r8]
 801c5fe:	1c5a      	adds	r2, r3, #1
 801c600:	3302      	adds	r3, #2
 801c602:	6062      	str	r2, [r4, #4]
 801c604:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c608:	f000 f9c6 	bl	801c998 <__retarget_lock_release_recursive>
 801c60c:	2000      	movs	r0, #0
 801c60e:	e7c6      	b.n	801c59e <__register_exitproc+0x3e>
 801c610:	2000a550 	.word	0x2000a550
 801c614:	2000a4c4 	.word	0x2000a4c4
 801c618:	08020218 	.word	0x08020218
 801c61c:	0801bbbd 	.word	0x0801bbbd
 801c620:	2000013c 	.word	0x2000013c

0801c624 <__sflush_r>:
 801c624:	898a      	ldrh	r2, [r1, #12]
 801c626:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c62a:	4605      	mov	r5, r0
 801c62c:	0710      	lsls	r0, r2, #28
 801c62e:	460c      	mov	r4, r1
 801c630:	d458      	bmi.n	801c6e4 <__sflush_r+0xc0>
 801c632:	684b      	ldr	r3, [r1, #4]
 801c634:	2b00      	cmp	r3, #0
 801c636:	dc05      	bgt.n	801c644 <__sflush_r+0x20>
 801c638:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c63a:	2b00      	cmp	r3, #0
 801c63c:	dc02      	bgt.n	801c644 <__sflush_r+0x20>
 801c63e:	2000      	movs	r0, #0
 801c640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c644:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c646:	2e00      	cmp	r6, #0
 801c648:	d0f9      	beq.n	801c63e <__sflush_r+0x1a>
 801c64a:	2300      	movs	r3, #0
 801c64c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c650:	682f      	ldr	r7, [r5, #0]
 801c652:	602b      	str	r3, [r5, #0]
 801c654:	d032      	beq.n	801c6bc <__sflush_r+0x98>
 801c656:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c658:	89a3      	ldrh	r3, [r4, #12]
 801c65a:	075a      	lsls	r2, r3, #29
 801c65c:	d505      	bpl.n	801c66a <__sflush_r+0x46>
 801c65e:	6863      	ldr	r3, [r4, #4]
 801c660:	1ac0      	subs	r0, r0, r3
 801c662:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c664:	b10b      	cbz	r3, 801c66a <__sflush_r+0x46>
 801c666:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c668:	1ac0      	subs	r0, r0, r3
 801c66a:	2300      	movs	r3, #0
 801c66c:	4602      	mov	r2, r0
 801c66e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c670:	6a21      	ldr	r1, [r4, #32]
 801c672:	4628      	mov	r0, r5
 801c674:	47b0      	blx	r6
 801c676:	1c43      	adds	r3, r0, #1
 801c678:	89a3      	ldrh	r3, [r4, #12]
 801c67a:	d106      	bne.n	801c68a <__sflush_r+0x66>
 801c67c:	6829      	ldr	r1, [r5, #0]
 801c67e:	291d      	cmp	r1, #29
 801c680:	d82c      	bhi.n	801c6dc <__sflush_r+0xb8>
 801c682:	4a2a      	ldr	r2, [pc, #168]	; (801c72c <__sflush_r+0x108>)
 801c684:	40ca      	lsrs	r2, r1
 801c686:	07d6      	lsls	r6, r2, #31
 801c688:	d528      	bpl.n	801c6dc <__sflush_r+0xb8>
 801c68a:	2200      	movs	r2, #0
 801c68c:	6062      	str	r2, [r4, #4]
 801c68e:	04d9      	lsls	r1, r3, #19
 801c690:	6922      	ldr	r2, [r4, #16]
 801c692:	6022      	str	r2, [r4, #0]
 801c694:	d504      	bpl.n	801c6a0 <__sflush_r+0x7c>
 801c696:	1c42      	adds	r2, r0, #1
 801c698:	d101      	bne.n	801c69e <__sflush_r+0x7a>
 801c69a:	682b      	ldr	r3, [r5, #0]
 801c69c:	b903      	cbnz	r3, 801c6a0 <__sflush_r+0x7c>
 801c69e:	6560      	str	r0, [r4, #84]	; 0x54
 801c6a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c6a2:	602f      	str	r7, [r5, #0]
 801c6a4:	2900      	cmp	r1, #0
 801c6a6:	d0ca      	beq.n	801c63e <__sflush_r+0x1a>
 801c6a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c6ac:	4299      	cmp	r1, r3
 801c6ae:	d002      	beq.n	801c6b6 <__sflush_r+0x92>
 801c6b0:	4628      	mov	r0, r5
 801c6b2:	f7ff faa9 	bl	801bc08 <_free_r>
 801c6b6:	2000      	movs	r0, #0
 801c6b8:	6360      	str	r0, [r4, #52]	; 0x34
 801c6ba:	e7c1      	b.n	801c640 <__sflush_r+0x1c>
 801c6bc:	6a21      	ldr	r1, [r4, #32]
 801c6be:	2301      	movs	r3, #1
 801c6c0:	4628      	mov	r0, r5
 801c6c2:	47b0      	blx	r6
 801c6c4:	1c41      	adds	r1, r0, #1
 801c6c6:	d1c7      	bne.n	801c658 <__sflush_r+0x34>
 801c6c8:	682b      	ldr	r3, [r5, #0]
 801c6ca:	2b00      	cmp	r3, #0
 801c6cc:	d0c4      	beq.n	801c658 <__sflush_r+0x34>
 801c6ce:	2b1d      	cmp	r3, #29
 801c6d0:	d001      	beq.n	801c6d6 <__sflush_r+0xb2>
 801c6d2:	2b16      	cmp	r3, #22
 801c6d4:	d101      	bne.n	801c6da <__sflush_r+0xb6>
 801c6d6:	602f      	str	r7, [r5, #0]
 801c6d8:	e7b1      	b.n	801c63e <__sflush_r+0x1a>
 801c6da:	89a3      	ldrh	r3, [r4, #12]
 801c6dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c6e0:	81a3      	strh	r3, [r4, #12]
 801c6e2:	e7ad      	b.n	801c640 <__sflush_r+0x1c>
 801c6e4:	690f      	ldr	r7, [r1, #16]
 801c6e6:	2f00      	cmp	r7, #0
 801c6e8:	d0a9      	beq.n	801c63e <__sflush_r+0x1a>
 801c6ea:	0793      	lsls	r3, r2, #30
 801c6ec:	680e      	ldr	r6, [r1, #0]
 801c6ee:	bf08      	it	eq
 801c6f0:	694b      	ldreq	r3, [r1, #20]
 801c6f2:	600f      	str	r7, [r1, #0]
 801c6f4:	bf18      	it	ne
 801c6f6:	2300      	movne	r3, #0
 801c6f8:	eba6 0807 	sub.w	r8, r6, r7
 801c6fc:	608b      	str	r3, [r1, #8]
 801c6fe:	f1b8 0f00 	cmp.w	r8, #0
 801c702:	dd9c      	ble.n	801c63e <__sflush_r+0x1a>
 801c704:	6a21      	ldr	r1, [r4, #32]
 801c706:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c708:	4643      	mov	r3, r8
 801c70a:	463a      	mov	r2, r7
 801c70c:	4628      	mov	r0, r5
 801c70e:	47b0      	blx	r6
 801c710:	2800      	cmp	r0, #0
 801c712:	dc06      	bgt.n	801c722 <__sflush_r+0xfe>
 801c714:	89a3      	ldrh	r3, [r4, #12]
 801c716:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c71a:	81a3      	strh	r3, [r4, #12]
 801c71c:	f04f 30ff 	mov.w	r0, #4294967295
 801c720:	e78e      	b.n	801c640 <__sflush_r+0x1c>
 801c722:	4407      	add	r7, r0
 801c724:	eba8 0800 	sub.w	r8, r8, r0
 801c728:	e7e9      	b.n	801c6fe <__sflush_r+0xda>
 801c72a:	bf00      	nop
 801c72c:	20400001 	.word	0x20400001

0801c730 <_fflush_r>:
 801c730:	b538      	push	{r3, r4, r5, lr}
 801c732:	690b      	ldr	r3, [r1, #16]
 801c734:	4605      	mov	r5, r0
 801c736:	460c      	mov	r4, r1
 801c738:	b913      	cbnz	r3, 801c740 <_fflush_r+0x10>
 801c73a:	2500      	movs	r5, #0
 801c73c:	4628      	mov	r0, r5
 801c73e:	bd38      	pop	{r3, r4, r5, pc}
 801c740:	b118      	cbz	r0, 801c74a <_fflush_r+0x1a>
 801c742:	6983      	ldr	r3, [r0, #24]
 801c744:	b90b      	cbnz	r3, 801c74a <_fflush_r+0x1a>
 801c746:	f000 f887 	bl	801c858 <__sinit>
 801c74a:	4b14      	ldr	r3, [pc, #80]	; (801c79c <_fflush_r+0x6c>)
 801c74c:	429c      	cmp	r4, r3
 801c74e:	d11b      	bne.n	801c788 <_fflush_r+0x58>
 801c750:	686c      	ldr	r4, [r5, #4]
 801c752:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c756:	2b00      	cmp	r3, #0
 801c758:	d0ef      	beq.n	801c73a <_fflush_r+0xa>
 801c75a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c75c:	07d0      	lsls	r0, r2, #31
 801c75e:	d404      	bmi.n	801c76a <_fflush_r+0x3a>
 801c760:	0599      	lsls	r1, r3, #22
 801c762:	d402      	bmi.n	801c76a <_fflush_r+0x3a>
 801c764:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c766:	f000 f915 	bl	801c994 <__retarget_lock_acquire_recursive>
 801c76a:	4628      	mov	r0, r5
 801c76c:	4621      	mov	r1, r4
 801c76e:	f7ff ff59 	bl	801c624 <__sflush_r>
 801c772:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c774:	07da      	lsls	r2, r3, #31
 801c776:	4605      	mov	r5, r0
 801c778:	d4e0      	bmi.n	801c73c <_fflush_r+0xc>
 801c77a:	89a3      	ldrh	r3, [r4, #12]
 801c77c:	059b      	lsls	r3, r3, #22
 801c77e:	d4dd      	bmi.n	801c73c <_fflush_r+0xc>
 801c780:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c782:	f000 f909 	bl	801c998 <__retarget_lock_release_recursive>
 801c786:	e7d9      	b.n	801c73c <_fflush_r+0xc>
 801c788:	4b05      	ldr	r3, [pc, #20]	; (801c7a0 <_fflush_r+0x70>)
 801c78a:	429c      	cmp	r4, r3
 801c78c:	d101      	bne.n	801c792 <_fflush_r+0x62>
 801c78e:	68ac      	ldr	r4, [r5, #8]
 801c790:	e7df      	b.n	801c752 <_fflush_r+0x22>
 801c792:	4b04      	ldr	r3, [pc, #16]	; (801c7a4 <_fflush_r+0x74>)
 801c794:	429c      	cmp	r4, r3
 801c796:	bf08      	it	eq
 801c798:	68ec      	ldreq	r4, [r5, #12]
 801c79a:	e7da      	b.n	801c752 <_fflush_r+0x22>
 801c79c:	0802023c 	.word	0x0802023c
 801c7a0:	0802025c 	.word	0x0802025c
 801c7a4:	0802021c 	.word	0x0802021c

0801c7a8 <std>:
 801c7a8:	2300      	movs	r3, #0
 801c7aa:	b510      	push	{r4, lr}
 801c7ac:	4604      	mov	r4, r0
 801c7ae:	e9c0 3300 	strd	r3, r3, [r0]
 801c7b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c7b6:	6083      	str	r3, [r0, #8]
 801c7b8:	8181      	strh	r1, [r0, #12]
 801c7ba:	6643      	str	r3, [r0, #100]	; 0x64
 801c7bc:	81c2      	strh	r2, [r0, #14]
 801c7be:	6183      	str	r3, [r0, #24]
 801c7c0:	4619      	mov	r1, r3
 801c7c2:	2208      	movs	r2, #8
 801c7c4:	305c      	adds	r0, #92	; 0x5c
 801c7c6:	f7ff fa17 	bl	801bbf8 <memset>
 801c7ca:	4b05      	ldr	r3, [pc, #20]	; (801c7e0 <std+0x38>)
 801c7cc:	6263      	str	r3, [r4, #36]	; 0x24
 801c7ce:	4b05      	ldr	r3, [pc, #20]	; (801c7e4 <std+0x3c>)
 801c7d0:	62a3      	str	r3, [r4, #40]	; 0x28
 801c7d2:	4b05      	ldr	r3, [pc, #20]	; (801c7e8 <std+0x40>)
 801c7d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c7d6:	4b05      	ldr	r3, [pc, #20]	; (801c7ec <std+0x44>)
 801c7d8:	6224      	str	r4, [r4, #32]
 801c7da:	6323      	str	r3, [r4, #48]	; 0x30
 801c7dc:	bd10      	pop	{r4, pc}
 801c7de:	bf00      	nop
 801c7e0:	0801ca7d 	.word	0x0801ca7d
 801c7e4:	0801ca9f 	.word	0x0801ca9f
 801c7e8:	0801cad7 	.word	0x0801cad7
 801c7ec:	0801cafb 	.word	0x0801cafb

0801c7f0 <_cleanup_r>:
 801c7f0:	4901      	ldr	r1, [pc, #4]	; (801c7f8 <_cleanup_r+0x8>)
 801c7f2:	f000 b8af 	b.w	801c954 <_fwalk_reent>
 801c7f6:	bf00      	nop
 801c7f8:	0801c731 	.word	0x0801c731

0801c7fc <__sfmoreglue>:
 801c7fc:	b570      	push	{r4, r5, r6, lr}
 801c7fe:	1e4a      	subs	r2, r1, #1
 801c800:	2568      	movs	r5, #104	; 0x68
 801c802:	4355      	muls	r5, r2
 801c804:	460e      	mov	r6, r1
 801c806:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c80a:	f7ff fa4d 	bl	801bca8 <_malloc_r>
 801c80e:	4604      	mov	r4, r0
 801c810:	b140      	cbz	r0, 801c824 <__sfmoreglue+0x28>
 801c812:	2100      	movs	r1, #0
 801c814:	e9c0 1600 	strd	r1, r6, [r0]
 801c818:	300c      	adds	r0, #12
 801c81a:	60a0      	str	r0, [r4, #8]
 801c81c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c820:	f7ff f9ea 	bl	801bbf8 <memset>
 801c824:	4620      	mov	r0, r4
 801c826:	bd70      	pop	{r4, r5, r6, pc}

0801c828 <__sfp_lock_acquire>:
 801c828:	4801      	ldr	r0, [pc, #4]	; (801c830 <__sfp_lock_acquire+0x8>)
 801c82a:	f000 b8b3 	b.w	801c994 <__retarget_lock_acquire_recursive>
 801c82e:	bf00      	nop
 801c830:	2000a81c 	.word	0x2000a81c

0801c834 <__sfp_lock_release>:
 801c834:	4801      	ldr	r0, [pc, #4]	; (801c83c <__sfp_lock_release+0x8>)
 801c836:	f000 b8af 	b.w	801c998 <__retarget_lock_release_recursive>
 801c83a:	bf00      	nop
 801c83c:	2000a81c 	.word	0x2000a81c

0801c840 <__sinit_lock_acquire>:
 801c840:	4801      	ldr	r0, [pc, #4]	; (801c848 <__sinit_lock_acquire+0x8>)
 801c842:	f000 b8a7 	b.w	801c994 <__retarget_lock_acquire_recursive>
 801c846:	bf00      	nop
 801c848:	2000a817 	.word	0x2000a817

0801c84c <__sinit_lock_release>:
 801c84c:	4801      	ldr	r0, [pc, #4]	; (801c854 <__sinit_lock_release+0x8>)
 801c84e:	f000 b8a3 	b.w	801c998 <__retarget_lock_release_recursive>
 801c852:	bf00      	nop
 801c854:	2000a817 	.word	0x2000a817

0801c858 <__sinit>:
 801c858:	b510      	push	{r4, lr}
 801c85a:	4604      	mov	r4, r0
 801c85c:	f7ff fff0 	bl	801c840 <__sinit_lock_acquire>
 801c860:	69a3      	ldr	r3, [r4, #24]
 801c862:	b11b      	cbz	r3, 801c86c <__sinit+0x14>
 801c864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c868:	f7ff bff0 	b.w	801c84c <__sinit_lock_release>
 801c86c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c870:	6523      	str	r3, [r4, #80]	; 0x50
 801c872:	4b13      	ldr	r3, [pc, #76]	; (801c8c0 <__sinit+0x68>)
 801c874:	4a13      	ldr	r2, [pc, #76]	; (801c8c4 <__sinit+0x6c>)
 801c876:	681b      	ldr	r3, [r3, #0]
 801c878:	62a2      	str	r2, [r4, #40]	; 0x28
 801c87a:	42a3      	cmp	r3, r4
 801c87c:	bf04      	itt	eq
 801c87e:	2301      	moveq	r3, #1
 801c880:	61a3      	streq	r3, [r4, #24]
 801c882:	4620      	mov	r0, r4
 801c884:	f000 f820 	bl	801c8c8 <__sfp>
 801c888:	6060      	str	r0, [r4, #4]
 801c88a:	4620      	mov	r0, r4
 801c88c:	f000 f81c 	bl	801c8c8 <__sfp>
 801c890:	60a0      	str	r0, [r4, #8]
 801c892:	4620      	mov	r0, r4
 801c894:	f000 f818 	bl	801c8c8 <__sfp>
 801c898:	2200      	movs	r2, #0
 801c89a:	60e0      	str	r0, [r4, #12]
 801c89c:	2104      	movs	r1, #4
 801c89e:	6860      	ldr	r0, [r4, #4]
 801c8a0:	f7ff ff82 	bl	801c7a8 <std>
 801c8a4:	68a0      	ldr	r0, [r4, #8]
 801c8a6:	2201      	movs	r2, #1
 801c8a8:	2109      	movs	r1, #9
 801c8aa:	f7ff ff7d 	bl	801c7a8 <std>
 801c8ae:	68e0      	ldr	r0, [r4, #12]
 801c8b0:	2202      	movs	r2, #2
 801c8b2:	2112      	movs	r1, #18
 801c8b4:	f7ff ff78 	bl	801c7a8 <std>
 801c8b8:	2301      	movs	r3, #1
 801c8ba:	61a3      	str	r3, [r4, #24]
 801c8bc:	e7d2      	b.n	801c864 <__sinit+0xc>
 801c8be:	bf00      	nop
 801c8c0:	080201e0 	.word	0x080201e0
 801c8c4:	0801c7f1 	.word	0x0801c7f1

0801c8c8 <__sfp>:
 801c8c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c8ca:	4607      	mov	r7, r0
 801c8cc:	f7ff ffac 	bl	801c828 <__sfp_lock_acquire>
 801c8d0:	4b1e      	ldr	r3, [pc, #120]	; (801c94c <__sfp+0x84>)
 801c8d2:	681e      	ldr	r6, [r3, #0]
 801c8d4:	69b3      	ldr	r3, [r6, #24]
 801c8d6:	b913      	cbnz	r3, 801c8de <__sfp+0x16>
 801c8d8:	4630      	mov	r0, r6
 801c8da:	f7ff ffbd 	bl	801c858 <__sinit>
 801c8de:	3648      	adds	r6, #72	; 0x48
 801c8e0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c8e4:	3b01      	subs	r3, #1
 801c8e6:	d503      	bpl.n	801c8f0 <__sfp+0x28>
 801c8e8:	6833      	ldr	r3, [r6, #0]
 801c8ea:	b30b      	cbz	r3, 801c930 <__sfp+0x68>
 801c8ec:	6836      	ldr	r6, [r6, #0]
 801c8ee:	e7f7      	b.n	801c8e0 <__sfp+0x18>
 801c8f0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c8f4:	b9d5      	cbnz	r5, 801c92c <__sfp+0x64>
 801c8f6:	4b16      	ldr	r3, [pc, #88]	; (801c950 <__sfp+0x88>)
 801c8f8:	60e3      	str	r3, [r4, #12]
 801c8fa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c8fe:	6665      	str	r5, [r4, #100]	; 0x64
 801c900:	f000 f847 	bl	801c992 <__retarget_lock_init_recursive>
 801c904:	f7ff ff96 	bl	801c834 <__sfp_lock_release>
 801c908:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c90c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c910:	6025      	str	r5, [r4, #0]
 801c912:	61a5      	str	r5, [r4, #24]
 801c914:	2208      	movs	r2, #8
 801c916:	4629      	mov	r1, r5
 801c918:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c91c:	f7ff f96c 	bl	801bbf8 <memset>
 801c920:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c924:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c928:	4620      	mov	r0, r4
 801c92a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c92c:	3468      	adds	r4, #104	; 0x68
 801c92e:	e7d9      	b.n	801c8e4 <__sfp+0x1c>
 801c930:	2104      	movs	r1, #4
 801c932:	4638      	mov	r0, r7
 801c934:	f7ff ff62 	bl	801c7fc <__sfmoreglue>
 801c938:	4604      	mov	r4, r0
 801c93a:	6030      	str	r0, [r6, #0]
 801c93c:	2800      	cmp	r0, #0
 801c93e:	d1d5      	bne.n	801c8ec <__sfp+0x24>
 801c940:	f7ff ff78 	bl	801c834 <__sfp_lock_release>
 801c944:	230c      	movs	r3, #12
 801c946:	603b      	str	r3, [r7, #0]
 801c948:	e7ee      	b.n	801c928 <__sfp+0x60>
 801c94a:	bf00      	nop
 801c94c:	080201e0 	.word	0x080201e0
 801c950:	ffff0001 	.word	0xffff0001

0801c954 <_fwalk_reent>:
 801c954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c958:	4606      	mov	r6, r0
 801c95a:	4688      	mov	r8, r1
 801c95c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c960:	2700      	movs	r7, #0
 801c962:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801c966:	f1b9 0901 	subs.w	r9, r9, #1
 801c96a:	d505      	bpl.n	801c978 <_fwalk_reent+0x24>
 801c96c:	6824      	ldr	r4, [r4, #0]
 801c96e:	2c00      	cmp	r4, #0
 801c970:	d1f7      	bne.n	801c962 <_fwalk_reent+0xe>
 801c972:	4638      	mov	r0, r7
 801c974:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c978:	89ab      	ldrh	r3, [r5, #12]
 801c97a:	2b01      	cmp	r3, #1
 801c97c:	d907      	bls.n	801c98e <_fwalk_reent+0x3a>
 801c97e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c982:	3301      	adds	r3, #1
 801c984:	d003      	beq.n	801c98e <_fwalk_reent+0x3a>
 801c986:	4629      	mov	r1, r5
 801c988:	4630      	mov	r0, r6
 801c98a:	47c0      	blx	r8
 801c98c:	4307      	orrs	r7, r0
 801c98e:	3568      	adds	r5, #104	; 0x68
 801c990:	e7e9      	b.n	801c966 <_fwalk_reent+0x12>

0801c992 <__retarget_lock_init_recursive>:
 801c992:	4770      	bx	lr

0801c994 <__retarget_lock_acquire_recursive>:
 801c994:	4770      	bx	lr

0801c996 <__retarget_lock_release>:
 801c996:	4770      	bx	lr

0801c998 <__retarget_lock_release_recursive>:
 801c998:	4770      	bx	lr

0801c99a <__swhatbuf_r>:
 801c99a:	b570      	push	{r4, r5, r6, lr}
 801c99c:	460e      	mov	r6, r1
 801c99e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c9a2:	2900      	cmp	r1, #0
 801c9a4:	b096      	sub	sp, #88	; 0x58
 801c9a6:	4614      	mov	r4, r2
 801c9a8:	461d      	mov	r5, r3
 801c9aa:	da07      	bge.n	801c9bc <__swhatbuf_r+0x22>
 801c9ac:	2300      	movs	r3, #0
 801c9ae:	602b      	str	r3, [r5, #0]
 801c9b0:	89b3      	ldrh	r3, [r6, #12]
 801c9b2:	061a      	lsls	r2, r3, #24
 801c9b4:	d410      	bmi.n	801c9d8 <__swhatbuf_r+0x3e>
 801c9b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c9ba:	e00e      	b.n	801c9da <__swhatbuf_r+0x40>
 801c9bc:	466a      	mov	r2, sp
 801c9be:	f000 f8c3 	bl	801cb48 <_fstat_r>
 801c9c2:	2800      	cmp	r0, #0
 801c9c4:	dbf2      	blt.n	801c9ac <__swhatbuf_r+0x12>
 801c9c6:	9a01      	ldr	r2, [sp, #4]
 801c9c8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c9cc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c9d0:	425a      	negs	r2, r3
 801c9d2:	415a      	adcs	r2, r3
 801c9d4:	602a      	str	r2, [r5, #0]
 801c9d6:	e7ee      	b.n	801c9b6 <__swhatbuf_r+0x1c>
 801c9d8:	2340      	movs	r3, #64	; 0x40
 801c9da:	2000      	movs	r0, #0
 801c9dc:	6023      	str	r3, [r4, #0]
 801c9de:	b016      	add	sp, #88	; 0x58
 801c9e0:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c9e4 <__smakebuf_r>:
 801c9e4:	898b      	ldrh	r3, [r1, #12]
 801c9e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c9e8:	079d      	lsls	r5, r3, #30
 801c9ea:	4606      	mov	r6, r0
 801c9ec:	460c      	mov	r4, r1
 801c9ee:	d507      	bpl.n	801ca00 <__smakebuf_r+0x1c>
 801c9f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c9f4:	6023      	str	r3, [r4, #0]
 801c9f6:	6123      	str	r3, [r4, #16]
 801c9f8:	2301      	movs	r3, #1
 801c9fa:	6163      	str	r3, [r4, #20]
 801c9fc:	b002      	add	sp, #8
 801c9fe:	bd70      	pop	{r4, r5, r6, pc}
 801ca00:	ab01      	add	r3, sp, #4
 801ca02:	466a      	mov	r2, sp
 801ca04:	f7ff ffc9 	bl	801c99a <__swhatbuf_r>
 801ca08:	9900      	ldr	r1, [sp, #0]
 801ca0a:	4605      	mov	r5, r0
 801ca0c:	4630      	mov	r0, r6
 801ca0e:	f7ff f94b 	bl	801bca8 <_malloc_r>
 801ca12:	b948      	cbnz	r0, 801ca28 <__smakebuf_r+0x44>
 801ca14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ca18:	059a      	lsls	r2, r3, #22
 801ca1a:	d4ef      	bmi.n	801c9fc <__smakebuf_r+0x18>
 801ca1c:	f023 0303 	bic.w	r3, r3, #3
 801ca20:	f043 0302 	orr.w	r3, r3, #2
 801ca24:	81a3      	strh	r3, [r4, #12]
 801ca26:	e7e3      	b.n	801c9f0 <__smakebuf_r+0xc>
 801ca28:	4b0d      	ldr	r3, [pc, #52]	; (801ca60 <__smakebuf_r+0x7c>)
 801ca2a:	62b3      	str	r3, [r6, #40]	; 0x28
 801ca2c:	89a3      	ldrh	r3, [r4, #12]
 801ca2e:	6020      	str	r0, [r4, #0]
 801ca30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ca34:	81a3      	strh	r3, [r4, #12]
 801ca36:	9b00      	ldr	r3, [sp, #0]
 801ca38:	6163      	str	r3, [r4, #20]
 801ca3a:	9b01      	ldr	r3, [sp, #4]
 801ca3c:	6120      	str	r0, [r4, #16]
 801ca3e:	b15b      	cbz	r3, 801ca58 <__smakebuf_r+0x74>
 801ca40:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ca44:	4630      	mov	r0, r6
 801ca46:	f000 f891 	bl	801cb6c <_isatty_r>
 801ca4a:	b128      	cbz	r0, 801ca58 <__smakebuf_r+0x74>
 801ca4c:	89a3      	ldrh	r3, [r4, #12]
 801ca4e:	f023 0303 	bic.w	r3, r3, #3
 801ca52:	f043 0301 	orr.w	r3, r3, #1
 801ca56:	81a3      	strh	r3, [r4, #12]
 801ca58:	89a0      	ldrh	r0, [r4, #12]
 801ca5a:	4305      	orrs	r5, r0
 801ca5c:	81a5      	strh	r5, [r4, #12]
 801ca5e:	e7cd      	b.n	801c9fc <__smakebuf_r+0x18>
 801ca60:	0801c7f1 	.word	0x0801c7f1

0801ca64 <__malloc_lock>:
 801ca64:	4801      	ldr	r0, [pc, #4]	; (801ca6c <__malloc_lock+0x8>)
 801ca66:	f7ff bf95 	b.w	801c994 <__retarget_lock_acquire_recursive>
 801ca6a:	bf00      	nop
 801ca6c:	2000a818 	.word	0x2000a818

0801ca70 <__malloc_unlock>:
 801ca70:	4801      	ldr	r0, [pc, #4]	; (801ca78 <__malloc_unlock+0x8>)
 801ca72:	f7ff bf91 	b.w	801c998 <__retarget_lock_release_recursive>
 801ca76:	bf00      	nop
 801ca78:	2000a818 	.word	0x2000a818

0801ca7c <__sread>:
 801ca7c:	b510      	push	{r4, lr}
 801ca7e:	460c      	mov	r4, r1
 801ca80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ca84:	f000 f894 	bl	801cbb0 <_read_r>
 801ca88:	2800      	cmp	r0, #0
 801ca8a:	bfab      	itete	ge
 801ca8c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ca8e:	89a3      	ldrhlt	r3, [r4, #12]
 801ca90:	181b      	addge	r3, r3, r0
 801ca92:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ca96:	bfac      	ite	ge
 801ca98:	6563      	strge	r3, [r4, #84]	; 0x54
 801ca9a:	81a3      	strhlt	r3, [r4, #12]
 801ca9c:	bd10      	pop	{r4, pc}

0801ca9e <__swrite>:
 801ca9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801caa2:	461f      	mov	r7, r3
 801caa4:	898b      	ldrh	r3, [r1, #12]
 801caa6:	05db      	lsls	r3, r3, #23
 801caa8:	4605      	mov	r5, r0
 801caaa:	460c      	mov	r4, r1
 801caac:	4616      	mov	r6, r2
 801caae:	d505      	bpl.n	801cabc <__swrite+0x1e>
 801cab0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cab4:	2302      	movs	r3, #2
 801cab6:	2200      	movs	r2, #0
 801cab8:	f000 f868 	bl	801cb8c <_lseek_r>
 801cabc:	89a3      	ldrh	r3, [r4, #12]
 801cabe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cac2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cac6:	81a3      	strh	r3, [r4, #12]
 801cac8:	4632      	mov	r2, r6
 801caca:	463b      	mov	r3, r7
 801cacc:	4628      	mov	r0, r5
 801cace:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801cad2:	f000 b817 	b.w	801cb04 <_write_r>

0801cad6 <__sseek>:
 801cad6:	b510      	push	{r4, lr}
 801cad8:	460c      	mov	r4, r1
 801cada:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cade:	f000 f855 	bl	801cb8c <_lseek_r>
 801cae2:	1c43      	adds	r3, r0, #1
 801cae4:	89a3      	ldrh	r3, [r4, #12]
 801cae6:	bf15      	itete	ne
 801cae8:	6560      	strne	r0, [r4, #84]	; 0x54
 801caea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801caee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801caf2:	81a3      	strheq	r3, [r4, #12]
 801caf4:	bf18      	it	ne
 801caf6:	81a3      	strhne	r3, [r4, #12]
 801caf8:	bd10      	pop	{r4, pc}

0801cafa <__sclose>:
 801cafa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cafe:	f000 b813 	b.w	801cb28 <_close_r>
	...

0801cb04 <_write_r>:
 801cb04:	b538      	push	{r3, r4, r5, lr}
 801cb06:	4d07      	ldr	r5, [pc, #28]	; (801cb24 <_write_r+0x20>)
 801cb08:	4604      	mov	r4, r0
 801cb0a:	4608      	mov	r0, r1
 801cb0c:	4611      	mov	r1, r2
 801cb0e:	2200      	movs	r2, #0
 801cb10:	602a      	str	r2, [r5, #0]
 801cb12:	461a      	mov	r2, r3
 801cb14:	f7e5 fa51 	bl	8001fba <_write>
 801cb18:	1c43      	adds	r3, r0, #1
 801cb1a:	d102      	bne.n	801cb22 <_write_r+0x1e>
 801cb1c:	682b      	ldr	r3, [r5, #0]
 801cb1e:	b103      	cbz	r3, 801cb22 <_write_r+0x1e>
 801cb20:	6023      	str	r3, [r4, #0]
 801cb22:	bd38      	pop	{r3, r4, r5, pc}
 801cb24:	2000a820 	.word	0x2000a820

0801cb28 <_close_r>:
 801cb28:	b538      	push	{r3, r4, r5, lr}
 801cb2a:	4d06      	ldr	r5, [pc, #24]	; (801cb44 <_close_r+0x1c>)
 801cb2c:	2300      	movs	r3, #0
 801cb2e:	4604      	mov	r4, r0
 801cb30:	4608      	mov	r0, r1
 801cb32:	602b      	str	r3, [r5, #0]
 801cb34:	f7e5 fa4e 	bl	8001fd4 <_close>
 801cb38:	1c43      	adds	r3, r0, #1
 801cb3a:	d102      	bne.n	801cb42 <_close_r+0x1a>
 801cb3c:	682b      	ldr	r3, [r5, #0]
 801cb3e:	b103      	cbz	r3, 801cb42 <_close_r+0x1a>
 801cb40:	6023      	str	r3, [r4, #0]
 801cb42:	bd38      	pop	{r3, r4, r5, pc}
 801cb44:	2000a820 	.word	0x2000a820

0801cb48 <_fstat_r>:
 801cb48:	b538      	push	{r3, r4, r5, lr}
 801cb4a:	4d07      	ldr	r5, [pc, #28]	; (801cb68 <_fstat_r+0x20>)
 801cb4c:	2300      	movs	r3, #0
 801cb4e:	4604      	mov	r4, r0
 801cb50:	4608      	mov	r0, r1
 801cb52:	4611      	mov	r1, r2
 801cb54:	602b      	str	r3, [r5, #0]
 801cb56:	f7e5 fa40 	bl	8001fda <_fstat>
 801cb5a:	1c43      	adds	r3, r0, #1
 801cb5c:	d102      	bne.n	801cb64 <_fstat_r+0x1c>
 801cb5e:	682b      	ldr	r3, [r5, #0]
 801cb60:	b103      	cbz	r3, 801cb64 <_fstat_r+0x1c>
 801cb62:	6023      	str	r3, [r4, #0]
 801cb64:	bd38      	pop	{r3, r4, r5, pc}
 801cb66:	bf00      	nop
 801cb68:	2000a820 	.word	0x2000a820

0801cb6c <_isatty_r>:
 801cb6c:	b538      	push	{r3, r4, r5, lr}
 801cb6e:	4d06      	ldr	r5, [pc, #24]	; (801cb88 <_isatty_r+0x1c>)
 801cb70:	2300      	movs	r3, #0
 801cb72:	4604      	mov	r4, r0
 801cb74:	4608      	mov	r0, r1
 801cb76:	602b      	str	r3, [r5, #0]
 801cb78:	f7e5 fa34 	bl	8001fe4 <_isatty>
 801cb7c:	1c43      	adds	r3, r0, #1
 801cb7e:	d102      	bne.n	801cb86 <_isatty_r+0x1a>
 801cb80:	682b      	ldr	r3, [r5, #0]
 801cb82:	b103      	cbz	r3, 801cb86 <_isatty_r+0x1a>
 801cb84:	6023      	str	r3, [r4, #0]
 801cb86:	bd38      	pop	{r3, r4, r5, pc}
 801cb88:	2000a820 	.word	0x2000a820

0801cb8c <_lseek_r>:
 801cb8c:	b538      	push	{r3, r4, r5, lr}
 801cb8e:	4d07      	ldr	r5, [pc, #28]	; (801cbac <_lseek_r+0x20>)
 801cb90:	4604      	mov	r4, r0
 801cb92:	4608      	mov	r0, r1
 801cb94:	4611      	mov	r1, r2
 801cb96:	2200      	movs	r2, #0
 801cb98:	602a      	str	r2, [r5, #0]
 801cb9a:	461a      	mov	r2, r3
 801cb9c:	f7e5 fa24 	bl	8001fe8 <_lseek>
 801cba0:	1c43      	adds	r3, r0, #1
 801cba2:	d102      	bne.n	801cbaa <_lseek_r+0x1e>
 801cba4:	682b      	ldr	r3, [r5, #0]
 801cba6:	b103      	cbz	r3, 801cbaa <_lseek_r+0x1e>
 801cba8:	6023      	str	r3, [r4, #0]
 801cbaa:	bd38      	pop	{r3, r4, r5, pc}
 801cbac:	2000a820 	.word	0x2000a820

0801cbb0 <_read_r>:
 801cbb0:	b538      	push	{r3, r4, r5, lr}
 801cbb2:	4d07      	ldr	r5, [pc, #28]	; (801cbd0 <_read_r+0x20>)
 801cbb4:	4604      	mov	r4, r0
 801cbb6:	4608      	mov	r0, r1
 801cbb8:	4611      	mov	r1, r2
 801cbba:	2200      	movs	r2, #0
 801cbbc:	602a      	str	r2, [r5, #0]
 801cbbe:	461a      	mov	r2, r3
 801cbc0:	f7e5 f9ee 	bl	8001fa0 <_read>
 801cbc4:	1c43      	adds	r3, r0, #1
 801cbc6:	d102      	bne.n	801cbce <_read_r+0x1e>
 801cbc8:	682b      	ldr	r3, [r5, #0]
 801cbca:	b103      	cbz	r3, 801cbce <_read_r+0x1e>
 801cbcc:	6023      	str	r3, [r4, #0]
 801cbce:	bd38      	pop	{r3, r4, r5, pc}
 801cbd0:	2000a820 	.word	0x2000a820

0801cbd4 <_init>:
 801cbd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cbd6:	bf00      	nop
 801cbd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cbda:	bc08      	pop	{r3}
 801cbdc:	469e      	mov	lr, r3
 801cbde:	4770      	bx	lr

0801cbe0 <_fini>:
 801cbe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cbe2:	bf00      	nop
 801cbe4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cbe6:	bc08      	pop	{r3}
 801cbe8:	469e      	mov	lr, r3
 801cbea:	4770      	bx	lr
